
ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000042a0  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  08004464  08004464  00005464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800447c  0800447c  000087d8  2**0
                  CONTENTS
  4 .ARM          00000008  0800447c  0800447c  0000547c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004484  08004484  000087d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004484  08004484  00005484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004488  08004488  00005488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000027d8  20000000  0800448c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d0  200027d8  08006c64  000087d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200029a8  08006c64  000089a8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000087d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b6d1  00000000  00000000  00008808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d49  00000000  00000000  00013ed9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000009d8  00000000  00000000  00015c28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000007d7  00000000  00000000  00016600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00020739  00000000  00000000  00016dd7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000d26c  00000000  00000000  00037510  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cbdef  00000000  00000000  0004477c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0011056b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002810  00000000  00000000  001105b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  00112dc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	200027d8 	.word	0x200027d8
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800444c 	.word	0x0800444c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	200027dc 	.word	0x200027dc
 8000200:	0800444c 	.word	0x0800444c

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96a 	b.w	80004f0 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	460c      	mov	r4, r1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d14e      	bne.n	80002de <__udivmoddi4+0xaa>
 8000240:	4694      	mov	ip, r2
 8000242:	458c      	cmp	ip, r1
 8000244:	4686      	mov	lr, r0
 8000246:	fab2 f282 	clz	r2, r2
 800024a:	d962      	bls.n	8000312 <__udivmoddi4+0xde>
 800024c:	b14a      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 800024e:	f1c2 0320 	rsb	r3, r2, #32
 8000252:	4091      	lsls	r1, r2
 8000254:	fa20 f303 	lsr.w	r3, r0, r3
 8000258:	fa0c fc02 	lsl.w	ip, ip, r2
 800025c:	4319      	orrs	r1, r3
 800025e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000262:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000266:	fa1f f68c 	uxth.w	r6, ip
 800026a:	fbb1 f4f7 	udiv	r4, r1, r7
 800026e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000272:	fb07 1114 	mls	r1, r7, r4, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb04 f106 	mul.w	r1, r4, r6
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f104 30ff 	add.w	r0, r4, #4294967295
 800028a:	f080 8112 	bcs.w	80004b2 <__udivmoddi4+0x27e>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 810f 	bls.w	80004b2 <__udivmoddi4+0x27e>
 8000294:	3c02      	subs	r4, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a59      	subs	r1, r3, r1
 800029a:	fa1f f38e 	uxth.w	r3, lr
 800029e:	fbb1 f0f7 	udiv	r0, r1, r7
 80002a2:	fb07 1110 	mls	r1, r7, r0, r1
 80002a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002aa:	fb00 f606 	mul.w	r6, r0, r6
 80002ae:	429e      	cmp	r6, r3
 80002b0:	d90a      	bls.n	80002c8 <__udivmoddi4+0x94>
 80002b2:	eb1c 0303 	adds.w	r3, ip, r3
 80002b6:	f100 31ff 	add.w	r1, r0, #4294967295
 80002ba:	f080 80fc 	bcs.w	80004b6 <__udivmoddi4+0x282>
 80002be:	429e      	cmp	r6, r3
 80002c0:	f240 80f9 	bls.w	80004b6 <__udivmoddi4+0x282>
 80002c4:	4463      	add	r3, ip
 80002c6:	3802      	subs	r0, #2
 80002c8:	1b9b      	subs	r3, r3, r6
 80002ca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002ce:	2100      	movs	r1, #0
 80002d0:	b11d      	cbz	r5, 80002da <__udivmoddi4+0xa6>
 80002d2:	40d3      	lsrs	r3, r2
 80002d4:	2200      	movs	r2, #0
 80002d6:	e9c5 3200 	strd	r3, r2, [r5]
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d905      	bls.n	80002ee <__udivmoddi4+0xba>
 80002e2:	b10d      	cbz	r5, 80002e8 <__udivmoddi4+0xb4>
 80002e4:	e9c5 0100 	strd	r0, r1, [r5]
 80002e8:	2100      	movs	r1, #0
 80002ea:	4608      	mov	r0, r1
 80002ec:	e7f5      	b.n	80002da <__udivmoddi4+0xa6>
 80002ee:	fab3 f183 	clz	r1, r3
 80002f2:	2900      	cmp	r1, #0
 80002f4:	d146      	bne.n	8000384 <__udivmoddi4+0x150>
 80002f6:	42a3      	cmp	r3, r4
 80002f8:	d302      	bcc.n	8000300 <__udivmoddi4+0xcc>
 80002fa:	4290      	cmp	r0, r2
 80002fc:	f0c0 80f0 	bcc.w	80004e0 <__udivmoddi4+0x2ac>
 8000300:	1a86      	subs	r6, r0, r2
 8000302:	eb64 0303 	sbc.w	r3, r4, r3
 8000306:	2001      	movs	r0, #1
 8000308:	2d00      	cmp	r5, #0
 800030a:	d0e6      	beq.n	80002da <__udivmoddi4+0xa6>
 800030c:	e9c5 6300 	strd	r6, r3, [r5]
 8000310:	e7e3      	b.n	80002da <__udivmoddi4+0xa6>
 8000312:	2a00      	cmp	r2, #0
 8000314:	f040 8090 	bne.w	8000438 <__udivmoddi4+0x204>
 8000318:	eba1 040c 	sub.w	r4, r1, ip
 800031c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000320:	fa1f f78c 	uxth.w	r7, ip
 8000324:	2101      	movs	r1, #1
 8000326:	fbb4 f6f8 	udiv	r6, r4, r8
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb08 4416 	mls	r4, r8, r6, r4
 8000332:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000336:	fb07 f006 	mul.w	r0, r7, r6
 800033a:	4298      	cmp	r0, r3
 800033c:	d908      	bls.n	8000350 <__udivmoddi4+0x11c>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 34ff 	add.w	r4, r6, #4294967295
 8000346:	d202      	bcs.n	800034e <__udivmoddi4+0x11a>
 8000348:	4298      	cmp	r0, r3
 800034a:	f200 80cd 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 800034e:	4626      	mov	r6, r4
 8000350:	1a1c      	subs	r4, r3, r0
 8000352:	fa1f f38e 	uxth.w	r3, lr
 8000356:	fbb4 f0f8 	udiv	r0, r4, r8
 800035a:	fb08 4410 	mls	r4, r8, r0, r4
 800035e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000362:	fb00 f707 	mul.w	r7, r0, r7
 8000366:	429f      	cmp	r7, r3
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0x148>
 800036a:	eb1c 0303 	adds.w	r3, ip, r3
 800036e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000372:	d202      	bcs.n	800037a <__udivmoddi4+0x146>
 8000374:	429f      	cmp	r7, r3
 8000376:	f200 80b0 	bhi.w	80004da <__udivmoddi4+0x2a6>
 800037a:	4620      	mov	r0, r4
 800037c:	1bdb      	subs	r3, r3, r7
 800037e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000382:	e7a5      	b.n	80002d0 <__udivmoddi4+0x9c>
 8000384:	f1c1 0620 	rsb	r6, r1, #32
 8000388:	408b      	lsls	r3, r1
 800038a:	fa22 f706 	lsr.w	r7, r2, r6
 800038e:	431f      	orrs	r7, r3
 8000390:	fa20 fc06 	lsr.w	ip, r0, r6
 8000394:	fa04 f301 	lsl.w	r3, r4, r1
 8000398:	ea43 030c 	orr.w	r3, r3, ip
 800039c:	40f4      	lsrs	r4, r6
 800039e:	fa00 f801 	lsl.w	r8, r0, r1
 80003a2:	0c38      	lsrs	r0, r7, #16
 80003a4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80003a8:	fbb4 fef0 	udiv	lr, r4, r0
 80003ac:	fa1f fc87 	uxth.w	ip, r7
 80003b0:	fb00 441e 	mls	r4, r0, lr, r4
 80003b4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003b8:	fb0e f90c 	mul.w	r9, lr, ip
 80003bc:	45a1      	cmp	r9, r4
 80003be:	fa02 f201 	lsl.w	r2, r2, r1
 80003c2:	d90a      	bls.n	80003da <__udivmoddi4+0x1a6>
 80003c4:	193c      	adds	r4, r7, r4
 80003c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ca:	f080 8084 	bcs.w	80004d6 <__udivmoddi4+0x2a2>
 80003ce:	45a1      	cmp	r9, r4
 80003d0:	f240 8081 	bls.w	80004d6 <__udivmoddi4+0x2a2>
 80003d4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003d8:	443c      	add	r4, r7
 80003da:	eba4 0409 	sub.w	r4, r4, r9
 80003de:	fa1f f983 	uxth.w	r9, r3
 80003e2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003e6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ee:	fb03 fc0c 	mul.w	ip, r3, ip
 80003f2:	45a4      	cmp	ip, r4
 80003f4:	d907      	bls.n	8000406 <__udivmoddi4+0x1d2>
 80003f6:	193c      	adds	r4, r7, r4
 80003f8:	f103 30ff 	add.w	r0, r3, #4294967295
 80003fc:	d267      	bcs.n	80004ce <__udivmoddi4+0x29a>
 80003fe:	45a4      	cmp	ip, r4
 8000400:	d965      	bls.n	80004ce <__udivmoddi4+0x29a>
 8000402:	3b02      	subs	r3, #2
 8000404:	443c      	add	r4, r7
 8000406:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800040a:	fba0 9302 	umull	r9, r3, r0, r2
 800040e:	eba4 040c 	sub.w	r4, r4, ip
 8000412:	429c      	cmp	r4, r3
 8000414:	46ce      	mov	lr, r9
 8000416:	469c      	mov	ip, r3
 8000418:	d351      	bcc.n	80004be <__udivmoddi4+0x28a>
 800041a:	d04e      	beq.n	80004ba <__udivmoddi4+0x286>
 800041c:	b155      	cbz	r5, 8000434 <__udivmoddi4+0x200>
 800041e:	ebb8 030e 	subs.w	r3, r8, lr
 8000422:	eb64 040c 	sbc.w	r4, r4, ip
 8000426:	fa04 f606 	lsl.w	r6, r4, r6
 800042a:	40cb      	lsrs	r3, r1
 800042c:	431e      	orrs	r6, r3
 800042e:	40cc      	lsrs	r4, r1
 8000430:	e9c5 6400 	strd	r6, r4, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	e750      	b.n	80002da <__udivmoddi4+0xa6>
 8000438:	f1c2 0320 	rsb	r3, r2, #32
 800043c:	fa20 f103 	lsr.w	r1, r0, r3
 8000440:	fa0c fc02 	lsl.w	ip, ip, r2
 8000444:	fa24 f303 	lsr.w	r3, r4, r3
 8000448:	4094      	lsls	r4, r2
 800044a:	430c      	orrs	r4, r1
 800044c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000450:	fa00 fe02 	lsl.w	lr, r0, r2
 8000454:	fa1f f78c 	uxth.w	r7, ip
 8000458:	fbb3 f0f8 	udiv	r0, r3, r8
 800045c:	fb08 3110 	mls	r1, r8, r0, r3
 8000460:	0c23      	lsrs	r3, r4, #16
 8000462:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000466:	fb00 f107 	mul.w	r1, r0, r7
 800046a:	4299      	cmp	r1, r3
 800046c:	d908      	bls.n	8000480 <__udivmoddi4+0x24c>
 800046e:	eb1c 0303 	adds.w	r3, ip, r3
 8000472:	f100 36ff 	add.w	r6, r0, #4294967295
 8000476:	d22c      	bcs.n	80004d2 <__udivmoddi4+0x29e>
 8000478:	4299      	cmp	r1, r3
 800047a:	d92a      	bls.n	80004d2 <__udivmoddi4+0x29e>
 800047c:	3802      	subs	r0, #2
 800047e:	4463      	add	r3, ip
 8000480:	1a5b      	subs	r3, r3, r1
 8000482:	b2a4      	uxth	r4, r4
 8000484:	fbb3 f1f8 	udiv	r1, r3, r8
 8000488:	fb08 3311 	mls	r3, r8, r1, r3
 800048c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000490:	fb01 f307 	mul.w	r3, r1, r7
 8000494:	42a3      	cmp	r3, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x276>
 8000498:	eb1c 0404 	adds.w	r4, ip, r4
 800049c:	f101 36ff 	add.w	r6, r1, #4294967295
 80004a0:	d213      	bcs.n	80004ca <__udivmoddi4+0x296>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d911      	bls.n	80004ca <__udivmoddi4+0x296>
 80004a6:	3902      	subs	r1, #2
 80004a8:	4464      	add	r4, ip
 80004aa:	1ae4      	subs	r4, r4, r3
 80004ac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80004b0:	e739      	b.n	8000326 <__udivmoddi4+0xf2>
 80004b2:	4604      	mov	r4, r0
 80004b4:	e6f0      	b.n	8000298 <__udivmoddi4+0x64>
 80004b6:	4608      	mov	r0, r1
 80004b8:	e706      	b.n	80002c8 <__udivmoddi4+0x94>
 80004ba:	45c8      	cmp	r8, r9
 80004bc:	d2ae      	bcs.n	800041c <__udivmoddi4+0x1e8>
 80004be:	ebb9 0e02 	subs.w	lr, r9, r2
 80004c2:	eb63 0c07 	sbc.w	ip, r3, r7
 80004c6:	3801      	subs	r0, #1
 80004c8:	e7a8      	b.n	800041c <__udivmoddi4+0x1e8>
 80004ca:	4631      	mov	r1, r6
 80004cc:	e7ed      	b.n	80004aa <__udivmoddi4+0x276>
 80004ce:	4603      	mov	r3, r0
 80004d0:	e799      	b.n	8000406 <__udivmoddi4+0x1d2>
 80004d2:	4630      	mov	r0, r6
 80004d4:	e7d4      	b.n	8000480 <__udivmoddi4+0x24c>
 80004d6:	46d6      	mov	lr, sl
 80004d8:	e77f      	b.n	80003da <__udivmoddi4+0x1a6>
 80004da:	4463      	add	r3, ip
 80004dc:	3802      	subs	r0, #2
 80004de:	e74d      	b.n	800037c <__udivmoddi4+0x148>
 80004e0:	4606      	mov	r6, r0
 80004e2:	4623      	mov	r3, r4
 80004e4:	4608      	mov	r0, r1
 80004e6:	e70f      	b.n	8000308 <__udivmoddi4+0xd4>
 80004e8:	3e02      	subs	r6, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	e730      	b.n	8000350 <__udivmoddi4+0x11c>
 80004ee:	bf00      	nop

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <LCD_Init>:
 80004f4:	b580      	push	{r7, lr}
 80004f6:	af00      	add	r7, sp, #0
 80004f8:	2201      	movs	r2, #1
 80004fa:	2101      	movs	r1, #1
 80004fc:	4878      	ldr	r0, [pc, #480]	@ (80006e0 <LCD_Init+0x1ec>)
 80004fe:	f002 fa01 	bl	8002904 <HAL_GPIO_WritePin>
 8000502:	2201      	movs	r2, #1
 8000504:	2113      	movs	r1, #19
 8000506:	4877      	ldr	r0, [pc, #476]	@ (80006e4 <LCD_Init+0x1f0>)
 8000508:	f002 f9fc 	bl	8002904 <HAL_GPIO_WritePin>
 800050c:	2201      	movs	r2, #1
 800050e:	2102      	movs	r1, #2
 8000510:	4875      	ldr	r0, [pc, #468]	@ (80006e8 <LCD_Init+0x1f4>)
 8000512:	f002 f9f7 	bl	8002904 <HAL_GPIO_WritePin>
 8000516:	2005      	movs	r0, #5
 8000518:	f001 fe98 	bl	800224c <HAL_Delay>
 800051c:	2200      	movs	r2, #0
 800051e:	2102      	movs	r1, #2
 8000520:	4871      	ldr	r0, [pc, #452]	@ (80006e8 <LCD_Init+0x1f4>)
 8000522:	f002 f9ef 	bl	8002904 <HAL_GPIO_WritePin>
 8000526:	2014      	movs	r0, #20
 8000528:	f001 fe90 	bl	800224c <HAL_Delay>
 800052c:	2201      	movs	r2, #1
 800052e:	2102      	movs	r1, #2
 8000530:	486d      	ldr	r0, [pc, #436]	@ (80006e8 <LCD_Init+0x1f4>)
 8000532:	f002 f9e7 	bl	8002904 <HAL_GPIO_WritePin>
 8000536:	2096      	movs	r0, #150	@ 0x96
 8000538:	f001 fe88 	bl	800224c <HAL_Delay>
 800053c:	2200      	movs	r2, #0
 800053e:	2101      	movs	r1, #1
 8000540:	4867      	ldr	r0, [pc, #412]	@ (80006e0 <LCD_Init+0x1ec>)
 8000542:	f002 f9df 	bl	8002904 <HAL_GPIO_WritePin>
 8000546:	20e9      	movs	r0, #233	@ 0xe9
 8000548:	f000 f8d0 	bl	80006ec <LCD_CMD>
 800054c:	2020      	movs	r0, #32
 800054e:	f000 f973 	bl	8000838 <LCD_DATA>
 8000552:	2011      	movs	r0, #17
 8000554:	f000 f8ca 	bl	80006ec <LCD_CMD>
 8000558:	2064      	movs	r0, #100	@ 0x64
 800055a:	f001 fe77 	bl	800224c <HAL_Delay>
 800055e:	20d1      	movs	r0, #209	@ 0xd1
 8000560:	f000 f8c4 	bl	80006ec <LCD_CMD>
 8000564:	2000      	movs	r0, #0
 8000566:	f000 f967 	bl	8000838 <LCD_DATA>
 800056a:	2071      	movs	r0, #113	@ 0x71
 800056c:	f000 f964 	bl	8000838 <LCD_DATA>
 8000570:	2019      	movs	r0, #25
 8000572:	f000 f961 	bl	8000838 <LCD_DATA>
 8000576:	20d0      	movs	r0, #208	@ 0xd0
 8000578:	f000 f8b8 	bl	80006ec <LCD_CMD>
 800057c:	2007      	movs	r0, #7
 800057e:	f000 f95b 	bl	8000838 <LCD_DATA>
 8000582:	2001      	movs	r0, #1
 8000584:	f000 f958 	bl	8000838 <LCD_DATA>
 8000588:	2008      	movs	r0, #8
 800058a:	f000 f955 	bl	8000838 <LCD_DATA>
 800058e:	2036      	movs	r0, #54	@ 0x36
 8000590:	f000 f8ac 	bl	80006ec <LCD_CMD>
 8000594:	20e8      	movs	r0, #232	@ 0xe8
 8000596:	f000 f94f 	bl	8000838 <LCD_DATA>
 800059a:	203a      	movs	r0, #58	@ 0x3a
 800059c:	f000 f8a6 	bl	80006ec <LCD_CMD>
 80005a0:	2005      	movs	r0, #5
 80005a2:	f000 f949 	bl	8000838 <LCD_DATA>
 80005a6:	20c1      	movs	r0, #193	@ 0xc1
 80005a8:	f000 f8a0 	bl	80006ec <LCD_CMD>
 80005ac:	2010      	movs	r0, #16
 80005ae:	f000 f943 	bl	8000838 <LCD_DATA>
 80005b2:	2010      	movs	r0, #16
 80005b4:	f000 f940 	bl	8000838 <LCD_DATA>
 80005b8:	2002      	movs	r0, #2
 80005ba:	f000 f93d 	bl	8000838 <LCD_DATA>
 80005be:	2002      	movs	r0, #2
 80005c0:	f000 f93a 	bl	8000838 <LCD_DATA>
 80005c4:	20c0      	movs	r0, #192	@ 0xc0
 80005c6:	f000 f891 	bl	80006ec <LCD_CMD>
 80005ca:	2000      	movs	r0, #0
 80005cc:	f000 f934 	bl	8000838 <LCD_DATA>
 80005d0:	2035      	movs	r0, #53	@ 0x35
 80005d2:	f000 f931 	bl	8000838 <LCD_DATA>
 80005d6:	2000      	movs	r0, #0
 80005d8:	f000 f92e 	bl	8000838 <LCD_DATA>
 80005dc:	2000      	movs	r0, #0
 80005de:	f000 f92b 	bl	8000838 <LCD_DATA>
 80005e2:	2001      	movs	r0, #1
 80005e4:	f000 f928 	bl	8000838 <LCD_DATA>
 80005e8:	2002      	movs	r0, #2
 80005ea:	f000 f925 	bl	8000838 <LCD_DATA>
 80005ee:	20c5      	movs	r0, #197	@ 0xc5
 80005f0:	f000 f87c 	bl	80006ec <LCD_CMD>
 80005f4:	2004      	movs	r0, #4
 80005f6:	f000 f91f 	bl	8000838 <LCD_DATA>
 80005fa:	20d2      	movs	r0, #210	@ 0xd2
 80005fc:	f000 f876 	bl	80006ec <LCD_CMD>
 8000600:	2001      	movs	r0, #1
 8000602:	f000 f919 	bl	8000838 <LCD_DATA>
 8000606:	2044      	movs	r0, #68	@ 0x44
 8000608:	f000 f916 	bl	8000838 <LCD_DATA>
 800060c:	20c8      	movs	r0, #200	@ 0xc8
 800060e:	f000 f86d 	bl	80006ec <LCD_CMD>
 8000612:	2004      	movs	r0, #4
 8000614:	f000 f910 	bl	8000838 <LCD_DATA>
 8000618:	2067      	movs	r0, #103	@ 0x67
 800061a:	f000 f90d 	bl	8000838 <LCD_DATA>
 800061e:	2035      	movs	r0, #53	@ 0x35
 8000620:	f000 f90a 	bl	8000838 <LCD_DATA>
 8000624:	2004      	movs	r0, #4
 8000626:	f000 f907 	bl	8000838 <LCD_DATA>
 800062a:	2008      	movs	r0, #8
 800062c:	f000 f904 	bl	8000838 <LCD_DATA>
 8000630:	2006      	movs	r0, #6
 8000632:	f000 f901 	bl	8000838 <LCD_DATA>
 8000636:	2024      	movs	r0, #36	@ 0x24
 8000638:	f000 f8fe 	bl	8000838 <LCD_DATA>
 800063c:	2001      	movs	r0, #1
 800063e:	f000 f8fb 	bl	8000838 <LCD_DATA>
 8000642:	2037      	movs	r0, #55	@ 0x37
 8000644:	f000 f8f8 	bl	8000838 <LCD_DATA>
 8000648:	2040      	movs	r0, #64	@ 0x40
 800064a:	f000 f8f5 	bl	8000838 <LCD_DATA>
 800064e:	2003      	movs	r0, #3
 8000650:	f000 f8f2 	bl	8000838 <LCD_DATA>
 8000654:	2010      	movs	r0, #16
 8000656:	f000 f8ef 	bl	8000838 <LCD_DATA>
 800065a:	2008      	movs	r0, #8
 800065c:	f000 f8ec 	bl	8000838 <LCD_DATA>
 8000660:	2080      	movs	r0, #128	@ 0x80
 8000662:	f000 f8e9 	bl	8000838 <LCD_DATA>
 8000666:	2000      	movs	r0, #0
 8000668:	f000 f8e6 	bl	8000838 <LCD_DATA>
 800066c:	202a      	movs	r0, #42	@ 0x2a
 800066e:	f000 f83d 	bl	80006ec <LCD_CMD>
 8000672:	2000      	movs	r0, #0
 8000674:	f000 f8e0 	bl	8000838 <LCD_DATA>
 8000678:	2000      	movs	r0, #0
 800067a:	f000 f8dd 	bl	8000838 <LCD_DATA>
 800067e:	2001      	movs	r0, #1
 8000680:	f000 f8da 	bl	8000838 <LCD_DATA>
 8000684:	203f      	movs	r0, #63	@ 0x3f
 8000686:	f000 f8d7 	bl	8000838 <LCD_DATA>
 800068a:	202b      	movs	r0, #43	@ 0x2b
 800068c:	f000 f82e 	bl	80006ec <LCD_CMD>
 8000690:	2000      	movs	r0, #0
 8000692:	f000 f8d1 	bl	8000838 <LCD_DATA>
 8000696:	2000      	movs	r0, #0
 8000698:	f000 f8ce 	bl	8000838 <LCD_DATA>
 800069c:	2001      	movs	r0, #1
 800069e:	f000 f8cb 	bl	8000838 <LCD_DATA>
 80006a2:	20e0      	movs	r0, #224	@ 0xe0
 80006a4:	f000 f8c8 	bl	8000838 <LCD_DATA>
 80006a8:	2029      	movs	r0, #41	@ 0x29
 80006aa:	f000 f81f 	bl	80006ec <LCD_CMD>
 80006ae:	202c      	movs	r0, #44	@ 0x2c
 80006b0:	f000 f81c 	bl	80006ec <LCD_CMD>
 80006b4:	2020      	movs	r0, #32
 80006b6:	f000 f819 	bl	80006ec <LCD_CMD>
 80006ba:	2078      	movs	r0, #120	@ 0x78
 80006bc:	f001 fdc6 	bl	800224c <HAL_Delay>
 80006c0:	2011      	movs	r0, #17
 80006c2:	f000 f813 	bl	80006ec <LCD_CMD>
 80006c6:	2078      	movs	r0, #120	@ 0x78
 80006c8:	f001 fdc0 	bl	800224c <HAL_Delay>
 80006cc:	2029      	movs	r0, #41	@ 0x29
 80006ce:	f000 f80d 	bl	80006ec <LCD_CMD>
 80006d2:	2201      	movs	r2, #1
 80006d4:	2101      	movs	r1, #1
 80006d6:	4802      	ldr	r0, [pc, #8]	@ (80006e0 <LCD_Init+0x1ec>)
 80006d8:	f002 f914 	bl	8002904 <HAL_GPIO_WritePin>
 80006dc:	bf00      	nop
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	40020400 	.word	0x40020400
 80006e4:	40020000 	.word	0x40020000
 80006e8:	40020800 	.word	0x40020800

080006ec <LCD_CMD>:
 80006ec:	b580      	push	{r7, lr}
 80006ee:	b082      	sub	sp, #8
 80006f0:	af00      	add	r7, sp, #0
 80006f2:	4603      	mov	r3, r0
 80006f4:	71fb      	strb	r3, [r7, #7]
 80006f6:	2200      	movs	r2, #0
 80006f8:	2110      	movs	r1, #16
 80006fa:	484c      	ldr	r0, [pc, #304]	@ (800082c <LCD_CMD+0x140>)
 80006fc:	f002 f902 	bl	8002904 <HAL_GPIO_WritePin>
 8000700:	2200      	movs	r2, #0
 8000702:	2102      	movs	r1, #2
 8000704:	4849      	ldr	r0, [pc, #292]	@ (800082c <LCD_CMD+0x140>)
 8000706:	f002 f8fd 	bl	8002904 <HAL_GPIO_WritePin>
 800070a:	79fb      	ldrb	r3, [r7, #7]
 800070c:	f003 0301 	and.w	r3, r3, #1
 8000710:	2b00      	cmp	r3, #0
 8000712:	d006      	beq.n	8000722 <LCD_CMD+0x36>
 8000714:	2201      	movs	r2, #1
 8000716:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800071a:	4844      	ldr	r0, [pc, #272]	@ (800082c <LCD_CMD+0x140>)
 800071c:	f002 f8f2 	bl	8002904 <HAL_GPIO_WritePin>
 8000720:	e005      	b.n	800072e <LCD_CMD+0x42>
 8000722:	2200      	movs	r2, #0
 8000724:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000728:	4840      	ldr	r0, [pc, #256]	@ (800082c <LCD_CMD+0x140>)
 800072a:	f002 f8eb 	bl	8002904 <HAL_GPIO_WritePin>
 800072e:	79fb      	ldrb	r3, [r7, #7]
 8000730:	f003 0302 	and.w	r3, r3, #2
 8000734:	2b00      	cmp	r3, #0
 8000736:	d005      	beq.n	8000744 <LCD_CMD+0x58>
 8000738:	2201      	movs	r2, #1
 800073a:	2180      	movs	r1, #128	@ 0x80
 800073c:	483c      	ldr	r0, [pc, #240]	@ (8000830 <LCD_CMD+0x144>)
 800073e:	f002 f8e1 	bl	8002904 <HAL_GPIO_WritePin>
 8000742:	e004      	b.n	800074e <LCD_CMD+0x62>
 8000744:	2200      	movs	r2, #0
 8000746:	2180      	movs	r1, #128	@ 0x80
 8000748:	4839      	ldr	r0, [pc, #228]	@ (8000830 <LCD_CMD+0x144>)
 800074a:	f002 f8db 	bl	8002904 <HAL_GPIO_WritePin>
 800074e:	79fb      	ldrb	r3, [r7, #7]
 8000750:	f003 0304 	and.w	r3, r3, #4
 8000754:	2b00      	cmp	r3, #0
 8000756:	d006      	beq.n	8000766 <LCD_CMD+0x7a>
 8000758:	2201      	movs	r2, #1
 800075a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800075e:	4833      	ldr	r0, [pc, #204]	@ (800082c <LCD_CMD+0x140>)
 8000760:	f002 f8d0 	bl	8002904 <HAL_GPIO_WritePin>
 8000764:	e005      	b.n	8000772 <LCD_CMD+0x86>
 8000766:	2200      	movs	r2, #0
 8000768:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800076c:	482f      	ldr	r0, [pc, #188]	@ (800082c <LCD_CMD+0x140>)
 800076e:	f002 f8c9 	bl	8002904 <HAL_GPIO_WritePin>
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	f003 0308 	and.w	r3, r3, #8
 8000778:	2b00      	cmp	r3, #0
 800077a:	d005      	beq.n	8000788 <LCD_CMD+0x9c>
 800077c:	2201      	movs	r2, #1
 800077e:	2108      	movs	r1, #8
 8000780:	482c      	ldr	r0, [pc, #176]	@ (8000834 <LCD_CMD+0x148>)
 8000782:	f002 f8bf 	bl	8002904 <HAL_GPIO_WritePin>
 8000786:	e004      	b.n	8000792 <LCD_CMD+0xa6>
 8000788:	2200      	movs	r2, #0
 800078a:	2108      	movs	r1, #8
 800078c:	4829      	ldr	r0, [pc, #164]	@ (8000834 <LCD_CMD+0x148>)
 800078e:	f002 f8b9 	bl	8002904 <HAL_GPIO_WritePin>
 8000792:	79fb      	ldrb	r3, [r7, #7]
 8000794:	f003 0310 	and.w	r3, r3, #16
 8000798:	2b00      	cmp	r3, #0
 800079a:	d005      	beq.n	80007a8 <LCD_CMD+0xbc>
 800079c:	2201      	movs	r2, #1
 800079e:	2120      	movs	r1, #32
 80007a0:	4824      	ldr	r0, [pc, #144]	@ (8000834 <LCD_CMD+0x148>)
 80007a2:	f002 f8af 	bl	8002904 <HAL_GPIO_WritePin>
 80007a6:	e004      	b.n	80007b2 <LCD_CMD+0xc6>
 80007a8:	2200      	movs	r2, #0
 80007aa:	2120      	movs	r1, #32
 80007ac:	4821      	ldr	r0, [pc, #132]	@ (8000834 <LCD_CMD+0x148>)
 80007ae:	f002 f8a9 	bl	8002904 <HAL_GPIO_WritePin>
 80007b2:	79fb      	ldrb	r3, [r7, #7]
 80007b4:	f003 0320 	and.w	r3, r3, #32
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	d005      	beq.n	80007c8 <LCD_CMD+0xdc>
 80007bc:	2201      	movs	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	481c      	ldr	r0, [pc, #112]	@ (8000834 <LCD_CMD+0x148>)
 80007c2:	f002 f89f 	bl	8002904 <HAL_GPIO_WritePin>
 80007c6:	e004      	b.n	80007d2 <LCD_CMD+0xe6>
 80007c8:	2200      	movs	r2, #0
 80007ca:	2110      	movs	r1, #16
 80007cc:	4819      	ldr	r0, [pc, #100]	@ (8000834 <LCD_CMD+0x148>)
 80007ce:	f002 f899 	bl	8002904 <HAL_GPIO_WritePin>
 80007d2:	79fb      	ldrb	r3, [r7, #7]
 80007d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d006      	beq.n	80007ea <LCD_CMD+0xfe>
 80007dc:	2201      	movs	r2, #1
 80007de:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007e2:	4814      	ldr	r0, [pc, #80]	@ (8000834 <LCD_CMD+0x148>)
 80007e4:	f002 f88e 	bl	8002904 <HAL_GPIO_WritePin>
 80007e8:	e005      	b.n	80007f6 <LCD_CMD+0x10a>
 80007ea:	2200      	movs	r2, #0
 80007ec:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007f0:	4810      	ldr	r0, [pc, #64]	@ (8000834 <LCD_CMD+0x148>)
 80007f2:	f002 f887 	bl	8002904 <HAL_GPIO_WritePin>
 80007f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80007fa:	2b00      	cmp	r3, #0
 80007fc:	da06      	bge.n	800080c <LCD_CMD+0x120>
 80007fe:	2201      	movs	r2, #1
 8000800:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000804:	4809      	ldr	r0, [pc, #36]	@ (800082c <LCD_CMD+0x140>)
 8000806:	f002 f87d 	bl	8002904 <HAL_GPIO_WritePin>
 800080a:	e005      	b.n	8000818 <LCD_CMD+0x12c>
 800080c:	2200      	movs	r2, #0
 800080e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000812:	4806      	ldr	r0, [pc, #24]	@ (800082c <LCD_CMD+0x140>)
 8000814:	f002 f876 	bl	8002904 <HAL_GPIO_WritePin>
 8000818:	2201      	movs	r2, #1
 800081a:	2102      	movs	r1, #2
 800081c:	4803      	ldr	r0, [pc, #12]	@ (800082c <LCD_CMD+0x140>)
 800081e:	f002 f871 	bl	8002904 <HAL_GPIO_WritePin>
 8000822:	bf00      	nop
 8000824:	3708      	adds	r7, #8
 8000826:	46bd      	mov	sp, r7
 8000828:	bd80      	pop	{r7, pc}
 800082a:	bf00      	nop
 800082c:	40020000 	.word	0x40020000
 8000830:	40020800 	.word	0x40020800
 8000834:	40020400 	.word	0x40020400

08000838 <LCD_DATA>:
 8000838:	b580      	push	{r7, lr}
 800083a:	b082      	sub	sp, #8
 800083c:	af00      	add	r7, sp, #0
 800083e:	4603      	mov	r3, r0
 8000840:	71fb      	strb	r3, [r7, #7]
 8000842:	2201      	movs	r2, #1
 8000844:	2110      	movs	r1, #16
 8000846:	484c      	ldr	r0, [pc, #304]	@ (8000978 <LCD_DATA+0x140>)
 8000848:	f002 f85c 	bl	8002904 <HAL_GPIO_WritePin>
 800084c:	2200      	movs	r2, #0
 800084e:	2102      	movs	r1, #2
 8000850:	4849      	ldr	r0, [pc, #292]	@ (8000978 <LCD_DATA+0x140>)
 8000852:	f002 f857 	bl	8002904 <HAL_GPIO_WritePin>
 8000856:	79fb      	ldrb	r3, [r7, #7]
 8000858:	f003 0301 	and.w	r3, r3, #1
 800085c:	2b00      	cmp	r3, #0
 800085e:	d006      	beq.n	800086e <LCD_DATA+0x36>
 8000860:	2201      	movs	r2, #1
 8000862:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000866:	4844      	ldr	r0, [pc, #272]	@ (8000978 <LCD_DATA+0x140>)
 8000868:	f002 f84c 	bl	8002904 <HAL_GPIO_WritePin>
 800086c:	e005      	b.n	800087a <LCD_DATA+0x42>
 800086e:	2200      	movs	r2, #0
 8000870:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000874:	4840      	ldr	r0, [pc, #256]	@ (8000978 <LCD_DATA+0x140>)
 8000876:	f002 f845 	bl	8002904 <HAL_GPIO_WritePin>
 800087a:	79fb      	ldrb	r3, [r7, #7]
 800087c:	f003 0302 	and.w	r3, r3, #2
 8000880:	2b00      	cmp	r3, #0
 8000882:	d005      	beq.n	8000890 <LCD_DATA+0x58>
 8000884:	2201      	movs	r2, #1
 8000886:	2180      	movs	r1, #128	@ 0x80
 8000888:	483c      	ldr	r0, [pc, #240]	@ (800097c <LCD_DATA+0x144>)
 800088a:	f002 f83b 	bl	8002904 <HAL_GPIO_WritePin>
 800088e:	e004      	b.n	800089a <LCD_DATA+0x62>
 8000890:	2200      	movs	r2, #0
 8000892:	2180      	movs	r1, #128	@ 0x80
 8000894:	4839      	ldr	r0, [pc, #228]	@ (800097c <LCD_DATA+0x144>)
 8000896:	f002 f835 	bl	8002904 <HAL_GPIO_WritePin>
 800089a:	79fb      	ldrb	r3, [r7, #7]
 800089c:	f003 0304 	and.w	r3, r3, #4
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d006      	beq.n	80008b2 <LCD_DATA+0x7a>
 80008a4:	2201      	movs	r2, #1
 80008a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80008aa:	4833      	ldr	r0, [pc, #204]	@ (8000978 <LCD_DATA+0x140>)
 80008ac:	f002 f82a 	bl	8002904 <HAL_GPIO_WritePin>
 80008b0:	e005      	b.n	80008be <LCD_DATA+0x86>
 80008b2:	2200      	movs	r2, #0
 80008b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80008b8:	482f      	ldr	r0, [pc, #188]	@ (8000978 <LCD_DATA+0x140>)
 80008ba:	f002 f823 	bl	8002904 <HAL_GPIO_WritePin>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	f003 0308 	and.w	r3, r3, #8
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	d005      	beq.n	80008d4 <LCD_DATA+0x9c>
 80008c8:	2201      	movs	r2, #1
 80008ca:	2108      	movs	r1, #8
 80008cc:	482c      	ldr	r0, [pc, #176]	@ (8000980 <LCD_DATA+0x148>)
 80008ce:	f002 f819 	bl	8002904 <HAL_GPIO_WritePin>
 80008d2:	e004      	b.n	80008de <LCD_DATA+0xa6>
 80008d4:	2200      	movs	r2, #0
 80008d6:	2108      	movs	r1, #8
 80008d8:	4829      	ldr	r0, [pc, #164]	@ (8000980 <LCD_DATA+0x148>)
 80008da:	f002 f813 	bl	8002904 <HAL_GPIO_WritePin>
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	f003 0310 	and.w	r3, r3, #16
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	d005      	beq.n	80008f4 <LCD_DATA+0xbc>
 80008e8:	2201      	movs	r2, #1
 80008ea:	2120      	movs	r1, #32
 80008ec:	4824      	ldr	r0, [pc, #144]	@ (8000980 <LCD_DATA+0x148>)
 80008ee:	f002 f809 	bl	8002904 <HAL_GPIO_WritePin>
 80008f2:	e004      	b.n	80008fe <LCD_DATA+0xc6>
 80008f4:	2200      	movs	r2, #0
 80008f6:	2120      	movs	r1, #32
 80008f8:	4821      	ldr	r0, [pc, #132]	@ (8000980 <LCD_DATA+0x148>)
 80008fa:	f002 f803 	bl	8002904 <HAL_GPIO_WritePin>
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	f003 0320 	and.w	r3, r3, #32
 8000904:	2b00      	cmp	r3, #0
 8000906:	d005      	beq.n	8000914 <LCD_DATA+0xdc>
 8000908:	2201      	movs	r2, #1
 800090a:	2110      	movs	r1, #16
 800090c:	481c      	ldr	r0, [pc, #112]	@ (8000980 <LCD_DATA+0x148>)
 800090e:	f001 fff9 	bl	8002904 <HAL_GPIO_WritePin>
 8000912:	e004      	b.n	800091e <LCD_DATA+0xe6>
 8000914:	2200      	movs	r2, #0
 8000916:	2110      	movs	r1, #16
 8000918:	4819      	ldr	r0, [pc, #100]	@ (8000980 <LCD_DATA+0x148>)
 800091a:	f001 fff3 	bl	8002904 <HAL_GPIO_WritePin>
 800091e:	79fb      	ldrb	r3, [r7, #7]
 8000920:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000924:	2b00      	cmp	r3, #0
 8000926:	d006      	beq.n	8000936 <LCD_DATA+0xfe>
 8000928:	2201      	movs	r2, #1
 800092a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800092e:	4814      	ldr	r0, [pc, #80]	@ (8000980 <LCD_DATA+0x148>)
 8000930:	f001 ffe8 	bl	8002904 <HAL_GPIO_WritePin>
 8000934:	e005      	b.n	8000942 <LCD_DATA+0x10a>
 8000936:	2200      	movs	r2, #0
 8000938:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800093c:	4810      	ldr	r0, [pc, #64]	@ (8000980 <LCD_DATA+0x148>)
 800093e:	f001 ffe1 	bl	8002904 <HAL_GPIO_WritePin>
 8000942:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000946:	2b00      	cmp	r3, #0
 8000948:	da06      	bge.n	8000958 <LCD_DATA+0x120>
 800094a:	2201      	movs	r2, #1
 800094c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000950:	4809      	ldr	r0, [pc, #36]	@ (8000978 <LCD_DATA+0x140>)
 8000952:	f001 ffd7 	bl	8002904 <HAL_GPIO_WritePin>
 8000956:	e005      	b.n	8000964 <LCD_DATA+0x12c>
 8000958:	2200      	movs	r2, #0
 800095a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800095e:	4806      	ldr	r0, [pc, #24]	@ (8000978 <LCD_DATA+0x140>)
 8000960:	f001 ffd0 	bl	8002904 <HAL_GPIO_WritePin>
 8000964:	2201      	movs	r2, #1
 8000966:	2102      	movs	r1, #2
 8000968:	4803      	ldr	r0, [pc, #12]	@ (8000978 <LCD_DATA+0x140>)
 800096a:	f001 ffcb 	bl	8002904 <HAL_GPIO_WritePin>
 800096e:	bf00      	nop
 8000970:	3708      	adds	r7, #8
 8000972:	46bd      	mov	sp, r7
 8000974:	bd80      	pop	{r7, pc}
 8000976:	bf00      	nop
 8000978:	40020000 	.word	0x40020000
 800097c:	40020800 	.word	0x40020800
 8000980:	40020400 	.word	0x40020400

08000984 <SetWindows>:
 8000984:	b580      	push	{r7, lr}
 8000986:	b084      	sub	sp, #16
 8000988:	af00      	add	r7, sp, #0
 800098a:	60f8      	str	r0, [r7, #12]
 800098c:	60b9      	str	r1, [r7, #8]
 800098e:	607a      	str	r2, [r7, #4]
 8000990:	603b      	str	r3, [r7, #0]
 8000992:	202a      	movs	r0, #42	@ 0x2a
 8000994:	f7ff feaa 	bl	80006ec <LCD_CMD>
 8000998:	68fb      	ldr	r3, [r7, #12]
 800099a:	0a1b      	lsrs	r3, r3, #8
 800099c:	b2db      	uxtb	r3, r3
 800099e:	4618      	mov	r0, r3
 80009a0:	f7ff ff4a 	bl	8000838 <LCD_DATA>
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	b2db      	uxtb	r3, r3
 80009a8:	4618      	mov	r0, r3
 80009aa:	f7ff ff45 	bl	8000838 <LCD_DATA>
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	0a1b      	lsrs	r3, r3, #8
 80009b2:	b2db      	uxtb	r3, r3
 80009b4:	4618      	mov	r0, r3
 80009b6:	f7ff ff3f 	bl	8000838 <LCD_DATA>
 80009ba:	687b      	ldr	r3, [r7, #4]
 80009bc:	b2db      	uxtb	r3, r3
 80009be:	4618      	mov	r0, r3
 80009c0:	f7ff ff3a 	bl	8000838 <LCD_DATA>
 80009c4:	202b      	movs	r0, #43	@ 0x2b
 80009c6:	f7ff fe91 	bl	80006ec <LCD_CMD>
 80009ca:	68bb      	ldr	r3, [r7, #8]
 80009cc:	0a1b      	lsrs	r3, r3, #8
 80009ce:	b2db      	uxtb	r3, r3
 80009d0:	4618      	mov	r0, r3
 80009d2:	f7ff ff31 	bl	8000838 <LCD_DATA>
 80009d6:	68bb      	ldr	r3, [r7, #8]
 80009d8:	b2db      	uxtb	r3, r3
 80009da:	4618      	mov	r0, r3
 80009dc:	f7ff ff2c 	bl	8000838 <LCD_DATA>
 80009e0:	683b      	ldr	r3, [r7, #0]
 80009e2:	0a1b      	lsrs	r3, r3, #8
 80009e4:	b2db      	uxtb	r3, r3
 80009e6:	4618      	mov	r0, r3
 80009e8:	f7ff ff26 	bl	8000838 <LCD_DATA>
 80009ec:	683b      	ldr	r3, [r7, #0]
 80009ee:	b2db      	uxtb	r3, r3
 80009f0:	4618      	mov	r0, r3
 80009f2:	f7ff ff21 	bl	8000838 <LCD_DATA>
 80009f6:	202c      	movs	r0, #44	@ 0x2c
 80009f8:	f7ff fe78 	bl	80006ec <LCD_CMD>
 80009fc:	bf00      	nop
 80009fe:	3710      	adds	r7, #16
 8000a00:	46bd      	mov	sp, r7
 8000a02:	bd80      	pop	{r7, pc}

08000a04 <LCD_Clear>:
 8000a04:	b580      	push	{r7, lr}
 8000a06:	b084      	sub	sp, #16
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	6078      	str	r0, [r7, #4]
 8000a0c:	202c      	movs	r0, #44	@ 0x2c
 8000a0e:	f7ff fe6d 	bl	80006ec <LCD_CMD>
 8000a12:	2201      	movs	r2, #1
 8000a14:	2110      	movs	r1, #16
 8000a16:	481b      	ldr	r0, [pc, #108]	@ (8000a84 <LCD_Clear+0x80>)
 8000a18:	f001 ff74 	bl	8002904 <HAL_GPIO_WritePin>
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	2101      	movs	r1, #1
 8000a20:	4819      	ldr	r0, [pc, #100]	@ (8000a88 <LCD_Clear+0x84>)
 8000a22:	f001 ff6f 	bl	8002904 <HAL_GPIO_WritePin>
 8000a26:	23ef      	movs	r3, #239	@ 0xef
 8000a28:	f240 123f 	movw	r2, #319	@ 0x13f
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	2000      	movs	r0, #0
 8000a30:	f7ff ffa8 	bl	8000984 <SetWindows>
 8000a34:	2300      	movs	r3, #0
 8000a36:	60fb      	str	r3, [r7, #12]
 8000a38:	e016      	b.n	8000a68 <LCD_Clear+0x64>
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	60bb      	str	r3, [r7, #8]
 8000a3e:	e00d      	b.n	8000a5c <LCD_Clear+0x58>
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	0a1b      	lsrs	r3, r3, #8
 8000a44:	b2db      	uxtb	r3, r3
 8000a46:	4618      	mov	r0, r3
 8000a48:	f7ff fef6 	bl	8000838 <LCD_DATA>
 8000a4c:	687b      	ldr	r3, [r7, #4]
 8000a4e:	b2db      	uxtb	r3, r3
 8000a50:	4618      	mov	r0, r3
 8000a52:	f7ff fef1 	bl	8000838 <LCD_DATA>
 8000a56:	68bb      	ldr	r3, [r7, #8]
 8000a58:	3301      	adds	r3, #1
 8000a5a:	60bb      	str	r3, [r7, #8]
 8000a5c:	68bb      	ldr	r3, [r7, #8]
 8000a5e:	2bef      	cmp	r3, #239	@ 0xef
 8000a60:	d9ee      	bls.n	8000a40 <LCD_Clear+0x3c>
 8000a62:	68fb      	ldr	r3, [r7, #12]
 8000a64:	3301      	adds	r3, #1
 8000a66:	60fb      	str	r3, [r7, #12]
 8000a68:	68fb      	ldr	r3, [r7, #12]
 8000a6a:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8000a6e:	d3e4      	bcc.n	8000a3a <LCD_Clear+0x36>
 8000a70:	2201      	movs	r2, #1
 8000a72:	2101      	movs	r1, #1
 8000a74:	4804      	ldr	r0, [pc, #16]	@ (8000a88 <LCD_Clear+0x84>)
 8000a76:	f001 ff45 	bl	8002904 <HAL_GPIO_WritePin>
 8000a7a:	bf00      	nop
 8000a7c:	3710      	adds	r7, #16
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	40020000 	.word	0x40020000
 8000a88:	40020400 	.word	0x40020400

08000a8c <V_line>:
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	b086      	sub	sp, #24
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	60f8      	str	r0, [r7, #12]
 8000a94:	60b9      	str	r1, [r7, #8]
 8000a96:	607a      	str	r2, [r7, #4]
 8000a98:	603b      	str	r3, [r7, #0]
 8000a9a:	202c      	movs	r0, #44	@ 0x2c
 8000a9c:	f7ff fe26 	bl	80006ec <LCD_CMD>
 8000aa0:	2201      	movs	r2, #1
 8000aa2:	2110      	movs	r1, #16
 8000aa4:	4817      	ldr	r0, [pc, #92]	@ (8000b04 <V_line+0x78>)
 8000aa6:	f001 ff2d 	bl	8002904 <HAL_GPIO_WritePin>
 8000aaa:	2200      	movs	r2, #0
 8000aac:	2101      	movs	r1, #1
 8000aae:	4816      	ldr	r0, [pc, #88]	@ (8000b08 <V_line+0x7c>)
 8000ab0:	f001 ff28 	bl	8002904 <HAL_GPIO_WritePin>
 8000ab4:	687a      	ldr	r2, [r7, #4]
 8000ab6:	68bb      	ldr	r3, [r7, #8]
 8000ab8:	4413      	add	r3, r2
 8000aba:	607b      	str	r3, [r7, #4]
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	68fa      	ldr	r2, [r7, #12]
 8000ac0:	68b9      	ldr	r1, [r7, #8]
 8000ac2:	68f8      	ldr	r0, [r7, #12]
 8000ac4:	f7ff ff5e 	bl	8000984 <SetWindows>
 8000ac8:	2301      	movs	r3, #1
 8000aca:	617b      	str	r3, [r7, #20]
 8000acc:	e00d      	b.n	8000aea <V_line+0x5e>
 8000ace:	683b      	ldr	r3, [r7, #0]
 8000ad0:	0a1b      	lsrs	r3, r3, #8
 8000ad2:	b2db      	uxtb	r3, r3
 8000ad4:	4618      	mov	r0, r3
 8000ad6:	f7ff feaf 	bl	8000838 <LCD_DATA>
 8000ada:	683b      	ldr	r3, [r7, #0]
 8000adc:	b2db      	uxtb	r3, r3
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f7ff feaa 	bl	8000838 <LCD_DATA>
 8000ae4:	697b      	ldr	r3, [r7, #20]
 8000ae6:	3301      	adds	r3, #1
 8000ae8:	617b      	str	r3, [r7, #20]
 8000aea:	697a      	ldr	r2, [r7, #20]
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	429a      	cmp	r2, r3
 8000af0:	d9ed      	bls.n	8000ace <V_line+0x42>
 8000af2:	2201      	movs	r2, #1
 8000af4:	2101      	movs	r1, #1
 8000af6:	4804      	ldr	r0, [pc, #16]	@ (8000b08 <V_line+0x7c>)
 8000af8:	f001 ff04 	bl	8002904 <HAL_GPIO_WritePin>
 8000afc:	bf00      	nop
 8000afe:	3718      	adds	r7, #24
 8000b00:	46bd      	mov	sp, r7
 8000b02:	bd80      	pop	{r7, pc}
 8000b04:	40020000 	.word	0x40020000
 8000b08:	40020400 	.word	0x40020400

08000b0c <FillRect>:
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	b08a      	sub	sp, #40	@ 0x28
 8000b10:	af00      	add	r7, sp, #0
 8000b12:	60f8      	str	r0, [r7, #12]
 8000b14:	60b9      	str	r1, [r7, #8]
 8000b16:	607a      	str	r2, [r7, #4]
 8000b18:	603b      	str	r3, [r7, #0]
 8000b1a:	202c      	movs	r0, #44	@ 0x2c
 8000b1c:	f7ff fde6 	bl	80006ec <LCD_CMD>
 8000b20:	2201      	movs	r2, #1
 8000b22:	2110      	movs	r1, #16
 8000b24:	4824      	ldr	r0, [pc, #144]	@ (8000bb8 <FillRect+0xac>)
 8000b26:	f001 feed 	bl	8002904 <HAL_GPIO_WritePin>
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	2101      	movs	r1, #1
 8000b2e:	4823      	ldr	r0, [pc, #140]	@ (8000bbc <FillRect+0xb0>)
 8000b30:	f001 fee8 	bl	8002904 <HAL_GPIO_WritePin>
 8000b34:	68fa      	ldr	r2, [r7, #12]
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	4413      	add	r3, r2
 8000b3a:	61bb      	str	r3, [r7, #24]
 8000b3c:	68ba      	ldr	r2, [r7, #8]
 8000b3e:	683b      	ldr	r3, [r7, #0]
 8000b40:	4413      	add	r3, r2
 8000b42:	617b      	str	r3, [r7, #20]
 8000b44:	69bb      	ldr	r3, [r7, #24]
 8000b46:	1e5a      	subs	r2, r3, #1
 8000b48:	697b      	ldr	r3, [r7, #20]
 8000b4a:	3b01      	subs	r3, #1
 8000b4c:	68b9      	ldr	r1, [r7, #8]
 8000b4e:	68f8      	ldr	r0, [r7, #12]
 8000b50:	f7ff ff18 	bl	8000984 <SetWindows>
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	683a      	ldr	r2, [r7, #0]
 8000b58:	fb02 f303 	mul.w	r3, r2, r3
 8000b5c:	005b      	lsls	r3, r3, #1
 8000b5e:	3b01      	subs	r3, #1
 8000b60:	627b      	str	r3, [r7, #36]	@ 0x24
 8000b62:	2300      	movs	r3, #0
 8000b64:	623b      	str	r3, [r7, #32]
 8000b66:	e01a      	b.n	8000b9e <FillRect+0x92>
 8000b68:	2300      	movs	r3, #0
 8000b6a:	61fb      	str	r3, [r7, #28]
 8000b6c:	e010      	b.n	8000b90 <FillRect+0x84>
 8000b6e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000b70:	0a1b      	lsrs	r3, r3, #8
 8000b72:	b2db      	uxtb	r3, r3
 8000b74:	4618      	mov	r0, r3
 8000b76:	f7ff fe5f 	bl	8000838 <LCD_DATA>
 8000b7a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000b7c:	b2db      	uxtb	r3, r3
 8000b7e:	4618      	mov	r0, r3
 8000b80:	f7ff fe5a 	bl	8000838 <LCD_DATA>
 8000b84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000b86:	3b02      	subs	r3, #2
 8000b88:	627b      	str	r3, [r7, #36]	@ 0x24
 8000b8a:	69fb      	ldr	r3, [r7, #28]
 8000b8c:	3301      	adds	r3, #1
 8000b8e:	61fb      	str	r3, [r7, #28]
 8000b90:	69fb      	ldr	r3, [r7, #28]
 8000b92:	683a      	ldr	r2, [r7, #0]
 8000b94:	429a      	cmp	r2, r3
 8000b96:	d8ea      	bhi.n	8000b6e <FillRect+0x62>
 8000b98:	6a3b      	ldr	r3, [r7, #32]
 8000b9a:	3301      	adds	r3, #1
 8000b9c:	623b      	str	r3, [r7, #32]
 8000b9e:	6a3b      	ldr	r3, [r7, #32]
 8000ba0:	687a      	ldr	r2, [r7, #4]
 8000ba2:	429a      	cmp	r2, r3
 8000ba4:	d8e0      	bhi.n	8000b68 <FillRect+0x5c>
 8000ba6:	2201      	movs	r2, #1
 8000ba8:	2101      	movs	r1, #1
 8000baa:	4804      	ldr	r0, [pc, #16]	@ (8000bbc <FillRect+0xb0>)
 8000bac:	f001 feaa 	bl	8002904 <HAL_GPIO_WritePin>
 8000bb0:	bf00      	nop
 8000bb2:	3728      	adds	r7, #40	@ 0x28
 8000bb4:	46bd      	mov	sp, r7
 8000bb6:	bd80      	pop	{r7, pc}
 8000bb8:	40020000 	.word	0x40020000
 8000bbc:	40020400 	.word	0x40020400

08000bc0 <LCD_Bitmap>:
 8000bc0:	b580      	push	{r7, lr}
 8000bc2:	b08a      	sub	sp, #40	@ 0x28
 8000bc4:	af00      	add	r7, sp, #0
 8000bc6:	60f8      	str	r0, [r7, #12]
 8000bc8:	60b9      	str	r1, [r7, #8]
 8000bca:	607a      	str	r2, [r7, #4]
 8000bcc:	603b      	str	r3, [r7, #0]
 8000bce:	202c      	movs	r0, #44	@ 0x2c
 8000bd0:	f7ff fd8c 	bl	80006ec <LCD_CMD>
 8000bd4:	2201      	movs	r2, #1
 8000bd6:	2110      	movs	r1, #16
 8000bd8:	4824      	ldr	r0, [pc, #144]	@ (8000c6c <LCD_Bitmap+0xac>)
 8000bda:	f001 fe93 	bl	8002904 <HAL_GPIO_WritePin>
 8000bde:	2200      	movs	r2, #0
 8000be0:	2101      	movs	r1, #1
 8000be2:	4823      	ldr	r0, [pc, #140]	@ (8000c70 <LCD_Bitmap+0xb0>)
 8000be4:	f001 fe8e 	bl	8002904 <HAL_GPIO_WritePin>
 8000be8:	68fa      	ldr	r2, [r7, #12]
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	4413      	add	r3, r2
 8000bee:	61bb      	str	r3, [r7, #24]
 8000bf0:	68ba      	ldr	r2, [r7, #8]
 8000bf2:	683b      	ldr	r3, [r7, #0]
 8000bf4:	4413      	add	r3, r2
 8000bf6:	617b      	str	r3, [r7, #20]
 8000bf8:	69bb      	ldr	r3, [r7, #24]
 8000bfa:	1e5a      	subs	r2, r3, #1
 8000bfc:	697b      	ldr	r3, [r7, #20]
 8000bfe:	3b01      	subs	r3, #1
 8000c00:	68b9      	ldr	r1, [r7, #8]
 8000c02:	68f8      	ldr	r0, [r7, #12]
 8000c04:	f7ff febe 	bl	8000984 <SetWindows>
 8000c08:	2300      	movs	r3, #0
 8000c0a:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	623b      	str	r3, [r7, #32]
 8000c10:	e01e      	b.n	8000c50 <LCD_Bitmap+0x90>
 8000c12:	2300      	movs	r3, #0
 8000c14:	61fb      	str	r3, [r7, #28]
 8000c16:	e014      	b.n	8000c42 <LCD_Bitmap+0x82>
 8000c18:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8000c1a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c1c:	4413      	add	r3, r2
 8000c1e:	781b      	ldrb	r3, [r3, #0]
 8000c20:	4618      	mov	r0, r3
 8000c22:	f7ff fe09 	bl	8000838 <LCD_DATA>
 8000c26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c28:	3301      	adds	r3, #1
 8000c2a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8000c2c:	4413      	add	r3, r2
 8000c2e:	781b      	ldrb	r3, [r3, #0]
 8000c30:	4618      	mov	r0, r3
 8000c32:	f7ff fe01 	bl	8000838 <LCD_DATA>
 8000c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c38:	3302      	adds	r3, #2
 8000c3a:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c3c:	69fb      	ldr	r3, [r7, #28]
 8000c3e:	3301      	adds	r3, #1
 8000c40:	61fb      	str	r3, [r7, #28]
 8000c42:	69fb      	ldr	r3, [r7, #28]
 8000c44:	683a      	ldr	r2, [r7, #0]
 8000c46:	429a      	cmp	r2, r3
 8000c48:	d8e6      	bhi.n	8000c18 <LCD_Bitmap+0x58>
 8000c4a:	6a3b      	ldr	r3, [r7, #32]
 8000c4c:	3301      	adds	r3, #1
 8000c4e:	623b      	str	r3, [r7, #32]
 8000c50:	6a3b      	ldr	r3, [r7, #32]
 8000c52:	687a      	ldr	r2, [r7, #4]
 8000c54:	429a      	cmp	r2, r3
 8000c56:	d8dc      	bhi.n	8000c12 <LCD_Bitmap+0x52>
 8000c58:	2201      	movs	r2, #1
 8000c5a:	2101      	movs	r1, #1
 8000c5c:	4804      	ldr	r0, [pc, #16]	@ (8000c70 <LCD_Bitmap+0xb0>)
 8000c5e:	f001 fe51 	bl	8002904 <HAL_GPIO_WritePin>
 8000c62:	bf00      	nop
 8000c64:	3728      	adds	r7, #40	@ 0x28
 8000c66:	46bd      	mov	sp, r7
 8000c68:	bd80      	pop	{r7, pc}
 8000c6a:	bf00      	nop
 8000c6c:	40020000 	.word	0x40020000
 8000c70:	40020400 	.word	0x40020400

08000c74 <LCD_Sprite>:
 8000c74:	b580      	push	{r7, lr}
 8000c76:	b08c      	sub	sp, #48	@ 0x30
 8000c78:	af00      	add	r7, sp, #0
 8000c7a:	60f8      	str	r0, [r7, #12]
 8000c7c:	60b9      	str	r1, [r7, #8]
 8000c7e:	607a      	str	r2, [r7, #4]
 8000c80:	603b      	str	r3, [r7, #0]
 8000c82:	202c      	movs	r0, #44	@ 0x2c
 8000c84:	f7ff fd32 	bl	80006ec <LCD_CMD>
 8000c88:	2201      	movs	r2, #1
 8000c8a:	2110      	movs	r1, #16
 8000c8c:	484d      	ldr	r0, [pc, #308]	@ (8000dc4 <LCD_Sprite+0x150>)
 8000c8e:	f001 fe39 	bl	8002904 <HAL_GPIO_WritePin>
 8000c92:	2200      	movs	r2, #0
 8000c94:	2101      	movs	r1, #1
 8000c96:	484c      	ldr	r0, [pc, #304]	@ (8000dc8 <LCD_Sprite+0x154>)
 8000c98:	f001 fe34 	bl	8002904 <HAL_GPIO_WritePin>
 8000c9c:	68fa      	ldr	r2, [r7, #12]
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	4413      	add	r3, r2
 8000ca2:	61bb      	str	r3, [r7, #24]
 8000ca4:	68ba      	ldr	r2, [r7, #8]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	4413      	add	r3, r2
 8000caa:	617b      	str	r3, [r7, #20]
 8000cac:	68f8      	ldr	r0, [r7, #12]
 8000cae:	68b9      	ldr	r1, [r7, #8]
 8000cb0:	69bb      	ldr	r3, [r7, #24]
 8000cb2:	1e5a      	subs	r2, r3, #1
 8000cb4:	697b      	ldr	r3, [r7, #20]
 8000cb6:	3b01      	subs	r3, #1
 8000cb8:	f7ff fe64 	bl	8000984 <SetWindows>
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8000cc4:	fb02 f303 	mul.w	r3, r2, r3
 8000cc8:	613b      	str	r3, [r7, #16]
 8000cca:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8000cce:	2b00      	cmp	r3, #0
 8000cd0:	d03a      	beq.n	8000d48 <LCD_Sprite+0xd4>
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000cd6:	e032      	b.n	8000d3e <LCD_Sprite+0xca>
 8000cd8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000cda:	693a      	ldr	r2, [r7, #16]
 8000cdc:	fb03 f202 	mul.w	r2, r3, r2
 8000ce0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8000ce2:	6879      	ldr	r1, [r7, #4]
 8000ce4:	fb01 f303 	mul.w	r3, r1, r3
 8000ce8:	4413      	add	r3, r2
 8000cea:	1e5a      	subs	r2, r3, #1
 8000cec:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8000cf0:	1ad3      	subs	r3, r2, r3
 8000cf2:	005b      	lsls	r3, r3, #1
 8000cf4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000cf6:	687b      	ldr	r3, [r7, #4]
 8000cf8:	005b      	lsls	r3, r3, #1
 8000cfa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000cfc:	4413      	add	r3, r2
 8000cfe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000d00:	2300      	movs	r3, #0
 8000d02:	627b      	str	r3, [r7, #36]	@ 0x24
 8000d04:	e014      	b.n	8000d30 <LCD_Sprite+0xbc>
 8000d06:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d08:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000d0a:	4413      	add	r3, r2
 8000d0c:	781b      	ldrb	r3, [r3, #0]
 8000d0e:	4618      	mov	r0, r3
 8000d10:	f7ff fd92 	bl	8000838 <LCD_DATA>
 8000d14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d16:	3301      	adds	r3, #1
 8000d18:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000d1a:	4413      	add	r3, r2
 8000d1c:	781b      	ldrb	r3, [r3, #0]
 8000d1e:	4618      	mov	r0, r3
 8000d20:	f7ff fd8a 	bl	8000838 <LCD_DATA>
 8000d24:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d26:	3b02      	subs	r3, #2
 8000d28:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000d2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000d2c:	3301      	adds	r3, #1
 8000d2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8000d30:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000d32:	687b      	ldr	r3, [r7, #4]
 8000d34:	429a      	cmp	r2, r3
 8000d36:	dbe6      	blt.n	8000d06 <LCD_Sprite+0x92>
 8000d38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000d3a:	3301      	adds	r3, #1
 8000d3c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000d3e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000d40:	683b      	ldr	r3, [r7, #0]
 8000d42:	429a      	cmp	r2, r3
 8000d44:	dbc8      	blt.n	8000cd8 <LCD_Sprite+0x64>
 8000d46:	e034      	b.n	8000db2 <LCD_Sprite+0x13e>
 8000d48:	2300      	movs	r3, #0
 8000d4a:	623b      	str	r3, [r7, #32]
 8000d4c:	e02d      	b.n	8000daa <LCD_Sprite+0x136>
 8000d4e:	6a3b      	ldr	r3, [r7, #32]
 8000d50:	693a      	ldr	r2, [r7, #16]
 8000d52:	fb03 f202 	mul.w	r2, r3, r2
 8000d56:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8000d58:	6879      	ldr	r1, [r7, #4]
 8000d5a:	fb01 f303 	mul.w	r3, r1, r3
 8000d5e:	4413      	add	r3, r2
 8000d60:	1c5a      	adds	r2, r3, #1
 8000d62:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8000d66:	4413      	add	r3, r2
 8000d68:	005b      	lsls	r3, r3, #1
 8000d6a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	61fb      	str	r3, [r7, #28]
 8000d70:	e014      	b.n	8000d9c <LCD_Sprite+0x128>
 8000d72:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d74:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000d76:	4413      	add	r3, r2
 8000d78:	781b      	ldrb	r3, [r3, #0]
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f7ff fd5c 	bl	8000838 <LCD_DATA>
 8000d80:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d82:	3301      	adds	r3, #1
 8000d84:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000d86:	4413      	add	r3, r2
 8000d88:	781b      	ldrb	r3, [r3, #0]
 8000d8a:	4618      	mov	r0, r3
 8000d8c:	f7ff fd54 	bl	8000838 <LCD_DATA>
 8000d90:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000d92:	3302      	adds	r3, #2
 8000d94:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000d96:	69fb      	ldr	r3, [r7, #28]
 8000d98:	3301      	adds	r3, #1
 8000d9a:	61fb      	str	r3, [r7, #28]
 8000d9c:	69fa      	ldr	r2, [r7, #28]
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	429a      	cmp	r2, r3
 8000da2:	dbe6      	blt.n	8000d72 <LCD_Sprite+0xfe>
 8000da4:	6a3b      	ldr	r3, [r7, #32]
 8000da6:	3301      	adds	r3, #1
 8000da8:	623b      	str	r3, [r7, #32]
 8000daa:	6a3a      	ldr	r2, [r7, #32]
 8000dac:	683b      	ldr	r3, [r7, #0]
 8000dae:	429a      	cmp	r2, r3
 8000db0:	dbcd      	blt.n	8000d4e <LCD_Sprite+0xda>
 8000db2:	2201      	movs	r2, #1
 8000db4:	2101      	movs	r1, #1
 8000db6:	4804      	ldr	r0, [pc, #16]	@ (8000dc8 <LCD_Sprite+0x154>)
 8000db8:	f001 fda4 	bl	8002904 <HAL_GPIO_WritePin>
 8000dbc:	bf00      	nop
 8000dbe:	3730      	adds	r7, #48	@ 0x30
 8000dc0:	46bd      	mov	sp, r7
 8000dc2:	bd80      	pop	{r7, pc}
 8000dc4:	40020000 	.word	0x40020000
 8000dc8:	40020400 	.word	0x40020400

08000dcc <initEnemy1>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

//Funciones Enemigo tipo 1
void initEnemy1(enemy_type1* enemy, unsigned int startX, unsigned int startY, unsigned int width, unsigned int height, int health) {
 8000dcc:	b590      	push	{r4, r7, lr}
 8000dce:	b087      	sub	sp, #28
 8000dd0:	af02      	add	r7, sp, #8
 8000dd2:	60f8      	str	r0, [r7, #12]
 8000dd4:	60b9      	str	r1, [r7, #8]
 8000dd6:	607a      	str	r2, [r7, #4]
 8000dd8:	603b      	str	r3, [r7, #0]
    // Inicializar las coordenadas y dimensiones
    enemy->x = startX;
 8000dda:	68fb      	ldr	r3, [r7, #12]
 8000ddc:	68ba      	ldr	r2, [r7, #8]
 8000dde:	601a      	str	r2, [r3, #0]
    enemy->y = startY;
 8000de0:	68fb      	ldr	r3, [r7, #12]
 8000de2:	687a      	ldr	r2, [r7, #4]
 8000de4:	605a      	str	r2, [r3, #4]
    enemy->width = width;
 8000de6:	68fb      	ldr	r3, [r7, #12]
 8000de8:	683a      	ldr	r2, [r7, #0]
 8000dea:	609a      	str	r2, [r3, #8]
    enemy->height = height;
 8000dec:	68fb      	ldr	r3, [r7, #12]
 8000dee:	6a3a      	ldr	r2, [r7, #32]
 8000df0:	60da      	str	r2, [r3, #12]

    // Inicializar la vida y el estado
    enemy->health = health;
 8000df2:	68fb      	ldr	r3, [r7, #12]
 8000df4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000df6:	611a      	str	r2, [r3, #16]
    enemy->isAlive = 1;  // El enemigo comienza vivo
 8000df8:	68fb      	ldr	r3, [r7, #12]
 8000dfa:	2201      	movs	r2, #1
 8000dfc:	615a      	str	r2, [r3, #20]

    // Dibujar el enemigo en pantalla
    FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 8000dfe:	68fb      	ldr	r3, [r7, #12]
 8000e00:	681a      	ldr	r2, [r3, #0]
 8000e02:	68fb      	ldr	r3, [r7, #12]
 8000e04:	689b      	ldr	r3, [r3, #8]
 8000e06:	085b      	lsrs	r3, r3, #1
 8000e08:	1ad0      	subs	r0, r2, r3
 8000e0a:	68fb      	ldr	r3, [r7, #12]
 8000e0c:	685a      	ldr	r2, [r3, #4]
 8000e0e:	68fb      	ldr	r3, [r7, #12]
 8000e10:	68db      	ldr	r3, [r3, #12]
 8000e12:	085b      	lsrs	r3, r3, #1
 8000e14:	1ad1      	subs	r1, r2, r3
 8000e16:	68fb      	ldr	r3, [r7, #12]
 8000e18:	689a      	ldr	r2, [r3, #8]
 8000e1a:	68fb      	ldr	r3, [r7, #12]
 8000e1c:	68db      	ldr	r3, [r3, #12]
 8000e1e:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8000e22:	9400      	str	r4, [sp, #0]
 8000e24:	f7ff fe72 	bl	8000b0c <FillRect>
    FillRect(enemy->x , enemy->y, 1, 1, 0xFFFFFF);
 8000e28:	68fb      	ldr	r3, [r7, #12]
 8000e2a:	6818      	ldr	r0, [r3, #0]
 8000e2c:	68fb      	ldr	r3, [r7, #12]
 8000e2e:	6859      	ldr	r1, [r3, #4]
 8000e30:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000e34:	9300      	str	r3, [sp, #0]
 8000e36:	2301      	movs	r3, #1
 8000e38:	2201      	movs	r2, #1
 8000e3a:	f7ff fe67 	bl	8000b0c <FillRect>

    //HITBOX DEBUG
	enemy->e1Left = enemy->x - (enemy->width / 2);
 8000e3e:	68fb      	ldr	r3, [r7, #12]
 8000e40:	681a      	ldr	r2, [r3, #0]
 8000e42:	68fb      	ldr	r3, [r7, #12]
 8000e44:	689b      	ldr	r3, [r3, #8]
 8000e46:	085b      	lsrs	r3, r3, #1
 8000e48:	1ad2      	subs	r2, r2, r3
 8000e4a:	68fb      	ldr	r3, [r7, #12]
 8000e4c:	619a      	str	r2, [r3, #24]
	enemy->e1Right = (enemy->x + (enemy->width / 2)-1);
 8000e4e:	68fb      	ldr	r3, [r7, #12]
 8000e50:	681a      	ldr	r2, [r3, #0]
 8000e52:	68fb      	ldr	r3, [r7, #12]
 8000e54:	689b      	ldr	r3, [r3, #8]
 8000e56:	085b      	lsrs	r3, r3, #1
 8000e58:	4413      	add	r3, r2
 8000e5a:	1e5a      	subs	r2, r3, #1
 8000e5c:	68fb      	ldr	r3, [r7, #12]
 8000e5e:	61da      	str	r2, [r3, #28]
	enemy->e1Up = enemy->y - (enemy->height / 2);
 8000e60:	68fb      	ldr	r3, [r7, #12]
 8000e62:	685a      	ldr	r2, [r3, #4]
 8000e64:	68fb      	ldr	r3, [r7, #12]
 8000e66:	68db      	ldr	r3, [r3, #12]
 8000e68:	085b      	lsrs	r3, r3, #1
 8000e6a:	1ad2      	subs	r2, r2, r3
 8000e6c:	68fb      	ldr	r3, [r7, #12]
 8000e6e:	621a      	str	r2, [r3, #32]
	enemy->e1Down= (enemy->y + (enemy->height / 2)-1);
 8000e70:	68fb      	ldr	r3, [r7, #12]
 8000e72:	685a      	ldr	r2, [r3, #4]
 8000e74:	68fb      	ldr	r3, [r7, #12]
 8000e76:	68db      	ldr	r3, [r3, #12]
 8000e78:	085b      	lsrs	r3, r3, #1
 8000e7a:	4413      	add	r3, r2
 8000e7c:	1e5a      	subs	r2, r3, #1
 8000e7e:	68fb      	ldr	r3, [r7, #12]
 8000e80:	625a      	str	r2, [r3, #36]	@ 0x24
	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xFFFFFF); //Izquierda
 8000e82:	68fb      	ldr	r3, [r7, #12]
 8000e84:	6998      	ldr	r0, [r3, #24]
 8000e86:	68fb      	ldr	r3, [r7, #12]
 8000e88:	6859      	ldr	r1, [r3, #4]
 8000e8a:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000e8e:	9300      	str	r3, [sp, #0]
 8000e90:	2301      	movs	r3, #1
 8000e92:	2201      	movs	r2, #1
 8000e94:	f7ff fe3a 	bl	8000b0c <FillRect>
	FillRect(enemy->e1Right , enemy->y, 1, 1, 0x0420); //Derecha
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	69d8      	ldr	r0, [r3, #28]
 8000e9c:	68fb      	ldr	r3, [r7, #12]
 8000e9e:	6859      	ldr	r1, [r3, #4]
 8000ea0:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000ea4:	9300      	str	r3, [sp, #0]
 8000ea6:	2301      	movs	r3, #1
 8000ea8:	2201      	movs	r2, #1
 8000eaa:	f7ff fe2f 	bl	8000b0c <FillRect>
	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xFFFFFF); //Arriba
 8000eae:	68fb      	ldr	r3, [r7, #12]
 8000eb0:	6818      	ldr	r0, [r3, #0]
 8000eb2:	68fb      	ldr	r3, [r7, #12]
 8000eb4:	6a19      	ldr	r1, [r3, #32]
 8000eb6:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000eba:	9300      	str	r3, [sp, #0]
 8000ebc:	2301      	movs	r3, #1
 8000ebe:	2201      	movs	r2, #1
 8000ec0:	f7ff fe24 	bl	8000b0c <FillRect>
	FillRect(enemy->x , enemy->e1Down, 1, 1, 0x0420); //Abajo
 8000ec4:	68fb      	ldr	r3, [r7, #12]
 8000ec6:	6818      	ldr	r0, [r3, #0]
 8000ec8:	68fb      	ldr	r3, [r7, #12]
 8000eca:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000ecc:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000ed0:	9300      	str	r3, [sp, #0]
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	2201      	movs	r2, #1
 8000ed6:	f7ff fe19 	bl	8000b0c <FillRect>
}
 8000eda:	bf00      	nop
 8000edc:	3714      	adds	r7, #20
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	bd90      	pop	{r4, r7, pc}
	...

08000ee4 <ColisionPlayer_e1>:

int ColisionPlayer_e1(enemy_type1* enemy, player* player,int direction, int futureX, int futureY){
 8000ee4:	b590      	push	{r4, r7, lr}
 8000ee6:	b087      	sub	sp, #28
 8000ee8:	af02      	add	r7, sp, #8
 8000eea:	60f8      	str	r0, [r7, #12]
 8000eec:	60b9      	str	r1, [r7, #8]
 8000eee:	607a      	str	r2, [r7, #4]
 8000ef0:	603b      	str	r3, [r7, #0]
	// Verificar colisión con el enemigo basado en la dirección de movimiento
	    switch (direction) {
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	2b03      	cmp	r3, #3
 8000ef6:	f200 811a 	bhi.w	800112e <ColisionPlayer_e1+0x24a>
 8000efa:	a201      	add	r2, pc, #4	@ (adr r2, 8000f00 <ColisionPlayer_e1+0x1c>)
 8000efc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f00:	08000f11 	.word	0x08000f11
 8000f04:	08000f99 	.word	0x08000f99
 8000f08:	08001021 	.word	0x08001021
 8000f0c:	080010a1 	.word	0x080010a1
	        case 0: // Movimiento hacia abajo
	        	if (futureY >= enemy->e1Up && futureY<=enemy->e1Down && ((player->playerRight >= enemy->e1Left && player->playerRight <= enemy->e1Right)||(player->playerLeft <= enemy->e1Right && player->playerLeft >= enemy->e1Left))){
 8000f10:	68fb      	ldr	r3, [r7, #12]
 8000f12:	6a1a      	ldr	r2, [r3, #32]
 8000f14:	6a3b      	ldr	r3, [r7, #32]
 8000f16:	429a      	cmp	r2, r3
 8000f18:	f200 8102 	bhi.w	8001120 <ColisionPlayer_e1+0x23c>
 8000f1c:	68fb      	ldr	r3, [r7, #12]
 8000f1e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000f20:	6a3b      	ldr	r3, [r7, #32]
 8000f22:	429a      	cmp	r2, r3
 8000f24:	f0c0 80fc 	bcc.w	8001120 <ColisionPlayer_e1+0x23c>
 8000f28:	68bb      	ldr	r3, [r7, #8]
 8000f2a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000f2c:	68fb      	ldr	r3, [r7, #12]
 8000f2e:	699b      	ldr	r3, [r3, #24]
 8000f30:	429a      	cmp	r2, r3
 8000f32:	d305      	bcc.n	8000f40 <ColisionPlayer_e1+0x5c>
 8000f34:	68bb      	ldr	r3, [r7, #8]
 8000f36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000f38:	68fb      	ldr	r3, [r7, #12]
 8000f3a:	69db      	ldr	r3, [r3, #28]
 8000f3c:	429a      	cmp	r2, r3
 8000f3e:	d90d      	bls.n	8000f5c <ColisionPlayer_e1+0x78>
 8000f40:	68bb      	ldr	r3, [r7, #8]
 8000f42:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f44:	68fb      	ldr	r3, [r7, #12]
 8000f46:	69db      	ldr	r3, [r3, #28]
 8000f48:	429a      	cmp	r2, r3
 8000f4a:	f200 80e9 	bhi.w	8001120 <ColisionPlayer_e1+0x23c>
 8000f4e:	68bb      	ldr	r3, [r7, #8]
 8000f50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000f52:	68fb      	ldr	r3, [r7, #12]
 8000f54:	699b      	ldr	r3, [r3, #24]
 8000f56:	429a      	cmp	r2, r3
 8000f58:	f0c0 80e2 	bcc.w	8001120 <ColisionPlayer_e1+0x23c>
	        		player->y -= player->speed;
 8000f5c:	68bb      	ldr	r3, [r7, #8]
 8000f5e:	685a      	ldr	r2, [r3, #4]
 8000f60:	68bb      	ldr	r3, [r7, #8]
 8000f62:	691b      	ldr	r3, [r3, #16]
 8000f64:	1ad2      	subs	r2, r2, r3
 8000f66:	68bb      	ldr	r3, [r7, #8]
 8000f68:	605a      	str	r2, [r3, #4]
	        		FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 8000f6a:	68fb      	ldr	r3, [r7, #12]
 8000f6c:	681a      	ldr	r2, [r3, #0]
 8000f6e:	68fb      	ldr	r3, [r7, #12]
 8000f70:	689b      	ldr	r3, [r3, #8]
 8000f72:	085b      	lsrs	r3, r3, #1
 8000f74:	1ad0      	subs	r0, r2, r3
 8000f76:	68fb      	ldr	r3, [r7, #12]
 8000f78:	685a      	ldr	r2, [r3, #4]
 8000f7a:	68fb      	ldr	r3, [r7, #12]
 8000f7c:	68db      	ldr	r3, [r3, #12]
 8000f7e:	085b      	lsrs	r3, r3, #1
 8000f80:	1ad1      	subs	r1, r2, r3
 8000f82:	68fb      	ldr	r3, [r7, #12]
 8000f84:	689a      	ldr	r2, [r3, #8]
 8000f86:	68fb      	ldr	r3, [r7, #12]
 8000f88:	68db      	ldr	r3, [r3, #12]
 8000f8a:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8000f8e:	9400      	str	r4, [sp, #0]
 8000f90:	f7ff fdbc 	bl	8000b0c <FillRect>
	        		return 0;  // Colisión con el enemigo
 8000f94:	2300      	movs	r3, #0
 8000f96:	e0ca      	b.n	800112e <ColisionPlayer_e1+0x24a>
	        		}
	        	break;
	        case 1: //Movimiento hacia derecha
	        	if (futureX >= enemy->e1Left && futureX <= enemy->e1Right && ((player->playerUp<=enemy->e1Down && player->playerUp >= enemy->e1Up)||(player->playerDown<=enemy->e1Down && player->playerDown >= enemy->e1Up))){
 8000f98:	68fb      	ldr	r3, [r7, #12]
 8000f9a:	699a      	ldr	r2, [r3, #24]
 8000f9c:	683b      	ldr	r3, [r7, #0]
 8000f9e:	429a      	cmp	r2, r3
 8000fa0:	f200 80c0 	bhi.w	8001124 <ColisionPlayer_e1+0x240>
 8000fa4:	68fb      	ldr	r3, [r7, #12]
 8000fa6:	69da      	ldr	r2, [r3, #28]
 8000fa8:	683b      	ldr	r3, [r7, #0]
 8000faa:	429a      	cmp	r2, r3
 8000fac:	f0c0 80ba 	bcc.w	8001124 <ColisionPlayer_e1+0x240>
 8000fb0:	68bb      	ldr	r3, [r7, #8]
 8000fb2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000fb4:	68fb      	ldr	r3, [r7, #12]
 8000fb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000fb8:	429a      	cmp	r2, r3
 8000fba:	d805      	bhi.n	8000fc8 <ColisionPlayer_e1+0xe4>
 8000fbc:	68bb      	ldr	r3, [r7, #8]
 8000fbe:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	6a1b      	ldr	r3, [r3, #32]
 8000fc4:	429a      	cmp	r2, r3
 8000fc6:	d20d      	bcs.n	8000fe4 <ColisionPlayer_e1+0x100>
 8000fc8:	68bb      	ldr	r3, [r7, #8]
 8000fca:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8000fcc:	68fb      	ldr	r3, [r7, #12]
 8000fce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000fd0:	429a      	cmp	r2, r3
 8000fd2:	f200 80a7 	bhi.w	8001124 <ColisionPlayer_e1+0x240>
 8000fd6:	68bb      	ldr	r3, [r7, #8]
 8000fd8:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8000fda:	68fb      	ldr	r3, [r7, #12]
 8000fdc:	6a1b      	ldr	r3, [r3, #32]
 8000fde:	429a      	cmp	r2, r3
 8000fe0:	f0c0 80a0 	bcc.w	8001124 <ColisionPlayer_e1+0x240>
	        		player->x -=player->speed;
 8000fe4:	68bb      	ldr	r3, [r7, #8]
 8000fe6:	681a      	ldr	r2, [r3, #0]
 8000fe8:	68bb      	ldr	r3, [r7, #8]
 8000fea:	691b      	ldr	r3, [r3, #16]
 8000fec:	1ad2      	subs	r2, r2, r3
 8000fee:	68bb      	ldr	r3, [r7, #8]
 8000ff0:	601a      	str	r2, [r3, #0]
	        		FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 8000ff2:	68fb      	ldr	r3, [r7, #12]
 8000ff4:	681a      	ldr	r2, [r3, #0]
 8000ff6:	68fb      	ldr	r3, [r7, #12]
 8000ff8:	689b      	ldr	r3, [r3, #8]
 8000ffa:	085b      	lsrs	r3, r3, #1
 8000ffc:	1ad0      	subs	r0, r2, r3
 8000ffe:	68fb      	ldr	r3, [r7, #12]
 8001000:	685a      	ldr	r2, [r3, #4]
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	68db      	ldr	r3, [r3, #12]
 8001006:	085b      	lsrs	r3, r3, #1
 8001008:	1ad1      	subs	r1, r2, r3
 800100a:	68fb      	ldr	r3, [r7, #12]
 800100c:	689a      	ldr	r2, [r3, #8]
 800100e:	68fb      	ldr	r3, [r7, #12]
 8001010:	68db      	ldr	r3, [r3, #12]
 8001012:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8001016:	9400      	str	r4, [sp, #0]
 8001018:	f7ff fd78 	bl	8000b0c <FillRect>
	        		return 0;
 800101c:	2300      	movs	r3, #0
 800101e:	e086      	b.n	800112e <ColisionPlayer_e1+0x24a>
	        		}
	        	break;
	        case 2: //Movimiento hacia arriba
	        	if (futureY <= enemy->e1Down && futureY>=enemy->e1Up && ((player->playerRight >= enemy->e1Left && player->playerRight <= enemy->e1Right)||(player->playerLeft <= enemy->e1Right && player->playerLeft >= enemy->e1Left))){
 8001020:	68fb      	ldr	r3, [r7, #12]
 8001022:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001024:	6a3b      	ldr	r3, [r7, #32]
 8001026:	429a      	cmp	r2, r3
 8001028:	d37e      	bcc.n	8001128 <ColisionPlayer_e1+0x244>
 800102a:	68fb      	ldr	r3, [r7, #12]
 800102c:	6a1a      	ldr	r2, [r3, #32]
 800102e:	6a3b      	ldr	r3, [r7, #32]
 8001030:	429a      	cmp	r2, r3
 8001032:	d879      	bhi.n	8001128 <ColisionPlayer_e1+0x244>
 8001034:	68bb      	ldr	r3, [r7, #8]
 8001036:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001038:	68fb      	ldr	r3, [r7, #12]
 800103a:	699b      	ldr	r3, [r3, #24]
 800103c:	429a      	cmp	r2, r3
 800103e:	d305      	bcc.n	800104c <ColisionPlayer_e1+0x168>
 8001040:	68bb      	ldr	r3, [r7, #8]
 8001042:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001044:	68fb      	ldr	r3, [r7, #12]
 8001046:	69db      	ldr	r3, [r3, #28]
 8001048:	429a      	cmp	r2, r3
 800104a:	d90b      	bls.n	8001064 <ColisionPlayer_e1+0x180>
 800104c:	68bb      	ldr	r3, [r7, #8]
 800104e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001050:	68fb      	ldr	r3, [r7, #12]
 8001052:	69db      	ldr	r3, [r3, #28]
 8001054:	429a      	cmp	r2, r3
 8001056:	d867      	bhi.n	8001128 <ColisionPlayer_e1+0x244>
 8001058:	68bb      	ldr	r3, [r7, #8]
 800105a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800105c:	68fb      	ldr	r3, [r7, #12]
 800105e:	699b      	ldr	r3, [r3, #24]
 8001060:	429a      	cmp	r2, r3
 8001062:	d361      	bcc.n	8001128 <ColisionPlayer_e1+0x244>
					player->y += player->speed;
 8001064:	68bb      	ldr	r3, [r7, #8]
 8001066:	685a      	ldr	r2, [r3, #4]
 8001068:	68bb      	ldr	r3, [r7, #8]
 800106a:	691b      	ldr	r3, [r3, #16]
 800106c:	441a      	add	r2, r3
 800106e:	68bb      	ldr	r3, [r7, #8]
 8001070:	605a      	str	r2, [r3, #4]
					FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 8001072:	68fb      	ldr	r3, [r7, #12]
 8001074:	681a      	ldr	r2, [r3, #0]
 8001076:	68fb      	ldr	r3, [r7, #12]
 8001078:	689b      	ldr	r3, [r3, #8]
 800107a:	085b      	lsrs	r3, r3, #1
 800107c:	1ad0      	subs	r0, r2, r3
 800107e:	68fb      	ldr	r3, [r7, #12]
 8001080:	685a      	ldr	r2, [r3, #4]
 8001082:	68fb      	ldr	r3, [r7, #12]
 8001084:	68db      	ldr	r3, [r3, #12]
 8001086:	085b      	lsrs	r3, r3, #1
 8001088:	1ad1      	subs	r1, r2, r3
 800108a:	68fb      	ldr	r3, [r7, #12]
 800108c:	689a      	ldr	r2, [r3, #8]
 800108e:	68fb      	ldr	r3, [r7, #12]
 8001090:	68db      	ldr	r3, [r3, #12]
 8001092:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8001096:	9400      	str	r4, [sp, #0]
 8001098:	f7ff fd38 	bl	8000b0c <FillRect>
					return 0;  // Colisión con el enemigo
 800109c:	2300      	movs	r3, #0
 800109e:	e046      	b.n	800112e <ColisionPlayer_e1+0x24a>
					}
	        	break;
	        case 3: //Movimiento hacia izquierda
	        	if (futureX <= enemy->e1Right && futureX >= enemy->e1Left && ((player->playerUp<=enemy->e1Down && player->playerUp >= enemy->e1Up)||(player->playerDown<=enemy->e1Down && player->playerDown >= enemy->e1Up))){
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	69da      	ldr	r2, [r3, #28]
 80010a4:	683b      	ldr	r3, [r7, #0]
 80010a6:	429a      	cmp	r2, r3
 80010a8:	d340      	bcc.n	800112c <ColisionPlayer_e1+0x248>
 80010aa:	68fb      	ldr	r3, [r7, #12]
 80010ac:	699a      	ldr	r2, [r3, #24]
 80010ae:	683b      	ldr	r3, [r7, #0]
 80010b0:	429a      	cmp	r2, r3
 80010b2:	d83b      	bhi.n	800112c <ColisionPlayer_e1+0x248>
 80010b4:	68bb      	ldr	r3, [r7, #8]
 80010b6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80010b8:	68fb      	ldr	r3, [r7, #12]
 80010ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80010bc:	429a      	cmp	r2, r3
 80010be:	d805      	bhi.n	80010cc <ColisionPlayer_e1+0x1e8>
 80010c0:	68bb      	ldr	r3, [r7, #8]
 80010c2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80010c4:	68fb      	ldr	r3, [r7, #12]
 80010c6:	6a1b      	ldr	r3, [r3, #32]
 80010c8:	429a      	cmp	r2, r3
 80010ca:	d20b      	bcs.n	80010e4 <ColisionPlayer_e1+0x200>
 80010cc:	68bb      	ldr	r3, [r7, #8]
 80010ce:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80010d0:	68fb      	ldr	r3, [r7, #12]
 80010d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80010d4:	429a      	cmp	r2, r3
 80010d6:	d829      	bhi.n	800112c <ColisionPlayer_e1+0x248>
 80010d8:	68bb      	ldr	r3, [r7, #8]
 80010da:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	6a1b      	ldr	r3, [r3, #32]
 80010e0:	429a      	cmp	r2, r3
 80010e2:	d323      	bcc.n	800112c <ColisionPlayer_e1+0x248>
					player->x +=player->speed;
 80010e4:	68bb      	ldr	r3, [r7, #8]
 80010e6:	681a      	ldr	r2, [r3, #0]
 80010e8:	68bb      	ldr	r3, [r7, #8]
 80010ea:	691b      	ldr	r3, [r3, #16]
 80010ec:	441a      	add	r2, r3
 80010ee:	68bb      	ldr	r3, [r7, #8]
 80010f0:	601a      	str	r2, [r3, #0]
					FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 80010f2:	68fb      	ldr	r3, [r7, #12]
 80010f4:	681a      	ldr	r2, [r3, #0]
 80010f6:	68fb      	ldr	r3, [r7, #12]
 80010f8:	689b      	ldr	r3, [r3, #8]
 80010fa:	085b      	lsrs	r3, r3, #1
 80010fc:	1ad0      	subs	r0, r2, r3
 80010fe:	68fb      	ldr	r3, [r7, #12]
 8001100:	685a      	ldr	r2, [r3, #4]
 8001102:	68fb      	ldr	r3, [r7, #12]
 8001104:	68db      	ldr	r3, [r3, #12]
 8001106:	085b      	lsrs	r3, r3, #1
 8001108:	1ad1      	subs	r1, r2, r3
 800110a:	68fb      	ldr	r3, [r7, #12]
 800110c:	689a      	ldr	r2, [r3, #8]
 800110e:	68fb      	ldr	r3, [r7, #12]
 8001110:	68db      	ldr	r3, [r3, #12]
 8001112:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8001116:	9400      	str	r4, [sp, #0]
 8001118:	f7ff fcf8 	bl	8000b0c <FillRect>
					return 0;
 800111c:	2300      	movs	r3, #0
 800111e:	e006      	b.n	800112e <ColisionPlayer_e1+0x24a>
	        	break;
 8001120:	bf00      	nop
 8001122:	e004      	b.n	800112e <ColisionPlayer_e1+0x24a>
	        	break;
 8001124:	bf00      	nop
 8001126:	e002      	b.n	800112e <ColisionPlayer_e1+0x24a>
	        	break;
 8001128:	bf00      	nop
 800112a:	e000      	b.n	800112e <ColisionPlayer_e1+0x24a>
					}
	        	break;
 800112c:	bf00      	nop
		return 1;
	    }
}
 800112e:	4618      	mov	r0, r3
 8001130:	3714      	adds	r7, #20
 8001132:	46bd      	mov	sp, r7
 8001134:	bd90      	pop	{r4, r7, pc}
 8001136:	bf00      	nop

08001138 <initPlayer>:

//Funciones Player
void initPlayer(player* player, unsigned int startX, unsigned int startY, unsigned int playerWidth, unsigned int playerHeight, unsigned int speed, unsigned int life, unsigned int limitWidth, unsigned int limitHeight) {
 8001138:	b590      	push	{r4, r7, lr}
 800113a:	b087      	sub	sp, #28
 800113c:	af02      	add	r7, sp, #8
 800113e:	60f8      	str	r0, [r7, #12]
 8001140:	60b9      	str	r1, [r7, #8]
 8001142:	607a      	str	r2, [r7, #4]
 8001144:	603b      	str	r3, [r7, #0]
    // Inicializar las propiedades del jugador
    player->x = startX;
 8001146:	68fb      	ldr	r3, [r7, #12]
 8001148:	68ba      	ldr	r2, [r7, #8]
 800114a:	601a      	str	r2, [r3, #0]
    player->y = startY;
 800114c:	68fb      	ldr	r3, [r7, #12]
 800114e:	687a      	ldr	r2, [r7, #4]
 8001150:	605a      	str	r2, [r3, #4]
    player->width = playerWidth;
 8001152:	68fb      	ldr	r3, [r7, #12]
 8001154:	683a      	ldr	r2, [r7, #0]
 8001156:	609a      	str	r2, [r3, #8]
    player->height = playerHeight;
 8001158:	68fb      	ldr	r3, [r7, #12]
 800115a:	6a3a      	ldr	r2, [r7, #32]
 800115c:	60da      	str	r2, [r3, #12]
    player->speed = speed;
 800115e:	68fb      	ldr	r3, [r7, #12]
 8001160:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001162:	611a      	str	r2, [r3, #16]
    player->life = life;
 8001164:	68fb      	ldr	r3, [r7, #12]
 8001166:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001168:	615a      	str	r2, [r3, #20]
    player->score = 0;          // Puntuación inicial en 0
 800116a:	68fb      	ldr	r3, [r7, #12]
 800116c:	2200      	movs	r2, #0
 800116e:	619a      	str	r2, [r3, #24]
    player->isAlive = 1;        // El jugador comienza vivo
 8001170:	68fb      	ldr	r3, [r7, #12]
 8001172:	2201      	movs	r2, #1
 8001174:	61da      	str	r2, [r3, #28]
    player->direction = 2;      // Dirección inicial (abajo)
 8001176:	68fb      	ldr	r3, [r7, #12]
 8001178:	2202      	movs	r2, #2
 800117a:	621a      	str	r2, [r3, #32]
    player->limitWidth = limitWidth;
 800117c:	68fb      	ldr	r3, [r7, #12]
 800117e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001180:	625a      	str	r2, [r3, #36]	@ 0x24
    player->limitHeight = limitHeight;
 8001182:	68fb      	ldr	r3, [r7, #12]
 8001184:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001186:	629a      	str	r2, [r3, #40]	@ 0x28

    // Dibujar el jugador en pantalla
    FillRect(player->x - (player->width / 2), player->y - (player->height / 2), player->width, player->height, 0xFFFB00);
 8001188:	68fb      	ldr	r3, [r7, #12]
 800118a:	681a      	ldr	r2, [r3, #0]
 800118c:	68fb      	ldr	r3, [r7, #12]
 800118e:	689b      	ldr	r3, [r3, #8]
 8001190:	085b      	lsrs	r3, r3, #1
 8001192:	1ad0      	subs	r0, r2, r3
 8001194:	68fb      	ldr	r3, [r7, #12]
 8001196:	685a      	ldr	r2, [r3, #4]
 8001198:	68fb      	ldr	r3, [r7, #12]
 800119a:	68db      	ldr	r3, [r3, #12]
 800119c:	085b      	lsrs	r3, r3, #1
 800119e:	1ad1      	subs	r1, r2, r3
 80011a0:	68fb      	ldr	r3, [r7, #12]
 80011a2:	689a      	ldr	r2, [r3, #8]
 80011a4:	68fb      	ldr	r3, [r7, #12]
 80011a6:	68db      	ldr	r3, [r3, #12]
 80011a8:	4c39      	ldr	r4, [pc, #228]	@ (8001290 <initPlayer+0x158>)
 80011aa:	9400      	str	r4, [sp, #0]
 80011ac:	f7ff fcae 	bl	8000b0c <FillRect>
    LCD_Bitmap(player->x - (player->width / 2), player->y - (player->height / 2), player->width, player->height, LinkIdeDown);
 80011b0:	68fb      	ldr	r3, [r7, #12]
 80011b2:	681a      	ldr	r2, [r3, #0]
 80011b4:	68fb      	ldr	r3, [r7, #12]
 80011b6:	689b      	ldr	r3, [r3, #8]
 80011b8:	085b      	lsrs	r3, r3, #1
 80011ba:	1ad0      	subs	r0, r2, r3
 80011bc:	68fb      	ldr	r3, [r7, #12]
 80011be:	685a      	ldr	r2, [r3, #4]
 80011c0:	68fb      	ldr	r3, [r7, #12]
 80011c2:	68db      	ldr	r3, [r3, #12]
 80011c4:	085b      	lsrs	r3, r3, #1
 80011c6:	1ad1      	subs	r1, r2, r3
 80011c8:	68fb      	ldr	r3, [r7, #12]
 80011ca:	689a      	ldr	r2, [r3, #8]
 80011cc:	68fb      	ldr	r3, [r7, #12]
 80011ce:	68db      	ldr	r3, [r3, #12]
 80011d0:	4c30      	ldr	r4, [pc, #192]	@ (8001294 <initPlayer+0x15c>)
 80011d2:	9400      	str	r4, [sp, #0]
 80011d4:	f7ff fcf4 	bl	8000bc0 <LCD_Bitmap>
    FillRect(player->x , player->y, 1, 1, 0x000000);
 80011d8:	68fb      	ldr	r3, [r7, #12]
 80011da:	6818      	ldr	r0, [r3, #0]
 80011dc:	68fb      	ldr	r3, [r7, #12]
 80011de:	6859      	ldr	r1, [r3, #4]
 80011e0:	2300      	movs	r3, #0
 80011e2:	9300      	str	r3, [sp, #0]
 80011e4:	2301      	movs	r3, #1
 80011e6:	2201      	movs	r2, #1
 80011e8:	f7ff fc90 	bl	8000b0c <FillRect>

    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 80011ec:	68fb      	ldr	r3, [r7, #12]
 80011ee:	681a      	ldr	r2, [r3, #0]
 80011f0:	68fb      	ldr	r3, [r7, #12]
 80011f2:	689b      	ldr	r3, [r3, #8]
 80011f4:	085b      	lsrs	r3, r3, #1
 80011f6:	1ad2      	subs	r2, r2, r3
 80011f8:	68fb      	ldr	r3, [r7, #12]
 80011fa:	631a      	str	r2, [r3, #48]	@ 0x30
    player->playerRight=(player->x+(player->width / 2)-1);
 80011fc:	68fb      	ldr	r3, [r7, #12]
 80011fe:	681a      	ldr	r2, [r3, #0]
 8001200:	68fb      	ldr	r3, [r7, #12]
 8001202:	689b      	ldr	r3, [r3, #8]
 8001204:	085b      	lsrs	r3, r3, #1
 8001206:	4413      	add	r3, r2
 8001208:	1e5a      	subs	r2, r3, #1
 800120a:	68fb      	ldr	r3, [r7, #12]
 800120c:	635a      	str	r2, [r3, #52]	@ 0x34
    player->playerUp=player->y-(player->height / 2);
 800120e:	68fb      	ldr	r3, [r7, #12]
 8001210:	685a      	ldr	r2, [r3, #4]
 8001212:	68fb      	ldr	r3, [r7, #12]
 8001214:	68db      	ldr	r3, [r3, #12]
 8001216:	085b      	lsrs	r3, r3, #1
 8001218:	1ad2      	subs	r2, r2, r3
 800121a:	68fb      	ldr	r3, [r7, #12]
 800121c:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)-1);
 800121e:	68fb      	ldr	r3, [r7, #12]
 8001220:	685a      	ldr	r2, [r3, #4]
 8001222:	68fb      	ldr	r3, [r7, #12]
 8001224:	68db      	ldr	r3, [r3, #12]
 8001226:	085b      	lsrs	r3, r3, #1
 8001228:	4413      	add	r3, r2
 800122a:	1e5a      	subs	r2, r3, #1
 800122c:	68fb      	ldr	r3, [r7, #12]
 800122e:	63da      	str	r2, [r3, #60]	@ 0x3c
    FillRect(player->playerLeft , player->y, 1, 1, 0xFFFFFF); //Izquierda
 8001230:	68fb      	ldr	r3, [r7, #12]
 8001232:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8001234:	68fb      	ldr	r3, [r7, #12]
 8001236:	6859      	ldr	r1, [r3, #4]
 8001238:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 800123c:	9300      	str	r3, [sp, #0]
 800123e:	2301      	movs	r3, #1
 8001240:	2201      	movs	r2, #1
 8001242:	f7ff fc63 	bl	8000b0c <FillRect>
    FillRect(player->playerRight , player->y, 1, 1, 0x0420); //Derecha
 8001246:	68fb      	ldr	r3, [r7, #12]
 8001248:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 800124a:	68fb      	ldr	r3, [r7, #12]
 800124c:	6859      	ldr	r1, [r3, #4]
 800124e:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8001252:	9300      	str	r3, [sp, #0]
 8001254:	2301      	movs	r3, #1
 8001256:	2201      	movs	r2, #1
 8001258:	f7ff fc58 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerUp, 1, 1, 0xFFFFFF); //Arriba
 800125c:	68fb      	ldr	r3, [r7, #12]
 800125e:	6818      	ldr	r0, [r3, #0]
 8001260:	68fb      	ldr	r3, [r7, #12]
 8001262:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8001264:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8001268:	9300      	str	r3, [sp, #0]
 800126a:	2301      	movs	r3, #1
 800126c:	2201      	movs	r2, #1
 800126e:	f7ff fc4d 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerDown, 1, 1, 0x0420); //Abajo
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	6818      	ldr	r0, [r3, #0]
 8001276:	68fb      	ldr	r3, [r7, #12]
 8001278:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 800127a:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 800127e:	9300      	str	r3, [sp, #0]
 8001280:	2301      	movs	r3, #1
 8001282:	2201      	movs	r2, #1
 8001284:	f7ff fc42 	bl	8000b0c <FillRect>


}
 8001288:	bf00      	nop
 800128a:	3714      	adds	r7, #20
 800128c:	46bd      	mov	sp, r7
 800128e:	bd90      	pop	{r4, r7, pc}
 8001290:	00fffb00 	.word	0x00fffb00
 8001294:	20000000 	.word	0x20000000

08001298 <playerCanMove>:

int playerCanMove(player* player, unsigned int direction) {
 8001298:	b580      	push	{r7, lr}
 800129a:	b086      	sub	sp, #24
 800129c:	af02      	add	r7, sp, #8
 800129e:	6078      	str	r0, [r7, #4]
 80012a0:	6039      	str	r1, [r7, #0]
    // Variables para calcular la posición futura del jugador según la dirección
    int futureX = player->x;
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	60fb      	str	r3, [r7, #12]
    int futureY = player->y;
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	685b      	ldr	r3, [r3, #4]
 80012ac:	60bb      	str	r3, [r7, #8]

    // Calcular las nuevas coordenadas dependiendo de la dirección
    switch (direction) {
 80012ae:	683b      	ldr	r3, [r7, #0]
 80012b0:	2b03      	cmp	r3, #3
 80012b2:	d823      	bhi.n	80012fc <playerCanMove+0x64>
 80012b4:	a201      	add	r2, pc, #4	@ (adr r2, 80012bc <playerCanMove+0x24>)
 80012b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80012ba:	bf00      	nop
 80012bc:	080012cd 	.word	0x080012cd
 80012c0:	080012d9 	.word	0x080012d9
 80012c4:	080012e5 	.word	0x080012e5
 80012c8:	080012f1 	.word	0x080012f1
        case 0:  // Abajo
            futureY += player->speed;
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	691a      	ldr	r2, [r3, #16]
 80012d0:	68bb      	ldr	r3, [r7, #8]
 80012d2:	4413      	add	r3, r2
 80012d4:	60bb      	str	r3, [r7, #8]
            break;
 80012d6:	e011      	b.n	80012fc <playerCanMove+0x64>
        case 1:  // Derecha
            futureX += player->speed;
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	691a      	ldr	r2, [r3, #16]
 80012dc:	68fb      	ldr	r3, [r7, #12]
 80012de:	4413      	add	r3, r2
 80012e0:	60fb      	str	r3, [r7, #12]
            break;
 80012e2:	e00b      	b.n	80012fc <playerCanMove+0x64>
        case 2:  // Arriba
            futureY -= player->speed;
 80012e4:	68ba      	ldr	r2, [r7, #8]
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	691b      	ldr	r3, [r3, #16]
 80012ea:	1ad3      	subs	r3, r2, r3
 80012ec:	60bb      	str	r3, [r7, #8]
            break;
 80012ee:	e005      	b.n	80012fc <playerCanMove+0x64>
        case 3:  // Izquierda
            futureX -= player->speed;
 80012f0:	68fa      	ldr	r2, [r7, #12]
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	691b      	ldr	r3, [r3, #16]
 80012f6:	1ad3      	subs	r3, r2, r3
 80012f8:	60fb      	str	r3, [r7, #12]
            break;
 80012fa:	bf00      	nop
    }

    if (ColisionPlayer_e1(&e1_1, player, direction,futureX,futureY)==0){
 80012fc:	683a      	ldr	r2, [r7, #0]
 80012fe:	68bb      	ldr	r3, [r7, #8]
 8001300:	9300      	str	r3, [sp, #0]
 8001302:	68fb      	ldr	r3, [r7, #12]
 8001304:	6879      	ldr	r1, [r7, #4]
 8001306:	481f      	ldr	r0, [pc, #124]	@ (8001384 <playerCanMove+0xec>)
 8001308:	f7ff fdec 	bl	8000ee4 <ColisionPlayer_e1>
 800130c:	4603      	mov	r3, r0
 800130e:	2b00      	cmp	r3, #0
 8001310:	d101      	bne.n	8001316 <playerCanMove+0x7e>
    	return 0;
 8001312:	2300      	movs	r3, #0
 8001314:	e032      	b.n	800137c <playerCanMove+0xe4>
    }
    if (ColisionPlayer_e1(&e1_2, player, direction,futureX,futureY)==0){
 8001316:	683a      	ldr	r2, [r7, #0]
 8001318:	68bb      	ldr	r3, [r7, #8]
 800131a:	9300      	str	r3, [sp, #0]
 800131c:	68fb      	ldr	r3, [r7, #12]
 800131e:	6879      	ldr	r1, [r7, #4]
 8001320:	4819      	ldr	r0, [pc, #100]	@ (8001388 <playerCanMove+0xf0>)
 8001322:	f7ff fddf 	bl	8000ee4 <ColisionPlayer_e1>
 8001326:	4603      	mov	r3, r0
 8001328:	2b00      	cmp	r3, #0
 800132a:	d101      	bne.n	8001330 <playerCanMove+0x98>
        	return 0;
 800132c:	2300      	movs	r3, #0
 800132e:	e025      	b.n	800137c <playerCanMove+0xe4>
        }
    if (ColisionPlayer_e1(&e1_3, player, direction,futureX,futureY)==0){
 8001330:	683a      	ldr	r2, [r7, #0]
 8001332:	68bb      	ldr	r3, [r7, #8]
 8001334:	9300      	str	r3, [sp, #0]
 8001336:	68fb      	ldr	r3, [r7, #12]
 8001338:	6879      	ldr	r1, [r7, #4]
 800133a:	4814      	ldr	r0, [pc, #80]	@ (800138c <playerCanMove+0xf4>)
 800133c:	f7ff fdd2 	bl	8000ee4 <ColisionPlayer_e1>
 8001340:	4603      	mov	r3, r0
 8001342:	2b00      	cmp	r3, #0
 8001344:	d101      	bne.n	800134a <playerCanMove+0xb2>
        	return 0;
 8001346:	2300      	movs	r3, #0
 8001348:	e018      	b.n	800137c <playerCanMove+0xe4>
        }

    // Verificar colisiones con los bordes en base a la posición futura
    if (futureX <= 0) {
 800134a:	68fb      	ldr	r3, [r7, #12]
 800134c:	2b00      	cmp	r3, #0
 800134e:	dc01      	bgt.n	8001354 <playerCanMove+0xbc>
        return 0;  // Colisión con el borde izquierdo
 8001350:	2300      	movs	r3, #0
 8001352:	e013      	b.n	800137c <playerCanMove+0xe4>
    }
    if (futureX >= player->limitWidth) {
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001358:	68fb      	ldr	r3, [r7, #12]
 800135a:	429a      	cmp	r2, r3
 800135c:	d801      	bhi.n	8001362 <playerCanMove+0xca>
        return 0;  // Colisión con el borde derecho
 800135e:	2300      	movs	r3, #0
 8001360:	e00c      	b.n	800137c <playerCanMove+0xe4>
    }
    if (futureY  <= 0) {
 8001362:	68bb      	ldr	r3, [r7, #8]
 8001364:	2b00      	cmp	r3, #0
 8001366:	dc01      	bgt.n	800136c <playerCanMove+0xd4>
        return 0;  // Colisión con el borde superior
 8001368:	2300      	movs	r3, #0
 800136a:	e007      	b.n	800137c <playerCanMove+0xe4>
    }
    if (futureY>= player->limitHeight) {
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001370:	68bb      	ldr	r3, [r7, #8]
 8001372:	429a      	cmp	r2, r3
 8001374:	d801      	bhi.n	800137a <playerCanMove+0xe2>
        return 0;  // Colisión con el borde inferior
 8001376:	2300      	movs	r3, #0
 8001378:	e000      	b.n	800137c <playerCanMove+0xe4>
    }
    // No hay colisiones, se puede mover
    return 1;
 800137a:	2301      	movs	r3, #1
}
 800137c:	4618      	mov	r0, r3
 800137e:	3710      	adds	r7, #16
 8001380:	46bd      	mov	sp, r7
 8001382:	bd80      	pop	{r7, pc}
 8001384:	20002928 	.word	0x20002928
 8001388:	20002950 	.word	0x20002950
 800138c:	20002978 	.word	0x20002978

08001390 <HitboxPlayer>:

void HitboxPlayer(player* player){
 8001390:	b480      	push	{r7}
 8001392:	b083      	sub	sp, #12
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]

    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	681a      	ldr	r2, [r3, #0]
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	689b      	ldr	r3, [r3, #8]
 80013a0:	085b      	lsrs	r3, r3, #1
 80013a2:	1ad2      	subs	r2, r2, r3
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	631a      	str	r2, [r3, #48]	@ 0x30
    player->playerRight=(player->x+(player->width / 2)-1);
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	681a      	ldr	r2, [r3, #0]
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	689b      	ldr	r3, [r3, #8]
 80013b0:	085b      	lsrs	r3, r3, #1
 80013b2:	4413      	add	r3, r2
 80013b4:	1e5a      	subs	r2, r3, #1
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	635a      	str	r2, [r3, #52]	@ 0x34
    player->playerUp=player->y-(player->height / 2);
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	685a      	ldr	r2, [r3, #4]
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	68db      	ldr	r3, [r3, #12]
 80013c2:	085b      	lsrs	r3, r3, #1
 80013c4:	1ad2      	subs	r2, r2, r3
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)-1);
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	685a      	ldr	r2, [r3, #4]
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	68db      	ldr	r3, [r3, #12]
 80013d2:	085b      	lsrs	r3, r3, #1
 80013d4:	4413      	add	r3, r2
 80013d6:	1e5a      	subs	r2, r3, #1
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	63da      	str	r2, [r3, #60]	@ 0x3c
    //FillRect(player->playerLeft , player->y, 1, 1, 0xFFFFFF); //Izquierda
    //FillRect(player->playerRight , player->y, 1, 1, 0x0420); //Derecha
    //FillRect(player->x , player->playerUp, 1, 1, 0xFFFFFF); //Arriba
    //FillRect(player->x , player->playerDown, 1, 1, 0x0420); //Abajo
}
 80013dc:	bf00      	nop
 80013de:	370c      	adds	r7, #12
 80013e0:	46bd      	mov	sp, r7
 80013e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e6:	4770      	bx	lr

080013e8 <PlayerHit>:

void PlayerHit(player* player, enemy_type1* enemy){
 80013e8:	b590      	push	{r4, r7, lr}
 80013ea:	b091      	sub	sp, #68	@ 0x44
 80013ec:	af02      	add	r7, sp, #8
 80013ee:	6078      	str	r0, [r7, #4]
 80013f0:	6039      	str	r1, [r7, #0]
	if (enemy->isAlive == 1){
 80013f2:	683b      	ldr	r3, [r7, #0]
 80013f4:	695b      	ldr	r3, [r3, #20]
 80013f6:	2b01      	cmp	r3, #1
 80013f8:	f040 810f 	bne.w	800161a <PlayerHit+0x232>
		// Verificar si le pego a un enemigo del tipo 1
		switch (player->direction){
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	6a1b      	ldr	r3, [r3, #32]
 8001400:	2b03      	cmp	r3, #3
 8001402:	f200 810a 	bhi.w	800161a <PlayerHit+0x232>
 8001406:	a201      	add	r2, pc, #4	@ (adr r2, 800140c <PlayerHit+0x24>)
 8001408:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800140c:	0800141d 	.word	0x0800141d
 8001410:	080014bd 	.word	0x080014bd
 8001414:	08001531 	.word	0x08001531
 8001418:	0800159f 	.word	0x0800159f
			case 0: { // Golpe hacia arriba
				int rangoY = player->y - 35;
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	685b      	ldr	r3, [r3, #4]
 8001420:	3b23      	subs	r3, #35	@ 0x23
 8001422:	613b      	str	r3, [r7, #16]
				int rangoX_i = player->x - 5;
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	681b      	ldr	r3, [r3, #0]
 8001428:	3b05      	subs	r3, #5
 800142a:	60fb      	str	r3, [r7, #12]
				int rangoX_s = player->x + 5;
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	3305      	adds	r3, #5
 8001432:	60bb      	str	r3, [r7, #8]

				if (rangoY <= enemy->e1Down && rangoY >= enemy->e1Up &&
 8001434:	683b      	ldr	r3, [r7, #0]
 8001436:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001438:	693b      	ldr	r3, [r7, #16]
 800143a:	429a      	cmp	r2, r3
 800143c:	f0c0 80e6 	bcc.w	800160c <PlayerHit+0x224>
 8001440:	683b      	ldr	r3, [r7, #0]
 8001442:	6a1a      	ldr	r2, [r3, #32]
 8001444:	693b      	ldr	r3, [r7, #16]
 8001446:	429a      	cmp	r2, r3
 8001448:	f200 80e0 	bhi.w	800160c <PlayerHit+0x224>
				   ((rangoX_s >= enemy->e1Left && rangoX_s <= enemy->e1Right) ||
 800144c:	683b      	ldr	r3, [r7, #0]
 800144e:	699a      	ldr	r2, [r3, #24]
 8001450:	68bb      	ldr	r3, [r7, #8]
				if (rangoY <= enemy->e1Down && rangoY >= enemy->e1Up &&
 8001452:	429a      	cmp	r2, r3
 8001454:	d804      	bhi.n	8001460 <PlayerHit+0x78>
				   ((rangoX_s >= enemy->e1Left && rangoX_s <= enemy->e1Right) ||
 8001456:	683b      	ldr	r3, [r7, #0]
 8001458:	69da      	ldr	r2, [r3, #28]
 800145a:	68bb      	ldr	r3, [r7, #8]
 800145c:	429a      	cmp	r2, r3
 800145e:	d20b      	bcs.n	8001478 <PlayerHit+0x90>
				    (rangoX_i <= enemy->e1Right && rangoX_i >= enemy->e1Left))) {
 8001460:	683b      	ldr	r3, [r7, #0]
 8001462:	69da      	ldr	r2, [r3, #28]
 8001464:	68fb      	ldr	r3, [r7, #12]
				   ((rangoX_s >= enemy->e1Left && rangoX_s <= enemy->e1Right) ||
 8001466:	429a      	cmp	r2, r3
 8001468:	f0c0 80d0 	bcc.w	800160c <PlayerHit+0x224>
				    (rangoX_i <= enemy->e1Right && rangoX_i >= enemy->e1Left))) {
 800146c:	683b      	ldr	r3, [r7, #0]
 800146e:	699a      	ldr	r2, [r3, #24]
 8001470:	68fb      	ldr	r3, [r7, #12]
 8001472:	429a      	cmp	r2, r3
 8001474:	f200 80ca 	bhi.w	800160c <PlayerHit+0x224>

					enemy->health -= 1;
 8001478:	683b      	ldr	r3, [r7, #0]
 800147a:	691b      	ldr	r3, [r3, #16]
 800147c:	1e5a      	subs	r2, r3, #1
 800147e:	683b      	ldr	r3, [r7, #0]
 8001480:	611a      	str	r2, [r3, #16]

					if (enemy->health == 0){
 8001482:	683b      	ldr	r3, [r7, #0]
 8001484:	691b      	ldr	r3, [r3, #16]
 8001486:	2b00      	cmp	r3, #0
 8001488:	f040 80c0 	bne.w	800160c <PlayerHit+0x224>
						enemy->isAlive = 0;
 800148c:	683b      	ldr	r3, [r7, #0]
 800148e:	2200      	movs	r2, #0
 8001490:	615a      	str	r2, [r3, #20]
						FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFFFFF);
 8001492:	683b      	ldr	r3, [r7, #0]
 8001494:	681a      	ldr	r2, [r3, #0]
 8001496:	683b      	ldr	r3, [r7, #0]
 8001498:	689b      	ldr	r3, [r3, #8]
 800149a:	085b      	lsrs	r3, r3, #1
 800149c:	1ad0      	subs	r0, r2, r3
 800149e:	683b      	ldr	r3, [r7, #0]
 80014a0:	685a      	ldr	r2, [r3, #4]
 80014a2:	683b      	ldr	r3, [r7, #0]
 80014a4:	68db      	ldr	r3, [r3, #12]
 80014a6:	085b      	lsrs	r3, r3, #1
 80014a8:	1ad1      	subs	r1, r2, r3
 80014aa:	683b      	ldr	r3, [r7, #0]
 80014ac:	689a      	ldr	r2, [r3, #8]
 80014ae:	683b      	ldr	r3, [r7, #0]
 80014b0:	68db      	ldr	r3, [r3, #12]
 80014b2:	4c5c      	ldr	r4, [pc, #368]	@ (8001624 <PlayerHit+0x23c>)
 80014b4:	9400      	str	r4, [sp, #0]
 80014b6:	f7ff fb29 	bl	8000b0c <FillRect>
					}
				}
				break;
 80014ba:	e0a7      	b.n	800160c <PlayerHit+0x224>
			}
			case 1: { // Golpe hacia la derecha
				int rangoX = player->x + 35;
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	681b      	ldr	r3, [r3, #0]
 80014c0:	3323      	adds	r3, #35	@ 0x23
 80014c2:	61fb      	str	r3, [r7, #28]
				int rangoY_i = player->y - 5;
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	685b      	ldr	r3, [r3, #4]
 80014c8:	3b05      	subs	r3, #5
 80014ca:	61bb      	str	r3, [r7, #24]
				int rangoY_s = player->y + 5;
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	685b      	ldr	r3, [r3, #4]
 80014d0:	3305      	adds	r3, #5
 80014d2:	617b      	str	r3, [r7, #20]

				if (rangoX >= enemy->e1Left && rangoX <= enemy->e1Right) {
 80014d4:	683b      	ldr	r3, [r7, #0]
 80014d6:	699a      	ldr	r2, [r3, #24]
 80014d8:	69fb      	ldr	r3, [r7, #28]
 80014da:	429a      	cmp	r2, r3
 80014dc:	f200 8098 	bhi.w	8001610 <PlayerHit+0x228>
 80014e0:	683b      	ldr	r3, [r7, #0]
 80014e2:	69da      	ldr	r2, [r3, #28]
 80014e4:	69fb      	ldr	r3, [r7, #28]
 80014e6:	429a      	cmp	r2, r3
 80014e8:	f0c0 8092 	bcc.w	8001610 <PlayerHit+0x228>

					enemy->health -= 1;
 80014ec:	683b      	ldr	r3, [r7, #0]
 80014ee:	691b      	ldr	r3, [r3, #16]
 80014f0:	1e5a      	subs	r2, r3, #1
 80014f2:	683b      	ldr	r3, [r7, #0]
 80014f4:	611a      	str	r2, [r3, #16]

					if (enemy->health == 0){
 80014f6:	683b      	ldr	r3, [r7, #0]
 80014f8:	691b      	ldr	r3, [r3, #16]
 80014fa:	2b00      	cmp	r3, #0
 80014fc:	f040 8088 	bne.w	8001610 <PlayerHit+0x228>
						enemy->isAlive = 0;
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	2200      	movs	r2, #0
 8001504:	615a      	str	r2, [r3, #20]
						FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFFFFF);
 8001506:	683b      	ldr	r3, [r7, #0]
 8001508:	681a      	ldr	r2, [r3, #0]
 800150a:	683b      	ldr	r3, [r7, #0]
 800150c:	689b      	ldr	r3, [r3, #8]
 800150e:	085b      	lsrs	r3, r3, #1
 8001510:	1ad0      	subs	r0, r2, r3
 8001512:	683b      	ldr	r3, [r7, #0]
 8001514:	685a      	ldr	r2, [r3, #4]
 8001516:	683b      	ldr	r3, [r7, #0]
 8001518:	68db      	ldr	r3, [r3, #12]
 800151a:	085b      	lsrs	r3, r3, #1
 800151c:	1ad1      	subs	r1, r2, r3
 800151e:	683b      	ldr	r3, [r7, #0]
 8001520:	689a      	ldr	r2, [r3, #8]
 8001522:	683b      	ldr	r3, [r7, #0]
 8001524:	68db      	ldr	r3, [r3, #12]
 8001526:	4c3f      	ldr	r4, [pc, #252]	@ (8001624 <PlayerHit+0x23c>)
 8001528:	9400      	str	r4, [sp, #0]
 800152a:	f7ff faef 	bl	8000b0c <FillRect>
					}
				}
				break;
 800152e:	e06f      	b.n	8001610 <PlayerHit+0x228>
			}
			case 2: { // Golpe hacia abajo
							int rangoY = player->y + 35;
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	685b      	ldr	r3, [r3, #4]
 8001534:	3323      	adds	r3, #35	@ 0x23
 8001536:	62bb      	str	r3, [r7, #40]	@ 0x28
							int rangoX_i = player->x - 5;
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	3b05      	subs	r3, #5
 800153e:	627b      	str	r3, [r7, #36]	@ 0x24
							int rangoX_s = player->x + 5;
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	3305      	adds	r3, #5
 8001546:	623b      	str	r3, [r7, #32]

							if (rangoY <= enemy->e1Down && rangoY >= enemy->e1Up) {
 8001548:	683b      	ldr	r3, [r7, #0]
 800154a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800154c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800154e:	429a      	cmp	r2, r3
 8001550:	d360      	bcc.n	8001614 <PlayerHit+0x22c>
 8001552:	683b      	ldr	r3, [r7, #0]
 8001554:	6a1a      	ldr	r2, [r3, #32]
 8001556:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001558:	429a      	cmp	r2, r3
 800155a:	d85b      	bhi.n	8001614 <PlayerHit+0x22c>

								enemy->health -= 1;
 800155c:	683b      	ldr	r3, [r7, #0]
 800155e:	691b      	ldr	r3, [r3, #16]
 8001560:	1e5a      	subs	r2, r3, #1
 8001562:	683b      	ldr	r3, [r7, #0]
 8001564:	611a      	str	r2, [r3, #16]

								if (enemy->health == 0){
 8001566:	683b      	ldr	r3, [r7, #0]
 8001568:	691b      	ldr	r3, [r3, #16]
 800156a:	2b00      	cmp	r3, #0
 800156c:	d152      	bne.n	8001614 <PlayerHit+0x22c>
									enemy->isAlive = 0;
 800156e:	683b      	ldr	r3, [r7, #0]
 8001570:	2200      	movs	r2, #0
 8001572:	615a      	str	r2, [r3, #20]
									FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFFFFF);
 8001574:	683b      	ldr	r3, [r7, #0]
 8001576:	681a      	ldr	r2, [r3, #0]
 8001578:	683b      	ldr	r3, [r7, #0]
 800157a:	689b      	ldr	r3, [r3, #8]
 800157c:	085b      	lsrs	r3, r3, #1
 800157e:	1ad0      	subs	r0, r2, r3
 8001580:	683b      	ldr	r3, [r7, #0]
 8001582:	685a      	ldr	r2, [r3, #4]
 8001584:	683b      	ldr	r3, [r7, #0]
 8001586:	68db      	ldr	r3, [r3, #12]
 8001588:	085b      	lsrs	r3, r3, #1
 800158a:	1ad1      	subs	r1, r2, r3
 800158c:	683b      	ldr	r3, [r7, #0]
 800158e:	689a      	ldr	r2, [r3, #8]
 8001590:	683b      	ldr	r3, [r7, #0]
 8001592:	68db      	ldr	r3, [r3, #12]
 8001594:	4c23      	ldr	r4, [pc, #140]	@ (8001624 <PlayerHit+0x23c>)
 8001596:	9400      	str	r4, [sp, #0]
 8001598:	f7ff fab8 	bl	8000b0c <FillRect>
								}
							}
							break;
 800159c:	e03a      	b.n	8001614 <PlayerHit+0x22c>
			}
			case 3: { // Golpe hacia la izquierda
							int rangoX = player->x - 35;
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	3b23      	subs	r3, #35	@ 0x23
 80015a4:	637b      	str	r3, [r7, #52]	@ 0x34
							int rangoY_i = player->y - 5;
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	685b      	ldr	r3, [r3, #4]
 80015aa:	3b05      	subs	r3, #5
 80015ac:	633b      	str	r3, [r7, #48]	@ 0x30
							int rangoY_s = player->y + 5;
 80015ae:	687b      	ldr	r3, [r7, #4]
 80015b0:	685b      	ldr	r3, [r3, #4]
 80015b2:	3305      	adds	r3, #5
 80015b4:	62fb      	str	r3, [r7, #44]	@ 0x2c

							if (rangoX >= enemy->e1Left && rangoX <= enemy->e1Right) {
 80015b6:	683b      	ldr	r3, [r7, #0]
 80015b8:	699a      	ldr	r2, [r3, #24]
 80015ba:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80015bc:	429a      	cmp	r2, r3
 80015be:	d82b      	bhi.n	8001618 <PlayerHit+0x230>
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	69da      	ldr	r2, [r3, #28]
 80015c4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80015c6:	429a      	cmp	r2, r3
 80015c8:	d326      	bcc.n	8001618 <PlayerHit+0x230>

								enemy->health -= 1;
 80015ca:	683b      	ldr	r3, [r7, #0]
 80015cc:	691b      	ldr	r3, [r3, #16]
 80015ce:	1e5a      	subs	r2, r3, #1
 80015d0:	683b      	ldr	r3, [r7, #0]
 80015d2:	611a      	str	r2, [r3, #16]

								if (enemy->health == 0){
 80015d4:	683b      	ldr	r3, [r7, #0]
 80015d6:	691b      	ldr	r3, [r3, #16]
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d11d      	bne.n	8001618 <PlayerHit+0x230>
									enemy->isAlive = 0;
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	2200      	movs	r2, #0
 80015e0:	615a      	str	r2, [r3, #20]
									FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFFFFF);
 80015e2:	683b      	ldr	r3, [r7, #0]
 80015e4:	681a      	ldr	r2, [r3, #0]
 80015e6:	683b      	ldr	r3, [r7, #0]
 80015e8:	689b      	ldr	r3, [r3, #8]
 80015ea:	085b      	lsrs	r3, r3, #1
 80015ec:	1ad0      	subs	r0, r2, r3
 80015ee:	683b      	ldr	r3, [r7, #0]
 80015f0:	685a      	ldr	r2, [r3, #4]
 80015f2:	683b      	ldr	r3, [r7, #0]
 80015f4:	68db      	ldr	r3, [r3, #12]
 80015f6:	085b      	lsrs	r3, r3, #1
 80015f8:	1ad1      	subs	r1, r2, r3
 80015fa:	683b      	ldr	r3, [r7, #0]
 80015fc:	689a      	ldr	r2, [r3, #8]
 80015fe:	683b      	ldr	r3, [r7, #0]
 8001600:	68db      	ldr	r3, [r3, #12]
 8001602:	4c08      	ldr	r4, [pc, #32]	@ (8001624 <PlayerHit+0x23c>)
 8001604:	9400      	str	r4, [sp, #0]
 8001606:	f7ff fa81 	bl	8000b0c <FillRect>
								}
							}
							break;
 800160a:	e005      	b.n	8001618 <PlayerHit+0x230>
				break;
 800160c:	bf00      	nop
 800160e:	e004      	b.n	800161a <PlayerHit+0x232>
				break;
 8001610:	bf00      	nop
 8001612:	e002      	b.n	800161a <PlayerHit+0x232>
							break;
 8001614:	bf00      	nop
 8001616:	e000      	b.n	800161a <PlayerHit+0x232>
							break;
 8001618:	bf00      	nop
						}
		}
	}
}
 800161a:	bf00      	nop
 800161c:	373c      	adds	r7, #60	@ 0x3c
 800161e:	46bd      	mov	sp, r7
 8001620:	bd90      	pop	{r4, r7, pc}
 8001622:	bf00      	nop
 8001624:	000fffff 	.word	0x000fffff

08001628 <player1WalkUp>:

void player1WalkUp(player* player){
 8001628:	b5b0      	push	{r4, r5, r7, lr}
 800162a:	b088      	sub	sp, #32
 800162c:	af06      	add	r7, sp, #24
 800162e:	6078      	str	r0, [r7, #4]
	LCD_Sprite(p1.x - (p1.width / 2),  p1.y - (p1.height / 2), p1.width, p1.height, LinkWalkUp191x26, 10, P1_WalkUp, 0, 0);
 8001630:	4b13      	ldr	r3, [pc, #76]	@ (8001680 <player1WalkUp+0x58>)
 8001632:	681a      	ldr	r2, [r3, #0]
 8001634:	4b12      	ldr	r3, [pc, #72]	@ (8001680 <player1WalkUp+0x58>)
 8001636:	689b      	ldr	r3, [r3, #8]
 8001638:	085b      	lsrs	r3, r3, #1
 800163a:	1ad3      	subs	r3, r2, r3
 800163c:	4618      	mov	r0, r3
 800163e:	4b10      	ldr	r3, [pc, #64]	@ (8001680 <player1WalkUp+0x58>)
 8001640:	685a      	ldr	r2, [r3, #4]
 8001642:	4b0f      	ldr	r3, [pc, #60]	@ (8001680 <player1WalkUp+0x58>)
 8001644:	68db      	ldr	r3, [r3, #12]
 8001646:	085b      	lsrs	r3, r3, #1
 8001648:	1ad3      	subs	r3, r2, r3
 800164a:	4619      	mov	r1, r3
 800164c:	4b0c      	ldr	r3, [pc, #48]	@ (8001680 <player1WalkUp+0x58>)
 800164e:	689b      	ldr	r3, [r3, #8]
 8001650:	461c      	mov	r4, r3
 8001652:	4b0b      	ldr	r3, [pc, #44]	@ (8001680 <player1WalkUp+0x58>)
 8001654:	68db      	ldr	r3, [r3, #12]
 8001656:	461d      	mov	r5, r3
 8001658:	4b0a      	ldr	r3, [pc, #40]	@ (8001684 <player1WalkUp+0x5c>)
 800165a:	781b      	ldrb	r3, [r3, #0]
 800165c:	461a      	mov	r2, r3
 800165e:	2300      	movs	r3, #0
 8001660:	9304      	str	r3, [sp, #16]
 8001662:	2300      	movs	r3, #0
 8001664:	9303      	str	r3, [sp, #12]
 8001666:	9202      	str	r2, [sp, #8]
 8001668:	230a      	movs	r3, #10
 800166a:	9301      	str	r3, [sp, #4]
 800166c:	4b06      	ldr	r3, [pc, #24]	@ (8001688 <player1WalkUp+0x60>)
 800166e:	9300      	str	r3, [sp, #0]
 8001670:	462b      	mov	r3, r5
 8001672:	4622      	mov	r2, r4
 8001674:	f7ff fafe 	bl	8000c74 <LCD_Sprite>
}
 8001678:	bf00      	nop
 800167a:	3708      	adds	r7, #8
 800167c:	46bd      	mov	sp, r7
 800167e:	bdb0      	pop	{r4, r5, r7, pc}
 8001680:	200028e8 	.word	0x200028e8
 8001684:	200029a2 	.word	0x200029a2
 8001688:	2000033c 	.word	0x2000033c

0800168c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800168c:	b580      	push	{r7, lr}
 800168e:	b086      	sub	sp, #24
 8001690:	af06      	add	r7, sp, #24
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001692:	f000 fd69 	bl	8002168 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001696:	f000 f873 	bl	8001780 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800169a:	f000 f967 	bl	800196c <MX_GPIO_Init>
  MX_SPI1_Init();
 800169e:	f000 f8db 	bl	8001858 <MX_SPI1_Init>
  MX_USART2_UART_Init();
 80016a2:	f000 f939 	bl	8001918 <MX_USART2_UART_Init>
  MX_UART5_Init();
 80016a6:	f000 f90d 	bl	80018c4 <MX_UART5_Init>
  /* USER CODE BEGIN 2 */

	LCD_Init();
 80016aa:	f7fe ff23 	bl	80004f4 <LCD_Init>
	LCD_Clear(0x00);
 80016ae:	2000      	movs	r0, #0
 80016b0:	f7ff f9a8 	bl	8000a04 <LCD_Clear>

	//Fondo
	FillRect(0, 0, 319, 239, 0xFFFF);
 80016b4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80016b8:	9300      	str	r3, [sp, #0]
 80016ba:	23ef      	movs	r3, #239	@ 0xef
 80016bc:	f240 123f 	movw	r2, #319	@ 0x13f
 80016c0:	2100      	movs	r1, #0
 80016c2:	2000      	movs	r0, #0
 80016c4:	f7ff fa22 	bl	8000b0c <FillRect>
	//FillRect(0, 0, 319, 206, 0x1911);

	//LCD_Print("Hola Mundo", 20, 100, 1, 0x001F, 0xCAB9);

	  // Activar bandera interrupcion
	  HAL_UART_Receive_IT(&huart2, buffer, 1);
 80016c8:	2201      	movs	r2, #1
 80016ca:	4925      	ldr	r1, [pc, #148]	@ (8001760 <main+0xd4>)
 80016cc:	4825      	ldr	r0, [pc, #148]	@ (8001764 <main+0xd8>)
 80016ce:	f001 ff6e 	bl	80035ae <HAL_UART_Receive_IT>
	  modo=1;
 80016d2:	4b25      	ldr	r3, [pc, #148]	@ (8001768 <main+0xdc>)
 80016d4:	2201      	movs	r2, #1
 80016d6:	701a      	strb	r2, [r3, #0]
	  if (modo==1){
 80016d8:	4b23      	ldr	r3, [pc, #140]	@ (8001768 <main+0xdc>)
 80016da:	781b      	ldrb	r3, [r3, #0]
 80016dc:	2b01      	cmp	r3, #1
 80016de:	d132      	bne.n	8001746 <main+0xba>
		fase_p1=1;
 80016e0:	4b22      	ldr	r3, [pc, #136]	@ (800176c <main+0xe0>)
 80016e2:	2201      	movs	r2, #1
 80016e4:	701a      	strb	r2, [r3, #0]
	    //Inicializar Jugador 1
		initPlayer(&p1, 160, 200, 18, 26, 5, 3, 320, 240);
 80016e6:	23f0      	movs	r3, #240	@ 0xf0
 80016e8:	9304      	str	r3, [sp, #16]
 80016ea:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80016ee:	9303      	str	r3, [sp, #12]
 80016f0:	2303      	movs	r3, #3
 80016f2:	9302      	str	r3, [sp, #8]
 80016f4:	2305      	movs	r3, #5
 80016f6:	9301      	str	r3, [sp, #4]
 80016f8:	231a      	movs	r3, #26
 80016fa:	9300      	str	r3, [sp, #0]
 80016fc:	2312      	movs	r3, #18
 80016fe:	22c8      	movs	r2, #200	@ 0xc8
 8001700:	21a0      	movs	r1, #160	@ 0xa0
 8001702:	481b      	ldr	r0, [pc, #108]	@ (8001770 <main+0xe4>)
 8001704:	f7ff fd18 	bl	8001138 <initPlayer>
		//Inicializar enemigo 1
		initEnemy1(&e1_1, 40, 80, 20, 20, 3);
 8001708:	2303      	movs	r3, #3
 800170a:	9301      	str	r3, [sp, #4]
 800170c:	2314      	movs	r3, #20
 800170e:	9300      	str	r3, [sp, #0]
 8001710:	2314      	movs	r3, #20
 8001712:	2250      	movs	r2, #80	@ 0x50
 8001714:	2128      	movs	r1, #40	@ 0x28
 8001716:	4817      	ldr	r0, [pc, #92]	@ (8001774 <main+0xe8>)
 8001718:	f7ff fb58 	bl	8000dcc <initEnemy1>
		//Inicializar enemigo 2
		initEnemy1(&e1_2, 160, 80, 20, 20, 3);
 800171c:	2303      	movs	r3, #3
 800171e:	9301      	str	r3, [sp, #4]
 8001720:	2314      	movs	r3, #20
 8001722:	9300      	str	r3, [sp, #0]
 8001724:	2314      	movs	r3, #20
 8001726:	2250      	movs	r2, #80	@ 0x50
 8001728:	21a0      	movs	r1, #160	@ 0xa0
 800172a:	4813      	ldr	r0, [pc, #76]	@ (8001778 <main+0xec>)
 800172c:	f7ff fb4e 	bl	8000dcc <initEnemy1>
		//Inicializar enemigo 3
		initEnemy1(&e1_3, 280, 80, 20, 20, 3);}
 8001730:	2303      	movs	r3, #3
 8001732:	9301      	str	r3, [sp, #4]
 8001734:	2314      	movs	r3, #20
 8001736:	9300      	str	r3, [sp, #0]
 8001738:	2314      	movs	r3, #20
 800173a:	2250      	movs	r2, #80	@ 0x50
 800173c:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8001740:	480e      	ldr	r0, [pc, #56]	@ (800177c <main+0xf0>)
 8001742:	f7ff fb43 	bl	8000dcc <initEnemy1>
	  if (modo==2){
 8001746:	4b08      	ldr	r3, [pc, #32]	@ (8001768 <main+0xdc>)
 8001748:	781b      	ldrb	r3, [r3, #0]
 800174a:	2b02      	cmp	r3, #2
 800174c:	d106      	bne.n	800175c <main+0xd0>
		//Linea de en medio
		V_line(160, 0, 240, 0x0000);
 800174e:	2300      	movs	r3, #0
 8001750:	22f0      	movs	r2, #240	@ 0xf0
 8001752:	2100      	movs	r1, #0
 8001754:	20a0      	movs	r0, #160	@ 0xa0
 8001756:	f7ff f999 	bl	8000a8c <V_line>
	  }
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
 800175a:	bf00      	nop
 800175c:	bf00      	nop
 800175e:	e7fd      	b.n	800175c <main+0xd0>
 8001760:	200028dc 	.word	0x200028dc
 8001764:	20002894 	.word	0x20002894
 8001768:	200029a0 	.word	0x200029a0
 800176c:	200029a1 	.word	0x200029a1
 8001770:	200028e8 	.word	0x200028e8
 8001774:	20002928 	.word	0x20002928
 8001778:	20002950 	.word	0x20002950
 800177c:	20002978 	.word	0x20002978

08001780 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001780:	b580      	push	{r7, lr}
 8001782:	b094      	sub	sp, #80	@ 0x50
 8001784:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001786:	f107 031c 	add.w	r3, r7, #28
 800178a:	2234      	movs	r2, #52	@ 0x34
 800178c:	2100      	movs	r1, #0
 800178e:	4618      	mov	r0, r3
 8001790:	f002 fe30 	bl	80043f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001794:	f107 0308 	add.w	r3, r7, #8
 8001798:	2200      	movs	r2, #0
 800179a:	601a      	str	r2, [r3, #0]
 800179c:	605a      	str	r2, [r3, #4]
 800179e:	609a      	str	r2, [r3, #8]
 80017a0:	60da      	str	r2, [r3, #12]
 80017a2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80017a4:	2300      	movs	r3, #0
 80017a6:	607b      	str	r3, [r7, #4]
 80017a8:	4b29      	ldr	r3, [pc, #164]	@ (8001850 <SystemClock_Config+0xd0>)
 80017aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017ac:	4a28      	ldr	r2, [pc, #160]	@ (8001850 <SystemClock_Config+0xd0>)
 80017ae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80017b2:	6413      	str	r3, [r2, #64]	@ 0x40
 80017b4:	4b26      	ldr	r3, [pc, #152]	@ (8001850 <SystemClock_Config+0xd0>)
 80017b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017b8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80017bc:	607b      	str	r3, [r7, #4]
 80017be:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80017c0:	2300      	movs	r3, #0
 80017c2:	603b      	str	r3, [r7, #0]
 80017c4:	4b23      	ldr	r3, [pc, #140]	@ (8001854 <SystemClock_Config+0xd4>)
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 80017cc:	4a21      	ldr	r2, [pc, #132]	@ (8001854 <SystemClock_Config+0xd4>)
 80017ce:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80017d2:	6013      	str	r3, [r2, #0]
 80017d4:	4b1f      	ldr	r3, [pc, #124]	@ (8001854 <SystemClock_Config+0xd4>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80017dc:	603b      	str	r3, [r7, #0]
 80017de:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80017e0:	2302      	movs	r3, #2
 80017e2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80017e4:	2301      	movs	r3, #1
 80017e6:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80017e8:	2310      	movs	r3, #16
 80017ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017ec:	2302      	movs	r3, #2
 80017ee:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80017f0:	2300      	movs	r3, #0
 80017f2:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80017f4:	2308      	movs	r3, #8
 80017f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 80017f8:	2350      	movs	r3, #80	@ 0x50
 80017fa:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80017fc:	2302      	movs	r3, #2
 80017fe:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001800:	2302      	movs	r3, #2
 8001802:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001804:	2302      	movs	r3, #2
 8001806:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001808:	f107 031c 	add.w	r3, r7, #28
 800180c:	4618      	mov	r0, r3
 800180e:	f001 fb57 	bl	8002ec0 <HAL_RCC_OscConfig>
 8001812:	4603      	mov	r3, r0
 8001814:	2b00      	cmp	r3, #0
 8001816:	d001      	beq.n	800181c <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001818:	f000 fb02 	bl	8001e20 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800181c:	230f      	movs	r3, #15
 800181e:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001820:	2302      	movs	r3, #2
 8001822:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001824:	2300      	movs	r3, #0
 8001826:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001828:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800182c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800182e:	2300      	movs	r3, #0
 8001830:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001832:	f107 0308 	add.w	r3, r7, #8
 8001836:	2102      	movs	r1, #2
 8001838:	4618      	mov	r0, r3
 800183a:	f001 f87d 	bl	8002938 <HAL_RCC_ClockConfig>
 800183e:	4603      	mov	r3, r0
 8001840:	2b00      	cmp	r3, #0
 8001842:	d001      	beq.n	8001848 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8001844:	f000 faec 	bl	8001e20 <Error_Handler>
  }
}
 8001848:	bf00      	nop
 800184a:	3750      	adds	r7, #80	@ 0x50
 800184c:	46bd      	mov	sp, r7
 800184e:	bd80      	pop	{r7, pc}
 8001850:	40023800 	.word	0x40023800
 8001854:	40007000 	.word	0x40007000

08001858 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800185c:	4b17      	ldr	r3, [pc, #92]	@ (80018bc <MX_SPI1_Init+0x64>)
 800185e:	4a18      	ldr	r2, [pc, #96]	@ (80018c0 <MX_SPI1_Init+0x68>)
 8001860:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001862:	4b16      	ldr	r3, [pc, #88]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001864:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001868:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800186a:	4b14      	ldr	r3, [pc, #80]	@ (80018bc <MX_SPI1_Init+0x64>)
 800186c:	2200      	movs	r2, #0
 800186e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8001870:	4b12      	ldr	r3, [pc, #72]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001872:	2200      	movs	r2, #0
 8001874:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001876:	4b11      	ldr	r3, [pc, #68]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001878:	2200      	movs	r2, #0
 800187a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800187c:	4b0f      	ldr	r3, [pc, #60]	@ (80018bc <MX_SPI1_Init+0x64>)
 800187e:	2200      	movs	r2, #0
 8001880:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001882:	4b0e      	ldr	r3, [pc, #56]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001884:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001888:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800188a:	4b0c      	ldr	r3, [pc, #48]	@ (80018bc <MX_SPI1_Init+0x64>)
 800188c:	2200      	movs	r2, #0
 800188e:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001890:	4b0a      	ldr	r3, [pc, #40]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001892:	2200      	movs	r2, #0
 8001894:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001896:	4b09      	ldr	r3, [pc, #36]	@ (80018bc <MX_SPI1_Init+0x64>)
 8001898:	2200      	movs	r2, #0
 800189a:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800189c:	4b07      	ldr	r3, [pc, #28]	@ (80018bc <MX_SPI1_Init+0x64>)
 800189e:	2200      	movs	r2, #0
 80018a0:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 80018a2:	4b06      	ldr	r3, [pc, #24]	@ (80018bc <MX_SPI1_Init+0x64>)
 80018a4:	220a      	movs	r2, #10
 80018a6:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80018a8:	4804      	ldr	r0, [pc, #16]	@ (80018bc <MX_SPI1_Init+0x64>)
 80018aa:	f001 fda7 	bl	80033fc <HAL_SPI_Init>
 80018ae:	4603      	mov	r3, r0
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d001      	beq.n	80018b8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80018b4:	f000 fab4 	bl	8001e20 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80018b8:	bf00      	nop
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	200027f4 	.word	0x200027f4
 80018c0:	40013000 	.word	0x40013000

080018c4 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80018c4:	b580      	push	{r7, lr}
 80018c6:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80018c8:	4b11      	ldr	r3, [pc, #68]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018ca:	4a12      	ldr	r2, [pc, #72]	@ (8001914 <MX_UART5_Init+0x50>)
 80018cc:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 115200;
 80018ce:	4b10      	ldr	r3, [pc, #64]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018d0:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80018d4:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80018d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018d8:	2200      	movs	r2, #0
 80018da:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80018dc:	4b0c      	ldr	r3, [pc, #48]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018de:	2200      	movs	r2, #0
 80018e0:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80018e2:	4b0b      	ldr	r3, [pc, #44]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018e4:	2200      	movs	r2, #0
 80018e6:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80018e8:	4b09      	ldr	r3, [pc, #36]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018ea:	220c      	movs	r2, #12
 80018ec:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018ee:	4b08      	ldr	r3, [pc, #32]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018f0:	2200      	movs	r2, #0
 80018f2:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80018f4:	4b06      	ldr	r3, [pc, #24]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018f6:	2200      	movs	r2, #0
 80018f8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80018fa:	4805      	ldr	r0, [pc, #20]	@ (8001910 <MX_UART5_Init+0x4c>)
 80018fc:	f001 fe07 	bl	800350e <HAL_UART_Init>
 8001900:	4603      	mov	r3, r0
 8001902:	2b00      	cmp	r3, #0
 8001904:	d001      	beq.n	800190a <MX_UART5_Init+0x46>
  {
    Error_Handler();
 8001906:	f000 fa8b 	bl	8001e20 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 800190a:	bf00      	nop
 800190c:	bd80      	pop	{r7, pc}
 800190e:	bf00      	nop
 8001910:	2000284c 	.word	0x2000284c
 8001914:	40005000 	.word	0x40005000

08001918 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001918:	b580      	push	{r7, lr}
 800191a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800191c:	4b11      	ldr	r3, [pc, #68]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 800191e:	4a12      	ldr	r2, [pc, #72]	@ (8001968 <MX_USART2_UART_Init+0x50>)
 8001920:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001922:	4b10      	ldr	r3, [pc, #64]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 8001924:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001928:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800192a:	4b0e      	ldr	r3, [pc, #56]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 800192c:	2200      	movs	r2, #0
 800192e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001930:	4b0c      	ldr	r3, [pc, #48]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 8001932:	2200      	movs	r2, #0
 8001934:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001936:	4b0b      	ldr	r3, [pc, #44]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 8001938:	2200      	movs	r2, #0
 800193a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800193c:	4b09      	ldr	r3, [pc, #36]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 800193e:	220c      	movs	r2, #12
 8001940:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001942:	4b08      	ldr	r3, [pc, #32]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 8001944:	2200      	movs	r2, #0
 8001946:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001948:	4b06      	ldr	r3, [pc, #24]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 800194a:	2200      	movs	r2, #0
 800194c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800194e:	4805      	ldr	r0, [pc, #20]	@ (8001964 <MX_USART2_UART_Init+0x4c>)
 8001950:	f001 fddd 	bl	800350e <HAL_UART_Init>
 8001954:	4603      	mov	r3, r0
 8001956:	2b00      	cmp	r3, #0
 8001958:	d001      	beq.n	800195e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800195a:	f000 fa61 	bl	8001e20 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800195e:	bf00      	nop
 8001960:	bd80      	pop	{r7, pc}
 8001962:	bf00      	nop
 8001964:	20002894 	.word	0x20002894
 8001968:	40004400 	.word	0x40004400

0800196c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800196c:	b580      	push	{r7, lr}
 800196e:	b08a      	sub	sp, #40	@ 0x28
 8001970:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001972:	f107 0314 	add.w	r3, r7, #20
 8001976:	2200      	movs	r2, #0
 8001978:	601a      	str	r2, [r3, #0]
 800197a:	605a      	str	r2, [r3, #4]
 800197c:	609a      	str	r2, [r3, #8]
 800197e:	60da      	str	r2, [r3, #12]
 8001980:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001982:	2300      	movs	r3, #0
 8001984:	613b      	str	r3, [r7, #16]
 8001986:	4b42      	ldr	r3, [pc, #264]	@ (8001a90 <MX_GPIO_Init+0x124>)
 8001988:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800198a:	4a41      	ldr	r2, [pc, #260]	@ (8001a90 <MX_GPIO_Init+0x124>)
 800198c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001990:	6313      	str	r3, [r2, #48]	@ 0x30
 8001992:	4b3f      	ldr	r3, [pc, #252]	@ (8001a90 <MX_GPIO_Init+0x124>)
 8001994:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001996:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800199a:	613b      	str	r3, [r7, #16]
 800199c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800199e:	2300      	movs	r3, #0
 80019a0:	60fb      	str	r3, [r7, #12]
 80019a2:	4b3b      	ldr	r3, [pc, #236]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019a6:	4a3a      	ldr	r2, [pc, #232]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019a8:	f043 0304 	orr.w	r3, r3, #4
 80019ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ae:	4b38      	ldr	r3, [pc, #224]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019b2:	f003 0304 	and.w	r3, r3, #4
 80019b6:	60fb      	str	r3, [r7, #12]
 80019b8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80019ba:	2300      	movs	r3, #0
 80019bc:	60bb      	str	r3, [r7, #8]
 80019be:	4b34      	ldr	r3, [pc, #208]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019c2:	4a33      	ldr	r2, [pc, #204]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019c4:	f043 0301 	orr.w	r3, r3, #1
 80019c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ca:	4b31      	ldr	r3, [pc, #196]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ce:	f003 0301 	and.w	r3, r3, #1
 80019d2:	60bb      	str	r3, [r7, #8]
 80019d4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019d6:	2300      	movs	r3, #0
 80019d8:	607b      	str	r3, [r7, #4]
 80019da:	4b2d      	ldr	r3, [pc, #180]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019de:	4a2c      	ldr	r2, [pc, #176]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019e0:	f043 0302 	orr.w	r3, r3, #2
 80019e4:	6313      	str	r3, [r2, #48]	@ 0x30
 80019e6:	4b2a      	ldr	r3, [pc, #168]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ea:	f003 0302 	and.w	r3, r3, #2
 80019ee:	607b      	str	r3, [r7, #4]
 80019f0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80019f2:	2300      	movs	r3, #0
 80019f4:	603b      	str	r3, [r7, #0]
 80019f6:	4b26      	ldr	r3, [pc, #152]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019fa:	4a25      	ldr	r2, [pc, #148]	@ (8001a90 <MX_GPIO_Init+0x124>)
 80019fc:	f043 0308 	orr.w	r3, r3, #8
 8001a00:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a02:	4b23      	ldr	r3, [pc, #140]	@ (8001a90 <MX_GPIO_Init+0x124>)
 8001a04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a06:	f003 0308 	and.w	r3, r3, #8
 8001a0a:	603b      	str	r3, [r7, #0]
 8001a0c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 8001a0e:	2200      	movs	r2, #0
 8001a10:	2182      	movs	r1, #130	@ 0x82
 8001a12:	4820      	ldr	r0, [pc, #128]	@ (8001a94 <MX_GPIO_Init+0x128>)
 8001a14:	f000 ff76 	bl	8002904 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8001a18:	2200      	movs	r2, #0
 8001a1a:	f240 7113 	movw	r1, #1811	@ 0x713
 8001a1e:	481e      	ldr	r0, [pc, #120]	@ (8001a98 <MX_GPIO_Init+0x12c>)
 8001a20:	f000 ff70 	bl	8002904 <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8001a24:	2200      	movs	r2, #0
 8001a26:	f240 4179 	movw	r1, #1145	@ 0x479
 8001a2a:	481c      	ldr	r0, [pc, #112]	@ (8001a9c <MX_GPIO_Init+0x130>)
 8001a2c:	f000 ff6a 	bl	8002904 <HAL_GPIO_WritePin>
                          |LCD_D4_Pin|SD_SS_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 8001a30:	2382      	movs	r3, #130	@ 0x82
 8001a32:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a34:	2301      	movs	r3, #1
 8001a36:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a38:	2300      	movs	r3, #0
 8001a3a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a3c:	2302      	movs	r3, #2
 8001a3e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a40:	f107 0314 	add.w	r3, r7, #20
 8001a44:	4619      	mov	r1, r3
 8001a46:	4813      	ldr	r0, [pc, #76]	@ (8001a94 <MX_GPIO_Init+0x128>)
 8001a48:	f000 fdc8 	bl	80025dc <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8001a4c:	f240 7313 	movw	r3, #1811	@ 0x713
 8001a50:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a52:	2301      	movs	r3, #1
 8001a54:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a56:	2300      	movs	r3, #0
 8001a58:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a5a:	2302      	movs	r3, #2
 8001a5c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a5e:	f107 0314 	add.w	r3, r7, #20
 8001a62:	4619      	mov	r1, r3
 8001a64:	480c      	ldr	r0, [pc, #48]	@ (8001a98 <MX_GPIO_Init+0x12c>)
 8001a66:	f000 fdb9 	bl	80025dc <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin SD_SS_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8001a6a:	f240 4379 	movw	r3, #1145	@ 0x479
 8001a6e:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin|SD_SS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a70:	2301      	movs	r3, #1
 8001a72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a74:	2300      	movs	r3, #0
 8001a76:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a78:	2302      	movs	r3, #2
 8001a7a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a7c:	f107 0314 	add.w	r3, r7, #20
 8001a80:	4619      	mov	r1, r3
 8001a82:	4806      	ldr	r0, [pc, #24]	@ (8001a9c <MX_GPIO_Init+0x130>)
 8001a84:	f000 fdaa 	bl	80025dc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001a88:	bf00      	nop
 8001a8a:	3728      	adds	r7, #40	@ 0x28
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	bd80      	pop	{r7, pc}
 8001a90:	40023800 	.word	0x40023800
 8001a94:	40020800 	.word	0x40020800
 8001a98:	40020000 	.word	0x40020000
 8001a9c:	40020400 	.word	0x40020400

08001aa0 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001aa0:	b590      	push	{r4, r7, lr}
 8001aa2:	b085      	sub	sp, #20
 8001aa4:	af02      	add	r7, sp, #8
 8001aa6:	6078      	str	r0, [r7, #4]
	if(buffer[0] == 'd'){
 8001aa8:	4b84      	ldr	r3, [pc, #528]	@ (8001cbc <HAL_UART_RxCpltCallback+0x21c>)
 8001aaa:	781b      	ldrb	r3, [r3, #0]
 8001aac:	2b64      	cmp	r3, #100	@ 0x64
 8001aae:	d162      	bne.n	8001b76 <HAL_UART_RxCpltCallback+0xd6>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 8001ab0:	4b83      	ldr	r3, [pc, #524]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ab2:	681a      	ldr	r2, [r3, #0]
 8001ab4:	4b82      	ldr	r3, [pc, #520]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ab6:	689b      	ldr	r3, [r3, #8]
 8001ab8:	085b      	lsrs	r3, r3, #1
 8001aba:	1ad0      	subs	r0, r2, r3
 8001abc:	4b80      	ldr	r3, [pc, #512]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001abe:	685a      	ldr	r2, [r3, #4]
 8001ac0:	4b7f      	ldr	r3, [pc, #508]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ac2:	68db      	ldr	r3, [r3, #12]
 8001ac4:	085b      	lsrs	r3, r3, #1
 8001ac6:	1ad1      	subs	r1, r2, r3
 8001ac8:	4b7d      	ldr	r3, [pc, #500]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001aca:	689a      	ldr	r2, [r3, #8]
 8001acc:	4b7c      	ldr	r3, [pc, #496]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ace:	68db      	ldr	r3, [r3, #12]
 8001ad0:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001ad4:	9400      	str	r4, [sp, #0]
 8001ad6:	f7ff f819 	bl	8000b0c <FillRect>
		p1.direction=2;
 8001ada:	4b79      	ldr	r3, [pc, #484]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001adc:	2202      	movs	r2, #2
 8001ade:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p1, 0)) {
 8001ae0:	2100      	movs	r1, #0
 8001ae2:	4877      	ldr	r0, [pc, #476]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ae4:	f7ff fbd8 	bl	8001298 <playerCanMove>
 8001ae8:	4603      	mov	r3, r0
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d025      	beq.n	8001b3a <HAL_UART_RxCpltCallback+0x9a>
		    p1.y=p1.y+p1.speed;
 8001aee:	4b74      	ldr	r3, [pc, #464]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001af0:	685a      	ldr	r2, [r3, #4]
 8001af2:	4b73      	ldr	r3, [pc, #460]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001af4:	691b      	ldr	r3, [r3, #16]
 8001af6:	4413      	add	r3, r2
 8001af8:	4a71      	ldr	r2, [pc, #452]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001afa:	6053      	str	r3, [r2, #4]
		    FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001afc:	4b70      	ldr	r3, [pc, #448]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001afe:	681a      	ldr	r2, [r3, #0]
 8001b00:	4b6f      	ldr	r3, [pc, #444]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b02:	689b      	ldr	r3, [r3, #8]
 8001b04:	085b      	lsrs	r3, r3, #1
 8001b06:	1ad0      	subs	r0, r2, r3
 8001b08:	4b6d      	ldr	r3, [pc, #436]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b0a:	685a      	ldr	r2, [r3, #4]
 8001b0c:	4b6c      	ldr	r3, [pc, #432]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b0e:	68db      	ldr	r3, [r3, #12]
 8001b10:	085b      	lsrs	r3, r3, #1
 8001b12:	1ad1      	subs	r1, r2, r3
 8001b14:	4b6a      	ldr	r3, [pc, #424]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b16:	689a      	ldr	r2, [r3, #8]
 8001b18:	4b69      	ldr	r3, [pc, #420]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b1a:	68db      	ldr	r3, [r3, #12]
 8001b1c:	4c69      	ldr	r4, [pc, #420]	@ (8001cc4 <HAL_UART_RxCpltCallback+0x224>)
 8001b1e:	9400      	str	r4, [sp, #0]
 8001b20:	f7fe fff4 	bl	8000b0c <FillRect>
		    FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001b24:	4b66      	ldr	r3, [pc, #408]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b26:	6818      	ldr	r0, [r3, #0]
 8001b28:	4b65      	ldr	r3, [pc, #404]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b2a:	6859      	ldr	r1, [r3, #4]
 8001b2c:	2300      	movs	r3, #0
 8001b2e:	9300      	str	r3, [sp, #0]
 8001b30:	2301      	movs	r3, #1
 8001b32:	2201      	movs	r2, #1
 8001b34:	f7fe ffea 	bl	8000b0c <FillRect>
 8001b38:	e01d      	b.n	8001b76 <HAL_UART_RxCpltCallback+0xd6>
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001b3a:	4b61      	ldr	r3, [pc, #388]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b3c:	681a      	ldr	r2, [r3, #0]
 8001b3e:	4b60      	ldr	r3, [pc, #384]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b40:	689b      	ldr	r3, [r3, #8]
 8001b42:	085b      	lsrs	r3, r3, #1
 8001b44:	1ad0      	subs	r0, r2, r3
 8001b46:	4b5e      	ldr	r3, [pc, #376]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b48:	685a      	ldr	r2, [r3, #4]
 8001b4a:	4b5d      	ldr	r3, [pc, #372]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b4c:	68db      	ldr	r3, [r3, #12]
 8001b4e:	085b      	lsrs	r3, r3, #1
 8001b50:	1ad1      	subs	r1, r2, r3
 8001b52:	4b5b      	ldr	r3, [pc, #364]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b54:	689a      	ldr	r2, [r3, #8]
 8001b56:	4b5a      	ldr	r3, [pc, #360]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b58:	68db      	ldr	r3, [r3, #12]
 8001b5a:	4c5a      	ldr	r4, [pc, #360]	@ (8001cc4 <HAL_UART_RxCpltCallback+0x224>)
 8001b5c:	9400      	str	r4, [sp, #0]
 8001b5e:	f7fe ffd5 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001b62:	4b57      	ldr	r3, [pc, #348]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b64:	6818      	ldr	r0, [r3, #0]
 8001b66:	4b56      	ldr	r3, [pc, #344]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b68:	6859      	ldr	r1, [r3, #4]
 8001b6a:	2300      	movs	r3, #0
 8001b6c:	9300      	str	r3, [sp, #0]
 8001b6e:	2301      	movs	r3, #1
 8001b70:	2201      	movs	r2, #1
 8001b72:	f7fe ffcb 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'u'){
 8001b76:	4b51      	ldr	r3, [pc, #324]	@ (8001cbc <HAL_UART_RxCpltCallback+0x21c>)
 8001b78:	781b      	ldrb	r3, [r3, #0]
 8001b7a:	2b75      	cmp	r3, #117	@ 0x75
 8001b7c:	d155      	bne.n	8001c2a <HAL_UART_RxCpltCallback+0x18a>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 8001b7e:	4b50      	ldr	r3, [pc, #320]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b80:	681a      	ldr	r2, [r3, #0]
 8001b82:	4b4f      	ldr	r3, [pc, #316]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b84:	689b      	ldr	r3, [r3, #8]
 8001b86:	085b      	lsrs	r3, r3, #1
 8001b88:	1ad0      	subs	r0, r2, r3
 8001b8a:	4b4d      	ldr	r3, [pc, #308]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b8c:	685a      	ldr	r2, [r3, #4]
 8001b8e:	4b4c      	ldr	r3, [pc, #304]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b90:	68db      	ldr	r3, [r3, #12]
 8001b92:	085b      	lsrs	r3, r3, #1
 8001b94:	1ad1      	subs	r1, r2, r3
 8001b96:	4b4a      	ldr	r3, [pc, #296]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b98:	689a      	ldr	r2, [r3, #8]
 8001b9a:	4b49      	ldr	r3, [pc, #292]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001b9c:	68db      	ldr	r3, [r3, #12]
 8001b9e:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001ba2:	9400      	str	r4, [sp, #0]
 8001ba4:	f7fe ffb2 	bl	8000b0c <FillRect>
		p1.direction=0;
 8001ba8:	4b45      	ldr	r3, [pc, #276]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001baa:	2200      	movs	r2, #0
 8001bac:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p1, 2)) {
 8001bae:	2102      	movs	r1, #2
 8001bb0:	4843      	ldr	r0, [pc, #268]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bb2:	f7ff fb71 	bl	8001298 <playerCanMove>
 8001bb6:	4603      	mov	r3, r0
 8001bb8:	2b00      	cmp	r3, #0
 8001bba:	d018      	beq.n	8001bee <HAL_UART_RxCpltCallback+0x14e>
			p1.y=p1.y-p1.speed;
 8001bbc:	4b40      	ldr	r3, [pc, #256]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bbe:	685a      	ldr	r2, [r3, #4]
 8001bc0:	4b3f      	ldr	r3, [pc, #252]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bc2:	691b      	ldr	r3, [r3, #16]
 8001bc4:	1ad3      	subs	r3, r2, r3
 8001bc6:	4a3e      	ldr	r2, [pc, #248]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bc8:	6053      	str	r3, [r2, #4]

			if (P1_WalkUp<10){
 8001bca:	4b3f      	ldr	r3, [pc, #252]	@ (8001cc8 <HAL_UART_RxCpltCallback+0x228>)
 8001bcc:	781b      	ldrb	r3, [r3, #0]
 8001bce:	2b09      	cmp	r3, #9
 8001bd0:	d806      	bhi.n	8001be0 <HAL_UART_RxCpltCallback+0x140>
				P1_WalkUp+=1;
 8001bd2:	4b3d      	ldr	r3, [pc, #244]	@ (8001cc8 <HAL_UART_RxCpltCallback+0x228>)
 8001bd4:	781b      	ldrb	r3, [r3, #0]
 8001bd6:	3301      	adds	r3, #1
 8001bd8:	b2da      	uxtb	r2, r3
 8001bda:	4b3b      	ldr	r3, [pc, #236]	@ (8001cc8 <HAL_UART_RxCpltCallback+0x228>)
 8001bdc:	701a      	strb	r2, [r3, #0]
 8001bde:	e002      	b.n	8001be6 <HAL_UART_RxCpltCallback+0x146>
			} else{
				P1_WalkUp=0;
 8001be0:	4b39      	ldr	r3, [pc, #228]	@ (8001cc8 <HAL_UART_RxCpltCallback+0x228>)
 8001be2:	2200      	movs	r2, #0
 8001be4:	701a      	strb	r2, [r3, #0]
			}
			//FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
			player1WalkUp(&p1);
 8001be6:	4836      	ldr	r0, [pc, #216]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001be8:	f7ff fd1e 	bl	8001628 <player1WalkUp>
 8001bec:	e01d      	b.n	8001c2a <HAL_UART_RxCpltCallback+0x18a>

		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001bee:	4b34      	ldr	r3, [pc, #208]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bf0:	681a      	ldr	r2, [r3, #0]
 8001bf2:	4b33      	ldr	r3, [pc, #204]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bf4:	689b      	ldr	r3, [r3, #8]
 8001bf6:	085b      	lsrs	r3, r3, #1
 8001bf8:	1ad0      	subs	r0, r2, r3
 8001bfa:	4b31      	ldr	r3, [pc, #196]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001bfc:	685a      	ldr	r2, [r3, #4]
 8001bfe:	4b30      	ldr	r3, [pc, #192]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c00:	68db      	ldr	r3, [r3, #12]
 8001c02:	085b      	lsrs	r3, r3, #1
 8001c04:	1ad1      	subs	r1, r2, r3
 8001c06:	4b2e      	ldr	r3, [pc, #184]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c08:	689a      	ldr	r2, [r3, #8]
 8001c0a:	4b2d      	ldr	r3, [pc, #180]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c0c:	68db      	ldr	r3, [r3, #12]
 8001c0e:	4c2d      	ldr	r4, [pc, #180]	@ (8001cc4 <HAL_UART_RxCpltCallback+0x224>)
 8001c10:	9400      	str	r4, [sp, #0]
 8001c12:	f7fe ff7b 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001c16:	4b2a      	ldr	r3, [pc, #168]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c18:	6818      	ldr	r0, [r3, #0]
 8001c1a:	4b29      	ldr	r3, [pc, #164]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c1c:	6859      	ldr	r1, [r3, #4]
 8001c1e:	2300      	movs	r3, #0
 8001c20:	9300      	str	r3, [sp, #0]
 8001c22:	2301      	movs	r3, #1
 8001c24:	2201      	movs	r2, #1
 8001c26:	f7fe ff71 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'r'){
 8001c2a:	4b24      	ldr	r3, [pc, #144]	@ (8001cbc <HAL_UART_RxCpltCallback+0x21c>)
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	2b72      	cmp	r3, #114	@ 0x72
 8001c30:	d16a      	bne.n	8001d08 <HAL_UART_RxCpltCallback+0x268>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 8001c32:	4b23      	ldr	r3, [pc, #140]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c34:	681a      	ldr	r2, [r3, #0]
 8001c36:	4b22      	ldr	r3, [pc, #136]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c38:	689b      	ldr	r3, [r3, #8]
 8001c3a:	085b      	lsrs	r3, r3, #1
 8001c3c:	1ad0      	subs	r0, r2, r3
 8001c3e:	4b20      	ldr	r3, [pc, #128]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c40:	685a      	ldr	r2, [r3, #4]
 8001c42:	4b1f      	ldr	r3, [pc, #124]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c44:	68db      	ldr	r3, [r3, #12]
 8001c46:	085b      	lsrs	r3, r3, #1
 8001c48:	1ad1      	subs	r1, r2, r3
 8001c4a:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c4c:	689a      	ldr	r2, [r3, #8]
 8001c4e:	4b1c      	ldr	r3, [pc, #112]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c50:	68db      	ldr	r3, [r3, #12]
 8001c52:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001c56:	9400      	str	r4, [sp, #0]
 8001c58:	f7fe ff58 	bl	8000b0c <FillRect>
		p1.direction=1;
 8001c5c:	4b18      	ldr	r3, [pc, #96]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c5e:	2201      	movs	r2, #1
 8001c60:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p1, 1)) {
 8001c62:	2101      	movs	r1, #1
 8001c64:	4816      	ldr	r0, [pc, #88]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c66:	f7ff fb17 	bl	8001298 <playerCanMove>
 8001c6a:	4603      	mov	r3, r0
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d02d      	beq.n	8001ccc <HAL_UART_RxCpltCallback+0x22c>
			p1.x=p1.x+p1.speed;
 8001c70:	4b13      	ldr	r3, [pc, #76]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c72:	681a      	ldr	r2, [r3, #0]
 8001c74:	4b12      	ldr	r3, [pc, #72]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c76:	691b      	ldr	r3, [r3, #16]
 8001c78:	4413      	add	r3, r2
 8001c7a:	4a11      	ldr	r2, [pc, #68]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c7c:	6013      	str	r3, [r2, #0]

			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001c7e:	4b10      	ldr	r3, [pc, #64]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	4b0f      	ldr	r3, [pc, #60]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c84:	689b      	ldr	r3, [r3, #8]
 8001c86:	085b      	lsrs	r3, r3, #1
 8001c88:	1ad0      	subs	r0, r2, r3
 8001c8a:	4b0d      	ldr	r3, [pc, #52]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c8c:	685a      	ldr	r2, [r3, #4]
 8001c8e:	4b0c      	ldr	r3, [pc, #48]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c90:	68db      	ldr	r3, [r3, #12]
 8001c92:	085b      	lsrs	r3, r3, #1
 8001c94:	1ad1      	subs	r1, r2, r3
 8001c96:	4b0a      	ldr	r3, [pc, #40]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c98:	689a      	ldr	r2, [r3, #8]
 8001c9a:	4b09      	ldr	r3, [pc, #36]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001c9c:	68db      	ldr	r3, [r3, #12]
 8001c9e:	4c09      	ldr	r4, [pc, #36]	@ (8001cc4 <HAL_UART_RxCpltCallback+0x224>)
 8001ca0:	9400      	str	r4, [sp, #0]
 8001ca2:	f7fe ff33 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001ca6:	4b06      	ldr	r3, [pc, #24]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001ca8:	6818      	ldr	r0, [r3, #0]
 8001caa:	4b05      	ldr	r3, [pc, #20]	@ (8001cc0 <HAL_UART_RxCpltCallback+0x220>)
 8001cac:	6859      	ldr	r1, [r3, #4]
 8001cae:	2300      	movs	r3, #0
 8001cb0:	9300      	str	r3, [sp, #0]
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	2201      	movs	r2, #1
 8001cb6:	f7fe ff29 	bl	8000b0c <FillRect>
 8001cba:	e025      	b.n	8001d08 <HAL_UART_RxCpltCallback+0x268>
 8001cbc:	200028dc 	.word	0x200028dc
 8001cc0:	200028e8 	.word	0x200028e8
 8001cc4:	00fffb00 	.word	0x00fffb00
 8001cc8:	200029a2 	.word	0x200029a2
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001ccc:	4b4e      	ldr	r3, [pc, #312]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cce:	681a      	ldr	r2, [r3, #0]
 8001cd0:	4b4d      	ldr	r3, [pc, #308]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cd2:	689b      	ldr	r3, [r3, #8]
 8001cd4:	085b      	lsrs	r3, r3, #1
 8001cd6:	1ad0      	subs	r0, r2, r3
 8001cd8:	4b4b      	ldr	r3, [pc, #300]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cda:	685a      	ldr	r2, [r3, #4]
 8001cdc:	4b4a      	ldr	r3, [pc, #296]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cde:	68db      	ldr	r3, [r3, #12]
 8001ce0:	085b      	lsrs	r3, r3, #1
 8001ce2:	1ad1      	subs	r1, r2, r3
 8001ce4:	4b48      	ldr	r3, [pc, #288]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001ce6:	689a      	ldr	r2, [r3, #8]
 8001ce8:	4b47      	ldr	r3, [pc, #284]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cea:	68db      	ldr	r3, [r3, #12]
 8001cec:	4c47      	ldr	r4, [pc, #284]	@ (8001e0c <HAL_UART_RxCpltCallback+0x36c>)
 8001cee:	9400      	str	r4, [sp, #0]
 8001cf0:	f7fe ff0c 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001cf4:	4b44      	ldr	r3, [pc, #272]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cf6:	6818      	ldr	r0, [r3, #0]
 8001cf8:	4b43      	ldr	r3, [pc, #268]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001cfa:	6859      	ldr	r1, [r3, #4]
 8001cfc:	2300      	movs	r3, #0
 8001cfe:	9300      	str	r3, [sp, #0]
 8001d00:	2301      	movs	r3, #1
 8001d02:	2201      	movs	r2, #1
 8001d04:	f7fe ff02 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'l'){
 8001d08:	4b41      	ldr	r3, [pc, #260]	@ (8001e10 <HAL_UART_RxCpltCallback+0x370>)
 8001d0a:	781b      	ldrb	r3, [r3, #0]
 8001d0c:	2b6c      	cmp	r3, #108	@ 0x6c
 8001d0e:	d162      	bne.n	8001dd6 <HAL_UART_RxCpltCallback+0x336>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 8001d10:	4b3d      	ldr	r3, [pc, #244]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d12:	681a      	ldr	r2, [r3, #0]
 8001d14:	4b3c      	ldr	r3, [pc, #240]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d16:	689b      	ldr	r3, [r3, #8]
 8001d18:	085b      	lsrs	r3, r3, #1
 8001d1a:	1ad0      	subs	r0, r2, r3
 8001d1c:	4b3a      	ldr	r3, [pc, #232]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d1e:	685a      	ldr	r2, [r3, #4]
 8001d20:	4b39      	ldr	r3, [pc, #228]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d22:	68db      	ldr	r3, [r3, #12]
 8001d24:	085b      	lsrs	r3, r3, #1
 8001d26:	1ad1      	subs	r1, r2, r3
 8001d28:	4b37      	ldr	r3, [pc, #220]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d2a:	689a      	ldr	r2, [r3, #8]
 8001d2c:	4b36      	ldr	r3, [pc, #216]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d2e:	68db      	ldr	r3, [r3, #12]
 8001d30:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001d34:	9400      	str	r4, [sp, #0]
 8001d36:	f7fe fee9 	bl	8000b0c <FillRect>
		p1.direction=3;
 8001d3a:	4b33      	ldr	r3, [pc, #204]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d3c:	2203      	movs	r2, #3
 8001d3e:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p1, 3)) {
 8001d40:	2103      	movs	r1, #3
 8001d42:	4831      	ldr	r0, [pc, #196]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d44:	f7ff faa8 	bl	8001298 <playerCanMove>
 8001d48:	4603      	mov	r3, r0
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d025      	beq.n	8001d9a <HAL_UART_RxCpltCallback+0x2fa>
			p1.x=p1.x-p1.speed;
 8001d4e:	4b2e      	ldr	r3, [pc, #184]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d50:	681a      	ldr	r2, [r3, #0]
 8001d52:	4b2d      	ldr	r3, [pc, #180]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d54:	691b      	ldr	r3, [r3, #16]
 8001d56:	1ad3      	subs	r3, r2, r3
 8001d58:	4a2b      	ldr	r2, [pc, #172]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d5a:	6013      	str	r3, [r2, #0]
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001d5c:	4b2a      	ldr	r3, [pc, #168]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d5e:	681a      	ldr	r2, [r3, #0]
 8001d60:	4b29      	ldr	r3, [pc, #164]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d62:	689b      	ldr	r3, [r3, #8]
 8001d64:	085b      	lsrs	r3, r3, #1
 8001d66:	1ad0      	subs	r0, r2, r3
 8001d68:	4b27      	ldr	r3, [pc, #156]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d6a:	685a      	ldr	r2, [r3, #4]
 8001d6c:	4b26      	ldr	r3, [pc, #152]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d6e:	68db      	ldr	r3, [r3, #12]
 8001d70:	085b      	lsrs	r3, r3, #1
 8001d72:	1ad1      	subs	r1, r2, r3
 8001d74:	4b24      	ldr	r3, [pc, #144]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d76:	689a      	ldr	r2, [r3, #8]
 8001d78:	4b23      	ldr	r3, [pc, #140]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d7a:	68db      	ldr	r3, [r3, #12]
 8001d7c:	4c23      	ldr	r4, [pc, #140]	@ (8001e0c <HAL_UART_RxCpltCallback+0x36c>)
 8001d7e:	9400      	str	r4, [sp, #0]
 8001d80:	f7fe fec4 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001d84:	4b20      	ldr	r3, [pc, #128]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d86:	6818      	ldr	r0, [r3, #0]
 8001d88:	4b1f      	ldr	r3, [pc, #124]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d8a:	6859      	ldr	r1, [r3, #4]
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	9300      	str	r3, [sp, #0]
 8001d90:	2301      	movs	r3, #1
 8001d92:	2201      	movs	r2, #1
 8001d94:	f7fe feba 	bl	8000b0c <FillRect>
 8001d98:	e01d      	b.n	8001dd6 <HAL_UART_RxCpltCallback+0x336>
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001d9a:	4b1b      	ldr	r3, [pc, #108]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001d9c:	681a      	ldr	r2, [r3, #0]
 8001d9e:	4b1a      	ldr	r3, [pc, #104]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001da0:	689b      	ldr	r3, [r3, #8]
 8001da2:	085b      	lsrs	r3, r3, #1
 8001da4:	1ad0      	subs	r0, r2, r3
 8001da6:	4b18      	ldr	r3, [pc, #96]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001da8:	685a      	ldr	r2, [r3, #4]
 8001daa:	4b17      	ldr	r3, [pc, #92]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001dac:	68db      	ldr	r3, [r3, #12]
 8001dae:	085b      	lsrs	r3, r3, #1
 8001db0:	1ad1      	subs	r1, r2, r3
 8001db2:	4b15      	ldr	r3, [pc, #84]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001db4:	689a      	ldr	r2, [r3, #8]
 8001db6:	4b14      	ldr	r3, [pc, #80]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001db8:	68db      	ldr	r3, [r3, #12]
 8001dba:	4c14      	ldr	r4, [pc, #80]	@ (8001e0c <HAL_UART_RxCpltCallback+0x36c>)
 8001dbc:	9400      	str	r4, [sp, #0]
 8001dbe:	f7fe fea5 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001dc2:	4b11      	ldr	r3, [pc, #68]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001dc4:	6818      	ldr	r0, [r3, #0]
 8001dc6:	4b10      	ldr	r3, [pc, #64]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001dc8:	6859      	ldr	r1, [r3, #4]
 8001dca:	2300      	movs	r3, #0
 8001dcc:	9300      	str	r3, [sp, #0]
 8001dce:	2301      	movs	r3, #1
 8001dd0:	2201      	movs	r2, #1
 8001dd2:	f7fe fe9b 	bl	8000b0c <FillRect>
		}
	}
	if (buffer[0]=='b'){
 8001dd6:	4b0e      	ldr	r3, [pc, #56]	@ (8001e10 <HAL_UART_RxCpltCallback+0x370>)
 8001dd8:	781b      	ldrb	r3, [r3, #0]
 8001dda:	2b62      	cmp	r3, #98	@ 0x62
 8001ddc:	d107      	bne.n	8001dee <HAL_UART_RxCpltCallback+0x34e>
		if (fase_p1==1){
 8001dde:	4b0d      	ldr	r3, [pc, #52]	@ (8001e14 <HAL_UART_RxCpltCallback+0x374>)
 8001de0:	781b      	ldrb	r3, [r3, #0]
 8001de2:	2b01      	cmp	r3, #1
 8001de4:	d103      	bne.n	8001dee <HAL_UART_RxCpltCallback+0x34e>
		PlayerHit(&p1, &e1_2);
 8001de6:	490c      	ldr	r1, [pc, #48]	@ (8001e18 <HAL_UART_RxCpltCallback+0x378>)
 8001de8:	4807      	ldr	r0, [pc, #28]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001dea:	f7ff fafd 	bl	80013e8 <PlayerHit>
		}
	}
	HitboxPlayer(&p1);
 8001dee:	4806      	ldr	r0, [pc, #24]	@ (8001e08 <HAL_UART_RxCpltCallback+0x368>)
 8001df0:	f7ff face 	bl	8001390 <HitboxPlayer>
	// Vuelve a activar la recepción por interrupción
	HAL_UART_Receive_IT(&huart2, buffer, 1);
 8001df4:	2201      	movs	r2, #1
 8001df6:	4906      	ldr	r1, [pc, #24]	@ (8001e10 <HAL_UART_RxCpltCallback+0x370>)
 8001df8:	4808      	ldr	r0, [pc, #32]	@ (8001e1c <HAL_UART_RxCpltCallback+0x37c>)
 8001dfa:	f001 fbd8 	bl	80035ae <HAL_UART_Receive_IT>
}
 8001dfe:	bf00      	nop
 8001e00:	370c      	adds	r7, #12
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bd90      	pop	{r4, r7, pc}
 8001e06:	bf00      	nop
 8001e08:	200028e8 	.word	0x200028e8
 8001e0c:	00fffb00 	.word	0x00fffb00
 8001e10:	200028dc 	.word	0x200028dc
 8001e14:	200029a1 	.word	0x200029a1
 8001e18:	20002950 	.word	0x20002950
 8001e1c:	20002894 	.word	0x20002894

08001e20 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001e20:	b480      	push	{r7}
 8001e22:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001e24:	b672      	cpsid	i
}
 8001e26:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001e28:	bf00      	nop
 8001e2a:	e7fd      	b.n	8001e28 <Error_Handler+0x8>

08001e2c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001e2c:	b480      	push	{r7}
 8001e2e:	b083      	sub	sp, #12
 8001e30:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e32:	2300      	movs	r3, #0
 8001e34:	607b      	str	r3, [r7, #4]
 8001e36:	4b10      	ldr	r3, [pc, #64]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e3a:	4a0f      	ldr	r2, [pc, #60]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e3c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001e40:	6453      	str	r3, [r2, #68]	@ 0x44
 8001e42:	4b0d      	ldr	r3, [pc, #52]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e46:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001e4a:	607b      	str	r3, [r7, #4]
 8001e4c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e4e:	2300      	movs	r3, #0
 8001e50:	603b      	str	r3, [r7, #0]
 8001e52:	4b09      	ldr	r3, [pc, #36]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e56:	4a08      	ldr	r2, [pc, #32]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e58:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001e5c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e5e:	4b06      	ldr	r3, [pc, #24]	@ (8001e78 <HAL_MspInit+0x4c>)
 8001e60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e62:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001e66:	603b      	str	r3, [r7, #0]
 8001e68:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e6a:	bf00      	nop
 8001e6c:	370c      	adds	r7, #12
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e74:	4770      	bx	lr
 8001e76:	bf00      	nop
 8001e78:	40023800 	.word	0x40023800

08001e7c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001e7c:	b580      	push	{r7, lr}
 8001e7e:	b08a      	sub	sp, #40	@ 0x28
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e84:	f107 0314 	add.w	r3, r7, #20
 8001e88:	2200      	movs	r2, #0
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	605a      	str	r2, [r3, #4]
 8001e8e:	609a      	str	r2, [r3, #8]
 8001e90:	60da      	str	r2, [r3, #12]
 8001e92:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	4a19      	ldr	r2, [pc, #100]	@ (8001f00 <HAL_SPI_MspInit+0x84>)
 8001e9a:	4293      	cmp	r3, r2
 8001e9c:	d12b      	bne.n	8001ef6 <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	613b      	str	r3, [r7, #16]
 8001ea2:	4b18      	ldr	r3, [pc, #96]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001ea4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ea6:	4a17      	ldr	r2, [pc, #92]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001ea8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001eac:	6453      	str	r3, [r2, #68]	@ 0x44
 8001eae:	4b15      	ldr	r3, [pc, #84]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001eb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001eb2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001eb6:	613b      	str	r3, [r7, #16]
 8001eb8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eba:	2300      	movs	r3, #0
 8001ebc:	60fb      	str	r3, [r7, #12]
 8001ebe:	4b11      	ldr	r3, [pc, #68]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001ec0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ec2:	4a10      	ldr	r2, [pc, #64]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001ec4:	f043 0301 	orr.w	r3, r3, #1
 8001ec8:	6313      	str	r3, [r2, #48]	@ 0x30
 8001eca:	4b0e      	ldr	r3, [pc, #56]	@ (8001f04 <HAL_SPI_MspInit+0x88>)
 8001ecc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ece:	f003 0301 	and.w	r3, r3, #1
 8001ed2:	60fb      	str	r3, [r7, #12]
 8001ed4:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8001ed6:	23e0      	movs	r3, #224	@ 0xe0
 8001ed8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eda:	2302      	movs	r3, #2
 8001edc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ede:	2300      	movs	r3, #0
 8001ee0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ee2:	2303      	movs	r3, #3
 8001ee4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001ee6:	2305      	movs	r3, #5
 8001ee8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001eea:	f107 0314 	add.w	r3, r7, #20
 8001eee:	4619      	mov	r1, r3
 8001ef0:	4805      	ldr	r0, [pc, #20]	@ (8001f08 <HAL_SPI_MspInit+0x8c>)
 8001ef2:	f000 fb73 	bl	80025dc <HAL_GPIO_Init>

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 8001ef6:	bf00      	nop
 8001ef8:	3728      	adds	r7, #40	@ 0x28
 8001efa:	46bd      	mov	sp, r7
 8001efc:	bd80      	pop	{r7, pc}
 8001efe:	bf00      	nop
 8001f00:	40013000 	.word	0x40013000
 8001f04:	40023800 	.word	0x40023800
 8001f08:	40020000 	.word	0x40020000

08001f0c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001f0c:	b580      	push	{r7, lr}
 8001f0e:	b08c      	sub	sp, #48	@ 0x30
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f14:	f107 031c 	add.w	r3, r7, #28
 8001f18:	2200      	movs	r2, #0
 8001f1a:	601a      	str	r2, [r3, #0]
 8001f1c:	605a      	str	r2, [r3, #4]
 8001f1e:	609a      	str	r2, [r3, #8]
 8001f20:	60da      	str	r2, [r3, #12]
 8001f22:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	4a49      	ldr	r2, [pc, #292]	@ (8002050 <HAL_UART_MspInit+0x144>)
 8001f2a:	4293      	cmp	r3, r2
 8001f2c:	d153      	bne.n	8001fd6 <HAL_UART_MspInit+0xca>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8001f2e:	2300      	movs	r3, #0
 8001f30:	61bb      	str	r3, [r7, #24]
 8001f32:	4b48      	ldr	r3, [pc, #288]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f36:	4a47      	ldr	r2, [pc, #284]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f38:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001f3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001f3e:	4b45      	ldr	r3, [pc, #276]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f42:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001f46:	61bb      	str	r3, [r7, #24]
 8001f48:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	617b      	str	r3, [r7, #20]
 8001f4e:	4b41      	ldr	r3, [pc, #260]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f52:	4a40      	ldr	r2, [pc, #256]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f54:	f043 0304 	orr.w	r3, r3, #4
 8001f58:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f5a:	4b3e      	ldr	r3, [pc, #248]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f5e:	f003 0304 	and.w	r3, r3, #4
 8001f62:	617b      	str	r3, [r7, #20]
 8001f64:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f66:	2300      	movs	r3, #0
 8001f68:	613b      	str	r3, [r7, #16]
 8001f6a:	4b3a      	ldr	r3, [pc, #232]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f6e:	4a39      	ldr	r2, [pc, #228]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f70:	f043 0308 	orr.w	r3, r3, #8
 8001f74:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f76:	4b37      	ldr	r3, [pc, #220]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001f78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f7a:	f003 0308 	and.w	r3, r3, #8
 8001f7e:	613b      	str	r3, [r7, #16]
 8001f80:	693b      	ldr	r3, [r7, #16]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001f82:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001f86:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f88:	2302      	movs	r3, #2
 8001f8a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f90:	2303      	movs	r3, #3
 8001f92:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001f94:	2308      	movs	r3, #8
 8001f96:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f98:	f107 031c 	add.w	r3, r7, #28
 8001f9c:	4619      	mov	r1, r3
 8001f9e:	482e      	ldr	r0, [pc, #184]	@ (8002058 <HAL_UART_MspInit+0x14c>)
 8001fa0:	f000 fb1c 	bl	80025dc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001fa4:	2304      	movs	r3, #4
 8001fa6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa8:	2302      	movs	r3, #2
 8001faa:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fac:	2300      	movs	r3, #0
 8001fae:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fb0:	2303      	movs	r3, #3
 8001fb2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001fb4:	2308      	movs	r3, #8
 8001fb6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fb8:	f107 031c 	add.w	r3, r7, #28
 8001fbc:	4619      	mov	r1, r3
 8001fbe:	4827      	ldr	r0, [pc, #156]	@ (800205c <HAL_UART_MspInit+0x150>)
 8001fc0:	f000 fb0c 	bl	80025dc <HAL_GPIO_Init>

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 0, 0);
 8001fc4:	2200      	movs	r2, #0
 8001fc6:	2100      	movs	r1, #0
 8001fc8:	2035      	movs	r0, #53	@ 0x35
 8001fca:	f000 fa3e 	bl	800244a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 8001fce:	2035      	movs	r0, #53	@ 0x35
 8001fd0:	f000 fa57 	bl	8002482 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001fd4:	e038      	b.n	8002048 <HAL_UART_MspInit+0x13c>
  else if(huart->Instance==USART2)
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	4a21      	ldr	r2, [pc, #132]	@ (8002060 <HAL_UART_MspInit+0x154>)
 8001fdc:	4293      	cmp	r3, r2
 8001fde:	d133      	bne.n	8002048 <HAL_UART_MspInit+0x13c>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	60fb      	str	r3, [r7, #12]
 8001fe4:	4b1b      	ldr	r3, [pc, #108]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001fe6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fe8:	4a1a      	ldr	r2, [pc, #104]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001fea:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001fee:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ff0:	4b18      	ldr	r3, [pc, #96]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8001ff2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ff4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001ff8:	60fb      	str	r3, [r7, #12]
 8001ffa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ffc:	2300      	movs	r3, #0
 8001ffe:	60bb      	str	r3, [r7, #8]
 8002000:	4b14      	ldr	r3, [pc, #80]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8002002:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002004:	4a13      	ldr	r2, [pc, #76]	@ (8002054 <HAL_UART_MspInit+0x148>)
 8002006:	f043 0301 	orr.w	r3, r3, #1
 800200a:	6313      	str	r3, [r2, #48]	@ 0x30
 800200c:	4b11      	ldr	r3, [pc, #68]	@ (8002054 <HAL_UART_MspInit+0x148>)
 800200e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002010:	f003 0301 	and.w	r3, r3, #1
 8002014:	60bb      	str	r3, [r7, #8]
 8002016:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002018:	230c      	movs	r3, #12
 800201a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800201c:	2302      	movs	r3, #2
 800201e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002020:	2300      	movs	r3, #0
 8002022:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002024:	2303      	movs	r3, #3
 8002026:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002028:	2307      	movs	r3, #7
 800202a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800202c:	f107 031c 	add.w	r3, r7, #28
 8002030:	4619      	mov	r1, r3
 8002032:	480c      	ldr	r0, [pc, #48]	@ (8002064 <HAL_UART_MspInit+0x158>)
 8002034:	f000 fad2 	bl	80025dc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002038:	2200      	movs	r2, #0
 800203a:	2100      	movs	r1, #0
 800203c:	2026      	movs	r0, #38	@ 0x26
 800203e:	f000 fa04 	bl	800244a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002042:	2026      	movs	r0, #38	@ 0x26
 8002044:	f000 fa1d 	bl	8002482 <HAL_NVIC_EnableIRQ>
}
 8002048:	bf00      	nop
 800204a:	3730      	adds	r7, #48	@ 0x30
 800204c:	46bd      	mov	sp, r7
 800204e:	bd80      	pop	{r7, pc}
 8002050:	40005000 	.word	0x40005000
 8002054:	40023800 	.word	0x40023800
 8002058:	40020800 	.word	0x40020800
 800205c:	40020c00 	.word	0x40020c00
 8002060:	40004400 	.word	0x40004400
 8002064:	40020000 	.word	0x40020000

08002068 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002068:	b480      	push	{r7}
 800206a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800206c:	bf00      	nop
 800206e:	e7fd      	b.n	800206c <NMI_Handler+0x4>

08002070 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002070:	b480      	push	{r7}
 8002072:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002074:	bf00      	nop
 8002076:	e7fd      	b.n	8002074 <HardFault_Handler+0x4>

08002078 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002078:	b480      	push	{r7}
 800207a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800207c:	bf00      	nop
 800207e:	e7fd      	b.n	800207c <MemManage_Handler+0x4>

08002080 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002080:	b480      	push	{r7}
 8002082:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002084:	bf00      	nop
 8002086:	e7fd      	b.n	8002084 <BusFault_Handler+0x4>

08002088 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002088:	b480      	push	{r7}
 800208a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800208c:	bf00      	nop
 800208e:	e7fd      	b.n	800208c <UsageFault_Handler+0x4>

08002090 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002090:	b480      	push	{r7}
 8002092:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002094:	bf00      	nop
 8002096:	46bd      	mov	sp, r7
 8002098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800209c:	4770      	bx	lr

0800209e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800209e:	b480      	push	{r7}
 80020a0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80020a2:	bf00      	nop
 80020a4:	46bd      	mov	sp, r7
 80020a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020aa:	4770      	bx	lr

080020ac <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80020ac:	b480      	push	{r7}
 80020ae:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80020b0:	bf00      	nop
 80020b2:	46bd      	mov	sp, r7
 80020b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b8:	4770      	bx	lr

080020ba <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80020ba:	b580      	push	{r7, lr}
 80020bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80020be:	f000 f8a5 	bl	800220c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80020c2:	bf00      	nop
 80020c4:	bd80      	pop	{r7, pc}
	...

080020c8 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80020c8:	b580      	push	{r7, lr}
 80020ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80020cc:	4802      	ldr	r0, [pc, #8]	@ (80020d8 <USART2_IRQHandler+0x10>)
 80020ce:	f001 fa93 	bl	80035f8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80020d2:	bf00      	nop
 80020d4:	bd80      	pop	{r7, pc}
 80020d6:	bf00      	nop
 80020d8:	20002894 	.word	0x20002894

080020dc <UART5_IRQHandler>:

/**
  * @brief This function handles UART5 global interrupt.
  */
void UART5_IRQHandler(void)
{
 80020dc:	b580      	push	{r7, lr}
 80020de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 80020e0:	4802      	ldr	r0, [pc, #8]	@ (80020ec <UART5_IRQHandler+0x10>)
 80020e2:	f001 fa89 	bl	80035f8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART5_IRQn 1 */

  /* USER CODE END UART5_IRQn 1 */
}
 80020e6:	bf00      	nop
 80020e8:	bd80      	pop	{r7, pc}
 80020ea:	bf00      	nop
 80020ec:	2000284c 	.word	0x2000284c

080020f0 <SystemInit>:
 80020f0:	b480      	push	{r7}
 80020f2:	af00      	add	r7, sp, #0
 80020f4:	4b06      	ldr	r3, [pc, #24]	@ (8002110 <SystemInit+0x20>)
 80020f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80020fa:	4a05      	ldr	r2, [pc, #20]	@ (8002110 <SystemInit+0x20>)
 80020fc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002100:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002104:	bf00      	nop
 8002106:	46bd      	mov	sp, r7
 8002108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800210c:	4770      	bx	lr
 800210e:	bf00      	nop
 8002110:	e000ed00 	.word	0xe000ed00

08002114 <Reset_Handler>:
 8002114:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800214c <LoopFillZerobss+0xe>
 8002118:	f7ff ffea 	bl	80020f0 <SystemInit>
 800211c:	480c      	ldr	r0, [pc, #48]	@ (8002150 <LoopFillZerobss+0x12>)
 800211e:	490d      	ldr	r1, [pc, #52]	@ (8002154 <LoopFillZerobss+0x16>)
 8002120:	4a0d      	ldr	r2, [pc, #52]	@ (8002158 <LoopFillZerobss+0x1a>)
 8002122:	2300      	movs	r3, #0
 8002124:	e002      	b.n	800212c <LoopCopyDataInit>

08002126 <CopyDataInit>:
 8002126:	58d4      	ldr	r4, [r2, r3]
 8002128:	50c4      	str	r4, [r0, r3]
 800212a:	3304      	adds	r3, #4

0800212c <LoopCopyDataInit>:
 800212c:	18c4      	adds	r4, r0, r3
 800212e:	428c      	cmp	r4, r1
 8002130:	d3f9      	bcc.n	8002126 <CopyDataInit>
 8002132:	4a0a      	ldr	r2, [pc, #40]	@ (800215c <LoopFillZerobss+0x1e>)
 8002134:	4c0a      	ldr	r4, [pc, #40]	@ (8002160 <LoopFillZerobss+0x22>)
 8002136:	2300      	movs	r3, #0
 8002138:	e001      	b.n	800213e <LoopFillZerobss>

0800213a <FillZerobss>:
 800213a:	6013      	str	r3, [r2, #0]
 800213c:	3204      	adds	r2, #4

0800213e <LoopFillZerobss>:
 800213e:	42a2      	cmp	r2, r4
 8002140:	d3fb      	bcc.n	800213a <FillZerobss>
 8002142:	f002 f95f 	bl	8004404 <__libc_init_array>
 8002146:	f7ff faa1 	bl	800168c <main>
 800214a:	4770      	bx	lr
 800214c:	20020000 	.word	0x20020000
 8002150:	20000000 	.word	0x20000000
 8002154:	200027d8 	.word	0x200027d8
 8002158:	0800448c 	.word	0x0800448c
 800215c:	200027d8 	.word	0x200027d8
 8002160:	200029a8 	.word	0x200029a8

08002164 <ADC_IRQHandler>:
 8002164:	e7fe      	b.n	8002164 <ADC_IRQHandler>
	...

08002168 <HAL_Init>:
 8002168:	b580      	push	{r7, lr}
 800216a:	af00      	add	r7, sp, #0
 800216c:	4b0e      	ldr	r3, [pc, #56]	@ (80021a8 <HAL_Init+0x40>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	4a0d      	ldr	r2, [pc, #52]	@ (80021a8 <HAL_Init+0x40>)
 8002172:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002176:	6013      	str	r3, [r2, #0]
 8002178:	4b0b      	ldr	r3, [pc, #44]	@ (80021a8 <HAL_Init+0x40>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	4a0a      	ldr	r2, [pc, #40]	@ (80021a8 <HAL_Init+0x40>)
 800217e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002182:	6013      	str	r3, [r2, #0]
 8002184:	4b08      	ldr	r3, [pc, #32]	@ (80021a8 <HAL_Init+0x40>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	4a07      	ldr	r2, [pc, #28]	@ (80021a8 <HAL_Init+0x40>)
 800218a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800218e:	6013      	str	r3, [r2, #0]
 8002190:	2003      	movs	r0, #3
 8002192:	f000 f94f 	bl	8002434 <HAL_NVIC_SetPriorityGrouping>
 8002196:	200f      	movs	r0, #15
 8002198:	f000 f808 	bl	80021ac <HAL_InitTick>
 800219c:	f7ff fe46 	bl	8001e2c <HAL_MspInit>
 80021a0:	2300      	movs	r3, #0
 80021a2:	4618      	mov	r0, r3
 80021a4:	bd80      	pop	{r7, pc}
 80021a6:	bf00      	nop
 80021a8:	40023c00 	.word	0x40023c00

080021ac <HAL_InitTick>:
 80021ac:	b580      	push	{r7, lr}
 80021ae:	b082      	sub	sp, #8
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	6078      	str	r0, [r7, #4]
 80021b4:	4b12      	ldr	r3, [pc, #72]	@ (8002200 <HAL_InitTick+0x54>)
 80021b6:	681a      	ldr	r2, [r3, #0]
 80021b8:	4b12      	ldr	r3, [pc, #72]	@ (8002204 <HAL_InitTick+0x58>)
 80021ba:	781b      	ldrb	r3, [r3, #0]
 80021bc:	4619      	mov	r1, r3
 80021be:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021c2:	fbb3 f3f1 	udiv	r3, r3, r1
 80021c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80021ca:	4618      	mov	r0, r3
 80021cc:	f000 f967 	bl	800249e <HAL_SYSTICK_Config>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d001      	beq.n	80021da <HAL_InitTick+0x2e>
 80021d6:	2301      	movs	r3, #1
 80021d8:	e00e      	b.n	80021f8 <HAL_InitTick+0x4c>
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	2b0f      	cmp	r3, #15
 80021de:	d80a      	bhi.n	80021f6 <HAL_InitTick+0x4a>
 80021e0:	2200      	movs	r2, #0
 80021e2:	6879      	ldr	r1, [r7, #4]
 80021e4:	f04f 30ff 	mov.w	r0, #4294967295
 80021e8:	f000 f92f 	bl	800244a <HAL_NVIC_SetPriority>
 80021ec:	4a06      	ldr	r2, [pc, #24]	@ (8002208 <HAL_InitTick+0x5c>)
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	6013      	str	r3, [r2, #0]
 80021f2:	2300      	movs	r3, #0
 80021f4:	e000      	b.n	80021f8 <HAL_InitTick+0x4c>
 80021f6:	2301      	movs	r3, #1
 80021f8:	4618      	mov	r0, r3
 80021fa:	3708      	adds	r7, #8
 80021fc:	46bd      	mov	sp, r7
 80021fe:	bd80      	pop	{r7, pc}
 8002200:	200027cc 	.word	0x200027cc
 8002204:	200027d4 	.word	0x200027d4
 8002208:	200027d0 	.word	0x200027d0

0800220c <HAL_IncTick>:
 800220c:	b480      	push	{r7}
 800220e:	af00      	add	r7, sp, #0
 8002210:	4b06      	ldr	r3, [pc, #24]	@ (800222c <HAL_IncTick+0x20>)
 8002212:	781b      	ldrb	r3, [r3, #0]
 8002214:	461a      	mov	r2, r3
 8002216:	4b06      	ldr	r3, [pc, #24]	@ (8002230 <HAL_IncTick+0x24>)
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	4413      	add	r3, r2
 800221c:	4a04      	ldr	r2, [pc, #16]	@ (8002230 <HAL_IncTick+0x24>)
 800221e:	6013      	str	r3, [r2, #0]
 8002220:	bf00      	nop
 8002222:	46bd      	mov	sp, r7
 8002224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002228:	4770      	bx	lr
 800222a:	bf00      	nop
 800222c:	200027d4 	.word	0x200027d4
 8002230:	200029a4 	.word	0x200029a4

08002234 <HAL_GetTick>:
 8002234:	b480      	push	{r7}
 8002236:	af00      	add	r7, sp, #0
 8002238:	4b03      	ldr	r3, [pc, #12]	@ (8002248 <HAL_GetTick+0x14>)
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4618      	mov	r0, r3
 800223e:	46bd      	mov	sp, r7
 8002240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002244:	4770      	bx	lr
 8002246:	bf00      	nop
 8002248:	200029a4 	.word	0x200029a4

0800224c <HAL_Delay>:
 800224c:	b580      	push	{r7, lr}
 800224e:	b084      	sub	sp, #16
 8002250:	af00      	add	r7, sp, #0
 8002252:	6078      	str	r0, [r7, #4]
 8002254:	f7ff ffee 	bl	8002234 <HAL_GetTick>
 8002258:	60b8      	str	r0, [r7, #8]
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	60fb      	str	r3, [r7, #12]
 800225e:	68fb      	ldr	r3, [r7, #12]
 8002260:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002264:	d005      	beq.n	8002272 <HAL_Delay+0x26>
 8002266:	4b0a      	ldr	r3, [pc, #40]	@ (8002290 <HAL_Delay+0x44>)
 8002268:	781b      	ldrb	r3, [r3, #0]
 800226a:	461a      	mov	r2, r3
 800226c:	68fb      	ldr	r3, [r7, #12]
 800226e:	4413      	add	r3, r2
 8002270:	60fb      	str	r3, [r7, #12]
 8002272:	bf00      	nop
 8002274:	f7ff ffde 	bl	8002234 <HAL_GetTick>
 8002278:	4602      	mov	r2, r0
 800227a:	68bb      	ldr	r3, [r7, #8]
 800227c:	1ad3      	subs	r3, r2, r3
 800227e:	68fa      	ldr	r2, [r7, #12]
 8002280:	429a      	cmp	r2, r3
 8002282:	d8f7      	bhi.n	8002274 <HAL_Delay+0x28>
 8002284:	bf00      	nop
 8002286:	bf00      	nop
 8002288:	3710      	adds	r7, #16
 800228a:	46bd      	mov	sp, r7
 800228c:	bd80      	pop	{r7, pc}
 800228e:	bf00      	nop
 8002290:	200027d4 	.word	0x200027d4

08002294 <__NVIC_SetPriorityGrouping>:
 8002294:	b480      	push	{r7}
 8002296:	b085      	sub	sp, #20
 8002298:	af00      	add	r7, sp, #0
 800229a:	6078      	str	r0, [r7, #4]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	f003 0307 	and.w	r3, r3, #7
 80022a2:	60fb      	str	r3, [r7, #12]
 80022a4:	4b0c      	ldr	r3, [pc, #48]	@ (80022d8 <__NVIC_SetPriorityGrouping+0x44>)
 80022a6:	68db      	ldr	r3, [r3, #12]
 80022a8:	60bb      	str	r3, [r7, #8]
 80022aa:	68ba      	ldr	r2, [r7, #8]
 80022ac:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80022b0:	4013      	ands	r3, r2
 80022b2:	60bb      	str	r3, [r7, #8]
 80022b4:	68fb      	ldr	r3, [r7, #12]
 80022b6:	021a      	lsls	r2, r3, #8
 80022b8:	68bb      	ldr	r3, [r7, #8]
 80022ba:	4313      	orrs	r3, r2
 80022bc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80022c0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80022c4:	60bb      	str	r3, [r7, #8]
 80022c6:	4a04      	ldr	r2, [pc, #16]	@ (80022d8 <__NVIC_SetPriorityGrouping+0x44>)
 80022c8:	68bb      	ldr	r3, [r7, #8]
 80022ca:	60d3      	str	r3, [r2, #12]
 80022cc:	bf00      	nop
 80022ce:	3714      	adds	r7, #20
 80022d0:	46bd      	mov	sp, r7
 80022d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022d6:	4770      	bx	lr
 80022d8:	e000ed00 	.word	0xe000ed00

080022dc <__NVIC_GetPriorityGrouping>:
 80022dc:	b480      	push	{r7}
 80022de:	af00      	add	r7, sp, #0
 80022e0:	4b04      	ldr	r3, [pc, #16]	@ (80022f4 <__NVIC_GetPriorityGrouping+0x18>)
 80022e2:	68db      	ldr	r3, [r3, #12]
 80022e4:	0a1b      	lsrs	r3, r3, #8
 80022e6:	f003 0307 	and.w	r3, r3, #7
 80022ea:	4618      	mov	r0, r3
 80022ec:	46bd      	mov	sp, r7
 80022ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022f2:	4770      	bx	lr
 80022f4:	e000ed00 	.word	0xe000ed00

080022f8 <__NVIC_EnableIRQ>:
 80022f8:	b480      	push	{r7}
 80022fa:	b083      	sub	sp, #12
 80022fc:	af00      	add	r7, sp, #0
 80022fe:	4603      	mov	r3, r0
 8002300:	71fb      	strb	r3, [r7, #7]
 8002302:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002306:	2b00      	cmp	r3, #0
 8002308:	db0b      	blt.n	8002322 <__NVIC_EnableIRQ+0x2a>
 800230a:	79fb      	ldrb	r3, [r7, #7]
 800230c:	f003 021f 	and.w	r2, r3, #31
 8002310:	4907      	ldr	r1, [pc, #28]	@ (8002330 <__NVIC_EnableIRQ+0x38>)
 8002312:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002316:	095b      	lsrs	r3, r3, #5
 8002318:	2001      	movs	r0, #1
 800231a:	fa00 f202 	lsl.w	r2, r0, r2
 800231e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002322:	bf00      	nop
 8002324:	370c      	adds	r7, #12
 8002326:	46bd      	mov	sp, r7
 8002328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800232c:	4770      	bx	lr
 800232e:	bf00      	nop
 8002330:	e000e100 	.word	0xe000e100

08002334 <__NVIC_SetPriority>:
 8002334:	b480      	push	{r7}
 8002336:	b083      	sub	sp, #12
 8002338:	af00      	add	r7, sp, #0
 800233a:	4603      	mov	r3, r0
 800233c:	6039      	str	r1, [r7, #0]
 800233e:	71fb      	strb	r3, [r7, #7]
 8002340:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002344:	2b00      	cmp	r3, #0
 8002346:	db0a      	blt.n	800235e <__NVIC_SetPriority+0x2a>
 8002348:	683b      	ldr	r3, [r7, #0]
 800234a:	b2da      	uxtb	r2, r3
 800234c:	490c      	ldr	r1, [pc, #48]	@ (8002380 <__NVIC_SetPriority+0x4c>)
 800234e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002352:	0112      	lsls	r2, r2, #4
 8002354:	b2d2      	uxtb	r2, r2
 8002356:	440b      	add	r3, r1
 8002358:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800235c:	e00a      	b.n	8002374 <__NVIC_SetPriority+0x40>
 800235e:	683b      	ldr	r3, [r7, #0]
 8002360:	b2da      	uxtb	r2, r3
 8002362:	4908      	ldr	r1, [pc, #32]	@ (8002384 <__NVIC_SetPriority+0x50>)
 8002364:	79fb      	ldrb	r3, [r7, #7]
 8002366:	f003 030f 	and.w	r3, r3, #15
 800236a:	3b04      	subs	r3, #4
 800236c:	0112      	lsls	r2, r2, #4
 800236e:	b2d2      	uxtb	r2, r2
 8002370:	440b      	add	r3, r1
 8002372:	761a      	strb	r2, [r3, #24]
 8002374:	bf00      	nop
 8002376:	370c      	adds	r7, #12
 8002378:	46bd      	mov	sp, r7
 800237a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800237e:	4770      	bx	lr
 8002380:	e000e100 	.word	0xe000e100
 8002384:	e000ed00 	.word	0xe000ed00

08002388 <NVIC_EncodePriority>:
 8002388:	b480      	push	{r7}
 800238a:	b089      	sub	sp, #36	@ 0x24
 800238c:	af00      	add	r7, sp, #0
 800238e:	60f8      	str	r0, [r7, #12]
 8002390:	60b9      	str	r1, [r7, #8]
 8002392:	607a      	str	r2, [r7, #4]
 8002394:	68fb      	ldr	r3, [r7, #12]
 8002396:	f003 0307 	and.w	r3, r3, #7
 800239a:	61fb      	str	r3, [r7, #28]
 800239c:	69fb      	ldr	r3, [r7, #28]
 800239e:	f1c3 0307 	rsb	r3, r3, #7
 80023a2:	2b04      	cmp	r3, #4
 80023a4:	bf28      	it	cs
 80023a6:	2304      	movcs	r3, #4
 80023a8:	61bb      	str	r3, [r7, #24]
 80023aa:	69fb      	ldr	r3, [r7, #28]
 80023ac:	3304      	adds	r3, #4
 80023ae:	2b06      	cmp	r3, #6
 80023b0:	d902      	bls.n	80023b8 <NVIC_EncodePriority+0x30>
 80023b2:	69fb      	ldr	r3, [r7, #28]
 80023b4:	3b03      	subs	r3, #3
 80023b6:	e000      	b.n	80023ba <NVIC_EncodePriority+0x32>
 80023b8:	2300      	movs	r3, #0
 80023ba:	617b      	str	r3, [r7, #20]
 80023bc:	f04f 32ff 	mov.w	r2, #4294967295
 80023c0:	69bb      	ldr	r3, [r7, #24]
 80023c2:	fa02 f303 	lsl.w	r3, r2, r3
 80023c6:	43da      	mvns	r2, r3
 80023c8:	68bb      	ldr	r3, [r7, #8]
 80023ca:	401a      	ands	r2, r3
 80023cc:	697b      	ldr	r3, [r7, #20]
 80023ce:	409a      	lsls	r2, r3
 80023d0:	f04f 31ff 	mov.w	r1, #4294967295
 80023d4:	697b      	ldr	r3, [r7, #20]
 80023d6:	fa01 f303 	lsl.w	r3, r1, r3
 80023da:	43d9      	mvns	r1, r3
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	400b      	ands	r3, r1
 80023e0:	4313      	orrs	r3, r2
 80023e2:	4618      	mov	r0, r3
 80023e4:	3724      	adds	r7, #36	@ 0x24
 80023e6:	46bd      	mov	sp, r7
 80023e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ec:	4770      	bx	lr
	...

080023f0 <SysTick_Config>:
 80023f0:	b580      	push	{r7, lr}
 80023f2:	b082      	sub	sp, #8
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	3b01      	subs	r3, #1
 80023fc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002400:	d301      	bcc.n	8002406 <SysTick_Config+0x16>
 8002402:	2301      	movs	r3, #1
 8002404:	e00f      	b.n	8002426 <SysTick_Config+0x36>
 8002406:	4a0a      	ldr	r2, [pc, #40]	@ (8002430 <SysTick_Config+0x40>)
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	3b01      	subs	r3, #1
 800240c:	6053      	str	r3, [r2, #4]
 800240e:	210f      	movs	r1, #15
 8002410:	f04f 30ff 	mov.w	r0, #4294967295
 8002414:	f7ff ff8e 	bl	8002334 <__NVIC_SetPriority>
 8002418:	4b05      	ldr	r3, [pc, #20]	@ (8002430 <SysTick_Config+0x40>)
 800241a:	2200      	movs	r2, #0
 800241c:	609a      	str	r2, [r3, #8]
 800241e:	4b04      	ldr	r3, [pc, #16]	@ (8002430 <SysTick_Config+0x40>)
 8002420:	2207      	movs	r2, #7
 8002422:	601a      	str	r2, [r3, #0]
 8002424:	2300      	movs	r3, #0
 8002426:	4618      	mov	r0, r3
 8002428:	3708      	adds	r7, #8
 800242a:	46bd      	mov	sp, r7
 800242c:	bd80      	pop	{r7, pc}
 800242e:	bf00      	nop
 8002430:	e000e010 	.word	0xe000e010

08002434 <HAL_NVIC_SetPriorityGrouping>:
 8002434:	b580      	push	{r7, lr}
 8002436:	b082      	sub	sp, #8
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
 800243c:	6878      	ldr	r0, [r7, #4]
 800243e:	f7ff ff29 	bl	8002294 <__NVIC_SetPriorityGrouping>
 8002442:	bf00      	nop
 8002444:	3708      	adds	r7, #8
 8002446:	46bd      	mov	sp, r7
 8002448:	bd80      	pop	{r7, pc}

0800244a <HAL_NVIC_SetPriority>:
 800244a:	b580      	push	{r7, lr}
 800244c:	b086      	sub	sp, #24
 800244e:	af00      	add	r7, sp, #0
 8002450:	4603      	mov	r3, r0
 8002452:	60b9      	str	r1, [r7, #8]
 8002454:	607a      	str	r2, [r7, #4]
 8002456:	73fb      	strb	r3, [r7, #15]
 8002458:	2300      	movs	r3, #0
 800245a:	617b      	str	r3, [r7, #20]
 800245c:	f7ff ff3e 	bl	80022dc <__NVIC_GetPriorityGrouping>
 8002460:	6178      	str	r0, [r7, #20]
 8002462:	687a      	ldr	r2, [r7, #4]
 8002464:	68b9      	ldr	r1, [r7, #8]
 8002466:	6978      	ldr	r0, [r7, #20]
 8002468:	f7ff ff8e 	bl	8002388 <NVIC_EncodePriority>
 800246c:	4602      	mov	r2, r0
 800246e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002472:	4611      	mov	r1, r2
 8002474:	4618      	mov	r0, r3
 8002476:	f7ff ff5d 	bl	8002334 <__NVIC_SetPriority>
 800247a:	bf00      	nop
 800247c:	3718      	adds	r7, #24
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}

08002482 <HAL_NVIC_EnableIRQ>:
 8002482:	b580      	push	{r7, lr}
 8002484:	b082      	sub	sp, #8
 8002486:	af00      	add	r7, sp, #0
 8002488:	4603      	mov	r3, r0
 800248a:	71fb      	strb	r3, [r7, #7]
 800248c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002490:	4618      	mov	r0, r3
 8002492:	f7ff ff31 	bl	80022f8 <__NVIC_EnableIRQ>
 8002496:	bf00      	nop
 8002498:	3708      	adds	r7, #8
 800249a:	46bd      	mov	sp, r7
 800249c:	bd80      	pop	{r7, pc}

0800249e <HAL_SYSTICK_Config>:
 800249e:	b580      	push	{r7, lr}
 80024a0:	b082      	sub	sp, #8
 80024a2:	af00      	add	r7, sp, #0
 80024a4:	6078      	str	r0, [r7, #4]
 80024a6:	6878      	ldr	r0, [r7, #4]
 80024a8:	f7ff ffa2 	bl	80023f0 <SysTick_Config>
 80024ac:	4603      	mov	r3, r0
 80024ae:	4618      	mov	r0, r3
 80024b0:	3708      	adds	r7, #8
 80024b2:	46bd      	mov	sp, r7
 80024b4:	bd80      	pop	{r7, pc}

080024b6 <HAL_DMA_Abort>:
 80024b6:	b580      	push	{r7, lr}
 80024b8:	b084      	sub	sp, #16
 80024ba:	af00      	add	r7, sp, #0
 80024bc:	6078      	str	r0, [r7, #4]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80024c2:	60fb      	str	r3, [r7, #12]
 80024c4:	f7ff feb6 	bl	8002234 <HAL_GetTick>
 80024c8:	60b8      	str	r0, [r7, #8]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80024d0:	b2db      	uxtb	r3, r3
 80024d2:	2b02      	cmp	r3, #2
 80024d4:	d008      	beq.n	80024e8 <HAL_DMA_Abort+0x32>
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	2280      	movs	r2, #128	@ 0x80
 80024da:	655a      	str	r2, [r3, #84]	@ 0x54
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	2200      	movs	r2, #0
 80024e0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80024e4:	2301      	movs	r3, #1
 80024e6:	e052      	b.n	800258e <HAL_DMA_Abort+0xd8>
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	681a      	ldr	r2, [r3, #0]
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	f022 0216 	bic.w	r2, r2, #22
 80024f6:	601a      	str	r2, [r3, #0]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	695a      	ldr	r2, [r3, #20]
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002506:	615a      	str	r2, [r3, #20]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800250c:	2b00      	cmp	r3, #0
 800250e:	d103      	bne.n	8002518 <HAL_DMA_Abort+0x62>
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002514:	2b00      	cmp	r3, #0
 8002516:	d007      	beq.n	8002528 <HAL_DMA_Abort+0x72>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	681a      	ldr	r2, [r3, #0]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f022 0208 	bic.w	r2, r2, #8
 8002526:	601a      	str	r2, [r3, #0]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	681a      	ldr	r2, [r3, #0]
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	f022 0201 	bic.w	r2, r2, #1
 8002536:	601a      	str	r2, [r3, #0]
 8002538:	e013      	b.n	8002562 <HAL_DMA_Abort+0xac>
 800253a:	f7ff fe7b 	bl	8002234 <HAL_GetTick>
 800253e:	4602      	mov	r2, r0
 8002540:	68bb      	ldr	r3, [r7, #8]
 8002542:	1ad3      	subs	r3, r2, r3
 8002544:	2b05      	cmp	r3, #5
 8002546:	d90c      	bls.n	8002562 <HAL_DMA_Abort+0xac>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	2220      	movs	r2, #32
 800254c:	655a      	str	r2, [r3, #84]	@ 0x54
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	2203      	movs	r2, #3
 8002552:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	2200      	movs	r2, #0
 800255a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800255e:	2303      	movs	r3, #3
 8002560:	e015      	b.n	800258e <HAL_DMA_Abort+0xd8>
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	f003 0301 	and.w	r3, r3, #1
 800256c:	2b00      	cmp	r3, #0
 800256e:	d1e4      	bne.n	800253a <HAL_DMA_Abort+0x84>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002574:	223f      	movs	r2, #63	@ 0x3f
 8002576:	409a      	lsls	r2, r3
 8002578:	68fb      	ldr	r3, [r7, #12]
 800257a:	609a      	str	r2, [r3, #8]
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	2201      	movs	r2, #1
 8002580:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	2200      	movs	r2, #0
 8002588:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800258c:	2300      	movs	r3, #0
 800258e:	4618      	mov	r0, r3
 8002590:	3710      	adds	r7, #16
 8002592:	46bd      	mov	sp, r7
 8002594:	bd80      	pop	{r7, pc}

08002596 <HAL_DMA_Abort_IT>:
 8002596:	b480      	push	{r7}
 8002598:	b083      	sub	sp, #12
 800259a:	af00      	add	r7, sp, #0
 800259c:	6078      	str	r0, [r7, #4]
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80025a4:	b2db      	uxtb	r3, r3
 80025a6:	2b02      	cmp	r3, #2
 80025a8:	d004      	beq.n	80025b4 <HAL_DMA_Abort_IT+0x1e>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	2280      	movs	r2, #128	@ 0x80
 80025ae:	655a      	str	r2, [r3, #84]	@ 0x54
 80025b0:	2301      	movs	r3, #1
 80025b2:	e00c      	b.n	80025ce <HAL_DMA_Abort_IT+0x38>
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	2205      	movs	r2, #5
 80025b8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	681a      	ldr	r2, [r3, #0]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f022 0201 	bic.w	r2, r2, #1
 80025ca:	601a      	str	r2, [r3, #0]
 80025cc:	2300      	movs	r3, #0
 80025ce:	4618      	mov	r0, r3
 80025d0:	370c      	adds	r7, #12
 80025d2:	46bd      	mov	sp, r7
 80025d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d8:	4770      	bx	lr
	...

080025dc <HAL_GPIO_Init>:
 80025dc:	b480      	push	{r7}
 80025de:	b089      	sub	sp, #36	@ 0x24
 80025e0:	af00      	add	r7, sp, #0
 80025e2:	6078      	str	r0, [r7, #4]
 80025e4:	6039      	str	r1, [r7, #0]
 80025e6:	2300      	movs	r3, #0
 80025e8:	617b      	str	r3, [r7, #20]
 80025ea:	2300      	movs	r3, #0
 80025ec:	613b      	str	r3, [r7, #16]
 80025ee:	2300      	movs	r3, #0
 80025f0:	61bb      	str	r3, [r7, #24]
 80025f2:	2300      	movs	r3, #0
 80025f4:	61fb      	str	r3, [r7, #28]
 80025f6:	e165      	b.n	80028c4 <HAL_GPIO_Init+0x2e8>
 80025f8:	2201      	movs	r2, #1
 80025fa:	69fb      	ldr	r3, [r7, #28]
 80025fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002600:	617b      	str	r3, [r7, #20]
 8002602:	683b      	ldr	r3, [r7, #0]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	697a      	ldr	r2, [r7, #20]
 8002608:	4013      	ands	r3, r2
 800260a:	613b      	str	r3, [r7, #16]
 800260c:	693a      	ldr	r2, [r7, #16]
 800260e:	697b      	ldr	r3, [r7, #20]
 8002610:	429a      	cmp	r2, r3
 8002612:	f040 8154 	bne.w	80028be <HAL_GPIO_Init+0x2e2>
 8002616:	683b      	ldr	r3, [r7, #0]
 8002618:	685b      	ldr	r3, [r3, #4]
 800261a:	f003 0303 	and.w	r3, r3, #3
 800261e:	2b01      	cmp	r3, #1
 8002620:	d005      	beq.n	800262e <HAL_GPIO_Init+0x52>
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	685b      	ldr	r3, [r3, #4]
 8002626:	f003 0303 	and.w	r3, r3, #3
 800262a:	2b02      	cmp	r3, #2
 800262c:	d130      	bne.n	8002690 <HAL_GPIO_Init+0xb4>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	689b      	ldr	r3, [r3, #8]
 8002632:	61bb      	str	r3, [r7, #24]
 8002634:	69fb      	ldr	r3, [r7, #28]
 8002636:	005b      	lsls	r3, r3, #1
 8002638:	2203      	movs	r2, #3
 800263a:	fa02 f303 	lsl.w	r3, r2, r3
 800263e:	43db      	mvns	r3, r3
 8002640:	69ba      	ldr	r2, [r7, #24]
 8002642:	4013      	ands	r3, r2
 8002644:	61bb      	str	r3, [r7, #24]
 8002646:	683b      	ldr	r3, [r7, #0]
 8002648:	68da      	ldr	r2, [r3, #12]
 800264a:	69fb      	ldr	r3, [r7, #28]
 800264c:	005b      	lsls	r3, r3, #1
 800264e:	fa02 f303 	lsl.w	r3, r2, r3
 8002652:	69ba      	ldr	r2, [r7, #24]
 8002654:	4313      	orrs	r3, r2
 8002656:	61bb      	str	r3, [r7, #24]
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	69ba      	ldr	r2, [r7, #24]
 800265c:	609a      	str	r2, [r3, #8]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	685b      	ldr	r3, [r3, #4]
 8002662:	61bb      	str	r3, [r7, #24]
 8002664:	2201      	movs	r2, #1
 8002666:	69fb      	ldr	r3, [r7, #28]
 8002668:	fa02 f303 	lsl.w	r3, r2, r3
 800266c:	43db      	mvns	r3, r3
 800266e:	69ba      	ldr	r2, [r7, #24]
 8002670:	4013      	ands	r3, r2
 8002672:	61bb      	str	r3, [r7, #24]
 8002674:	683b      	ldr	r3, [r7, #0]
 8002676:	685b      	ldr	r3, [r3, #4]
 8002678:	091b      	lsrs	r3, r3, #4
 800267a:	f003 0201 	and.w	r2, r3, #1
 800267e:	69fb      	ldr	r3, [r7, #28]
 8002680:	fa02 f303 	lsl.w	r3, r2, r3
 8002684:	69ba      	ldr	r2, [r7, #24]
 8002686:	4313      	orrs	r3, r2
 8002688:	61bb      	str	r3, [r7, #24]
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	69ba      	ldr	r2, [r7, #24]
 800268e:	605a      	str	r2, [r3, #4]
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	685b      	ldr	r3, [r3, #4]
 8002694:	f003 0303 	and.w	r3, r3, #3
 8002698:	2b03      	cmp	r3, #3
 800269a:	d017      	beq.n	80026cc <HAL_GPIO_Init+0xf0>
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	68db      	ldr	r3, [r3, #12]
 80026a0:	61bb      	str	r3, [r7, #24]
 80026a2:	69fb      	ldr	r3, [r7, #28]
 80026a4:	005b      	lsls	r3, r3, #1
 80026a6:	2203      	movs	r2, #3
 80026a8:	fa02 f303 	lsl.w	r3, r2, r3
 80026ac:	43db      	mvns	r3, r3
 80026ae:	69ba      	ldr	r2, [r7, #24]
 80026b0:	4013      	ands	r3, r2
 80026b2:	61bb      	str	r3, [r7, #24]
 80026b4:	683b      	ldr	r3, [r7, #0]
 80026b6:	689a      	ldr	r2, [r3, #8]
 80026b8:	69fb      	ldr	r3, [r7, #28]
 80026ba:	005b      	lsls	r3, r3, #1
 80026bc:	fa02 f303 	lsl.w	r3, r2, r3
 80026c0:	69ba      	ldr	r2, [r7, #24]
 80026c2:	4313      	orrs	r3, r2
 80026c4:	61bb      	str	r3, [r7, #24]
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	69ba      	ldr	r2, [r7, #24]
 80026ca:	60da      	str	r2, [r3, #12]
 80026cc:	683b      	ldr	r3, [r7, #0]
 80026ce:	685b      	ldr	r3, [r3, #4]
 80026d0:	f003 0303 	and.w	r3, r3, #3
 80026d4:	2b02      	cmp	r3, #2
 80026d6:	d123      	bne.n	8002720 <HAL_GPIO_Init+0x144>
 80026d8:	69fb      	ldr	r3, [r7, #28]
 80026da:	08da      	lsrs	r2, r3, #3
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	3208      	adds	r2, #8
 80026e0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80026e4:	61bb      	str	r3, [r7, #24]
 80026e6:	69fb      	ldr	r3, [r7, #28]
 80026e8:	f003 0307 	and.w	r3, r3, #7
 80026ec:	009b      	lsls	r3, r3, #2
 80026ee:	220f      	movs	r2, #15
 80026f0:	fa02 f303 	lsl.w	r3, r2, r3
 80026f4:	43db      	mvns	r3, r3
 80026f6:	69ba      	ldr	r2, [r7, #24]
 80026f8:	4013      	ands	r3, r2
 80026fa:	61bb      	str	r3, [r7, #24]
 80026fc:	683b      	ldr	r3, [r7, #0]
 80026fe:	691a      	ldr	r2, [r3, #16]
 8002700:	69fb      	ldr	r3, [r7, #28]
 8002702:	f003 0307 	and.w	r3, r3, #7
 8002706:	009b      	lsls	r3, r3, #2
 8002708:	fa02 f303 	lsl.w	r3, r2, r3
 800270c:	69ba      	ldr	r2, [r7, #24]
 800270e:	4313      	orrs	r3, r2
 8002710:	61bb      	str	r3, [r7, #24]
 8002712:	69fb      	ldr	r3, [r7, #28]
 8002714:	08da      	lsrs	r2, r3, #3
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	3208      	adds	r2, #8
 800271a:	69b9      	ldr	r1, [r7, #24]
 800271c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	61bb      	str	r3, [r7, #24]
 8002726:	69fb      	ldr	r3, [r7, #28]
 8002728:	005b      	lsls	r3, r3, #1
 800272a:	2203      	movs	r2, #3
 800272c:	fa02 f303 	lsl.w	r3, r2, r3
 8002730:	43db      	mvns	r3, r3
 8002732:	69ba      	ldr	r2, [r7, #24]
 8002734:	4013      	ands	r3, r2
 8002736:	61bb      	str	r3, [r7, #24]
 8002738:	683b      	ldr	r3, [r7, #0]
 800273a:	685b      	ldr	r3, [r3, #4]
 800273c:	f003 0203 	and.w	r2, r3, #3
 8002740:	69fb      	ldr	r3, [r7, #28]
 8002742:	005b      	lsls	r3, r3, #1
 8002744:	fa02 f303 	lsl.w	r3, r2, r3
 8002748:	69ba      	ldr	r2, [r7, #24]
 800274a:	4313      	orrs	r3, r2
 800274c:	61bb      	str	r3, [r7, #24]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	69ba      	ldr	r2, [r7, #24]
 8002752:	601a      	str	r2, [r3, #0]
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	685b      	ldr	r3, [r3, #4]
 8002758:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800275c:	2b00      	cmp	r3, #0
 800275e:	f000 80ae 	beq.w	80028be <HAL_GPIO_Init+0x2e2>
 8002762:	2300      	movs	r3, #0
 8002764:	60fb      	str	r3, [r7, #12]
 8002766:	4b5d      	ldr	r3, [pc, #372]	@ (80028dc <HAL_GPIO_Init+0x300>)
 8002768:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800276a:	4a5c      	ldr	r2, [pc, #368]	@ (80028dc <HAL_GPIO_Init+0x300>)
 800276c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002770:	6453      	str	r3, [r2, #68]	@ 0x44
 8002772:	4b5a      	ldr	r3, [pc, #360]	@ (80028dc <HAL_GPIO_Init+0x300>)
 8002774:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002776:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800277a:	60fb      	str	r3, [r7, #12]
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	4a58      	ldr	r2, [pc, #352]	@ (80028e0 <HAL_GPIO_Init+0x304>)
 8002780:	69fb      	ldr	r3, [r7, #28]
 8002782:	089b      	lsrs	r3, r3, #2
 8002784:	3302      	adds	r3, #2
 8002786:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800278a:	61bb      	str	r3, [r7, #24]
 800278c:	69fb      	ldr	r3, [r7, #28]
 800278e:	f003 0303 	and.w	r3, r3, #3
 8002792:	009b      	lsls	r3, r3, #2
 8002794:	220f      	movs	r2, #15
 8002796:	fa02 f303 	lsl.w	r3, r2, r3
 800279a:	43db      	mvns	r3, r3
 800279c:	69ba      	ldr	r2, [r7, #24]
 800279e:	4013      	ands	r3, r2
 80027a0:	61bb      	str	r3, [r7, #24]
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	4a4f      	ldr	r2, [pc, #316]	@ (80028e4 <HAL_GPIO_Init+0x308>)
 80027a6:	4293      	cmp	r3, r2
 80027a8:	d025      	beq.n	80027f6 <HAL_GPIO_Init+0x21a>
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	4a4e      	ldr	r2, [pc, #312]	@ (80028e8 <HAL_GPIO_Init+0x30c>)
 80027ae:	4293      	cmp	r3, r2
 80027b0:	d01f      	beq.n	80027f2 <HAL_GPIO_Init+0x216>
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	4a4d      	ldr	r2, [pc, #308]	@ (80028ec <HAL_GPIO_Init+0x310>)
 80027b6:	4293      	cmp	r3, r2
 80027b8:	d019      	beq.n	80027ee <HAL_GPIO_Init+0x212>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	4a4c      	ldr	r2, [pc, #304]	@ (80028f0 <HAL_GPIO_Init+0x314>)
 80027be:	4293      	cmp	r3, r2
 80027c0:	d013      	beq.n	80027ea <HAL_GPIO_Init+0x20e>
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	4a4b      	ldr	r2, [pc, #300]	@ (80028f4 <HAL_GPIO_Init+0x318>)
 80027c6:	4293      	cmp	r3, r2
 80027c8:	d00d      	beq.n	80027e6 <HAL_GPIO_Init+0x20a>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	4a4a      	ldr	r2, [pc, #296]	@ (80028f8 <HAL_GPIO_Init+0x31c>)
 80027ce:	4293      	cmp	r3, r2
 80027d0:	d007      	beq.n	80027e2 <HAL_GPIO_Init+0x206>
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	4a49      	ldr	r2, [pc, #292]	@ (80028fc <HAL_GPIO_Init+0x320>)
 80027d6:	4293      	cmp	r3, r2
 80027d8:	d101      	bne.n	80027de <HAL_GPIO_Init+0x202>
 80027da:	2306      	movs	r3, #6
 80027dc:	e00c      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027de:	2307      	movs	r3, #7
 80027e0:	e00a      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027e2:	2305      	movs	r3, #5
 80027e4:	e008      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027e6:	2304      	movs	r3, #4
 80027e8:	e006      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027ea:	2303      	movs	r3, #3
 80027ec:	e004      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027ee:	2302      	movs	r3, #2
 80027f0:	e002      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027f2:	2301      	movs	r3, #1
 80027f4:	e000      	b.n	80027f8 <HAL_GPIO_Init+0x21c>
 80027f6:	2300      	movs	r3, #0
 80027f8:	69fa      	ldr	r2, [r7, #28]
 80027fa:	f002 0203 	and.w	r2, r2, #3
 80027fe:	0092      	lsls	r2, r2, #2
 8002800:	4093      	lsls	r3, r2
 8002802:	69ba      	ldr	r2, [r7, #24]
 8002804:	4313      	orrs	r3, r2
 8002806:	61bb      	str	r3, [r7, #24]
 8002808:	4935      	ldr	r1, [pc, #212]	@ (80028e0 <HAL_GPIO_Init+0x304>)
 800280a:	69fb      	ldr	r3, [r7, #28]
 800280c:	089b      	lsrs	r3, r3, #2
 800280e:	3302      	adds	r3, #2
 8002810:	69ba      	ldr	r2, [r7, #24]
 8002812:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002816:	4b3a      	ldr	r3, [pc, #232]	@ (8002900 <HAL_GPIO_Init+0x324>)
 8002818:	689b      	ldr	r3, [r3, #8]
 800281a:	61bb      	str	r3, [r7, #24]
 800281c:	693b      	ldr	r3, [r7, #16]
 800281e:	43db      	mvns	r3, r3
 8002820:	69ba      	ldr	r2, [r7, #24]
 8002822:	4013      	ands	r3, r2
 8002824:	61bb      	str	r3, [r7, #24]
 8002826:	683b      	ldr	r3, [r7, #0]
 8002828:	685b      	ldr	r3, [r3, #4]
 800282a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800282e:	2b00      	cmp	r3, #0
 8002830:	d003      	beq.n	800283a <HAL_GPIO_Init+0x25e>
 8002832:	69ba      	ldr	r2, [r7, #24]
 8002834:	693b      	ldr	r3, [r7, #16]
 8002836:	4313      	orrs	r3, r2
 8002838:	61bb      	str	r3, [r7, #24]
 800283a:	4a31      	ldr	r2, [pc, #196]	@ (8002900 <HAL_GPIO_Init+0x324>)
 800283c:	69bb      	ldr	r3, [r7, #24]
 800283e:	6093      	str	r3, [r2, #8]
 8002840:	4b2f      	ldr	r3, [pc, #188]	@ (8002900 <HAL_GPIO_Init+0x324>)
 8002842:	68db      	ldr	r3, [r3, #12]
 8002844:	61bb      	str	r3, [r7, #24]
 8002846:	693b      	ldr	r3, [r7, #16]
 8002848:	43db      	mvns	r3, r3
 800284a:	69ba      	ldr	r2, [r7, #24]
 800284c:	4013      	ands	r3, r2
 800284e:	61bb      	str	r3, [r7, #24]
 8002850:	683b      	ldr	r3, [r7, #0]
 8002852:	685b      	ldr	r3, [r3, #4]
 8002854:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002858:	2b00      	cmp	r3, #0
 800285a:	d003      	beq.n	8002864 <HAL_GPIO_Init+0x288>
 800285c:	69ba      	ldr	r2, [r7, #24]
 800285e:	693b      	ldr	r3, [r7, #16]
 8002860:	4313      	orrs	r3, r2
 8002862:	61bb      	str	r3, [r7, #24]
 8002864:	4a26      	ldr	r2, [pc, #152]	@ (8002900 <HAL_GPIO_Init+0x324>)
 8002866:	69bb      	ldr	r3, [r7, #24]
 8002868:	60d3      	str	r3, [r2, #12]
 800286a:	4b25      	ldr	r3, [pc, #148]	@ (8002900 <HAL_GPIO_Init+0x324>)
 800286c:	685b      	ldr	r3, [r3, #4]
 800286e:	61bb      	str	r3, [r7, #24]
 8002870:	693b      	ldr	r3, [r7, #16]
 8002872:	43db      	mvns	r3, r3
 8002874:	69ba      	ldr	r2, [r7, #24]
 8002876:	4013      	ands	r3, r2
 8002878:	61bb      	str	r3, [r7, #24]
 800287a:	683b      	ldr	r3, [r7, #0]
 800287c:	685b      	ldr	r3, [r3, #4]
 800287e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002882:	2b00      	cmp	r3, #0
 8002884:	d003      	beq.n	800288e <HAL_GPIO_Init+0x2b2>
 8002886:	69ba      	ldr	r2, [r7, #24]
 8002888:	693b      	ldr	r3, [r7, #16]
 800288a:	4313      	orrs	r3, r2
 800288c:	61bb      	str	r3, [r7, #24]
 800288e:	4a1c      	ldr	r2, [pc, #112]	@ (8002900 <HAL_GPIO_Init+0x324>)
 8002890:	69bb      	ldr	r3, [r7, #24]
 8002892:	6053      	str	r3, [r2, #4]
 8002894:	4b1a      	ldr	r3, [pc, #104]	@ (8002900 <HAL_GPIO_Init+0x324>)
 8002896:	681b      	ldr	r3, [r3, #0]
 8002898:	61bb      	str	r3, [r7, #24]
 800289a:	693b      	ldr	r3, [r7, #16]
 800289c:	43db      	mvns	r3, r3
 800289e:	69ba      	ldr	r2, [r7, #24]
 80028a0:	4013      	ands	r3, r2
 80028a2:	61bb      	str	r3, [r7, #24]
 80028a4:	683b      	ldr	r3, [r7, #0]
 80028a6:	685b      	ldr	r3, [r3, #4]
 80028a8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d003      	beq.n	80028b8 <HAL_GPIO_Init+0x2dc>
 80028b0:	69ba      	ldr	r2, [r7, #24]
 80028b2:	693b      	ldr	r3, [r7, #16]
 80028b4:	4313      	orrs	r3, r2
 80028b6:	61bb      	str	r3, [r7, #24]
 80028b8:	4a11      	ldr	r2, [pc, #68]	@ (8002900 <HAL_GPIO_Init+0x324>)
 80028ba:	69bb      	ldr	r3, [r7, #24]
 80028bc:	6013      	str	r3, [r2, #0]
 80028be:	69fb      	ldr	r3, [r7, #28]
 80028c0:	3301      	adds	r3, #1
 80028c2:	61fb      	str	r3, [r7, #28]
 80028c4:	69fb      	ldr	r3, [r7, #28]
 80028c6:	2b0f      	cmp	r3, #15
 80028c8:	f67f ae96 	bls.w	80025f8 <HAL_GPIO_Init+0x1c>
 80028cc:	bf00      	nop
 80028ce:	bf00      	nop
 80028d0:	3724      	adds	r7, #36	@ 0x24
 80028d2:	46bd      	mov	sp, r7
 80028d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d8:	4770      	bx	lr
 80028da:	bf00      	nop
 80028dc:	40023800 	.word	0x40023800
 80028e0:	40013800 	.word	0x40013800
 80028e4:	40020000 	.word	0x40020000
 80028e8:	40020400 	.word	0x40020400
 80028ec:	40020800 	.word	0x40020800
 80028f0:	40020c00 	.word	0x40020c00
 80028f4:	40021000 	.word	0x40021000
 80028f8:	40021400 	.word	0x40021400
 80028fc:	40021800 	.word	0x40021800
 8002900:	40013c00 	.word	0x40013c00

08002904 <HAL_GPIO_WritePin>:
 8002904:	b480      	push	{r7}
 8002906:	b083      	sub	sp, #12
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
 800290c:	460b      	mov	r3, r1
 800290e:	807b      	strh	r3, [r7, #2]
 8002910:	4613      	mov	r3, r2
 8002912:	707b      	strb	r3, [r7, #1]
 8002914:	787b      	ldrb	r3, [r7, #1]
 8002916:	2b00      	cmp	r3, #0
 8002918:	d003      	beq.n	8002922 <HAL_GPIO_WritePin+0x1e>
 800291a:	887a      	ldrh	r2, [r7, #2]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	619a      	str	r2, [r3, #24]
 8002920:	e003      	b.n	800292a <HAL_GPIO_WritePin+0x26>
 8002922:	887b      	ldrh	r3, [r7, #2]
 8002924:	041a      	lsls	r2, r3, #16
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	619a      	str	r2, [r3, #24]
 800292a:	bf00      	nop
 800292c:	370c      	adds	r7, #12
 800292e:	46bd      	mov	sp, r7
 8002930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002934:	4770      	bx	lr
	...

08002938 <HAL_RCC_ClockConfig>:
 8002938:	b580      	push	{r7, lr}
 800293a:	b084      	sub	sp, #16
 800293c:	af00      	add	r7, sp, #0
 800293e:	6078      	str	r0, [r7, #4]
 8002940:	6039      	str	r1, [r7, #0]
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d101      	bne.n	800294c <HAL_RCC_ClockConfig+0x14>
 8002948:	2301      	movs	r3, #1
 800294a:	e0cc      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 800294c:	4b68      	ldr	r3, [pc, #416]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	f003 030f 	and.w	r3, r3, #15
 8002954:	683a      	ldr	r2, [r7, #0]
 8002956:	429a      	cmp	r2, r3
 8002958:	d90c      	bls.n	8002974 <HAL_RCC_ClockConfig+0x3c>
 800295a:	4b65      	ldr	r3, [pc, #404]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 800295c:	683a      	ldr	r2, [r7, #0]
 800295e:	b2d2      	uxtb	r2, r2
 8002960:	701a      	strb	r2, [r3, #0]
 8002962:	4b63      	ldr	r3, [pc, #396]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	f003 030f 	and.w	r3, r3, #15
 800296a:	683a      	ldr	r2, [r7, #0]
 800296c:	429a      	cmp	r2, r3
 800296e:	d001      	beq.n	8002974 <HAL_RCC_ClockConfig+0x3c>
 8002970:	2301      	movs	r3, #1
 8002972:	e0b8      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	f003 0302 	and.w	r3, r3, #2
 800297c:	2b00      	cmp	r3, #0
 800297e:	d020      	beq.n	80029c2 <HAL_RCC_ClockConfig+0x8a>
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	f003 0304 	and.w	r3, r3, #4
 8002988:	2b00      	cmp	r3, #0
 800298a:	d005      	beq.n	8002998 <HAL_RCC_ClockConfig+0x60>
 800298c:	4b59      	ldr	r3, [pc, #356]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 800298e:	689b      	ldr	r3, [r3, #8]
 8002990:	4a58      	ldr	r2, [pc, #352]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002992:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002996:	6093      	str	r3, [r2, #8]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	f003 0308 	and.w	r3, r3, #8
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d005      	beq.n	80029b0 <HAL_RCC_ClockConfig+0x78>
 80029a4:	4b53      	ldr	r3, [pc, #332]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029a6:	689b      	ldr	r3, [r3, #8]
 80029a8:	4a52      	ldr	r2, [pc, #328]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029aa:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80029ae:	6093      	str	r3, [r2, #8]
 80029b0:	4b50      	ldr	r3, [pc, #320]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029b2:	689b      	ldr	r3, [r3, #8]
 80029b4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	689b      	ldr	r3, [r3, #8]
 80029bc:	494d      	ldr	r1, [pc, #308]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029be:	4313      	orrs	r3, r2
 80029c0:	608b      	str	r3, [r1, #8]
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	f003 0301 	and.w	r3, r3, #1
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	d044      	beq.n	8002a58 <HAL_RCC_ClockConfig+0x120>
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	685b      	ldr	r3, [r3, #4]
 80029d2:	2b01      	cmp	r3, #1
 80029d4:	d107      	bne.n	80029e6 <HAL_RCC_ClockConfig+0xae>
 80029d6:	4b47      	ldr	r3, [pc, #284]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d119      	bne.n	8002a16 <HAL_RCC_ClockConfig+0xde>
 80029e2:	2301      	movs	r3, #1
 80029e4:	e07f      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	685b      	ldr	r3, [r3, #4]
 80029ea:	2b02      	cmp	r3, #2
 80029ec:	d003      	beq.n	80029f6 <HAL_RCC_ClockConfig+0xbe>
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	685b      	ldr	r3, [r3, #4]
 80029f2:	2b03      	cmp	r3, #3
 80029f4:	d107      	bne.n	8002a06 <HAL_RCC_ClockConfig+0xce>
 80029f6:	4b3f      	ldr	r3, [pc, #252]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d109      	bne.n	8002a16 <HAL_RCC_ClockConfig+0xde>
 8002a02:	2301      	movs	r3, #1
 8002a04:	e06f      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 8002a06:	4b3b      	ldr	r3, [pc, #236]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	f003 0302 	and.w	r3, r3, #2
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d101      	bne.n	8002a16 <HAL_RCC_ClockConfig+0xde>
 8002a12:	2301      	movs	r3, #1
 8002a14:	e067      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 8002a16:	4b37      	ldr	r3, [pc, #220]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a18:	689b      	ldr	r3, [r3, #8]
 8002a1a:	f023 0203 	bic.w	r2, r3, #3
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	685b      	ldr	r3, [r3, #4]
 8002a22:	4934      	ldr	r1, [pc, #208]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a24:	4313      	orrs	r3, r2
 8002a26:	608b      	str	r3, [r1, #8]
 8002a28:	f7ff fc04 	bl	8002234 <HAL_GetTick>
 8002a2c:	60f8      	str	r0, [r7, #12]
 8002a2e:	e00a      	b.n	8002a46 <HAL_RCC_ClockConfig+0x10e>
 8002a30:	f7ff fc00 	bl	8002234 <HAL_GetTick>
 8002a34:	4602      	mov	r2, r0
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	1ad3      	subs	r3, r2, r3
 8002a3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002a3e:	4293      	cmp	r3, r2
 8002a40:	d901      	bls.n	8002a46 <HAL_RCC_ClockConfig+0x10e>
 8002a42:	2303      	movs	r3, #3
 8002a44:	e04f      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 8002a46:	4b2b      	ldr	r3, [pc, #172]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a48:	689b      	ldr	r3, [r3, #8]
 8002a4a:	f003 020c 	and.w	r2, r3, #12
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	685b      	ldr	r3, [r3, #4]
 8002a52:	009b      	lsls	r3, r3, #2
 8002a54:	429a      	cmp	r2, r3
 8002a56:	d1eb      	bne.n	8002a30 <HAL_RCC_ClockConfig+0xf8>
 8002a58:	4b25      	ldr	r3, [pc, #148]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	f003 030f 	and.w	r3, r3, #15
 8002a60:	683a      	ldr	r2, [r7, #0]
 8002a62:	429a      	cmp	r2, r3
 8002a64:	d20c      	bcs.n	8002a80 <HAL_RCC_ClockConfig+0x148>
 8002a66:	4b22      	ldr	r3, [pc, #136]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a68:	683a      	ldr	r2, [r7, #0]
 8002a6a:	b2d2      	uxtb	r2, r2
 8002a6c:	701a      	strb	r2, [r3, #0]
 8002a6e:	4b20      	ldr	r3, [pc, #128]	@ (8002af0 <HAL_RCC_ClockConfig+0x1b8>)
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	f003 030f 	and.w	r3, r3, #15
 8002a76:	683a      	ldr	r2, [r7, #0]
 8002a78:	429a      	cmp	r2, r3
 8002a7a:	d001      	beq.n	8002a80 <HAL_RCC_ClockConfig+0x148>
 8002a7c:	2301      	movs	r3, #1
 8002a7e:	e032      	b.n	8002ae6 <HAL_RCC_ClockConfig+0x1ae>
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	681b      	ldr	r3, [r3, #0]
 8002a84:	f003 0304 	and.w	r3, r3, #4
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d008      	beq.n	8002a9e <HAL_RCC_ClockConfig+0x166>
 8002a8c:	4b19      	ldr	r3, [pc, #100]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a8e:	689b      	ldr	r3, [r3, #8]
 8002a90:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	68db      	ldr	r3, [r3, #12]
 8002a98:	4916      	ldr	r1, [pc, #88]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002a9a:	4313      	orrs	r3, r2
 8002a9c:	608b      	str	r3, [r1, #8]
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	f003 0308 	and.w	r3, r3, #8
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	d009      	beq.n	8002abe <HAL_RCC_ClockConfig+0x186>
 8002aaa:	4b12      	ldr	r3, [pc, #72]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002aac:	689b      	ldr	r3, [r3, #8]
 8002aae:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	691b      	ldr	r3, [r3, #16]
 8002ab6:	00db      	lsls	r3, r3, #3
 8002ab8:	490e      	ldr	r1, [pc, #56]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002aba:	4313      	orrs	r3, r2
 8002abc:	608b      	str	r3, [r1, #8]
 8002abe:	f000 f855 	bl	8002b6c <HAL_RCC_GetSysClockFreq>
 8002ac2:	4602      	mov	r2, r0
 8002ac4:	4b0b      	ldr	r3, [pc, #44]	@ (8002af4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ac6:	689b      	ldr	r3, [r3, #8]
 8002ac8:	091b      	lsrs	r3, r3, #4
 8002aca:	f003 030f 	and.w	r3, r3, #15
 8002ace:	490a      	ldr	r1, [pc, #40]	@ (8002af8 <HAL_RCC_ClockConfig+0x1c0>)
 8002ad0:	5ccb      	ldrb	r3, [r1, r3]
 8002ad2:	fa22 f303 	lsr.w	r3, r2, r3
 8002ad6:	4a09      	ldr	r2, [pc, #36]	@ (8002afc <HAL_RCC_ClockConfig+0x1c4>)
 8002ad8:	6013      	str	r3, [r2, #0]
 8002ada:	4b09      	ldr	r3, [pc, #36]	@ (8002b00 <HAL_RCC_ClockConfig+0x1c8>)
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	4618      	mov	r0, r3
 8002ae0:	f7ff fb64 	bl	80021ac <HAL_InitTick>
 8002ae4:	2300      	movs	r3, #0
 8002ae6:	4618      	mov	r0, r3
 8002ae8:	3710      	adds	r7, #16
 8002aea:	46bd      	mov	sp, r7
 8002aec:	bd80      	pop	{r7, pc}
 8002aee:	bf00      	nop
 8002af0:	40023c00 	.word	0x40023c00
 8002af4:	40023800 	.word	0x40023800
 8002af8:	08004464 	.word	0x08004464
 8002afc:	200027cc 	.word	0x200027cc
 8002b00:	200027d0 	.word	0x200027d0

08002b04 <HAL_RCC_GetHCLKFreq>:
 8002b04:	b480      	push	{r7}
 8002b06:	af00      	add	r7, sp, #0
 8002b08:	4b03      	ldr	r3, [pc, #12]	@ (8002b18 <HAL_RCC_GetHCLKFreq+0x14>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	4618      	mov	r0, r3
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b14:	4770      	bx	lr
 8002b16:	bf00      	nop
 8002b18:	200027cc 	.word	0x200027cc

08002b1c <HAL_RCC_GetPCLK1Freq>:
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	af00      	add	r7, sp, #0
 8002b20:	f7ff fff0 	bl	8002b04 <HAL_RCC_GetHCLKFreq>
 8002b24:	4602      	mov	r2, r0
 8002b26:	4b05      	ldr	r3, [pc, #20]	@ (8002b3c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002b28:	689b      	ldr	r3, [r3, #8]
 8002b2a:	0a9b      	lsrs	r3, r3, #10
 8002b2c:	f003 0307 	and.w	r3, r3, #7
 8002b30:	4903      	ldr	r1, [pc, #12]	@ (8002b40 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002b32:	5ccb      	ldrb	r3, [r1, r3]
 8002b34:	fa22 f303 	lsr.w	r3, r2, r3
 8002b38:	4618      	mov	r0, r3
 8002b3a:	bd80      	pop	{r7, pc}
 8002b3c:	40023800 	.word	0x40023800
 8002b40:	08004474 	.word	0x08004474

08002b44 <HAL_RCC_GetPCLK2Freq>:
 8002b44:	b580      	push	{r7, lr}
 8002b46:	af00      	add	r7, sp, #0
 8002b48:	f7ff ffdc 	bl	8002b04 <HAL_RCC_GetHCLKFreq>
 8002b4c:	4602      	mov	r2, r0
 8002b4e:	4b05      	ldr	r3, [pc, #20]	@ (8002b64 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002b50:	689b      	ldr	r3, [r3, #8]
 8002b52:	0b5b      	lsrs	r3, r3, #13
 8002b54:	f003 0307 	and.w	r3, r3, #7
 8002b58:	4903      	ldr	r1, [pc, #12]	@ (8002b68 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002b5a:	5ccb      	ldrb	r3, [r1, r3]
 8002b5c:	fa22 f303 	lsr.w	r3, r2, r3
 8002b60:	4618      	mov	r0, r3
 8002b62:	bd80      	pop	{r7, pc}
 8002b64:	40023800 	.word	0x40023800
 8002b68:	08004474 	.word	0x08004474

08002b6c <HAL_RCC_GetSysClockFreq>:
 8002b6c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002b70:	b0a6      	sub	sp, #152	@ 0x98
 8002b72:	af00      	add	r7, sp, #0
 8002b74:	2300      	movs	r3, #0
 8002b76:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002b7a:	2300      	movs	r3, #0
 8002b7c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002b80:	2300      	movs	r3, #0
 8002b82:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002b86:	2300      	movs	r3, #0
 8002b88:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002b92:	4bc8      	ldr	r3, [pc, #800]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002b94:	689b      	ldr	r3, [r3, #8]
 8002b96:	f003 030c 	and.w	r3, r3, #12
 8002b9a:	2b0c      	cmp	r3, #12
 8002b9c:	f200 817e 	bhi.w	8002e9c <HAL_RCC_GetSysClockFreq+0x330>
 8002ba0:	a201      	add	r2, pc, #4	@ (adr r2, 8002ba8 <HAL_RCC_GetSysClockFreq+0x3c>)
 8002ba2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ba6:	bf00      	nop
 8002ba8:	08002bdd 	.word	0x08002bdd
 8002bac:	08002e9d 	.word	0x08002e9d
 8002bb0:	08002e9d 	.word	0x08002e9d
 8002bb4:	08002e9d 	.word	0x08002e9d
 8002bb8:	08002be5 	.word	0x08002be5
 8002bbc:	08002e9d 	.word	0x08002e9d
 8002bc0:	08002e9d 	.word	0x08002e9d
 8002bc4:	08002e9d 	.word	0x08002e9d
 8002bc8:	08002bed 	.word	0x08002bed
 8002bcc:	08002e9d 	.word	0x08002e9d
 8002bd0:	08002e9d 	.word	0x08002e9d
 8002bd4:	08002e9d 	.word	0x08002e9d
 8002bd8:	08002d57 	.word	0x08002d57
 8002bdc:	4bb6      	ldr	r3, [pc, #728]	@ (8002eb8 <HAL_RCC_GetSysClockFreq+0x34c>)
 8002bde:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002be2:	e15f      	b.n	8002ea4 <HAL_RCC_GetSysClockFreq+0x338>
 8002be4:	4bb5      	ldr	r3, [pc, #724]	@ (8002ebc <HAL_RCC_GetSysClockFreq+0x350>)
 8002be6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002bea:	e15b      	b.n	8002ea4 <HAL_RCC_GetSysClockFreq+0x338>
 8002bec:	4bb1      	ldr	r3, [pc, #708]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002bee:	685b      	ldr	r3, [r3, #4]
 8002bf0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002bf4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002bf8:	4bae      	ldr	r3, [pc, #696]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002bfa:	685b      	ldr	r3, [r3, #4]
 8002bfc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002c00:	2b00      	cmp	r3, #0
 8002c02:	d031      	beq.n	8002c68 <HAL_RCC_GetSysClockFreq+0xfc>
 8002c04:	4bab      	ldr	r3, [pc, #684]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002c06:	685b      	ldr	r3, [r3, #4]
 8002c08:	099b      	lsrs	r3, r3, #6
 8002c0a:	2200      	movs	r2, #0
 8002c0c:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002c0e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8002c10:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8002c12:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002c16:	663b      	str	r3, [r7, #96]	@ 0x60
 8002c18:	2300      	movs	r3, #0
 8002c1a:	667b      	str	r3, [r7, #100]	@ 0x64
 8002c1c:	4ba7      	ldr	r3, [pc, #668]	@ (8002ebc <HAL_RCC_GetSysClockFreq+0x350>)
 8002c1e:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8002c22:	462a      	mov	r2, r5
 8002c24:	fb03 f202 	mul.w	r2, r3, r2
 8002c28:	2300      	movs	r3, #0
 8002c2a:	4621      	mov	r1, r4
 8002c2c:	fb01 f303 	mul.w	r3, r1, r3
 8002c30:	4413      	add	r3, r2
 8002c32:	4aa2      	ldr	r2, [pc, #648]	@ (8002ebc <HAL_RCC_GetSysClockFreq+0x350>)
 8002c34:	4621      	mov	r1, r4
 8002c36:	fba1 1202 	umull	r1, r2, r1, r2
 8002c3a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8002c3c:	460a      	mov	r2, r1
 8002c3e:	67ba      	str	r2, [r7, #120]	@ 0x78
 8002c40:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8002c42:	4413      	add	r3, r2
 8002c44:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002c46:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002c4a:	2200      	movs	r2, #0
 8002c4c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002c4e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8002c50:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002c54:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8002c58:	f7fd fad4 	bl	8000204 <__aeabi_uldivmod>
 8002c5c:	4602      	mov	r2, r0
 8002c5e:	460b      	mov	r3, r1
 8002c60:	4613      	mov	r3, r2
 8002c62:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002c66:	e064      	b.n	8002d32 <HAL_RCC_GetSysClockFreq+0x1c6>
 8002c68:	4b92      	ldr	r3, [pc, #584]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002c6a:	685b      	ldr	r3, [r3, #4]
 8002c6c:	099b      	lsrs	r3, r3, #6
 8002c6e:	2200      	movs	r2, #0
 8002c70:	653b      	str	r3, [r7, #80]	@ 0x50
 8002c72:	657a      	str	r2, [r7, #84]	@ 0x54
 8002c74:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002c76:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002c7a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002c7c:	2300      	movs	r3, #0
 8002c7e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002c80:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8002c84:	4622      	mov	r2, r4
 8002c86:	462b      	mov	r3, r5
 8002c88:	f04f 0000 	mov.w	r0, #0
 8002c8c:	f04f 0100 	mov.w	r1, #0
 8002c90:	0159      	lsls	r1, r3, #5
 8002c92:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002c96:	0150      	lsls	r0, r2, #5
 8002c98:	4602      	mov	r2, r0
 8002c9a:	460b      	mov	r3, r1
 8002c9c:	4621      	mov	r1, r4
 8002c9e:	1a51      	subs	r1, r2, r1
 8002ca0:	6139      	str	r1, [r7, #16]
 8002ca2:	4629      	mov	r1, r5
 8002ca4:	eb63 0301 	sbc.w	r3, r3, r1
 8002ca8:	617b      	str	r3, [r7, #20]
 8002caa:	f04f 0200 	mov.w	r2, #0
 8002cae:	f04f 0300 	mov.w	r3, #0
 8002cb2:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002cb6:	4659      	mov	r1, fp
 8002cb8:	018b      	lsls	r3, r1, #6
 8002cba:	4651      	mov	r1, sl
 8002cbc:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002cc0:	4651      	mov	r1, sl
 8002cc2:	018a      	lsls	r2, r1, #6
 8002cc4:	4651      	mov	r1, sl
 8002cc6:	ebb2 0801 	subs.w	r8, r2, r1
 8002cca:	4659      	mov	r1, fp
 8002ccc:	eb63 0901 	sbc.w	r9, r3, r1
 8002cd0:	f04f 0200 	mov.w	r2, #0
 8002cd4:	f04f 0300 	mov.w	r3, #0
 8002cd8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002cdc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002ce0:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002ce4:	4690      	mov	r8, r2
 8002ce6:	4699      	mov	r9, r3
 8002ce8:	4623      	mov	r3, r4
 8002cea:	eb18 0303 	adds.w	r3, r8, r3
 8002cee:	60bb      	str	r3, [r7, #8]
 8002cf0:	462b      	mov	r3, r5
 8002cf2:	eb49 0303 	adc.w	r3, r9, r3
 8002cf6:	60fb      	str	r3, [r7, #12]
 8002cf8:	f04f 0200 	mov.w	r2, #0
 8002cfc:	f04f 0300 	mov.w	r3, #0
 8002d00:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002d04:	4629      	mov	r1, r5
 8002d06:	028b      	lsls	r3, r1, #10
 8002d08:	4621      	mov	r1, r4
 8002d0a:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002d0e:	4621      	mov	r1, r4
 8002d10:	028a      	lsls	r2, r1, #10
 8002d12:	4610      	mov	r0, r2
 8002d14:	4619      	mov	r1, r3
 8002d16:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002d1a:	2200      	movs	r2, #0
 8002d1c:	643b      	str	r3, [r7, #64]	@ 0x40
 8002d1e:	647a      	str	r2, [r7, #68]	@ 0x44
 8002d20:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8002d24:	f7fd fa6e 	bl	8000204 <__aeabi_uldivmod>
 8002d28:	4602      	mov	r2, r0
 8002d2a:	460b      	mov	r3, r1
 8002d2c:	4613      	mov	r3, r2
 8002d2e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002d32:	4b60      	ldr	r3, [pc, #384]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002d34:	685b      	ldr	r3, [r3, #4]
 8002d36:	0c1b      	lsrs	r3, r3, #16
 8002d38:	f003 0303 	and.w	r3, r3, #3
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	005b      	lsls	r3, r3, #1
 8002d40:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002d44:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8002d48:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002d4c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d50:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002d54:	e0a6      	b.n	8002ea4 <HAL_RCC_GetSysClockFreq+0x338>
 8002d56:	4b57      	ldr	r3, [pc, #348]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002d58:	685b      	ldr	r3, [r3, #4]
 8002d5a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002d5e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002d62:	4b54      	ldr	r3, [pc, #336]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002d64:	685b      	ldr	r3, [r3, #4]
 8002d66:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d02a      	beq.n	8002dc4 <HAL_RCC_GetSysClockFreq+0x258>
 8002d6e:	4b51      	ldr	r3, [pc, #324]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002d70:	685b      	ldr	r3, [r3, #4]
 8002d72:	099b      	lsrs	r3, r3, #6
 8002d74:	2200      	movs	r2, #0
 8002d76:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002d78:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8002d7a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002d7c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002d80:	2100      	movs	r1, #0
 8002d82:	4b4e      	ldr	r3, [pc, #312]	@ (8002ebc <HAL_RCC_GetSysClockFreq+0x350>)
 8002d84:	fb03 f201 	mul.w	r2, r3, r1
 8002d88:	2300      	movs	r3, #0
 8002d8a:	fb00 f303 	mul.w	r3, r0, r3
 8002d8e:	4413      	add	r3, r2
 8002d90:	4a4a      	ldr	r2, [pc, #296]	@ (8002ebc <HAL_RCC_GetSysClockFreq+0x350>)
 8002d92:	fba0 1202 	umull	r1, r2, r0, r2
 8002d96:	677a      	str	r2, [r7, #116]	@ 0x74
 8002d98:	460a      	mov	r2, r1
 8002d9a:	673a      	str	r2, [r7, #112]	@ 0x70
 8002d9c:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8002d9e:	4413      	add	r3, r2
 8002da0:	677b      	str	r3, [r7, #116]	@ 0x74
 8002da2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002da6:	2200      	movs	r2, #0
 8002da8:	633b      	str	r3, [r7, #48]	@ 0x30
 8002daa:	637a      	str	r2, [r7, #52]	@ 0x34
 8002dac:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8002db0:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8002db4:	f7fd fa26 	bl	8000204 <__aeabi_uldivmod>
 8002db8:	4602      	mov	r2, r0
 8002dba:	460b      	mov	r3, r1
 8002dbc:	4613      	mov	r3, r2
 8002dbe:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002dc2:	e05b      	b.n	8002e7c <HAL_RCC_GetSysClockFreq+0x310>
 8002dc4:	4b3b      	ldr	r3, [pc, #236]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002dc6:	685b      	ldr	r3, [r3, #4]
 8002dc8:	099b      	lsrs	r3, r3, #6
 8002dca:	2200      	movs	r2, #0
 8002dcc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002dce:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002dd0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002dd2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002dd6:	623b      	str	r3, [r7, #32]
 8002dd8:	2300      	movs	r3, #0
 8002dda:	627b      	str	r3, [r7, #36]	@ 0x24
 8002ddc:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002de0:	4642      	mov	r2, r8
 8002de2:	464b      	mov	r3, r9
 8002de4:	f04f 0000 	mov.w	r0, #0
 8002de8:	f04f 0100 	mov.w	r1, #0
 8002dec:	0159      	lsls	r1, r3, #5
 8002dee:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002df2:	0150      	lsls	r0, r2, #5
 8002df4:	4602      	mov	r2, r0
 8002df6:	460b      	mov	r3, r1
 8002df8:	4641      	mov	r1, r8
 8002dfa:	ebb2 0a01 	subs.w	sl, r2, r1
 8002dfe:	4649      	mov	r1, r9
 8002e00:	eb63 0b01 	sbc.w	fp, r3, r1
 8002e04:	f04f 0200 	mov.w	r2, #0
 8002e08:	f04f 0300 	mov.w	r3, #0
 8002e0c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002e10:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002e14:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002e18:	ebb2 040a 	subs.w	r4, r2, sl
 8002e1c:	eb63 050b 	sbc.w	r5, r3, fp
 8002e20:	f04f 0200 	mov.w	r2, #0
 8002e24:	f04f 0300 	mov.w	r3, #0
 8002e28:	00eb      	lsls	r3, r5, #3
 8002e2a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002e2e:	00e2      	lsls	r2, r4, #3
 8002e30:	4614      	mov	r4, r2
 8002e32:	461d      	mov	r5, r3
 8002e34:	4643      	mov	r3, r8
 8002e36:	18e3      	adds	r3, r4, r3
 8002e38:	603b      	str	r3, [r7, #0]
 8002e3a:	464b      	mov	r3, r9
 8002e3c:	eb45 0303 	adc.w	r3, r5, r3
 8002e40:	607b      	str	r3, [r7, #4]
 8002e42:	f04f 0200 	mov.w	r2, #0
 8002e46:	f04f 0300 	mov.w	r3, #0
 8002e4a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002e4e:	4629      	mov	r1, r5
 8002e50:	028b      	lsls	r3, r1, #10
 8002e52:	4621      	mov	r1, r4
 8002e54:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002e58:	4621      	mov	r1, r4
 8002e5a:	028a      	lsls	r2, r1, #10
 8002e5c:	4610      	mov	r0, r2
 8002e5e:	4619      	mov	r1, r3
 8002e60:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002e64:	2200      	movs	r2, #0
 8002e66:	61bb      	str	r3, [r7, #24]
 8002e68:	61fa      	str	r2, [r7, #28]
 8002e6a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002e6e:	f7fd f9c9 	bl	8000204 <__aeabi_uldivmod>
 8002e72:	4602      	mov	r2, r0
 8002e74:	460b      	mov	r3, r1
 8002e76:	4613      	mov	r3, r2
 8002e78:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002e7c:	4b0d      	ldr	r3, [pc, #52]	@ (8002eb4 <HAL_RCC_GetSysClockFreq+0x348>)
 8002e7e:	685b      	ldr	r3, [r3, #4]
 8002e80:	0f1b      	lsrs	r3, r3, #28
 8002e82:	f003 0307 	and.w	r3, r3, #7
 8002e86:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002e8a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8002e8e:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002e92:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e96:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002e9a:	e003      	b.n	8002ea4 <HAL_RCC_GetSysClockFreq+0x338>
 8002e9c:	4b06      	ldr	r3, [pc, #24]	@ (8002eb8 <HAL_RCC_GetSysClockFreq+0x34c>)
 8002e9e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002ea2:	bf00      	nop
 8002ea4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002ea8:	4618      	mov	r0, r3
 8002eaa:	3798      	adds	r7, #152	@ 0x98
 8002eac:	46bd      	mov	sp, r7
 8002eae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002eb2:	bf00      	nop
 8002eb4:	40023800 	.word	0x40023800
 8002eb8:	00f42400 	.word	0x00f42400
 8002ebc:	017d7840 	.word	0x017d7840

08002ec0 <HAL_RCC_OscConfig>:
 8002ec0:	b580      	push	{r7, lr}
 8002ec2:	b086      	sub	sp, #24
 8002ec4:	af00      	add	r7, sp, #0
 8002ec6:	6078      	str	r0, [r7, #4]
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d101      	bne.n	8002ed2 <HAL_RCC_OscConfig+0x12>
 8002ece:	2301      	movs	r3, #1
 8002ed0:	e28d      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	f003 0301 	and.w	r3, r3, #1
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	f000 8083 	beq.w	8002fe6 <HAL_RCC_OscConfig+0x126>
 8002ee0:	4b94      	ldr	r3, [pc, #592]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002ee2:	689b      	ldr	r3, [r3, #8]
 8002ee4:	f003 030c 	and.w	r3, r3, #12
 8002ee8:	2b04      	cmp	r3, #4
 8002eea:	d019      	beq.n	8002f20 <HAL_RCC_OscConfig+0x60>
 8002eec:	4b91      	ldr	r3, [pc, #580]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002eee:	689b      	ldr	r3, [r3, #8]
 8002ef0:	f003 030c 	and.w	r3, r3, #12
 8002ef4:	2b08      	cmp	r3, #8
 8002ef6:	d106      	bne.n	8002f06 <HAL_RCC_OscConfig+0x46>
 8002ef8:	4b8e      	ldr	r3, [pc, #568]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002efa:	685b      	ldr	r3, [r3, #4]
 8002efc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002f00:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002f04:	d00c      	beq.n	8002f20 <HAL_RCC_OscConfig+0x60>
 8002f06:	4b8b      	ldr	r3, [pc, #556]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f08:	689b      	ldr	r3, [r3, #8]
 8002f0a:	f003 030c 	and.w	r3, r3, #12
 8002f0e:	2b0c      	cmp	r3, #12
 8002f10:	d112      	bne.n	8002f38 <HAL_RCC_OscConfig+0x78>
 8002f12:	4b88      	ldr	r3, [pc, #544]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f14:	685b      	ldr	r3, [r3, #4]
 8002f16:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002f1a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002f1e:	d10b      	bne.n	8002f38 <HAL_RCC_OscConfig+0x78>
 8002f20:	4b84      	ldr	r3, [pc, #528]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	d05b      	beq.n	8002fe4 <HAL_RCC_OscConfig+0x124>
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	685b      	ldr	r3, [r3, #4]
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d157      	bne.n	8002fe4 <HAL_RCC_OscConfig+0x124>
 8002f34:	2301      	movs	r3, #1
 8002f36:	e25a      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	685b      	ldr	r3, [r3, #4]
 8002f3c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002f40:	d106      	bne.n	8002f50 <HAL_RCC_OscConfig+0x90>
 8002f42:	4b7c      	ldr	r3, [pc, #496]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	4a7b      	ldr	r2, [pc, #492]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f48:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f4c:	6013      	str	r3, [r2, #0]
 8002f4e:	e01d      	b.n	8002f8c <HAL_RCC_OscConfig+0xcc>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	685b      	ldr	r3, [r3, #4]
 8002f54:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002f58:	d10c      	bne.n	8002f74 <HAL_RCC_OscConfig+0xb4>
 8002f5a:	4b76      	ldr	r3, [pc, #472]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4a75      	ldr	r2, [pc, #468]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f60:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002f64:	6013      	str	r3, [r2, #0]
 8002f66:	4b73      	ldr	r3, [pc, #460]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	4a72      	ldr	r2, [pc, #456]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f6c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002f70:	6013      	str	r3, [r2, #0]
 8002f72:	e00b      	b.n	8002f8c <HAL_RCC_OscConfig+0xcc>
 8002f74:	4b6f      	ldr	r3, [pc, #444]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	4a6e      	ldr	r2, [pc, #440]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f7a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002f7e:	6013      	str	r3, [r2, #0]
 8002f80:	4b6c      	ldr	r3, [pc, #432]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	4a6b      	ldr	r2, [pc, #428]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002f86:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002f8a:	6013      	str	r3, [r2, #0]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	685b      	ldr	r3, [r3, #4]
 8002f90:	2b00      	cmp	r3, #0
 8002f92:	d013      	beq.n	8002fbc <HAL_RCC_OscConfig+0xfc>
 8002f94:	f7ff f94e 	bl	8002234 <HAL_GetTick>
 8002f98:	6138      	str	r0, [r7, #16]
 8002f9a:	e008      	b.n	8002fae <HAL_RCC_OscConfig+0xee>
 8002f9c:	f7ff f94a 	bl	8002234 <HAL_GetTick>
 8002fa0:	4602      	mov	r2, r0
 8002fa2:	693b      	ldr	r3, [r7, #16]
 8002fa4:	1ad3      	subs	r3, r2, r3
 8002fa6:	2b64      	cmp	r3, #100	@ 0x64
 8002fa8:	d901      	bls.n	8002fae <HAL_RCC_OscConfig+0xee>
 8002faa:	2303      	movs	r3, #3
 8002fac:	e21f      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8002fae:	4b61      	ldr	r3, [pc, #388]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d0f0      	beq.n	8002f9c <HAL_RCC_OscConfig+0xdc>
 8002fba:	e014      	b.n	8002fe6 <HAL_RCC_OscConfig+0x126>
 8002fbc:	f7ff f93a 	bl	8002234 <HAL_GetTick>
 8002fc0:	6138      	str	r0, [r7, #16]
 8002fc2:	e008      	b.n	8002fd6 <HAL_RCC_OscConfig+0x116>
 8002fc4:	f7ff f936 	bl	8002234 <HAL_GetTick>
 8002fc8:	4602      	mov	r2, r0
 8002fca:	693b      	ldr	r3, [r7, #16]
 8002fcc:	1ad3      	subs	r3, r2, r3
 8002fce:	2b64      	cmp	r3, #100	@ 0x64
 8002fd0:	d901      	bls.n	8002fd6 <HAL_RCC_OscConfig+0x116>
 8002fd2:	2303      	movs	r3, #3
 8002fd4:	e20b      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8002fd6:	4b57      	ldr	r3, [pc, #348]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d1f0      	bne.n	8002fc4 <HAL_RCC_OscConfig+0x104>
 8002fe2:	e000      	b.n	8002fe6 <HAL_RCC_OscConfig+0x126>
 8002fe4:	bf00      	nop
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	f003 0302 	and.w	r3, r3, #2
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d06f      	beq.n	80030d2 <HAL_RCC_OscConfig+0x212>
 8002ff2:	4b50      	ldr	r3, [pc, #320]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8002ff4:	689b      	ldr	r3, [r3, #8]
 8002ff6:	f003 030c 	and.w	r3, r3, #12
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d017      	beq.n	800302e <HAL_RCC_OscConfig+0x16e>
 8002ffe:	4b4d      	ldr	r3, [pc, #308]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003000:	689b      	ldr	r3, [r3, #8]
 8003002:	f003 030c 	and.w	r3, r3, #12
 8003006:	2b08      	cmp	r3, #8
 8003008:	d105      	bne.n	8003016 <HAL_RCC_OscConfig+0x156>
 800300a:	4b4a      	ldr	r3, [pc, #296]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 800300c:	685b      	ldr	r3, [r3, #4]
 800300e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003012:	2b00      	cmp	r3, #0
 8003014:	d00b      	beq.n	800302e <HAL_RCC_OscConfig+0x16e>
 8003016:	4b47      	ldr	r3, [pc, #284]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003018:	689b      	ldr	r3, [r3, #8]
 800301a:	f003 030c 	and.w	r3, r3, #12
 800301e:	2b0c      	cmp	r3, #12
 8003020:	d11c      	bne.n	800305c <HAL_RCC_OscConfig+0x19c>
 8003022:	4b44      	ldr	r3, [pc, #272]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003024:	685b      	ldr	r3, [r3, #4]
 8003026:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800302a:	2b00      	cmp	r3, #0
 800302c:	d116      	bne.n	800305c <HAL_RCC_OscConfig+0x19c>
 800302e:	4b41      	ldr	r3, [pc, #260]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f003 0302 	and.w	r3, r3, #2
 8003036:	2b00      	cmp	r3, #0
 8003038:	d005      	beq.n	8003046 <HAL_RCC_OscConfig+0x186>
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	68db      	ldr	r3, [r3, #12]
 800303e:	2b01      	cmp	r3, #1
 8003040:	d001      	beq.n	8003046 <HAL_RCC_OscConfig+0x186>
 8003042:	2301      	movs	r3, #1
 8003044:	e1d3      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003046:	4b3b      	ldr	r3, [pc, #236]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	691b      	ldr	r3, [r3, #16]
 8003052:	00db      	lsls	r3, r3, #3
 8003054:	4937      	ldr	r1, [pc, #220]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003056:	4313      	orrs	r3, r2
 8003058:	600b      	str	r3, [r1, #0]
 800305a:	e03a      	b.n	80030d2 <HAL_RCC_OscConfig+0x212>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	68db      	ldr	r3, [r3, #12]
 8003060:	2b00      	cmp	r3, #0
 8003062:	d020      	beq.n	80030a6 <HAL_RCC_OscConfig+0x1e6>
 8003064:	4b34      	ldr	r3, [pc, #208]	@ (8003138 <HAL_RCC_OscConfig+0x278>)
 8003066:	2201      	movs	r2, #1
 8003068:	601a      	str	r2, [r3, #0]
 800306a:	f7ff f8e3 	bl	8002234 <HAL_GetTick>
 800306e:	6138      	str	r0, [r7, #16]
 8003070:	e008      	b.n	8003084 <HAL_RCC_OscConfig+0x1c4>
 8003072:	f7ff f8df 	bl	8002234 <HAL_GetTick>
 8003076:	4602      	mov	r2, r0
 8003078:	693b      	ldr	r3, [r7, #16]
 800307a:	1ad3      	subs	r3, r2, r3
 800307c:	2b02      	cmp	r3, #2
 800307e:	d901      	bls.n	8003084 <HAL_RCC_OscConfig+0x1c4>
 8003080:	2303      	movs	r3, #3
 8003082:	e1b4      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003084:	4b2b      	ldr	r3, [pc, #172]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	f003 0302 	and.w	r3, r3, #2
 800308c:	2b00      	cmp	r3, #0
 800308e:	d0f0      	beq.n	8003072 <HAL_RCC_OscConfig+0x1b2>
 8003090:	4b28      	ldr	r3, [pc, #160]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	691b      	ldr	r3, [r3, #16]
 800309c:	00db      	lsls	r3, r3, #3
 800309e:	4925      	ldr	r1, [pc, #148]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 80030a0:	4313      	orrs	r3, r2
 80030a2:	600b      	str	r3, [r1, #0]
 80030a4:	e015      	b.n	80030d2 <HAL_RCC_OscConfig+0x212>
 80030a6:	4b24      	ldr	r3, [pc, #144]	@ (8003138 <HAL_RCC_OscConfig+0x278>)
 80030a8:	2200      	movs	r2, #0
 80030aa:	601a      	str	r2, [r3, #0]
 80030ac:	f7ff f8c2 	bl	8002234 <HAL_GetTick>
 80030b0:	6138      	str	r0, [r7, #16]
 80030b2:	e008      	b.n	80030c6 <HAL_RCC_OscConfig+0x206>
 80030b4:	f7ff f8be 	bl	8002234 <HAL_GetTick>
 80030b8:	4602      	mov	r2, r0
 80030ba:	693b      	ldr	r3, [r7, #16]
 80030bc:	1ad3      	subs	r3, r2, r3
 80030be:	2b02      	cmp	r3, #2
 80030c0:	d901      	bls.n	80030c6 <HAL_RCC_OscConfig+0x206>
 80030c2:	2303      	movs	r3, #3
 80030c4:	e193      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 80030c6:	4b1b      	ldr	r3, [pc, #108]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	f003 0302 	and.w	r3, r3, #2
 80030ce:	2b00      	cmp	r3, #0
 80030d0:	d1f0      	bne.n	80030b4 <HAL_RCC_OscConfig+0x1f4>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	f003 0308 	and.w	r3, r3, #8
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d036      	beq.n	800314c <HAL_RCC_OscConfig+0x28c>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	695b      	ldr	r3, [r3, #20]
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d016      	beq.n	8003114 <HAL_RCC_OscConfig+0x254>
 80030e6:	4b15      	ldr	r3, [pc, #84]	@ (800313c <HAL_RCC_OscConfig+0x27c>)
 80030e8:	2201      	movs	r2, #1
 80030ea:	601a      	str	r2, [r3, #0]
 80030ec:	f7ff f8a2 	bl	8002234 <HAL_GetTick>
 80030f0:	6138      	str	r0, [r7, #16]
 80030f2:	e008      	b.n	8003106 <HAL_RCC_OscConfig+0x246>
 80030f4:	f7ff f89e 	bl	8002234 <HAL_GetTick>
 80030f8:	4602      	mov	r2, r0
 80030fa:	693b      	ldr	r3, [r7, #16]
 80030fc:	1ad3      	subs	r3, r2, r3
 80030fe:	2b02      	cmp	r3, #2
 8003100:	d901      	bls.n	8003106 <HAL_RCC_OscConfig+0x246>
 8003102:	2303      	movs	r3, #3
 8003104:	e173      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003106:	4b0b      	ldr	r3, [pc, #44]	@ (8003134 <HAL_RCC_OscConfig+0x274>)
 8003108:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800310a:	f003 0302 	and.w	r3, r3, #2
 800310e:	2b00      	cmp	r3, #0
 8003110:	d0f0      	beq.n	80030f4 <HAL_RCC_OscConfig+0x234>
 8003112:	e01b      	b.n	800314c <HAL_RCC_OscConfig+0x28c>
 8003114:	4b09      	ldr	r3, [pc, #36]	@ (800313c <HAL_RCC_OscConfig+0x27c>)
 8003116:	2200      	movs	r2, #0
 8003118:	601a      	str	r2, [r3, #0]
 800311a:	f7ff f88b 	bl	8002234 <HAL_GetTick>
 800311e:	6138      	str	r0, [r7, #16]
 8003120:	e00e      	b.n	8003140 <HAL_RCC_OscConfig+0x280>
 8003122:	f7ff f887 	bl	8002234 <HAL_GetTick>
 8003126:	4602      	mov	r2, r0
 8003128:	693b      	ldr	r3, [r7, #16]
 800312a:	1ad3      	subs	r3, r2, r3
 800312c:	2b02      	cmp	r3, #2
 800312e:	d907      	bls.n	8003140 <HAL_RCC_OscConfig+0x280>
 8003130:	2303      	movs	r3, #3
 8003132:	e15c      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003134:	40023800 	.word	0x40023800
 8003138:	42470000 	.word	0x42470000
 800313c:	42470e80 	.word	0x42470e80
 8003140:	4b8a      	ldr	r3, [pc, #552]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003142:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003144:	f003 0302 	and.w	r3, r3, #2
 8003148:	2b00      	cmp	r3, #0
 800314a:	d1ea      	bne.n	8003122 <HAL_RCC_OscConfig+0x262>
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	f003 0304 	and.w	r3, r3, #4
 8003154:	2b00      	cmp	r3, #0
 8003156:	f000 8097 	beq.w	8003288 <HAL_RCC_OscConfig+0x3c8>
 800315a:	2300      	movs	r3, #0
 800315c:	75fb      	strb	r3, [r7, #23]
 800315e:	4b83      	ldr	r3, [pc, #524]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003160:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003162:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003166:	2b00      	cmp	r3, #0
 8003168:	d10f      	bne.n	800318a <HAL_RCC_OscConfig+0x2ca>
 800316a:	2300      	movs	r3, #0
 800316c:	60bb      	str	r3, [r7, #8]
 800316e:	4b7f      	ldr	r3, [pc, #508]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003170:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003172:	4a7e      	ldr	r2, [pc, #504]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003174:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003178:	6413      	str	r3, [r2, #64]	@ 0x40
 800317a:	4b7c      	ldr	r3, [pc, #496]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 800317c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800317e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003182:	60bb      	str	r3, [r7, #8]
 8003184:	68bb      	ldr	r3, [r7, #8]
 8003186:	2301      	movs	r3, #1
 8003188:	75fb      	strb	r3, [r7, #23]
 800318a:	4b79      	ldr	r3, [pc, #484]	@ (8003370 <HAL_RCC_OscConfig+0x4b0>)
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003192:	2b00      	cmp	r3, #0
 8003194:	d118      	bne.n	80031c8 <HAL_RCC_OscConfig+0x308>
 8003196:	4b76      	ldr	r3, [pc, #472]	@ (8003370 <HAL_RCC_OscConfig+0x4b0>)
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	4a75      	ldr	r2, [pc, #468]	@ (8003370 <HAL_RCC_OscConfig+0x4b0>)
 800319c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80031a0:	6013      	str	r3, [r2, #0]
 80031a2:	f7ff f847 	bl	8002234 <HAL_GetTick>
 80031a6:	6138      	str	r0, [r7, #16]
 80031a8:	e008      	b.n	80031bc <HAL_RCC_OscConfig+0x2fc>
 80031aa:	f7ff f843 	bl	8002234 <HAL_GetTick>
 80031ae:	4602      	mov	r2, r0
 80031b0:	693b      	ldr	r3, [r7, #16]
 80031b2:	1ad3      	subs	r3, r2, r3
 80031b4:	2b02      	cmp	r3, #2
 80031b6:	d901      	bls.n	80031bc <HAL_RCC_OscConfig+0x2fc>
 80031b8:	2303      	movs	r3, #3
 80031ba:	e118      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 80031bc:	4b6c      	ldr	r3, [pc, #432]	@ (8003370 <HAL_RCC_OscConfig+0x4b0>)
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d0f0      	beq.n	80031aa <HAL_RCC_OscConfig+0x2ea>
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	689b      	ldr	r3, [r3, #8]
 80031cc:	2b01      	cmp	r3, #1
 80031ce:	d106      	bne.n	80031de <HAL_RCC_OscConfig+0x31e>
 80031d0:	4b66      	ldr	r3, [pc, #408]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031d2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031d4:	4a65      	ldr	r2, [pc, #404]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031d6:	f043 0301 	orr.w	r3, r3, #1
 80031da:	6713      	str	r3, [r2, #112]	@ 0x70
 80031dc:	e01c      	b.n	8003218 <HAL_RCC_OscConfig+0x358>
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	689b      	ldr	r3, [r3, #8]
 80031e2:	2b05      	cmp	r3, #5
 80031e4:	d10c      	bne.n	8003200 <HAL_RCC_OscConfig+0x340>
 80031e6:	4b61      	ldr	r3, [pc, #388]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031ea:	4a60      	ldr	r2, [pc, #384]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031ec:	f043 0304 	orr.w	r3, r3, #4
 80031f0:	6713      	str	r3, [r2, #112]	@ 0x70
 80031f2:	4b5e      	ldr	r3, [pc, #376]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80031f6:	4a5d      	ldr	r2, [pc, #372]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80031f8:	f043 0301 	orr.w	r3, r3, #1
 80031fc:	6713      	str	r3, [r2, #112]	@ 0x70
 80031fe:	e00b      	b.n	8003218 <HAL_RCC_OscConfig+0x358>
 8003200:	4b5a      	ldr	r3, [pc, #360]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003202:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003204:	4a59      	ldr	r2, [pc, #356]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003206:	f023 0301 	bic.w	r3, r3, #1
 800320a:	6713      	str	r3, [r2, #112]	@ 0x70
 800320c:	4b57      	ldr	r3, [pc, #348]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 800320e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003210:	4a56      	ldr	r2, [pc, #344]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003212:	f023 0304 	bic.w	r3, r3, #4
 8003216:	6713      	str	r3, [r2, #112]	@ 0x70
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	689b      	ldr	r3, [r3, #8]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d015      	beq.n	800324c <HAL_RCC_OscConfig+0x38c>
 8003220:	f7ff f808 	bl	8002234 <HAL_GetTick>
 8003224:	6138      	str	r0, [r7, #16]
 8003226:	e00a      	b.n	800323e <HAL_RCC_OscConfig+0x37e>
 8003228:	f7ff f804 	bl	8002234 <HAL_GetTick>
 800322c:	4602      	mov	r2, r0
 800322e:	693b      	ldr	r3, [r7, #16]
 8003230:	1ad3      	subs	r3, r2, r3
 8003232:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003236:	4293      	cmp	r3, r2
 8003238:	d901      	bls.n	800323e <HAL_RCC_OscConfig+0x37e>
 800323a:	2303      	movs	r3, #3
 800323c:	e0d7      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 800323e:	4b4b      	ldr	r3, [pc, #300]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003240:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003242:	f003 0302 	and.w	r3, r3, #2
 8003246:	2b00      	cmp	r3, #0
 8003248:	d0ee      	beq.n	8003228 <HAL_RCC_OscConfig+0x368>
 800324a:	e014      	b.n	8003276 <HAL_RCC_OscConfig+0x3b6>
 800324c:	f7fe fff2 	bl	8002234 <HAL_GetTick>
 8003250:	6138      	str	r0, [r7, #16]
 8003252:	e00a      	b.n	800326a <HAL_RCC_OscConfig+0x3aa>
 8003254:	f7fe ffee 	bl	8002234 <HAL_GetTick>
 8003258:	4602      	mov	r2, r0
 800325a:	693b      	ldr	r3, [r7, #16]
 800325c:	1ad3      	subs	r3, r2, r3
 800325e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003262:	4293      	cmp	r3, r2
 8003264:	d901      	bls.n	800326a <HAL_RCC_OscConfig+0x3aa>
 8003266:	2303      	movs	r3, #3
 8003268:	e0c1      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 800326a:	4b40      	ldr	r3, [pc, #256]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 800326c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800326e:	f003 0302 	and.w	r3, r3, #2
 8003272:	2b00      	cmp	r3, #0
 8003274:	d1ee      	bne.n	8003254 <HAL_RCC_OscConfig+0x394>
 8003276:	7dfb      	ldrb	r3, [r7, #23]
 8003278:	2b01      	cmp	r3, #1
 800327a:	d105      	bne.n	8003288 <HAL_RCC_OscConfig+0x3c8>
 800327c:	4b3b      	ldr	r3, [pc, #236]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 800327e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003280:	4a3a      	ldr	r2, [pc, #232]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003282:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003286:	6413      	str	r3, [r2, #64]	@ 0x40
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	699b      	ldr	r3, [r3, #24]
 800328c:	2b00      	cmp	r3, #0
 800328e:	f000 80ad 	beq.w	80033ec <HAL_RCC_OscConfig+0x52c>
 8003292:	4b36      	ldr	r3, [pc, #216]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003294:	689b      	ldr	r3, [r3, #8]
 8003296:	f003 030c 	and.w	r3, r3, #12
 800329a:	2b08      	cmp	r3, #8
 800329c:	d060      	beq.n	8003360 <HAL_RCC_OscConfig+0x4a0>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	699b      	ldr	r3, [r3, #24]
 80032a2:	2b02      	cmp	r3, #2
 80032a4:	d145      	bne.n	8003332 <HAL_RCC_OscConfig+0x472>
 80032a6:	4b33      	ldr	r3, [pc, #204]	@ (8003374 <HAL_RCC_OscConfig+0x4b4>)
 80032a8:	2200      	movs	r2, #0
 80032aa:	601a      	str	r2, [r3, #0]
 80032ac:	f7fe ffc2 	bl	8002234 <HAL_GetTick>
 80032b0:	6138      	str	r0, [r7, #16]
 80032b2:	e008      	b.n	80032c6 <HAL_RCC_OscConfig+0x406>
 80032b4:	f7fe ffbe 	bl	8002234 <HAL_GetTick>
 80032b8:	4602      	mov	r2, r0
 80032ba:	693b      	ldr	r3, [r7, #16]
 80032bc:	1ad3      	subs	r3, r2, r3
 80032be:	2b02      	cmp	r3, #2
 80032c0:	d901      	bls.n	80032c6 <HAL_RCC_OscConfig+0x406>
 80032c2:	2303      	movs	r3, #3
 80032c4:	e093      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 80032c6:	4b29      	ldr	r3, [pc, #164]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d1f0      	bne.n	80032b4 <HAL_RCC_OscConfig+0x3f4>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	69da      	ldr	r2, [r3, #28]
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	6a1b      	ldr	r3, [r3, #32]
 80032da:	431a      	orrs	r2, r3
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032e0:	019b      	lsls	r3, r3, #6
 80032e2:	431a      	orrs	r2, r3
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032e8:	085b      	lsrs	r3, r3, #1
 80032ea:	3b01      	subs	r3, #1
 80032ec:	041b      	lsls	r3, r3, #16
 80032ee:	431a      	orrs	r2, r3
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80032f4:	061b      	lsls	r3, r3, #24
 80032f6:	431a      	orrs	r2, r3
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032fc:	071b      	lsls	r3, r3, #28
 80032fe:	491b      	ldr	r1, [pc, #108]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003300:	4313      	orrs	r3, r2
 8003302:	604b      	str	r3, [r1, #4]
 8003304:	4b1b      	ldr	r3, [pc, #108]	@ (8003374 <HAL_RCC_OscConfig+0x4b4>)
 8003306:	2201      	movs	r2, #1
 8003308:	601a      	str	r2, [r3, #0]
 800330a:	f7fe ff93 	bl	8002234 <HAL_GetTick>
 800330e:	6138      	str	r0, [r7, #16]
 8003310:	e008      	b.n	8003324 <HAL_RCC_OscConfig+0x464>
 8003312:	f7fe ff8f 	bl	8002234 <HAL_GetTick>
 8003316:	4602      	mov	r2, r0
 8003318:	693b      	ldr	r3, [r7, #16]
 800331a:	1ad3      	subs	r3, r2, r3
 800331c:	2b02      	cmp	r3, #2
 800331e:	d901      	bls.n	8003324 <HAL_RCC_OscConfig+0x464>
 8003320:	2303      	movs	r3, #3
 8003322:	e064      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003324:	4b11      	ldr	r3, [pc, #68]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800332c:	2b00      	cmp	r3, #0
 800332e:	d0f0      	beq.n	8003312 <HAL_RCC_OscConfig+0x452>
 8003330:	e05c      	b.n	80033ec <HAL_RCC_OscConfig+0x52c>
 8003332:	4b10      	ldr	r3, [pc, #64]	@ (8003374 <HAL_RCC_OscConfig+0x4b4>)
 8003334:	2200      	movs	r2, #0
 8003336:	601a      	str	r2, [r3, #0]
 8003338:	f7fe ff7c 	bl	8002234 <HAL_GetTick>
 800333c:	6138      	str	r0, [r7, #16]
 800333e:	e008      	b.n	8003352 <HAL_RCC_OscConfig+0x492>
 8003340:	f7fe ff78 	bl	8002234 <HAL_GetTick>
 8003344:	4602      	mov	r2, r0
 8003346:	693b      	ldr	r3, [r7, #16]
 8003348:	1ad3      	subs	r3, r2, r3
 800334a:	2b02      	cmp	r3, #2
 800334c:	d901      	bls.n	8003352 <HAL_RCC_OscConfig+0x492>
 800334e:	2303      	movs	r3, #3
 8003350:	e04d      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 8003352:	4b06      	ldr	r3, [pc, #24]	@ (800336c <HAL_RCC_OscConfig+0x4ac>)
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800335a:	2b00      	cmp	r3, #0
 800335c:	d1f0      	bne.n	8003340 <HAL_RCC_OscConfig+0x480>
 800335e:	e045      	b.n	80033ec <HAL_RCC_OscConfig+0x52c>
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	699b      	ldr	r3, [r3, #24]
 8003364:	2b01      	cmp	r3, #1
 8003366:	d107      	bne.n	8003378 <HAL_RCC_OscConfig+0x4b8>
 8003368:	2301      	movs	r3, #1
 800336a:	e040      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 800336c:	40023800 	.word	0x40023800
 8003370:	40007000 	.word	0x40007000
 8003374:	42470060 	.word	0x42470060
 8003378:	4b1f      	ldr	r3, [pc, #124]	@ (80033f8 <HAL_RCC_OscConfig+0x538>)
 800337a:	685b      	ldr	r3, [r3, #4]
 800337c:	60fb      	str	r3, [r7, #12]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	699b      	ldr	r3, [r3, #24]
 8003382:	2b01      	cmp	r3, #1
 8003384:	d030      	beq.n	80033e8 <HAL_RCC_OscConfig+0x528>
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	69db      	ldr	r3, [r3, #28]
 8003390:	429a      	cmp	r2, r3
 8003392:	d129      	bne.n	80033e8 <HAL_RCC_OscConfig+0x528>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	6a1b      	ldr	r3, [r3, #32]
 800339e:	429a      	cmp	r2, r3
 80033a0:	d122      	bne.n	80033e8 <HAL_RCC_OscConfig+0x528>
 80033a2:	68fa      	ldr	r2, [r7, #12]
 80033a4:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80033a8:	4013      	ands	r3, r2
 80033aa:	687a      	ldr	r2, [r7, #4]
 80033ac:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80033ae:	0192      	lsls	r2, r2, #6
 80033b0:	4293      	cmp	r3, r2
 80033b2:	d119      	bne.n	80033e8 <HAL_RCC_OscConfig+0x528>
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80033be:	085b      	lsrs	r3, r3, #1
 80033c0:	3b01      	subs	r3, #1
 80033c2:	041b      	lsls	r3, r3, #16
 80033c4:	429a      	cmp	r2, r3
 80033c6:	d10f      	bne.n	80033e8 <HAL_RCC_OscConfig+0x528>
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80033d2:	061b      	lsls	r3, r3, #24
 80033d4:	429a      	cmp	r2, r3
 80033d6:	d107      	bne.n	80033e8 <HAL_RCC_OscConfig+0x528>
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80033e2:	071b      	lsls	r3, r3, #28
 80033e4:	429a      	cmp	r2, r3
 80033e6:	d001      	beq.n	80033ec <HAL_RCC_OscConfig+0x52c>
 80033e8:	2301      	movs	r3, #1
 80033ea:	e000      	b.n	80033ee <HAL_RCC_OscConfig+0x52e>
 80033ec:	2300      	movs	r3, #0
 80033ee:	4618      	mov	r0, r3
 80033f0:	3718      	adds	r7, #24
 80033f2:	46bd      	mov	sp, r7
 80033f4:	bd80      	pop	{r7, pc}
 80033f6:	bf00      	nop
 80033f8:	40023800 	.word	0x40023800

080033fc <HAL_SPI_Init>:
 80033fc:	b580      	push	{r7, lr}
 80033fe:	b082      	sub	sp, #8
 8003400:	af00      	add	r7, sp, #0
 8003402:	6078      	str	r0, [r7, #4]
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	2b00      	cmp	r3, #0
 8003408:	d101      	bne.n	800340e <HAL_SPI_Init+0x12>
 800340a:	2301      	movs	r3, #1
 800340c:	e07b      	b.n	8003506 <HAL_SPI_Init+0x10a>
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003412:	2b00      	cmp	r3, #0
 8003414:	d108      	bne.n	8003428 <HAL_SPI_Init+0x2c>
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	685b      	ldr	r3, [r3, #4]
 800341a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800341e:	d009      	beq.n	8003434 <HAL_SPI_Init+0x38>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2200      	movs	r2, #0
 8003424:	61da      	str	r2, [r3, #28]
 8003426:	e005      	b.n	8003434 <HAL_SPI_Init+0x38>
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2200      	movs	r2, #0
 800342c:	611a      	str	r2, [r3, #16]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	2200      	movs	r2, #0
 8003432:	615a      	str	r2, [r3, #20]
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	2200      	movs	r2, #0
 8003438:	629a      	str	r2, [r3, #40]	@ 0x28
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003440:	b2db      	uxtb	r3, r3
 8003442:	2b00      	cmp	r3, #0
 8003444:	d106      	bne.n	8003454 <HAL_SPI_Init+0x58>
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	2200      	movs	r2, #0
 800344a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800344e:	6878      	ldr	r0, [r7, #4]
 8003450:	f7fe fd14 	bl	8001e7c <HAL_SPI_MspInit>
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	2202      	movs	r2, #2
 8003458:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	681b      	ldr	r3, [r3, #0]
 8003460:	681a      	ldr	r2, [r3, #0]
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800346a:	601a      	str	r2, [r3, #0]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	685b      	ldr	r3, [r3, #4]
 8003470:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	689b      	ldr	r3, [r3, #8]
 8003478:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800347c:	431a      	orrs	r2, r3
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	68db      	ldr	r3, [r3, #12]
 8003482:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003486:	431a      	orrs	r2, r3
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	691b      	ldr	r3, [r3, #16]
 800348c:	f003 0302 	and.w	r3, r3, #2
 8003490:	431a      	orrs	r2, r3
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	695b      	ldr	r3, [r3, #20]
 8003496:	f003 0301 	and.w	r3, r3, #1
 800349a:	431a      	orrs	r2, r3
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	699b      	ldr	r3, [r3, #24]
 80034a0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80034a4:	431a      	orrs	r2, r3
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	69db      	ldr	r3, [r3, #28]
 80034aa:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80034ae:	431a      	orrs	r2, r3
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	6a1b      	ldr	r3, [r3, #32]
 80034b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80034b8:	ea42 0103 	orr.w	r1, r2, r3
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034c0:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	430a      	orrs	r2, r1
 80034ca:	601a      	str	r2, [r3, #0]
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	699b      	ldr	r3, [r3, #24]
 80034d0:	0c1b      	lsrs	r3, r3, #16
 80034d2:	f003 0104 	and.w	r1, r3, #4
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034da:	f003 0210 	and.w	r2, r3, #16
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	430a      	orrs	r2, r1
 80034e4:	605a      	str	r2, [r3, #4]
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	69da      	ldr	r2, [r3, #28]
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80034f4:	61da      	str	r2, [r3, #28]
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	2200      	movs	r2, #0
 80034fa:	655a      	str	r2, [r3, #84]	@ 0x54
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	2201      	movs	r2, #1
 8003500:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003504:	2300      	movs	r3, #0
 8003506:	4618      	mov	r0, r3
 8003508:	3708      	adds	r7, #8
 800350a:	46bd      	mov	sp, r7
 800350c:	bd80      	pop	{r7, pc}

0800350e <HAL_UART_Init>:
 800350e:	b580      	push	{r7, lr}
 8003510:	b082      	sub	sp, #8
 8003512:	af00      	add	r7, sp, #0
 8003514:	6078      	str	r0, [r7, #4]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	2b00      	cmp	r3, #0
 800351a:	d101      	bne.n	8003520 <HAL_UART_Init+0x12>
 800351c:	2301      	movs	r3, #1
 800351e:	e042      	b.n	80035a6 <HAL_UART_Init+0x98>
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003526:	b2db      	uxtb	r3, r3
 8003528:	2b00      	cmp	r3, #0
 800352a:	d106      	bne.n	800353a <HAL_UART_Init+0x2c>
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	2200      	movs	r2, #0
 8003530:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003534:	6878      	ldr	r0, [r7, #4]
 8003536:	f7fe fce9 	bl	8001f0c <HAL_UART_MspInit>
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	2224      	movs	r2, #36	@ 0x24
 800353e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	68da      	ldr	r2, [r3, #12]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003550:	60da      	str	r2, [r3, #12]
 8003552:	6878      	ldr	r0, [r7, #4]
 8003554:	f000 fcda 	bl	8003f0c <UART_SetConfig>
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	691a      	ldr	r2, [r3, #16]
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003566:	611a      	str	r2, [r3, #16]
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	695a      	ldr	r2, [r3, #20]
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003576:	615a      	str	r2, [r3, #20]
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	68da      	ldr	r2, [r3, #12]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003586:	60da      	str	r2, [r3, #12]
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	2200      	movs	r2, #0
 800358c:	645a      	str	r2, [r3, #68]	@ 0x44
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	2220      	movs	r2, #32
 8003592:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	2220      	movs	r2, #32
 800359a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	2200      	movs	r2, #0
 80035a2:	635a      	str	r2, [r3, #52]	@ 0x34
 80035a4:	2300      	movs	r3, #0
 80035a6:	4618      	mov	r0, r3
 80035a8:	3708      	adds	r7, #8
 80035aa:	46bd      	mov	sp, r7
 80035ac:	bd80      	pop	{r7, pc}

080035ae <HAL_UART_Receive_IT>:
 80035ae:	b580      	push	{r7, lr}
 80035b0:	b084      	sub	sp, #16
 80035b2:	af00      	add	r7, sp, #0
 80035b4:	60f8      	str	r0, [r7, #12]
 80035b6:	60b9      	str	r1, [r7, #8]
 80035b8:	4613      	mov	r3, r2
 80035ba:	80fb      	strh	r3, [r7, #6]
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80035c2:	b2db      	uxtb	r3, r3
 80035c4:	2b20      	cmp	r3, #32
 80035c6:	d112      	bne.n	80035ee <HAL_UART_Receive_IT+0x40>
 80035c8:	68bb      	ldr	r3, [r7, #8]
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d002      	beq.n	80035d4 <HAL_UART_Receive_IT+0x26>
 80035ce:	88fb      	ldrh	r3, [r7, #6]
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d101      	bne.n	80035d8 <HAL_UART_Receive_IT+0x2a>
 80035d4:	2301      	movs	r3, #1
 80035d6:	e00b      	b.n	80035f0 <HAL_UART_Receive_IT+0x42>
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	2200      	movs	r2, #0
 80035dc:	631a      	str	r2, [r3, #48]	@ 0x30
 80035de:	88fb      	ldrh	r3, [r7, #6]
 80035e0:	461a      	mov	r2, r3
 80035e2:	68b9      	ldr	r1, [r7, #8]
 80035e4:	68f8      	ldr	r0, [r7, #12]
 80035e6:	f000 fab9 	bl	8003b5c <UART_Start_Receive_IT>
 80035ea:	4603      	mov	r3, r0
 80035ec:	e000      	b.n	80035f0 <HAL_UART_Receive_IT+0x42>
 80035ee:	2302      	movs	r3, #2
 80035f0:	4618      	mov	r0, r3
 80035f2:	3710      	adds	r7, #16
 80035f4:	46bd      	mov	sp, r7
 80035f6:	bd80      	pop	{r7, pc}

080035f8 <HAL_UART_IRQHandler>:
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b0ba      	sub	sp, #232	@ 0xe8
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	68db      	ldr	r3, [r3, #12]
 8003610:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	695b      	ldr	r3, [r3, #20]
 800361a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800361e:	2300      	movs	r3, #0
 8003620:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003624:	2300      	movs	r3, #0
 8003626:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800362a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800362e:	f003 030f 	and.w	r3, r3, #15
 8003632:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003636:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800363a:	2b00      	cmp	r3, #0
 800363c:	d10f      	bne.n	800365e <HAL_UART_IRQHandler+0x66>
 800363e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003642:	f003 0320 	and.w	r3, r3, #32
 8003646:	2b00      	cmp	r3, #0
 8003648:	d009      	beq.n	800365e <HAL_UART_IRQHandler+0x66>
 800364a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800364e:	f003 0320 	and.w	r3, r3, #32
 8003652:	2b00      	cmp	r3, #0
 8003654:	d003      	beq.n	800365e <HAL_UART_IRQHandler+0x66>
 8003656:	6878      	ldr	r0, [r7, #4]
 8003658:	f000 fb99 	bl	8003d8e <UART_Receive_IT>
 800365c:	e25b      	b.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 800365e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003662:	2b00      	cmp	r3, #0
 8003664:	f000 80de 	beq.w	8003824 <HAL_UART_IRQHandler+0x22c>
 8003668:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800366c:	f003 0301 	and.w	r3, r3, #1
 8003670:	2b00      	cmp	r3, #0
 8003672:	d106      	bne.n	8003682 <HAL_UART_IRQHandler+0x8a>
 8003674:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003678:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 800367c:	2b00      	cmp	r3, #0
 800367e:	f000 80d1 	beq.w	8003824 <HAL_UART_IRQHandler+0x22c>
 8003682:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003686:	f003 0301 	and.w	r3, r3, #1
 800368a:	2b00      	cmp	r3, #0
 800368c:	d00b      	beq.n	80036a6 <HAL_UART_IRQHandler+0xae>
 800368e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003692:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003696:	2b00      	cmp	r3, #0
 8003698:	d005      	beq.n	80036a6 <HAL_UART_IRQHandler+0xae>
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800369e:	f043 0201 	orr.w	r2, r3, #1
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	645a      	str	r2, [r3, #68]	@ 0x44
 80036a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80036aa:	f003 0304 	and.w	r3, r3, #4
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d00b      	beq.n	80036ca <HAL_UART_IRQHandler+0xd2>
 80036b2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80036b6:	f003 0301 	and.w	r3, r3, #1
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d005      	beq.n	80036ca <HAL_UART_IRQHandler+0xd2>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036c2:	f043 0202 	orr.w	r2, r3, #2
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80036ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80036ce:	f003 0302 	and.w	r3, r3, #2
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d00b      	beq.n	80036ee <HAL_UART_IRQHandler+0xf6>
 80036d6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80036da:	f003 0301 	and.w	r3, r3, #1
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d005      	beq.n	80036ee <HAL_UART_IRQHandler+0xf6>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80036e6:	f043 0204 	orr.w	r2, r3, #4
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80036ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80036f2:	f003 0308 	and.w	r3, r3, #8
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	d011      	beq.n	800371e <HAL_UART_IRQHandler+0x126>
 80036fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80036fe:	f003 0320 	and.w	r3, r3, #32
 8003702:	2b00      	cmp	r3, #0
 8003704:	d105      	bne.n	8003712 <HAL_UART_IRQHandler+0x11a>
 8003706:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800370a:	f003 0301 	and.w	r3, r3, #1
 800370e:	2b00      	cmp	r3, #0
 8003710:	d005      	beq.n	800371e <HAL_UART_IRQHandler+0x126>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003716:	f043 0208 	orr.w	r2, r3, #8
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	645a      	str	r2, [r3, #68]	@ 0x44
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003722:	2b00      	cmp	r3, #0
 8003724:	f000 81f2 	beq.w	8003b0c <HAL_UART_IRQHandler+0x514>
 8003728:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800372c:	f003 0320 	and.w	r3, r3, #32
 8003730:	2b00      	cmp	r3, #0
 8003732:	d008      	beq.n	8003746 <HAL_UART_IRQHandler+0x14e>
 8003734:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003738:	f003 0320 	and.w	r3, r3, #32
 800373c:	2b00      	cmp	r3, #0
 800373e:	d002      	beq.n	8003746 <HAL_UART_IRQHandler+0x14e>
 8003740:	6878      	ldr	r0, [r7, #4]
 8003742:	f000 fb24 	bl	8003d8e <UART_Receive_IT>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	695b      	ldr	r3, [r3, #20]
 800374c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003750:	2b40      	cmp	r3, #64	@ 0x40
 8003752:	bf0c      	ite	eq
 8003754:	2301      	moveq	r3, #1
 8003756:	2300      	movne	r3, #0
 8003758:	b2db      	uxtb	r3, r3
 800375a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003762:	f003 0308 	and.w	r3, r3, #8
 8003766:	2b00      	cmp	r3, #0
 8003768:	d103      	bne.n	8003772 <HAL_UART_IRQHandler+0x17a>
 800376a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800376e:	2b00      	cmp	r3, #0
 8003770:	d04f      	beq.n	8003812 <HAL_UART_IRQHandler+0x21a>
 8003772:	6878      	ldr	r0, [r7, #4]
 8003774:	f000 fa2c 	bl	8003bd0 <UART_EndRxTransfer>
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	695b      	ldr	r3, [r3, #20]
 800377e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003782:	2b40      	cmp	r3, #64	@ 0x40
 8003784:	d141      	bne.n	800380a <HAL_UART_IRQHandler+0x212>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	3314      	adds	r3, #20
 800378c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003790:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003794:	e853 3f00 	ldrex	r3, [r3]
 8003798:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800379c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80037a0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80037a4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	3314      	adds	r3, #20
 80037ae:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80037b2:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80037b6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80037ba:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80037be:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80037c2:	e841 2300 	strex	r3, r2, [r1]
 80037c6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80037ca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d1d9      	bne.n	8003786 <HAL_UART_IRQHandler+0x18e>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d013      	beq.n	8003802 <HAL_UART_IRQHandler+0x20a>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037de:	4a7e      	ldr	r2, [pc, #504]	@ (80039d8 <HAL_UART_IRQHandler+0x3e0>)
 80037e0:	651a      	str	r2, [r3, #80]	@ 0x50
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037e6:	4618      	mov	r0, r3
 80037e8:	f7fe fed5 	bl	8002596 <HAL_DMA_Abort_IT>
 80037ec:	4603      	mov	r3, r0
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	d016      	beq.n	8003820 <HAL_UART_IRQHandler+0x228>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80037f6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80037f8:	687a      	ldr	r2, [r7, #4]
 80037fa:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80037fc:	4610      	mov	r0, r2
 80037fe:	4798      	blx	r3
 8003800:	e00e      	b.n	8003820 <HAL_UART_IRQHandler+0x228>
 8003802:	6878      	ldr	r0, [r7, #4]
 8003804:	f000 f994 	bl	8003b30 <HAL_UART_ErrorCallback>
 8003808:	e00a      	b.n	8003820 <HAL_UART_IRQHandler+0x228>
 800380a:	6878      	ldr	r0, [r7, #4]
 800380c:	f000 f990 	bl	8003b30 <HAL_UART_ErrorCallback>
 8003810:	e006      	b.n	8003820 <HAL_UART_IRQHandler+0x228>
 8003812:	6878      	ldr	r0, [r7, #4]
 8003814:	f000 f98c 	bl	8003b30 <HAL_UART_ErrorCallback>
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2200      	movs	r2, #0
 800381c:	645a      	str	r2, [r3, #68]	@ 0x44
 800381e:	e175      	b.n	8003b0c <HAL_UART_IRQHandler+0x514>
 8003820:	bf00      	nop
 8003822:	e173      	b.n	8003b0c <HAL_UART_IRQHandler+0x514>
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003828:	2b01      	cmp	r3, #1
 800382a:	f040 814f 	bne.w	8003acc <HAL_UART_IRQHandler+0x4d4>
 800382e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003832:	f003 0310 	and.w	r3, r3, #16
 8003836:	2b00      	cmp	r3, #0
 8003838:	f000 8148 	beq.w	8003acc <HAL_UART_IRQHandler+0x4d4>
 800383c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003840:	f003 0310 	and.w	r3, r3, #16
 8003844:	2b00      	cmp	r3, #0
 8003846:	f000 8141 	beq.w	8003acc <HAL_UART_IRQHandler+0x4d4>
 800384a:	2300      	movs	r3, #0
 800384c:	60bb      	str	r3, [r7, #8]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	60bb      	str	r3, [r7, #8]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	685b      	ldr	r3, [r3, #4]
 800385c:	60bb      	str	r3, [r7, #8]
 800385e:	68bb      	ldr	r3, [r7, #8]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	695b      	ldr	r3, [r3, #20]
 8003866:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800386a:	2b40      	cmp	r3, #64	@ 0x40
 800386c:	f040 80b6 	bne.w	80039dc <HAL_UART_IRQHandler+0x3e4>
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	685b      	ldr	r3, [r3, #4]
 8003878:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800387c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8003880:	2b00      	cmp	r3, #0
 8003882:	f000 8145 	beq.w	8003b10 <HAL_UART_IRQHandler+0x518>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800388a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800388e:	429a      	cmp	r2, r3
 8003890:	f080 813e 	bcs.w	8003b10 <HAL_UART_IRQHandler+0x518>
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800389a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80038a0:	69db      	ldr	r3, [r3, #28]
 80038a2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80038a6:	f000 8088 	beq.w	80039ba <HAL_UART_IRQHandler+0x3c2>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	330c      	adds	r3, #12
 80038b0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80038b4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80038b8:	e853 3f00 	ldrex	r3, [r3]
 80038bc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80038c0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80038c4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80038c8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	330c      	adds	r3, #12
 80038d2:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80038d6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80038da:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80038de:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80038e2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80038e6:	e841 2300 	strex	r3, r2, [r1]
 80038ea:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80038ee:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d1d9      	bne.n	80038aa <HAL_UART_IRQHandler+0x2b2>
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	3314      	adds	r3, #20
 80038fc:	677b      	str	r3, [r7, #116]	@ 0x74
 80038fe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003900:	e853 3f00 	ldrex	r3, [r3]
 8003904:	673b      	str	r3, [r7, #112]	@ 0x70
 8003906:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003908:	f023 0301 	bic.w	r3, r3, #1
 800390c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	3314      	adds	r3, #20
 8003916:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800391a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800391e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003920:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8003922:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8003926:	e841 2300 	strex	r3, r2, [r1]
 800392a:	67bb      	str	r3, [r7, #120]	@ 0x78
 800392c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800392e:	2b00      	cmp	r3, #0
 8003930:	d1e1      	bne.n	80038f6 <HAL_UART_IRQHandler+0x2fe>
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	3314      	adds	r3, #20
 8003938:	663b      	str	r3, [r7, #96]	@ 0x60
 800393a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800393c:	e853 3f00 	ldrex	r3, [r3]
 8003940:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003942:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003944:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003948:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	3314      	adds	r3, #20
 8003952:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8003956:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003958:	66bb      	str	r3, [r7, #104]	@ 0x68
 800395a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800395c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800395e:	e841 2300 	strex	r3, r2, [r1]
 8003962:	667b      	str	r3, [r7, #100]	@ 0x64
 8003964:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003966:	2b00      	cmp	r3, #0
 8003968:	d1e3      	bne.n	8003932 <HAL_UART_IRQHandler+0x33a>
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	2220      	movs	r2, #32
 800396e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	2200      	movs	r2, #0
 8003976:	631a      	str	r2, [r3, #48]	@ 0x30
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	330c      	adds	r3, #12
 800397e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003980:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003982:	e853 3f00 	ldrex	r3, [r3]
 8003986:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003988:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800398a:	f023 0310 	bic.w	r3, r3, #16
 800398e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	330c      	adds	r3, #12
 8003998:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 800399c:	65ba      	str	r2, [r7, #88]	@ 0x58
 800399e:	657b      	str	r3, [r7, #84]	@ 0x54
 80039a0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80039a2:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80039a4:	e841 2300 	strex	r3, r2, [r1]
 80039a8:	653b      	str	r3, [r7, #80]	@ 0x50
 80039aa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d1e3      	bne.n	8003978 <HAL_UART_IRQHandler+0x380>
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80039b4:	4618      	mov	r0, r3
 80039b6:	f7fe fd7e 	bl	80024b6 <HAL_DMA_Abort>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	2202      	movs	r2, #2
 80039be:	635a      	str	r2, [r3, #52]	@ 0x34
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80039c8:	b29b      	uxth	r3, r3
 80039ca:	1ad3      	subs	r3, r2, r3
 80039cc:	b29b      	uxth	r3, r3
 80039ce:	4619      	mov	r1, r3
 80039d0:	6878      	ldr	r0, [r7, #4]
 80039d2:	f000 f8b7 	bl	8003b44 <HAL_UARTEx_RxEventCallback>
 80039d6:	e09b      	b.n	8003b10 <HAL_UART_IRQHandler+0x518>
 80039d8:	08003c97 	.word	0x08003c97
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80039e4:	b29b      	uxth	r3, r3
 80039e6:	1ad3      	subs	r3, r2, r3
 80039e8:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80039f0:	b29b      	uxth	r3, r3
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	f000 808e 	beq.w	8003b14 <HAL_UART_IRQHandler+0x51c>
 80039f8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	f000 8089 	beq.w	8003b14 <HAL_UART_IRQHandler+0x51c>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	330c      	adds	r3, #12
 8003a08:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003a0a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003a0c:	e853 3f00 	ldrex	r3, [r3]
 8003a10:	637b      	str	r3, [r7, #52]	@ 0x34
 8003a12:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003a14:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003a18:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	330c      	adds	r3, #12
 8003a22:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8003a26:	647a      	str	r2, [r7, #68]	@ 0x44
 8003a28:	643b      	str	r3, [r7, #64]	@ 0x40
 8003a2a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003a2c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003a2e:	e841 2300 	strex	r3, r2, [r1]
 8003a32:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003a34:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d1e3      	bne.n	8003a02 <HAL_UART_IRQHandler+0x40a>
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	3314      	adds	r3, #20
 8003a40:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a44:	e853 3f00 	ldrex	r3, [r3]
 8003a48:	623b      	str	r3, [r7, #32]
 8003a4a:	6a3b      	ldr	r3, [r7, #32]
 8003a4c:	f023 0301 	bic.w	r3, r3, #1
 8003a50:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	3314      	adds	r3, #20
 8003a5a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8003a5e:	633a      	str	r2, [r7, #48]	@ 0x30
 8003a60:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003a62:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8003a64:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003a66:	e841 2300 	strex	r3, r2, [r1]
 8003a6a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003a6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d1e3      	bne.n	8003a3a <HAL_UART_IRQHandler+0x442>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	2220      	movs	r2, #32
 8003a76:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	330c      	adds	r3, #12
 8003a86:	613b      	str	r3, [r7, #16]
 8003a88:	693b      	ldr	r3, [r7, #16]
 8003a8a:	e853 3f00 	ldrex	r3, [r3]
 8003a8e:	60fb      	str	r3, [r7, #12]
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	f023 0310 	bic.w	r3, r3, #16
 8003a96:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	330c      	adds	r3, #12
 8003aa0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8003aa4:	61fa      	str	r2, [r7, #28]
 8003aa6:	61bb      	str	r3, [r7, #24]
 8003aa8:	69b9      	ldr	r1, [r7, #24]
 8003aaa:	69fa      	ldr	r2, [r7, #28]
 8003aac:	e841 2300 	strex	r3, r2, [r1]
 8003ab0:	617b      	str	r3, [r7, #20]
 8003ab2:	697b      	ldr	r3, [r7, #20]
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d1e3      	bne.n	8003a80 <HAL_UART_IRQHandler+0x488>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	2202      	movs	r2, #2
 8003abc:	635a      	str	r2, [r3, #52]	@ 0x34
 8003abe:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003ac2:	4619      	mov	r1, r3
 8003ac4:	6878      	ldr	r0, [r7, #4]
 8003ac6:	f000 f83d 	bl	8003b44 <HAL_UARTEx_RxEventCallback>
 8003aca:	e023      	b.n	8003b14 <HAL_UART_IRQHandler+0x51c>
 8003acc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003ad0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	d009      	beq.n	8003aec <HAL_UART_IRQHandler+0x4f4>
 8003ad8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003adc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d003      	beq.n	8003aec <HAL_UART_IRQHandler+0x4f4>
 8003ae4:	6878      	ldr	r0, [r7, #4]
 8003ae6:	f000 f8ea 	bl	8003cbe <UART_Transmit_IT>
 8003aea:	e014      	b.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003aec:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003af0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d00e      	beq.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003af8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003afc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	d008      	beq.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003b04:	6878      	ldr	r0, [r7, #4]
 8003b06:	f000 f92a 	bl	8003d5e <UART_EndTransmit_IT>
 8003b0a:	e004      	b.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003b0c:	bf00      	nop
 8003b0e:	e002      	b.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003b10:	bf00      	nop
 8003b12:	e000      	b.n	8003b16 <HAL_UART_IRQHandler+0x51e>
 8003b14:	bf00      	nop
 8003b16:	37e8      	adds	r7, #232	@ 0xe8
 8003b18:	46bd      	mov	sp, r7
 8003b1a:	bd80      	pop	{r7, pc}

08003b1c <HAL_UART_TxCpltCallback>:
 8003b1c:	b480      	push	{r7}
 8003b1e:	b083      	sub	sp, #12
 8003b20:	af00      	add	r7, sp, #0
 8003b22:	6078      	str	r0, [r7, #4]
 8003b24:	bf00      	nop
 8003b26:	370c      	adds	r7, #12
 8003b28:	46bd      	mov	sp, r7
 8003b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b2e:	4770      	bx	lr

08003b30 <HAL_UART_ErrorCallback>:
 8003b30:	b480      	push	{r7}
 8003b32:	b083      	sub	sp, #12
 8003b34:	af00      	add	r7, sp, #0
 8003b36:	6078      	str	r0, [r7, #4]
 8003b38:	bf00      	nop
 8003b3a:	370c      	adds	r7, #12
 8003b3c:	46bd      	mov	sp, r7
 8003b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b42:	4770      	bx	lr

08003b44 <HAL_UARTEx_RxEventCallback>:
 8003b44:	b480      	push	{r7}
 8003b46:	b083      	sub	sp, #12
 8003b48:	af00      	add	r7, sp, #0
 8003b4a:	6078      	str	r0, [r7, #4]
 8003b4c:	460b      	mov	r3, r1
 8003b4e:	807b      	strh	r3, [r7, #2]
 8003b50:	bf00      	nop
 8003b52:	370c      	adds	r7, #12
 8003b54:	46bd      	mov	sp, r7
 8003b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b5a:	4770      	bx	lr

08003b5c <UART_Start_Receive_IT>:
 8003b5c:	b480      	push	{r7}
 8003b5e:	b085      	sub	sp, #20
 8003b60:	af00      	add	r7, sp, #0
 8003b62:	60f8      	str	r0, [r7, #12]
 8003b64:	60b9      	str	r1, [r7, #8]
 8003b66:	4613      	mov	r3, r2
 8003b68:	80fb      	strh	r3, [r7, #6]
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	68ba      	ldr	r2, [r7, #8]
 8003b6e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	88fa      	ldrh	r2, [r7, #6]
 8003b74:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	88fa      	ldrh	r2, [r7, #6]
 8003b7a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	2200      	movs	r2, #0
 8003b80:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	2222      	movs	r2, #34	@ 0x22
 8003b86:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	691b      	ldr	r3, [r3, #16]
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d007      	beq.n	8003ba2 <UART_Start_Receive_IT+0x46>
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	68da      	ldr	r2, [r3, #12]
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003ba0:	60da      	str	r2, [r3, #12]
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	695a      	ldr	r2, [r3, #20]
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f042 0201 	orr.w	r2, r2, #1
 8003bb0:	615a      	str	r2, [r3, #20]
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	68da      	ldr	r2, [r3, #12]
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	f042 0220 	orr.w	r2, r2, #32
 8003bc0:	60da      	str	r2, [r3, #12]
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	4618      	mov	r0, r3
 8003bc6:	3714      	adds	r7, #20
 8003bc8:	46bd      	mov	sp, r7
 8003bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bce:	4770      	bx	lr

08003bd0 <UART_EndRxTransfer>:
 8003bd0:	b480      	push	{r7}
 8003bd2:	b095      	sub	sp, #84	@ 0x54
 8003bd4:	af00      	add	r7, sp, #0
 8003bd6:	6078      	str	r0, [r7, #4]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	330c      	adds	r3, #12
 8003bde:	637b      	str	r3, [r7, #52]	@ 0x34
 8003be0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003be2:	e853 3f00 	ldrex	r3, [r3]
 8003be6:	633b      	str	r3, [r7, #48]	@ 0x30
 8003be8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003bea:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003bee:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	330c      	adds	r3, #12
 8003bf6:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003bf8:	643a      	str	r2, [r7, #64]	@ 0x40
 8003bfa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003bfc:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003bfe:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003c00:	e841 2300 	strex	r3, r2, [r1]
 8003c04:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c06:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d1e5      	bne.n	8003bd8 <UART_EndRxTransfer+0x8>
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	3314      	adds	r3, #20
 8003c12:	623b      	str	r3, [r7, #32]
 8003c14:	6a3b      	ldr	r3, [r7, #32]
 8003c16:	e853 3f00 	ldrex	r3, [r3]
 8003c1a:	61fb      	str	r3, [r7, #28]
 8003c1c:	69fb      	ldr	r3, [r7, #28]
 8003c1e:	f023 0301 	bic.w	r3, r3, #1
 8003c22:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	3314      	adds	r3, #20
 8003c2a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003c2c:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003c2e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003c30:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003c32:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003c34:	e841 2300 	strex	r3, r2, [r1]
 8003c38:	627b      	str	r3, [r7, #36]	@ 0x24
 8003c3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d1e5      	bne.n	8003c0c <UART_EndRxTransfer+0x3c>
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c44:	2b01      	cmp	r3, #1
 8003c46:	d119      	bne.n	8003c7c <UART_EndRxTransfer+0xac>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	330c      	adds	r3, #12
 8003c4e:	60fb      	str	r3, [r7, #12]
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	e853 3f00 	ldrex	r3, [r3]
 8003c56:	60bb      	str	r3, [r7, #8]
 8003c58:	68bb      	ldr	r3, [r7, #8]
 8003c5a:	f023 0310 	bic.w	r3, r3, #16
 8003c5e:	647b      	str	r3, [r7, #68]	@ 0x44
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	330c      	adds	r3, #12
 8003c66:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003c68:	61ba      	str	r2, [r7, #24]
 8003c6a:	617b      	str	r3, [r7, #20]
 8003c6c:	6979      	ldr	r1, [r7, #20]
 8003c6e:	69ba      	ldr	r2, [r7, #24]
 8003c70:	e841 2300 	strex	r3, r2, [r1]
 8003c74:	613b      	str	r3, [r7, #16]
 8003c76:	693b      	ldr	r3, [r7, #16]
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	d1e5      	bne.n	8003c48 <UART_EndRxTransfer+0x78>
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	2220      	movs	r2, #32
 8003c80:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	2200      	movs	r2, #0
 8003c88:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c8a:	bf00      	nop
 8003c8c:	3754      	adds	r7, #84	@ 0x54
 8003c8e:	46bd      	mov	sp, r7
 8003c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c94:	4770      	bx	lr

08003c96 <UART_DMAAbortOnError>:
 8003c96:	b580      	push	{r7, lr}
 8003c98:	b084      	sub	sp, #16
 8003c9a:	af00      	add	r7, sp, #0
 8003c9c:	6078      	str	r0, [r7, #4]
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003ca2:	60fb      	str	r3, [r7, #12]
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	2200      	movs	r2, #0
 8003ca8:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	2200      	movs	r2, #0
 8003cae:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003cb0:	68f8      	ldr	r0, [r7, #12]
 8003cb2:	f7ff ff3d 	bl	8003b30 <HAL_UART_ErrorCallback>
 8003cb6:	bf00      	nop
 8003cb8:	3710      	adds	r7, #16
 8003cba:	46bd      	mov	sp, r7
 8003cbc:	bd80      	pop	{r7, pc}

08003cbe <UART_Transmit_IT>:
 8003cbe:	b480      	push	{r7}
 8003cc0:	b085      	sub	sp, #20
 8003cc2:	af00      	add	r7, sp, #0
 8003cc4:	6078      	str	r0, [r7, #4]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003ccc:	b2db      	uxtb	r3, r3
 8003cce:	2b21      	cmp	r3, #33	@ 0x21
 8003cd0:	d13e      	bne.n	8003d50 <UART_Transmit_IT+0x92>
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	689b      	ldr	r3, [r3, #8]
 8003cd6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003cda:	d114      	bne.n	8003d06 <UART_Transmit_IT+0x48>
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	691b      	ldr	r3, [r3, #16]
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d110      	bne.n	8003d06 <UART_Transmit_IT+0x48>
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	6a1b      	ldr	r3, [r3, #32]
 8003ce8:	60fb      	str	r3, [r7, #12]
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	881b      	ldrh	r3, [r3, #0]
 8003cee:	461a      	mov	r2, r3
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003cf8:	605a      	str	r2, [r3, #4]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	6a1b      	ldr	r3, [r3, #32]
 8003cfe:	1c9a      	adds	r2, r3, #2
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	621a      	str	r2, [r3, #32]
 8003d04:	e008      	b.n	8003d18 <UART_Transmit_IT+0x5a>
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	6a1b      	ldr	r3, [r3, #32]
 8003d0a:	1c59      	adds	r1, r3, #1
 8003d0c:	687a      	ldr	r2, [r7, #4]
 8003d0e:	6211      	str	r1, [r2, #32]
 8003d10:	781a      	ldrb	r2, [r3, #0]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	605a      	str	r2, [r3, #4]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003d1c:	b29b      	uxth	r3, r3
 8003d1e:	3b01      	subs	r3, #1
 8003d20:	b29b      	uxth	r3, r3
 8003d22:	687a      	ldr	r2, [r7, #4]
 8003d24:	4619      	mov	r1, r3
 8003d26:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d10f      	bne.n	8003d4c <UART_Transmit_IT+0x8e>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	68da      	ldr	r2, [r3, #12]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003d3a:	60da      	str	r2, [r3, #12]
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	68da      	ldr	r2, [r3, #12]
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003d4a:	60da      	str	r2, [r3, #12]
 8003d4c:	2300      	movs	r3, #0
 8003d4e:	e000      	b.n	8003d52 <UART_Transmit_IT+0x94>
 8003d50:	2302      	movs	r3, #2
 8003d52:	4618      	mov	r0, r3
 8003d54:	3714      	adds	r7, #20
 8003d56:	46bd      	mov	sp, r7
 8003d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d5c:	4770      	bx	lr

08003d5e <UART_EndTransmit_IT>:
 8003d5e:	b580      	push	{r7, lr}
 8003d60:	b082      	sub	sp, #8
 8003d62:	af00      	add	r7, sp, #0
 8003d64:	6078      	str	r0, [r7, #4]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	68da      	ldr	r2, [r3, #12]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003d74:	60da      	str	r2, [r3, #12]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	2220      	movs	r2, #32
 8003d7a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d7e:	6878      	ldr	r0, [r7, #4]
 8003d80:	f7ff fecc 	bl	8003b1c <HAL_UART_TxCpltCallback>
 8003d84:	2300      	movs	r3, #0
 8003d86:	4618      	mov	r0, r3
 8003d88:	3708      	adds	r7, #8
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	bd80      	pop	{r7, pc}

08003d8e <UART_Receive_IT>:
 8003d8e:	b580      	push	{r7, lr}
 8003d90:	b08c      	sub	sp, #48	@ 0x30
 8003d92:	af00      	add	r7, sp, #0
 8003d94:	6078      	str	r0, [r7, #4]
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003d9c:	b2db      	uxtb	r3, r3
 8003d9e:	2b22      	cmp	r3, #34	@ 0x22
 8003da0:	f040 80ae 	bne.w	8003f00 <UART_Receive_IT+0x172>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	689b      	ldr	r3, [r3, #8]
 8003da8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003dac:	d117      	bne.n	8003dde <UART_Receive_IT+0x50>
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	691b      	ldr	r3, [r3, #16]
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d113      	bne.n	8003dde <UART_Receive_IT+0x50>
 8003db6:	2300      	movs	r3, #0
 8003db8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003dbe:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	685b      	ldr	r3, [r3, #4]
 8003dc6:	b29b      	uxth	r3, r3
 8003dc8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003dcc:	b29a      	uxth	r2, r3
 8003dce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003dd0:	801a      	strh	r2, [r3, #0]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003dd6:	1c9a      	adds	r2, r3, #2
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ddc:	e026      	b.n	8003e2c <UART_Receive_IT+0x9e>
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003de2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003de4:	2300      	movs	r3, #0
 8003de6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	689b      	ldr	r3, [r3, #8]
 8003dec:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003df0:	d007      	beq.n	8003e02 <UART_Receive_IT+0x74>
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	689b      	ldr	r3, [r3, #8]
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d10a      	bne.n	8003e10 <UART_Receive_IT+0x82>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	691b      	ldr	r3, [r3, #16]
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	d106      	bne.n	8003e10 <UART_Receive_IT+0x82>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	685b      	ldr	r3, [r3, #4]
 8003e08:	b2da      	uxtb	r2, r3
 8003e0a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e0c:	701a      	strb	r2, [r3, #0]
 8003e0e:	e008      	b.n	8003e22 <UART_Receive_IT+0x94>
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	685b      	ldr	r3, [r3, #4]
 8003e16:	b2db      	uxtb	r3, r3
 8003e18:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003e1c:	b2da      	uxtb	r2, r3
 8003e1e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e20:	701a      	strb	r2, [r3, #0]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e26:	1c5a      	adds	r2, r3, #1
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	629a      	str	r2, [r3, #40]	@ 0x28
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003e30:	b29b      	uxth	r3, r3
 8003e32:	3b01      	subs	r3, #1
 8003e34:	b29b      	uxth	r3, r3
 8003e36:	687a      	ldr	r2, [r7, #4]
 8003e38:	4619      	mov	r1, r3
 8003e3a:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d15d      	bne.n	8003efc <UART_Receive_IT+0x16e>
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	68da      	ldr	r2, [r3, #12]
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	f022 0220 	bic.w	r2, r2, #32
 8003e4e:	60da      	str	r2, [r3, #12]
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	68da      	ldr	r2, [r3, #12]
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003e5e:	60da      	str	r2, [r3, #12]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	681b      	ldr	r3, [r3, #0]
 8003e64:	695a      	ldr	r2, [r3, #20]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	f022 0201 	bic.w	r2, r2, #1
 8003e6e:	615a      	str	r2, [r3, #20]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	2220      	movs	r2, #32
 8003e74:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	635a      	str	r2, [r3, #52]	@ 0x34
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003e82:	2b01      	cmp	r3, #1
 8003e84:	d135      	bne.n	8003ef2 <UART_Receive_IT+0x164>
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	330c      	adds	r3, #12
 8003e92:	617b      	str	r3, [r7, #20]
 8003e94:	697b      	ldr	r3, [r7, #20]
 8003e96:	e853 3f00 	ldrex	r3, [r3]
 8003e9a:	613b      	str	r3, [r7, #16]
 8003e9c:	693b      	ldr	r3, [r7, #16]
 8003e9e:	f023 0310 	bic.w	r3, r3, #16
 8003ea2:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	330c      	adds	r3, #12
 8003eaa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003eac:	623a      	str	r2, [r7, #32]
 8003eae:	61fb      	str	r3, [r7, #28]
 8003eb0:	69f9      	ldr	r1, [r7, #28]
 8003eb2:	6a3a      	ldr	r2, [r7, #32]
 8003eb4:	e841 2300 	strex	r3, r2, [r1]
 8003eb8:	61bb      	str	r3, [r7, #24]
 8003eba:	69bb      	ldr	r3, [r7, #24]
 8003ebc:	2b00      	cmp	r3, #0
 8003ebe:	d1e5      	bne.n	8003e8c <UART_Receive_IT+0xfe>
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f003 0310 	and.w	r3, r3, #16
 8003eca:	2b10      	cmp	r3, #16
 8003ecc:	d10a      	bne.n	8003ee4 <UART_Receive_IT+0x156>
 8003ece:	2300      	movs	r3, #0
 8003ed0:	60fb      	str	r3, [r7, #12]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	60fb      	str	r3, [r7, #12]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	685b      	ldr	r3, [r3, #4]
 8003ee0:	60fb      	str	r3, [r7, #12]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8003ee8:	4619      	mov	r1, r3
 8003eea:	6878      	ldr	r0, [r7, #4]
 8003eec:	f7ff fe2a 	bl	8003b44 <HAL_UARTEx_RxEventCallback>
 8003ef0:	e002      	b.n	8003ef8 <UART_Receive_IT+0x16a>
 8003ef2:	6878      	ldr	r0, [r7, #4]
 8003ef4:	f7fd fdd4 	bl	8001aa0 <HAL_UART_RxCpltCallback>
 8003ef8:	2300      	movs	r3, #0
 8003efa:	e002      	b.n	8003f02 <UART_Receive_IT+0x174>
 8003efc:	2300      	movs	r3, #0
 8003efe:	e000      	b.n	8003f02 <UART_Receive_IT+0x174>
 8003f00:	2302      	movs	r3, #2
 8003f02:	4618      	mov	r0, r3
 8003f04:	3730      	adds	r7, #48	@ 0x30
 8003f06:	46bd      	mov	sp, r7
 8003f08:	bd80      	pop	{r7, pc}
	...

08003f0c <UART_SetConfig>:
 8003f0c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003f10:	b0c0      	sub	sp, #256	@ 0x100
 8003f12:	af00      	add	r7, sp, #0
 8003f14:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003f18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	691b      	ldr	r3, [r3, #16]
 8003f20:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003f24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f28:	68d9      	ldr	r1, [r3, #12]
 8003f2a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f2e:	681a      	ldr	r2, [r3, #0]
 8003f30:	ea40 0301 	orr.w	r3, r0, r1
 8003f34:	6113      	str	r3, [r2, #16]
 8003f36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f3a:	689a      	ldr	r2, [r3, #8]
 8003f3c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f40:	691b      	ldr	r3, [r3, #16]
 8003f42:	431a      	orrs	r2, r3
 8003f44:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f48:	695b      	ldr	r3, [r3, #20]
 8003f4a:	431a      	orrs	r2, r3
 8003f4c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f50:	69db      	ldr	r3, [r3, #28]
 8003f52:	4313      	orrs	r3, r2
 8003f54:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003f58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	68db      	ldr	r3, [r3, #12]
 8003f60:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003f64:	f021 010c 	bic.w	r1, r1, #12
 8003f68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f6c:	681a      	ldr	r2, [r3, #0]
 8003f6e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003f72:	430b      	orrs	r3, r1
 8003f74:	60d3      	str	r3, [r2, #12]
 8003f76:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	695b      	ldr	r3, [r3, #20]
 8003f7e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8003f82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f86:	6999      	ldr	r1, [r3, #24]
 8003f88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f8c:	681a      	ldr	r2, [r3, #0]
 8003f8e:	ea40 0301 	orr.w	r3, r0, r1
 8003f92:	6153      	str	r3, [r2, #20]
 8003f94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f98:	681a      	ldr	r2, [r3, #0]
 8003f9a:	4b8f      	ldr	r3, [pc, #572]	@ (80041d8 <UART_SetConfig+0x2cc>)
 8003f9c:	429a      	cmp	r2, r3
 8003f9e:	d005      	beq.n	8003fac <UART_SetConfig+0xa0>
 8003fa0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003fa4:	681a      	ldr	r2, [r3, #0]
 8003fa6:	4b8d      	ldr	r3, [pc, #564]	@ (80041dc <UART_SetConfig+0x2d0>)
 8003fa8:	429a      	cmp	r2, r3
 8003faa:	d104      	bne.n	8003fb6 <UART_SetConfig+0xaa>
 8003fac:	f7fe fdca 	bl	8002b44 <HAL_RCC_GetPCLK2Freq>
 8003fb0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003fb4:	e003      	b.n	8003fbe <UART_SetConfig+0xb2>
 8003fb6:	f7fe fdb1 	bl	8002b1c <HAL_RCC_GetPCLK1Freq>
 8003fba:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003fbe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003fc2:	69db      	ldr	r3, [r3, #28]
 8003fc4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003fc8:	f040 810c 	bne.w	80041e4 <UART_SetConfig+0x2d8>
 8003fcc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003fd0:	2200      	movs	r2, #0
 8003fd2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8003fd6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8003fda:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8003fde:	4622      	mov	r2, r4
 8003fe0:	462b      	mov	r3, r5
 8003fe2:	1891      	adds	r1, r2, r2
 8003fe4:	65b9      	str	r1, [r7, #88]	@ 0x58
 8003fe6:	415b      	adcs	r3, r3
 8003fe8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003fea:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003fee:	4621      	mov	r1, r4
 8003ff0:	eb12 0801 	adds.w	r8, r2, r1
 8003ff4:	4629      	mov	r1, r5
 8003ff6:	eb43 0901 	adc.w	r9, r3, r1
 8003ffa:	f04f 0200 	mov.w	r2, #0
 8003ffe:	f04f 0300 	mov.w	r3, #0
 8004002:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004006:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800400a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800400e:	4690      	mov	r8, r2
 8004010:	4699      	mov	r9, r3
 8004012:	4623      	mov	r3, r4
 8004014:	eb18 0303 	adds.w	r3, r8, r3
 8004018:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800401c:	462b      	mov	r3, r5
 800401e:	eb49 0303 	adc.w	r3, r9, r3
 8004022:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004026:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800402a:	685b      	ldr	r3, [r3, #4]
 800402c:	2200      	movs	r2, #0
 800402e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8004032:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8004036:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800403a:	460b      	mov	r3, r1
 800403c:	18db      	adds	r3, r3, r3
 800403e:	653b      	str	r3, [r7, #80]	@ 0x50
 8004040:	4613      	mov	r3, r2
 8004042:	eb42 0303 	adc.w	r3, r2, r3
 8004046:	657b      	str	r3, [r7, #84]	@ 0x54
 8004048:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800404c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8004050:	f7fc f8d8 	bl	8000204 <__aeabi_uldivmod>
 8004054:	4602      	mov	r2, r0
 8004056:	460b      	mov	r3, r1
 8004058:	4b61      	ldr	r3, [pc, #388]	@ (80041e0 <UART_SetConfig+0x2d4>)
 800405a:	fba3 2302 	umull	r2, r3, r3, r2
 800405e:	095b      	lsrs	r3, r3, #5
 8004060:	011c      	lsls	r4, r3, #4
 8004062:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004066:	2200      	movs	r2, #0
 8004068:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800406c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8004070:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8004074:	4642      	mov	r2, r8
 8004076:	464b      	mov	r3, r9
 8004078:	1891      	adds	r1, r2, r2
 800407a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800407c:	415b      	adcs	r3, r3
 800407e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004080:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004084:	4641      	mov	r1, r8
 8004086:	eb12 0a01 	adds.w	sl, r2, r1
 800408a:	4649      	mov	r1, r9
 800408c:	eb43 0b01 	adc.w	fp, r3, r1
 8004090:	f04f 0200 	mov.w	r2, #0
 8004094:	f04f 0300 	mov.w	r3, #0
 8004098:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800409c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80040a0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80040a4:	4692      	mov	sl, r2
 80040a6:	469b      	mov	fp, r3
 80040a8:	4643      	mov	r3, r8
 80040aa:	eb1a 0303 	adds.w	r3, sl, r3
 80040ae:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80040b2:	464b      	mov	r3, r9
 80040b4:	eb4b 0303 	adc.w	r3, fp, r3
 80040b8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80040bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040c0:	685b      	ldr	r3, [r3, #4]
 80040c2:	2200      	movs	r2, #0
 80040c4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80040c8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80040cc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80040d0:	460b      	mov	r3, r1
 80040d2:	18db      	adds	r3, r3, r3
 80040d4:	643b      	str	r3, [r7, #64]	@ 0x40
 80040d6:	4613      	mov	r3, r2
 80040d8:	eb42 0303 	adc.w	r3, r2, r3
 80040dc:	647b      	str	r3, [r7, #68]	@ 0x44
 80040de:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80040e2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80040e6:	f7fc f88d 	bl	8000204 <__aeabi_uldivmod>
 80040ea:	4602      	mov	r2, r0
 80040ec:	460b      	mov	r3, r1
 80040ee:	4611      	mov	r1, r2
 80040f0:	4b3b      	ldr	r3, [pc, #236]	@ (80041e0 <UART_SetConfig+0x2d4>)
 80040f2:	fba3 2301 	umull	r2, r3, r3, r1
 80040f6:	095b      	lsrs	r3, r3, #5
 80040f8:	2264      	movs	r2, #100	@ 0x64
 80040fa:	fb02 f303 	mul.w	r3, r2, r3
 80040fe:	1acb      	subs	r3, r1, r3
 8004100:	00db      	lsls	r3, r3, #3
 8004102:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8004106:	4b36      	ldr	r3, [pc, #216]	@ (80041e0 <UART_SetConfig+0x2d4>)
 8004108:	fba3 2302 	umull	r2, r3, r3, r2
 800410c:	095b      	lsrs	r3, r3, #5
 800410e:	005b      	lsls	r3, r3, #1
 8004110:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8004114:	441c      	add	r4, r3
 8004116:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800411a:	2200      	movs	r2, #0
 800411c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004120:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8004124:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8004128:	4642      	mov	r2, r8
 800412a:	464b      	mov	r3, r9
 800412c:	1891      	adds	r1, r2, r2
 800412e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004130:	415b      	adcs	r3, r3
 8004132:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004134:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004138:	4641      	mov	r1, r8
 800413a:	1851      	adds	r1, r2, r1
 800413c:	6339      	str	r1, [r7, #48]	@ 0x30
 800413e:	4649      	mov	r1, r9
 8004140:	414b      	adcs	r3, r1
 8004142:	637b      	str	r3, [r7, #52]	@ 0x34
 8004144:	f04f 0200 	mov.w	r2, #0
 8004148:	f04f 0300 	mov.w	r3, #0
 800414c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8004150:	4659      	mov	r1, fp
 8004152:	00cb      	lsls	r3, r1, #3
 8004154:	4651      	mov	r1, sl
 8004156:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800415a:	4651      	mov	r1, sl
 800415c:	00ca      	lsls	r2, r1, #3
 800415e:	4610      	mov	r0, r2
 8004160:	4619      	mov	r1, r3
 8004162:	4603      	mov	r3, r0
 8004164:	4642      	mov	r2, r8
 8004166:	189b      	adds	r3, r3, r2
 8004168:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800416c:	464b      	mov	r3, r9
 800416e:	460a      	mov	r2, r1
 8004170:	eb42 0303 	adc.w	r3, r2, r3
 8004174:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004178:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800417c:	685b      	ldr	r3, [r3, #4]
 800417e:	2200      	movs	r2, #0
 8004180:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004184:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8004188:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800418c:	460b      	mov	r3, r1
 800418e:	18db      	adds	r3, r3, r3
 8004190:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004192:	4613      	mov	r3, r2
 8004194:	eb42 0303 	adc.w	r3, r2, r3
 8004198:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800419a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800419e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80041a2:	f7fc f82f 	bl	8000204 <__aeabi_uldivmod>
 80041a6:	4602      	mov	r2, r0
 80041a8:	460b      	mov	r3, r1
 80041aa:	4b0d      	ldr	r3, [pc, #52]	@ (80041e0 <UART_SetConfig+0x2d4>)
 80041ac:	fba3 1302 	umull	r1, r3, r3, r2
 80041b0:	095b      	lsrs	r3, r3, #5
 80041b2:	2164      	movs	r1, #100	@ 0x64
 80041b4:	fb01 f303 	mul.w	r3, r1, r3
 80041b8:	1ad3      	subs	r3, r2, r3
 80041ba:	00db      	lsls	r3, r3, #3
 80041bc:	3332      	adds	r3, #50	@ 0x32
 80041be:	4a08      	ldr	r2, [pc, #32]	@ (80041e0 <UART_SetConfig+0x2d4>)
 80041c0:	fba2 2303 	umull	r2, r3, r2, r3
 80041c4:	095b      	lsrs	r3, r3, #5
 80041c6:	f003 0207 	and.w	r2, r3, #7
 80041ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	4422      	add	r2, r4
 80041d2:	609a      	str	r2, [r3, #8]
 80041d4:	e106      	b.n	80043e4 <UART_SetConfig+0x4d8>
 80041d6:	bf00      	nop
 80041d8:	40011000 	.word	0x40011000
 80041dc:	40011400 	.word	0x40011400
 80041e0:	51eb851f 	.word	0x51eb851f
 80041e4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80041e8:	2200      	movs	r2, #0
 80041ea:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80041ee:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80041f2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80041f6:	4642      	mov	r2, r8
 80041f8:	464b      	mov	r3, r9
 80041fa:	1891      	adds	r1, r2, r2
 80041fc:	6239      	str	r1, [r7, #32]
 80041fe:	415b      	adcs	r3, r3
 8004200:	627b      	str	r3, [r7, #36]	@ 0x24
 8004202:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004206:	4641      	mov	r1, r8
 8004208:	1854      	adds	r4, r2, r1
 800420a:	4649      	mov	r1, r9
 800420c:	eb43 0501 	adc.w	r5, r3, r1
 8004210:	f04f 0200 	mov.w	r2, #0
 8004214:	f04f 0300 	mov.w	r3, #0
 8004218:	00eb      	lsls	r3, r5, #3
 800421a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800421e:	00e2      	lsls	r2, r4, #3
 8004220:	4614      	mov	r4, r2
 8004222:	461d      	mov	r5, r3
 8004224:	4643      	mov	r3, r8
 8004226:	18e3      	adds	r3, r4, r3
 8004228:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800422c:	464b      	mov	r3, r9
 800422e:	eb45 0303 	adc.w	r3, r5, r3
 8004232:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004236:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800423a:	685b      	ldr	r3, [r3, #4]
 800423c:	2200      	movs	r2, #0
 800423e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004242:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004246:	f04f 0200 	mov.w	r2, #0
 800424a:	f04f 0300 	mov.w	r3, #0
 800424e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004252:	4629      	mov	r1, r5
 8004254:	008b      	lsls	r3, r1, #2
 8004256:	4621      	mov	r1, r4
 8004258:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800425c:	4621      	mov	r1, r4
 800425e:	008a      	lsls	r2, r1, #2
 8004260:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8004264:	f7fb ffce 	bl	8000204 <__aeabi_uldivmod>
 8004268:	4602      	mov	r2, r0
 800426a:	460b      	mov	r3, r1
 800426c:	4b60      	ldr	r3, [pc, #384]	@ (80043f0 <UART_SetConfig+0x4e4>)
 800426e:	fba3 2302 	umull	r2, r3, r3, r2
 8004272:	095b      	lsrs	r3, r3, #5
 8004274:	011c      	lsls	r4, r3, #4
 8004276:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800427a:	2200      	movs	r2, #0
 800427c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004280:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004284:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8004288:	4642      	mov	r2, r8
 800428a:	464b      	mov	r3, r9
 800428c:	1891      	adds	r1, r2, r2
 800428e:	61b9      	str	r1, [r7, #24]
 8004290:	415b      	adcs	r3, r3
 8004292:	61fb      	str	r3, [r7, #28]
 8004294:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004298:	4641      	mov	r1, r8
 800429a:	1851      	adds	r1, r2, r1
 800429c:	6139      	str	r1, [r7, #16]
 800429e:	4649      	mov	r1, r9
 80042a0:	414b      	adcs	r3, r1
 80042a2:	617b      	str	r3, [r7, #20]
 80042a4:	f04f 0200 	mov.w	r2, #0
 80042a8:	f04f 0300 	mov.w	r3, #0
 80042ac:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80042b0:	4659      	mov	r1, fp
 80042b2:	00cb      	lsls	r3, r1, #3
 80042b4:	4651      	mov	r1, sl
 80042b6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80042ba:	4651      	mov	r1, sl
 80042bc:	00ca      	lsls	r2, r1, #3
 80042be:	4610      	mov	r0, r2
 80042c0:	4619      	mov	r1, r3
 80042c2:	4603      	mov	r3, r0
 80042c4:	4642      	mov	r2, r8
 80042c6:	189b      	adds	r3, r3, r2
 80042c8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80042cc:	464b      	mov	r3, r9
 80042ce:	460a      	mov	r2, r1
 80042d0:	eb42 0303 	adc.w	r3, r2, r3
 80042d4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80042d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80042dc:	685b      	ldr	r3, [r3, #4]
 80042de:	2200      	movs	r2, #0
 80042e0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80042e2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80042e4:	f04f 0200 	mov.w	r2, #0
 80042e8:	f04f 0300 	mov.w	r3, #0
 80042ec:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80042f0:	4649      	mov	r1, r9
 80042f2:	008b      	lsls	r3, r1, #2
 80042f4:	4641      	mov	r1, r8
 80042f6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80042fa:	4641      	mov	r1, r8
 80042fc:	008a      	lsls	r2, r1, #2
 80042fe:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8004302:	f7fb ff7f 	bl	8000204 <__aeabi_uldivmod>
 8004306:	4602      	mov	r2, r0
 8004308:	460b      	mov	r3, r1
 800430a:	4611      	mov	r1, r2
 800430c:	4b38      	ldr	r3, [pc, #224]	@ (80043f0 <UART_SetConfig+0x4e4>)
 800430e:	fba3 2301 	umull	r2, r3, r3, r1
 8004312:	095b      	lsrs	r3, r3, #5
 8004314:	2264      	movs	r2, #100	@ 0x64
 8004316:	fb02 f303 	mul.w	r3, r2, r3
 800431a:	1acb      	subs	r3, r1, r3
 800431c:	011b      	lsls	r3, r3, #4
 800431e:	3332      	adds	r3, #50	@ 0x32
 8004320:	4a33      	ldr	r2, [pc, #204]	@ (80043f0 <UART_SetConfig+0x4e4>)
 8004322:	fba2 2303 	umull	r2, r3, r2, r3
 8004326:	095b      	lsrs	r3, r3, #5
 8004328:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800432c:	441c      	add	r4, r3
 800432e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004332:	2200      	movs	r2, #0
 8004334:	673b      	str	r3, [r7, #112]	@ 0x70
 8004336:	677a      	str	r2, [r7, #116]	@ 0x74
 8004338:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800433c:	4642      	mov	r2, r8
 800433e:	464b      	mov	r3, r9
 8004340:	1891      	adds	r1, r2, r2
 8004342:	60b9      	str	r1, [r7, #8]
 8004344:	415b      	adcs	r3, r3
 8004346:	60fb      	str	r3, [r7, #12]
 8004348:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800434c:	4641      	mov	r1, r8
 800434e:	1851      	adds	r1, r2, r1
 8004350:	6039      	str	r1, [r7, #0]
 8004352:	4649      	mov	r1, r9
 8004354:	414b      	adcs	r3, r1
 8004356:	607b      	str	r3, [r7, #4]
 8004358:	f04f 0200 	mov.w	r2, #0
 800435c:	f04f 0300 	mov.w	r3, #0
 8004360:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004364:	4659      	mov	r1, fp
 8004366:	00cb      	lsls	r3, r1, #3
 8004368:	4651      	mov	r1, sl
 800436a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800436e:	4651      	mov	r1, sl
 8004370:	00ca      	lsls	r2, r1, #3
 8004372:	4610      	mov	r0, r2
 8004374:	4619      	mov	r1, r3
 8004376:	4603      	mov	r3, r0
 8004378:	4642      	mov	r2, r8
 800437a:	189b      	adds	r3, r3, r2
 800437c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800437e:	464b      	mov	r3, r9
 8004380:	460a      	mov	r2, r1
 8004382:	eb42 0303 	adc.w	r3, r2, r3
 8004386:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004388:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800438c:	685b      	ldr	r3, [r3, #4]
 800438e:	2200      	movs	r2, #0
 8004390:	663b      	str	r3, [r7, #96]	@ 0x60
 8004392:	667a      	str	r2, [r7, #100]	@ 0x64
 8004394:	f04f 0200 	mov.w	r2, #0
 8004398:	f04f 0300 	mov.w	r3, #0
 800439c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80043a0:	4649      	mov	r1, r9
 80043a2:	008b      	lsls	r3, r1, #2
 80043a4:	4641      	mov	r1, r8
 80043a6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80043aa:	4641      	mov	r1, r8
 80043ac:	008a      	lsls	r2, r1, #2
 80043ae:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80043b2:	f7fb ff27 	bl	8000204 <__aeabi_uldivmod>
 80043b6:	4602      	mov	r2, r0
 80043b8:	460b      	mov	r3, r1
 80043ba:	4b0d      	ldr	r3, [pc, #52]	@ (80043f0 <UART_SetConfig+0x4e4>)
 80043bc:	fba3 1302 	umull	r1, r3, r3, r2
 80043c0:	095b      	lsrs	r3, r3, #5
 80043c2:	2164      	movs	r1, #100	@ 0x64
 80043c4:	fb01 f303 	mul.w	r3, r1, r3
 80043c8:	1ad3      	subs	r3, r2, r3
 80043ca:	011b      	lsls	r3, r3, #4
 80043cc:	3332      	adds	r3, #50	@ 0x32
 80043ce:	4a08      	ldr	r2, [pc, #32]	@ (80043f0 <UART_SetConfig+0x4e4>)
 80043d0:	fba2 2303 	umull	r2, r3, r2, r3
 80043d4:	095b      	lsrs	r3, r3, #5
 80043d6:	f003 020f 	and.w	r2, r3, #15
 80043da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	4422      	add	r2, r4
 80043e2:	609a      	str	r2, [r3, #8]
 80043e4:	bf00      	nop
 80043e6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80043ea:	46bd      	mov	sp, r7
 80043ec:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80043f0:	51eb851f 	.word	0x51eb851f

080043f4 <memset>:
 80043f4:	4402      	add	r2, r0
 80043f6:	4603      	mov	r3, r0
 80043f8:	4293      	cmp	r3, r2
 80043fa:	d100      	bne.n	80043fe <memset+0xa>
 80043fc:	4770      	bx	lr
 80043fe:	f803 1b01 	strb.w	r1, [r3], #1
 8004402:	e7f9      	b.n	80043f8 <memset+0x4>

08004404 <__libc_init_array>:
 8004404:	b570      	push	{r4, r5, r6, lr}
 8004406:	4d0d      	ldr	r5, [pc, #52]	@ (800443c <__libc_init_array+0x38>)
 8004408:	4c0d      	ldr	r4, [pc, #52]	@ (8004440 <__libc_init_array+0x3c>)
 800440a:	1b64      	subs	r4, r4, r5
 800440c:	10a4      	asrs	r4, r4, #2
 800440e:	2600      	movs	r6, #0
 8004410:	42a6      	cmp	r6, r4
 8004412:	d109      	bne.n	8004428 <__libc_init_array+0x24>
 8004414:	4d0b      	ldr	r5, [pc, #44]	@ (8004444 <__libc_init_array+0x40>)
 8004416:	4c0c      	ldr	r4, [pc, #48]	@ (8004448 <__libc_init_array+0x44>)
 8004418:	f000 f818 	bl	800444c <_init>
 800441c:	1b64      	subs	r4, r4, r5
 800441e:	10a4      	asrs	r4, r4, #2
 8004420:	2600      	movs	r6, #0
 8004422:	42a6      	cmp	r6, r4
 8004424:	d105      	bne.n	8004432 <__libc_init_array+0x2e>
 8004426:	bd70      	pop	{r4, r5, r6, pc}
 8004428:	f855 3b04 	ldr.w	r3, [r5], #4
 800442c:	4798      	blx	r3
 800442e:	3601      	adds	r6, #1
 8004430:	e7ee      	b.n	8004410 <__libc_init_array+0xc>
 8004432:	f855 3b04 	ldr.w	r3, [r5], #4
 8004436:	4798      	blx	r3
 8004438:	3601      	adds	r6, #1
 800443a:	e7f2      	b.n	8004422 <__libc_init_array+0x1e>
 800443c:	08004484 	.word	0x08004484
 8004440:	08004484 	.word	0x08004484
 8004444:	08004484 	.word	0x08004484
 8004448:	08004488 	.word	0x08004488

0800444c <_init>:
 800444c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800444e:	bf00      	nop
 8004450:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004452:	bc08      	pop	{r3}
 8004454:	469e      	mov	lr, r3
 8004456:	4770      	bx	lr

08004458 <_fini>:
 8004458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800445a:	bf00      	nop
 800445c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800445e:	bc08      	pop	{r3}
 8004460:	469e      	mov	lr, r3
 8004462:	4770      	bx	lr


ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003be8  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  08003dac  08003dac  00004dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003dc4  08003dc4  0000500c  2**0
                  CONTENTS
  4 .ARM          00000008  08003dc4  08003dc4  00004dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003dcc  08003dcc  0000500c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003dcc  08003dcc  00004dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08003dd0  08003dd0  00004dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08003dd4  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d0  2000000c  08003de0  0000500c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001dc  08003de0  000051dc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000500c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b4d5  00000000  00000000  0000503c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d4a  00000000  00000000  00010511  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000009c8  00000000  00000000  00012260  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000793  00000000  00000000  00012c28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002072f  00000000  00000000  000133bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000cdcd  00000000  00000000  00033aea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cbd6e  00000000  00000000  000408b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0010c625  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000027c0  00000000  00000000  0010c668  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  0010ee28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000000c 	.word	0x2000000c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08003d94 	.word	0x08003d94

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000010 	.word	0x20000010
 8000200:	08003d94 	.word	0x08003d94

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96a 	b.w	80004f0 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	460c      	mov	r4, r1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d14e      	bne.n	80002de <__udivmoddi4+0xaa>
 8000240:	4694      	mov	ip, r2
 8000242:	458c      	cmp	ip, r1
 8000244:	4686      	mov	lr, r0
 8000246:	fab2 f282 	clz	r2, r2
 800024a:	d962      	bls.n	8000312 <__udivmoddi4+0xde>
 800024c:	b14a      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 800024e:	f1c2 0320 	rsb	r3, r2, #32
 8000252:	4091      	lsls	r1, r2
 8000254:	fa20 f303 	lsr.w	r3, r0, r3
 8000258:	fa0c fc02 	lsl.w	ip, ip, r2
 800025c:	4319      	orrs	r1, r3
 800025e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000262:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000266:	fa1f f68c 	uxth.w	r6, ip
 800026a:	fbb1 f4f7 	udiv	r4, r1, r7
 800026e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000272:	fb07 1114 	mls	r1, r7, r4, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb04 f106 	mul.w	r1, r4, r6
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f104 30ff 	add.w	r0, r4, #4294967295
 800028a:	f080 8112 	bcs.w	80004b2 <__udivmoddi4+0x27e>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 810f 	bls.w	80004b2 <__udivmoddi4+0x27e>
 8000294:	3c02      	subs	r4, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a59      	subs	r1, r3, r1
 800029a:	fa1f f38e 	uxth.w	r3, lr
 800029e:	fbb1 f0f7 	udiv	r0, r1, r7
 80002a2:	fb07 1110 	mls	r1, r7, r0, r1
 80002a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002aa:	fb00 f606 	mul.w	r6, r0, r6
 80002ae:	429e      	cmp	r6, r3
 80002b0:	d90a      	bls.n	80002c8 <__udivmoddi4+0x94>
 80002b2:	eb1c 0303 	adds.w	r3, ip, r3
 80002b6:	f100 31ff 	add.w	r1, r0, #4294967295
 80002ba:	f080 80fc 	bcs.w	80004b6 <__udivmoddi4+0x282>
 80002be:	429e      	cmp	r6, r3
 80002c0:	f240 80f9 	bls.w	80004b6 <__udivmoddi4+0x282>
 80002c4:	4463      	add	r3, ip
 80002c6:	3802      	subs	r0, #2
 80002c8:	1b9b      	subs	r3, r3, r6
 80002ca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002ce:	2100      	movs	r1, #0
 80002d0:	b11d      	cbz	r5, 80002da <__udivmoddi4+0xa6>
 80002d2:	40d3      	lsrs	r3, r2
 80002d4:	2200      	movs	r2, #0
 80002d6:	e9c5 3200 	strd	r3, r2, [r5]
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d905      	bls.n	80002ee <__udivmoddi4+0xba>
 80002e2:	b10d      	cbz	r5, 80002e8 <__udivmoddi4+0xb4>
 80002e4:	e9c5 0100 	strd	r0, r1, [r5]
 80002e8:	2100      	movs	r1, #0
 80002ea:	4608      	mov	r0, r1
 80002ec:	e7f5      	b.n	80002da <__udivmoddi4+0xa6>
 80002ee:	fab3 f183 	clz	r1, r3
 80002f2:	2900      	cmp	r1, #0
 80002f4:	d146      	bne.n	8000384 <__udivmoddi4+0x150>
 80002f6:	42a3      	cmp	r3, r4
 80002f8:	d302      	bcc.n	8000300 <__udivmoddi4+0xcc>
 80002fa:	4290      	cmp	r0, r2
 80002fc:	f0c0 80f0 	bcc.w	80004e0 <__udivmoddi4+0x2ac>
 8000300:	1a86      	subs	r6, r0, r2
 8000302:	eb64 0303 	sbc.w	r3, r4, r3
 8000306:	2001      	movs	r0, #1
 8000308:	2d00      	cmp	r5, #0
 800030a:	d0e6      	beq.n	80002da <__udivmoddi4+0xa6>
 800030c:	e9c5 6300 	strd	r6, r3, [r5]
 8000310:	e7e3      	b.n	80002da <__udivmoddi4+0xa6>
 8000312:	2a00      	cmp	r2, #0
 8000314:	f040 8090 	bne.w	8000438 <__udivmoddi4+0x204>
 8000318:	eba1 040c 	sub.w	r4, r1, ip
 800031c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000320:	fa1f f78c 	uxth.w	r7, ip
 8000324:	2101      	movs	r1, #1
 8000326:	fbb4 f6f8 	udiv	r6, r4, r8
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb08 4416 	mls	r4, r8, r6, r4
 8000332:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000336:	fb07 f006 	mul.w	r0, r7, r6
 800033a:	4298      	cmp	r0, r3
 800033c:	d908      	bls.n	8000350 <__udivmoddi4+0x11c>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 34ff 	add.w	r4, r6, #4294967295
 8000346:	d202      	bcs.n	800034e <__udivmoddi4+0x11a>
 8000348:	4298      	cmp	r0, r3
 800034a:	f200 80cd 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 800034e:	4626      	mov	r6, r4
 8000350:	1a1c      	subs	r4, r3, r0
 8000352:	fa1f f38e 	uxth.w	r3, lr
 8000356:	fbb4 f0f8 	udiv	r0, r4, r8
 800035a:	fb08 4410 	mls	r4, r8, r0, r4
 800035e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000362:	fb00 f707 	mul.w	r7, r0, r7
 8000366:	429f      	cmp	r7, r3
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0x148>
 800036a:	eb1c 0303 	adds.w	r3, ip, r3
 800036e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000372:	d202      	bcs.n	800037a <__udivmoddi4+0x146>
 8000374:	429f      	cmp	r7, r3
 8000376:	f200 80b0 	bhi.w	80004da <__udivmoddi4+0x2a6>
 800037a:	4620      	mov	r0, r4
 800037c:	1bdb      	subs	r3, r3, r7
 800037e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000382:	e7a5      	b.n	80002d0 <__udivmoddi4+0x9c>
 8000384:	f1c1 0620 	rsb	r6, r1, #32
 8000388:	408b      	lsls	r3, r1
 800038a:	fa22 f706 	lsr.w	r7, r2, r6
 800038e:	431f      	orrs	r7, r3
 8000390:	fa20 fc06 	lsr.w	ip, r0, r6
 8000394:	fa04 f301 	lsl.w	r3, r4, r1
 8000398:	ea43 030c 	orr.w	r3, r3, ip
 800039c:	40f4      	lsrs	r4, r6
 800039e:	fa00 f801 	lsl.w	r8, r0, r1
 80003a2:	0c38      	lsrs	r0, r7, #16
 80003a4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80003a8:	fbb4 fef0 	udiv	lr, r4, r0
 80003ac:	fa1f fc87 	uxth.w	ip, r7
 80003b0:	fb00 441e 	mls	r4, r0, lr, r4
 80003b4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003b8:	fb0e f90c 	mul.w	r9, lr, ip
 80003bc:	45a1      	cmp	r9, r4
 80003be:	fa02 f201 	lsl.w	r2, r2, r1
 80003c2:	d90a      	bls.n	80003da <__udivmoddi4+0x1a6>
 80003c4:	193c      	adds	r4, r7, r4
 80003c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ca:	f080 8084 	bcs.w	80004d6 <__udivmoddi4+0x2a2>
 80003ce:	45a1      	cmp	r9, r4
 80003d0:	f240 8081 	bls.w	80004d6 <__udivmoddi4+0x2a2>
 80003d4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003d8:	443c      	add	r4, r7
 80003da:	eba4 0409 	sub.w	r4, r4, r9
 80003de:	fa1f f983 	uxth.w	r9, r3
 80003e2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003e6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ee:	fb03 fc0c 	mul.w	ip, r3, ip
 80003f2:	45a4      	cmp	ip, r4
 80003f4:	d907      	bls.n	8000406 <__udivmoddi4+0x1d2>
 80003f6:	193c      	adds	r4, r7, r4
 80003f8:	f103 30ff 	add.w	r0, r3, #4294967295
 80003fc:	d267      	bcs.n	80004ce <__udivmoddi4+0x29a>
 80003fe:	45a4      	cmp	ip, r4
 8000400:	d965      	bls.n	80004ce <__udivmoddi4+0x29a>
 8000402:	3b02      	subs	r3, #2
 8000404:	443c      	add	r4, r7
 8000406:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800040a:	fba0 9302 	umull	r9, r3, r0, r2
 800040e:	eba4 040c 	sub.w	r4, r4, ip
 8000412:	429c      	cmp	r4, r3
 8000414:	46ce      	mov	lr, r9
 8000416:	469c      	mov	ip, r3
 8000418:	d351      	bcc.n	80004be <__udivmoddi4+0x28a>
 800041a:	d04e      	beq.n	80004ba <__udivmoddi4+0x286>
 800041c:	b155      	cbz	r5, 8000434 <__udivmoddi4+0x200>
 800041e:	ebb8 030e 	subs.w	r3, r8, lr
 8000422:	eb64 040c 	sbc.w	r4, r4, ip
 8000426:	fa04 f606 	lsl.w	r6, r4, r6
 800042a:	40cb      	lsrs	r3, r1
 800042c:	431e      	orrs	r6, r3
 800042e:	40cc      	lsrs	r4, r1
 8000430:	e9c5 6400 	strd	r6, r4, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	e750      	b.n	80002da <__udivmoddi4+0xa6>
 8000438:	f1c2 0320 	rsb	r3, r2, #32
 800043c:	fa20 f103 	lsr.w	r1, r0, r3
 8000440:	fa0c fc02 	lsl.w	ip, ip, r2
 8000444:	fa24 f303 	lsr.w	r3, r4, r3
 8000448:	4094      	lsls	r4, r2
 800044a:	430c      	orrs	r4, r1
 800044c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000450:	fa00 fe02 	lsl.w	lr, r0, r2
 8000454:	fa1f f78c 	uxth.w	r7, ip
 8000458:	fbb3 f0f8 	udiv	r0, r3, r8
 800045c:	fb08 3110 	mls	r1, r8, r0, r3
 8000460:	0c23      	lsrs	r3, r4, #16
 8000462:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000466:	fb00 f107 	mul.w	r1, r0, r7
 800046a:	4299      	cmp	r1, r3
 800046c:	d908      	bls.n	8000480 <__udivmoddi4+0x24c>
 800046e:	eb1c 0303 	adds.w	r3, ip, r3
 8000472:	f100 36ff 	add.w	r6, r0, #4294967295
 8000476:	d22c      	bcs.n	80004d2 <__udivmoddi4+0x29e>
 8000478:	4299      	cmp	r1, r3
 800047a:	d92a      	bls.n	80004d2 <__udivmoddi4+0x29e>
 800047c:	3802      	subs	r0, #2
 800047e:	4463      	add	r3, ip
 8000480:	1a5b      	subs	r3, r3, r1
 8000482:	b2a4      	uxth	r4, r4
 8000484:	fbb3 f1f8 	udiv	r1, r3, r8
 8000488:	fb08 3311 	mls	r3, r8, r1, r3
 800048c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000490:	fb01 f307 	mul.w	r3, r1, r7
 8000494:	42a3      	cmp	r3, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x276>
 8000498:	eb1c 0404 	adds.w	r4, ip, r4
 800049c:	f101 36ff 	add.w	r6, r1, #4294967295
 80004a0:	d213      	bcs.n	80004ca <__udivmoddi4+0x296>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d911      	bls.n	80004ca <__udivmoddi4+0x296>
 80004a6:	3902      	subs	r1, #2
 80004a8:	4464      	add	r4, ip
 80004aa:	1ae4      	subs	r4, r4, r3
 80004ac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80004b0:	e739      	b.n	8000326 <__udivmoddi4+0xf2>
 80004b2:	4604      	mov	r4, r0
 80004b4:	e6f0      	b.n	8000298 <__udivmoddi4+0x64>
 80004b6:	4608      	mov	r0, r1
 80004b8:	e706      	b.n	80002c8 <__udivmoddi4+0x94>
 80004ba:	45c8      	cmp	r8, r9
 80004bc:	d2ae      	bcs.n	800041c <__udivmoddi4+0x1e8>
 80004be:	ebb9 0e02 	subs.w	lr, r9, r2
 80004c2:	eb63 0c07 	sbc.w	ip, r3, r7
 80004c6:	3801      	subs	r0, #1
 80004c8:	e7a8      	b.n	800041c <__udivmoddi4+0x1e8>
 80004ca:	4631      	mov	r1, r6
 80004cc:	e7ed      	b.n	80004aa <__udivmoddi4+0x276>
 80004ce:	4603      	mov	r3, r0
 80004d0:	e799      	b.n	8000406 <__udivmoddi4+0x1d2>
 80004d2:	4630      	mov	r0, r6
 80004d4:	e7d4      	b.n	8000480 <__udivmoddi4+0x24c>
 80004d6:	46d6      	mov	lr, sl
 80004d8:	e77f      	b.n	80003da <__udivmoddi4+0x1a6>
 80004da:	4463      	add	r3, ip
 80004dc:	3802      	subs	r0, #2
 80004de:	e74d      	b.n	800037c <__udivmoddi4+0x148>
 80004e0:	4606      	mov	r6, r0
 80004e2:	4623      	mov	r3, r4
 80004e4:	4608      	mov	r0, r1
 80004e6:	e70f      	b.n	8000308 <__udivmoddi4+0xd4>
 80004e8:	3e02      	subs	r6, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	e730      	b.n	8000350 <__udivmoddi4+0x11c>
 80004ee:	bf00      	nop

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <LCD_Init>:
 80004f4:	b580      	push	{r7, lr}
 80004f6:	af00      	add	r7, sp, #0
 80004f8:	2201      	movs	r2, #1
 80004fa:	2101      	movs	r1, #1
 80004fc:	4878      	ldr	r0, [pc, #480]	@ (80006e0 <LCD_Init+0x1ec>)
 80004fe:	f001 fea5 	bl	800224c <HAL_GPIO_WritePin>
 8000502:	2201      	movs	r2, #1
 8000504:	2113      	movs	r1, #19
 8000506:	4877      	ldr	r0, [pc, #476]	@ (80006e4 <LCD_Init+0x1f0>)
 8000508:	f001 fea0 	bl	800224c <HAL_GPIO_WritePin>
 800050c:	2201      	movs	r2, #1
 800050e:	2102      	movs	r1, #2
 8000510:	4875      	ldr	r0, [pc, #468]	@ (80006e8 <LCD_Init+0x1f4>)
 8000512:	f001 fe9b 	bl	800224c <HAL_GPIO_WritePin>
 8000516:	2005      	movs	r0, #5
 8000518:	f001 fb3c 	bl	8001b94 <HAL_Delay>
 800051c:	2200      	movs	r2, #0
 800051e:	2102      	movs	r1, #2
 8000520:	4871      	ldr	r0, [pc, #452]	@ (80006e8 <LCD_Init+0x1f4>)
 8000522:	f001 fe93 	bl	800224c <HAL_GPIO_WritePin>
 8000526:	2014      	movs	r0, #20
 8000528:	f001 fb34 	bl	8001b94 <HAL_Delay>
 800052c:	2201      	movs	r2, #1
 800052e:	2102      	movs	r1, #2
 8000530:	486d      	ldr	r0, [pc, #436]	@ (80006e8 <LCD_Init+0x1f4>)
 8000532:	f001 fe8b 	bl	800224c <HAL_GPIO_WritePin>
 8000536:	2096      	movs	r0, #150	@ 0x96
 8000538:	f001 fb2c 	bl	8001b94 <HAL_Delay>
 800053c:	2200      	movs	r2, #0
 800053e:	2101      	movs	r1, #1
 8000540:	4867      	ldr	r0, [pc, #412]	@ (80006e0 <LCD_Init+0x1ec>)
 8000542:	f001 fe83 	bl	800224c <HAL_GPIO_WritePin>
 8000546:	20e9      	movs	r0, #233	@ 0xe9
 8000548:	f000 f8d0 	bl	80006ec <LCD_CMD>
 800054c:	2020      	movs	r0, #32
 800054e:	f000 f973 	bl	8000838 <LCD_DATA>
 8000552:	2011      	movs	r0, #17
 8000554:	f000 f8ca 	bl	80006ec <LCD_CMD>
 8000558:	2064      	movs	r0, #100	@ 0x64
 800055a:	f001 fb1b 	bl	8001b94 <HAL_Delay>
 800055e:	20d1      	movs	r0, #209	@ 0xd1
 8000560:	f000 f8c4 	bl	80006ec <LCD_CMD>
 8000564:	2000      	movs	r0, #0
 8000566:	f000 f967 	bl	8000838 <LCD_DATA>
 800056a:	2071      	movs	r0, #113	@ 0x71
 800056c:	f000 f964 	bl	8000838 <LCD_DATA>
 8000570:	2019      	movs	r0, #25
 8000572:	f000 f961 	bl	8000838 <LCD_DATA>
 8000576:	20d0      	movs	r0, #208	@ 0xd0
 8000578:	f000 f8b8 	bl	80006ec <LCD_CMD>
 800057c:	2007      	movs	r0, #7
 800057e:	f000 f95b 	bl	8000838 <LCD_DATA>
 8000582:	2001      	movs	r0, #1
 8000584:	f000 f958 	bl	8000838 <LCD_DATA>
 8000588:	2008      	movs	r0, #8
 800058a:	f000 f955 	bl	8000838 <LCD_DATA>
 800058e:	2036      	movs	r0, #54	@ 0x36
 8000590:	f000 f8ac 	bl	80006ec <LCD_CMD>
 8000594:	20e8      	movs	r0, #232	@ 0xe8
 8000596:	f000 f94f 	bl	8000838 <LCD_DATA>
 800059a:	203a      	movs	r0, #58	@ 0x3a
 800059c:	f000 f8a6 	bl	80006ec <LCD_CMD>
 80005a0:	2005      	movs	r0, #5
 80005a2:	f000 f949 	bl	8000838 <LCD_DATA>
 80005a6:	20c1      	movs	r0, #193	@ 0xc1
 80005a8:	f000 f8a0 	bl	80006ec <LCD_CMD>
 80005ac:	2010      	movs	r0, #16
 80005ae:	f000 f943 	bl	8000838 <LCD_DATA>
 80005b2:	2010      	movs	r0, #16
 80005b4:	f000 f940 	bl	8000838 <LCD_DATA>
 80005b8:	2002      	movs	r0, #2
 80005ba:	f000 f93d 	bl	8000838 <LCD_DATA>
 80005be:	2002      	movs	r0, #2
 80005c0:	f000 f93a 	bl	8000838 <LCD_DATA>
 80005c4:	20c0      	movs	r0, #192	@ 0xc0
 80005c6:	f000 f891 	bl	80006ec <LCD_CMD>
 80005ca:	2000      	movs	r0, #0
 80005cc:	f000 f934 	bl	8000838 <LCD_DATA>
 80005d0:	2035      	movs	r0, #53	@ 0x35
 80005d2:	f000 f931 	bl	8000838 <LCD_DATA>
 80005d6:	2000      	movs	r0, #0
 80005d8:	f000 f92e 	bl	8000838 <LCD_DATA>
 80005dc:	2000      	movs	r0, #0
 80005de:	f000 f92b 	bl	8000838 <LCD_DATA>
 80005e2:	2001      	movs	r0, #1
 80005e4:	f000 f928 	bl	8000838 <LCD_DATA>
 80005e8:	2002      	movs	r0, #2
 80005ea:	f000 f925 	bl	8000838 <LCD_DATA>
 80005ee:	20c5      	movs	r0, #197	@ 0xc5
 80005f0:	f000 f87c 	bl	80006ec <LCD_CMD>
 80005f4:	2004      	movs	r0, #4
 80005f6:	f000 f91f 	bl	8000838 <LCD_DATA>
 80005fa:	20d2      	movs	r0, #210	@ 0xd2
 80005fc:	f000 f876 	bl	80006ec <LCD_CMD>
 8000600:	2001      	movs	r0, #1
 8000602:	f000 f919 	bl	8000838 <LCD_DATA>
 8000606:	2044      	movs	r0, #68	@ 0x44
 8000608:	f000 f916 	bl	8000838 <LCD_DATA>
 800060c:	20c8      	movs	r0, #200	@ 0xc8
 800060e:	f000 f86d 	bl	80006ec <LCD_CMD>
 8000612:	2004      	movs	r0, #4
 8000614:	f000 f910 	bl	8000838 <LCD_DATA>
 8000618:	2067      	movs	r0, #103	@ 0x67
 800061a:	f000 f90d 	bl	8000838 <LCD_DATA>
 800061e:	2035      	movs	r0, #53	@ 0x35
 8000620:	f000 f90a 	bl	8000838 <LCD_DATA>
 8000624:	2004      	movs	r0, #4
 8000626:	f000 f907 	bl	8000838 <LCD_DATA>
 800062a:	2008      	movs	r0, #8
 800062c:	f000 f904 	bl	8000838 <LCD_DATA>
 8000630:	2006      	movs	r0, #6
 8000632:	f000 f901 	bl	8000838 <LCD_DATA>
 8000636:	2024      	movs	r0, #36	@ 0x24
 8000638:	f000 f8fe 	bl	8000838 <LCD_DATA>
 800063c:	2001      	movs	r0, #1
 800063e:	f000 f8fb 	bl	8000838 <LCD_DATA>
 8000642:	2037      	movs	r0, #55	@ 0x37
 8000644:	f000 f8f8 	bl	8000838 <LCD_DATA>
 8000648:	2040      	movs	r0, #64	@ 0x40
 800064a:	f000 f8f5 	bl	8000838 <LCD_DATA>
 800064e:	2003      	movs	r0, #3
 8000650:	f000 f8f2 	bl	8000838 <LCD_DATA>
 8000654:	2010      	movs	r0, #16
 8000656:	f000 f8ef 	bl	8000838 <LCD_DATA>
 800065a:	2008      	movs	r0, #8
 800065c:	f000 f8ec 	bl	8000838 <LCD_DATA>
 8000660:	2080      	movs	r0, #128	@ 0x80
 8000662:	f000 f8e9 	bl	8000838 <LCD_DATA>
 8000666:	2000      	movs	r0, #0
 8000668:	f000 f8e6 	bl	8000838 <LCD_DATA>
 800066c:	202a      	movs	r0, #42	@ 0x2a
 800066e:	f000 f83d 	bl	80006ec <LCD_CMD>
 8000672:	2000      	movs	r0, #0
 8000674:	f000 f8e0 	bl	8000838 <LCD_DATA>
 8000678:	2000      	movs	r0, #0
 800067a:	f000 f8dd 	bl	8000838 <LCD_DATA>
 800067e:	2001      	movs	r0, #1
 8000680:	f000 f8da 	bl	8000838 <LCD_DATA>
 8000684:	203f      	movs	r0, #63	@ 0x3f
 8000686:	f000 f8d7 	bl	8000838 <LCD_DATA>
 800068a:	202b      	movs	r0, #43	@ 0x2b
 800068c:	f000 f82e 	bl	80006ec <LCD_CMD>
 8000690:	2000      	movs	r0, #0
 8000692:	f000 f8d1 	bl	8000838 <LCD_DATA>
 8000696:	2000      	movs	r0, #0
 8000698:	f000 f8ce 	bl	8000838 <LCD_DATA>
 800069c:	2001      	movs	r0, #1
 800069e:	f000 f8cb 	bl	8000838 <LCD_DATA>
 80006a2:	20e0      	movs	r0, #224	@ 0xe0
 80006a4:	f000 f8c8 	bl	8000838 <LCD_DATA>
 80006a8:	2029      	movs	r0, #41	@ 0x29
 80006aa:	f000 f81f 	bl	80006ec <LCD_CMD>
 80006ae:	202c      	movs	r0, #44	@ 0x2c
 80006b0:	f000 f81c 	bl	80006ec <LCD_CMD>
 80006b4:	2020      	movs	r0, #32
 80006b6:	f000 f819 	bl	80006ec <LCD_CMD>
 80006ba:	2078      	movs	r0, #120	@ 0x78
 80006bc:	f001 fa6a 	bl	8001b94 <HAL_Delay>
 80006c0:	2011      	movs	r0, #17
 80006c2:	f000 f813 	bl	80006ec <LCD_CMD>
 80006c6:	2078      	movs	r0, #120	@ 0x78
 80006c8:	f001 fa64 	bl	8001b94 <HAL_Delay>
 80006cc:	2029      	movs	r0, #41	@ 0x29
 80006ce:	f000 f80d 	bl	80006ec <LCD_CMD>
 80006d2:	2201      	movs	r2, #1
 80006d4:	2101      	movs	r1, #1
 80006d6:	4802      	ldr	r0, [pc, #8]	@ (80006e0 <LCD_Init+0x1ec>)
 80006d8:	f001 fdb8 	bl	800224c <HAL_GPIO_WritePin>
 80006dc:	bf00      	nop
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	40020400 	.word	0x40020400
 80006e4:	40020000 	.word	0x40020000
 80006e8:	40020800 	.word	0x40020800

080006ec <LCD_CMD>:
 80006ec:	b580      	push	{r7, lr}
 80006ee:	b082      	sub	sp, #8
 80006f0:	af00      	add	r7, sp, #0
 80006f2:	4603      	mov	r3, r0
 80006f4:	71fb      	strb	r3, [r7, #7]
 80006f6:	2200      	movs	r2, #0
 80006f8:	2110      	movs	r1, #16
 80006fa:	484c      	ldr	r0, [pc, #304]	@ (800082c <LCD_CMD+0x140>)
 80006fc:	f001 fda6 	bl	800224c <HAL_GPIO_WritePin>
 8000700:	2200      	movs	r2, #0
 8000702:	2102      	movs	r1, #2
 8000704:	4849      	ldr	r0, [pc, #292]	@ (800082c <LCD_CMD+0x140>)
 8000706:	f001 fda1 	bl	800224c <HAL_GPIO_WritePin>
 800070a:	79fb      	ldrb	r3, [r7, #7]
 800070c:	f003 0301 	and.w	r3, r3, #1
 8000710:	2b00      	cmp	r3, #0
 8000712:	d006      	beq.n	8000722 <LCD_CMD+0x36>
 8000714:	2201      	movs	r2, #1
 8000716:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800071a:	4844      	ldr	r0, [pc, #272]	@ (800082c <LCD_CMD+0x140>)
 800071c:	f001 fd96 	bl	800224c <HAL_GPIO_WritePin>
 8000720:	e005      	b.n	800072e <LCD_CMD+0x42>
 8000722:	2200      	movs	r2, #0
 8000724:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000728:	4840      	ldr	r0, [pc, #256]	@ (800082c <LCD_CMD+0x140>)
 800072a:	f001 fd8f 	bl	800224c <HAL_GPIO_WritePin>
 800072e:	79fb      	ldrb	r3, [r7, #7]
 8000730:	f003 0302 	and.w	r3, r3, #2
 8000734:	2b00      	cmp	r3, #0
 8000736:	d005      	beq.n	8000744 <LCD_CMD+0x58>
 8000738:	2201      	movs	r2, #1
 800073a:	2180      	movs	r1, #128	@ 0x80
 800073c:	483c      	ldr	r0, [pc, #240]	@ (8000830 <LCD_CMD+0x144>)
 800073e:	f001 fd85 	bl	800224c <HAL_GPIO_WritePin>
 8000742:	e004      	b.n	800074e <LCD_CMD+0x62>
 8000744:	2200      	movs	r2, #0
 8000746:	2180      	movs	r1, #128	@ 0x80
 8000748:	4839      	ldr	r0, [pc, #228]	@ (8000830 <LCD_CMD+0x144>)
 800074a:	f001 fd7f 	bl	800224c <HAL_GPIO_WritePin>
 800074e:	79fb      	ldrb	r3, [r7, #7]
 8000750:	f003 0304 	and.w	r3, r3, #4
 8000754:	2b00      	cmp	r3, #0
 8000756:	d006      	beq.n	8000766 <LCD_CMD+0x7a>
 8000758:	2201      	movs	r2, #1
 800075a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800075e:	4833      	ldr	r0, [pc, #204]	@ (800082c <LCD_CMD+0x140>)
 8000760:	f001 fd74 	bl	800224c <HAL_GPIO_WritePin>
 8000764:	e005      	b.n	8000772 <LCD_CMD+0x86>
 8000766:	2200      	movs	r2, #0
 8000768:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800076c:	482f      	ldr	r0, [pc, #188]	@ (800082c <LCD_CMD+0x140>)
 800076e:	f001 fd6d 	bl	800224c <HAL_GPIO_WritePin>
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	f003 0308 	and.w	r3, r3, #8
 8000778:	2b00      	cmp	r3, #0
 800077a:	d005      	beq.n	8000788 <LCD_CMD+0x9c>
 800077c:	2201      	movs	r2, #1
 800077e:	2108      	movs	r1, #8
 8000780:	482c      	ldr	r0, [pc, #176]	@ (8000834 <LCD_CMD+0x148>)
 8000782:	f001 fd63 	bl	800224c <HAL_GPIO_WritePin>
 8000786:	e004      	b.n	8000792 <LCD_CMD+0xa6>
 8000788:	2200      	movs	r2, #0
 800078a:	2108      	movs	r1, #8
 800078c:	4829      	ldr	r0, [pc, #164]	@ (8000834 <LCD_CMD+0x148>)
 800078e:	f001 fd5d 	bl	800224c <HAL_GPIO_WritePin>
 8000792:	79fb      	ldrb	r3, [r7, #7]
 8000794:	f003 0310 	and.w	r3, r3, #16
 8000798:	2b00      	cmp	r3, #0
 800079a:	d005      	beq.n	80007a8 <LCD_CMD+0xbc>
 800079c:	2201      	movs	r2, #1
 800079e:	2120      	movs	r1, #32
 80007a0:	4824      	ldr	r0, [pc, #144]	@ (8000834 <LCD_CMD+0x148>)
 80007a2:	f001 fd53 	bl	800224c <HAL_GPIO_WritePin>
 80007a6:	e004      	b.n	80007b2 <LCD_CMD+0xc6>
 80007a8:	2200      	movs	r2, #0
 80007aa:	2120      	movs	r1, #32
 80007ac:	4821      	ldr	r0, [pc, #132]	@ (8000834 <LCD_CMD+0x148>)
 80007ae:	f001 fd4d 	bl	800224c <HAL_GPIO_WritePin>
 80007b2:	79fb      	ldrb	r3, [r7, #7]
 80007b4:	f003 0320 	and.w	r3, r3, #32
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	d005      	beq.n	80007c8 <LCD_CMD+0xdc>
 80007bc:	2201      	movs	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	481c      	ldr	r0, [pc, #112]	@ (8000834 <LCD_CMD+0x148>)
 80007c2:	f001 fd43 	bl	800224c <HAL_GPIO_WritePin>
 80007c6:	e004      	b.n	80007d2 <LCD_CMD+0xe6>
 80007c8:	2200      	movs	r2, #0
 80007ca:	2110      	movs	r1, #16
 80007cc:	4819      	ldr	r0, [pc, #100]	@ (8000834 <LCD_CMD+0x148>)
 80007ce:	f001 fd3d 	bl	800224c <HAL_GPIO_WritePin>
 80007d2:	79fb      	ldrb	r3, [r7, #7]
 80007d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d006      	beq.n	80007ea <LCD_CMD+0xfe>
 80007dc:	2201      	movs	r2, #1
 80007de:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007e2:	4814      	ldr	r0, [pc, #80]	@ (8000834 <LCD_CMD+0x148>)
 80007e4:	f001 fd32 	bl	800224c <HAL_GPIO_WritePin>
 80007e8:	e005      	b.n	80007f6 <LCD_CMD+0x10a>
 80007ea:	2200      	movs	r2, #0
 80007ec:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007f0:	4810      	ldr	r0, [pc, #64]	@ (8000834 <LCD_CMD+0x148>)
 80007f2:	f001 fd2b 	bl	800224c <HAL_GPIO_WritePin>
 80007f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80007fa:	2b00      	cmp	r3, #0
 80007fc:	da06      	bge.n	800080c <LCD_CMD+0x120>
 80007fe:	2201      	movs	r2, #1
 8000800:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000804:	4809      	ldr	r0, [pc, #36]	@ (800082c <LCD_CMD+0x140>)
 8000806:	f001 fd21 	bl	800224c <HAL_GPIO_WritePin>
 800080a:	e005      	b.n	8000818 <LCD_CMD+0x12c>
 800080c:	2200      	movs	r2, #0
 800080e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000812:	4806      	ldr	r0, [pc, #24]	@ (800082c <LCD_CMD+0x140>)
 8000814:	f001 fd1a 	bl	800224c <HAL_GPIO_WritePin>
 8000818:	2201      	movs	r2, #1
 800081a:	2102      	movs	r1, #2
 800081c:	4803      	ldr	r0, [pc, #12]	@ (800082c <LCD_CMD+0x140>)
 800081e:	f001 fd15 	bl	800224c <HAL_GPIO_WritePin>
 8000822:	bf00      	nop
 8000824:	3708      	adds	r7, #8
 8000826:	46bd      	mov	sp, r7
 8000828:	bd80      	pop	{r7, pc}
 800082a:	bf00      	nop
 800082c:	40020000 	.word	0x40020000
 8000830:	40020800 	.word	0x40020800
 8000834:	40020400 	.word	0x40020400

08000838 <LCD_DATA>:
 8000838:	b580      	push	{r7, lr}
 800083a:	b082      	sub	sp, #8
 800083c:	af00      	add	r7, sp, #0
 800083e:	4603      	mov	r3, r0
 8000840:	71fb      	strb	r3, [r7, #7]
 8000842:	2201      	movs	r2, #1
 8000844:	2110      	movs	r1, #16
 8000846:	484c      	ldr	r0, [pc, #304]	@ (8000978 <LCD_DATA+0x140>)
 8000848:	f001 fd00 	bl	800224c <HAL_GPIO_WritePin>
 800084c:	2200      	movs	r2, #0
 800084e:	2102      	movs	r1, #2
 8000850:	4849      	ldr	r0, [pc, #292]	@ (8000978 <LCD_DATA+0x140>)
 8000852:	f001 fcfb 	bl	800224c <HAL_GPIO_WritePin>
 8000856:	79fb      	ldrb	r3, [r7, #7]
 8000858:	f003 0301 	and.w	r3, r3, #1
 800085c:	2b00      	cmp	r3, #0
 800085e:	d006      	beq.n	800086e <LCD_DATA+0x36>
 8000860:	2201      	movs	r2, #1
 8000862:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000866:	4844      	ldr	r0, [pc, #272]	@ (8000978 <LCD_DATA+0x140>)
 8000868:	f001 fcf0 	bl	800224c <HAL_GPIO_WritePin>
 800086c:	e005      	b.n	800087a <LCD_DATA+0x42>
 800086e:	2200      	movs	r2, #0
 8000870:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000874:	4840      	ldr	r0, [pc, #256]	@ (8000978 <LCD_DATA+0x140>)
 8000876:	f001 fce9 	bl	800224c <HAL_GPIO_WritePin>
 800087a:	79fb      	ldrb	r3, [r7, #7]
 800087c:	f003 0302 	and.w	r3, r3, #2
 8000880:	2b00      	cmp	r3, #0
 8000882:	d005      	beq.n	8000890 <LCD_DATA+0x58>
 8000884:	2201      	movs	r2, #1
 8000886:	2180      	movs	r1, #128	@ 0x80
 8000888:	483c      	ldr	r0, [pc, #240]	@ (800097c <LCD_DATA+0x144>)
 800088a:	f001 fcdf 	bl	800224c <HAL_GPIO_WritePin>
 800088e:	e004      	b.n	800089a <LCD_DATA+0x62>
 8000890:	2200      	movs	r2, #0
 8000892:	2180      	movs	r1, #128	@ 0x80
 8000894:	4839      	ldr	r0, [pc, #228]	@ (800097c <LCD_DATA+0x144>)
 8000896:	f001 fcd9 	bl	800224c <HAL_GPIO_WritePin>
 800089a:	79fb      	ldrb	r3, [r7, #7]
 800089c:	f003 0304 	and.w	r3, r3, #4
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	d006      	beq.n	80008b2 <LCD_DATA+0x7a>
 80008a4:	2201      	movs	r2, #1
 80008a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80008aa:	4833      	ldr	r0, [pc, #204]	@ (8000978 <LCD_DATA+0x140>)
 80008ac:	f001 fcce 	bl	800224c <HAL_GPIO_WritePin>
 80008b0:	e005      	b.n	80008be <LCD_DATA+0x86>
 80008b2:	2200      	movs	r2, #0
 80008b4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80008b8:	482f      	ldr	r0, [pc, #188]	@ (8000978 <LCD_DATA+0x140>)
 80008ba:	f001 fcc7 	bl	800224c <HAL_GPIO_WritePin>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	f003 0308 	and.w	r3, r3, #8
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	d005      	beq.n	80008d4 <LCD_DATA+0x9c>
 80008c8:	2201      	movs	r2, #1
 80008ca:	2108      	movs	r1, #8
 80008cc:	482c      	ldr	r0, [pc, #176]	@ (8000980 <LCD_DATA+0x148>)
 80008ce:	f001 fcbd 	bl	800224c <HAL_GPIO_WritePin>
 80008d2:	e004      	b.n	80008de <LCD_DATA+0xa6>
 80008d4:	2200      	movs	r2, #0
 80008d6:	2108      	movs	r1, #8
 80008d8:	4829      	ldr	r0, [pc, #164]	@ (8000980 <LCD_DATA+0x148>)
 80008da:	f001 fcb7 	bl	800224c <HAL_GPIO_WritePin>
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	f003 0310 	and.w	r3, r3, #16
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	d005      	beq.n	80008f4 <LCD_DATA+0xbc>
 80008e8:	2201      	movs	r2, #1
 80008ea:	2120      	movs	r1, #32
 80008ec:	4824      	ldr	r0, [pc, #144]	@ (8000980 <LCD_DATA+0x148>)
 80008ee:	f001 fcad 	bl	800224c <HAL_GPIO_WritePin>
 80008f2:	e004      	b.n	80008fe <LCD_DATA+0xc6>
 80008f4:	2200      	movs	r2, #0
 80008f6:	2120      	movs	r1, #32
 80008f8:	4821      	ldr	r0, [pc, #132]	@ (8000980 <LCD_DATA+0x148>)
 80008fa:	f001 fca7 	bl	800224c <HAL_GPIO_WritePin>
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	f003 0320 	and.w	r3, r3, #32
 8000904:	2b00      	cmp	r3, #0
 8000906:	d005      	beq.n	8000914 <LCD_DATA+0xdc>
 8000908:	2201      	movs	r2, #1
 800090a:	2110      	movs	r1, #16
 800090c:	481c      	ldr	r0, [pc, #112]	@ (8000980 <LCD_DATA+0x148>)
 800090e:	f001 fc9d 	bl	800224c <HAL_GPIO_WritePin>
 8000912:	e004      	b.n	800091e <LCD_DATA+0xe6>
 8000914:	2200      	movs	r2, #0
 8000916:	2110      	movs	r1, #16
 8000918:	4819      	ldr	r0, [pc, #100]	@ (8000980 <LCD_DATA+0x148>)
 800091a:	f001 fc97 	bl	800224c <HAL_GPIO_WritePin>
 800091e:	79fb      	ldrb	r3, [r7, #7]
 8000920:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000924:	2b00      	cmp	r3, #0
 8000926:	d006      	beq.n	8000936 <LCD_DATA+0xfe>
 8000928:	2201      	movs	r2, #1
 800092a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800092e:	4814      	ldr	r0, [pc, #80]	@ (8000980 <LCD_DATA+0x148>)
 8000930:	f001 fc8c 	bl	800224c <HAL_GPIO_WritePin>
 8000934:	e005      	b.n	8000942 <LCD_DATA+0x10a>
 8000936:	2200      	movs	r2, #0
 8000938:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800093c:	4810      	ldr	r0, [pc, #64]	@ (8000980 <LCD_DATA+0x148>)
 800093e:	f001 fc85 	bl	800224c <HAL_GPIO_WritePin>
 8000942:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000946:	2b00      	cmp	r3, #0
 8000948:	da06      	bge.n	8000958 <LCD_DATA+0x120>
 800094a:	2201      	movs	r2, #1
 800094c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000950:	4809      	ldr	r0, [pc, #36]	@ (8000978 <LCD_DATA+0x140>)
 8000952:	f001 fc7b 	bl	800224c <HAL_GPIO_WritePin>
 8000956:	e005      	b.n	8000964 <LCD_DATA+0x12c>
 8000958:	2200      	movs	r2, #0
 800095a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800095e:	4806      	ldr	r0, [pc, #24]	@ (8000978 <LCD_DATA+0x140>)
 8000960:	f001 fc74 	bl	800224c <HAL_GPIO_WritePin>
 8000964:	2201      	movs	r2, #1
 8000966:	2102      	movs	r1, #2
 8000968:	4803      	ldr	r0, [pc, #12]	@ (8000978 <LCD_DATA+0x140>)
 800096a:	f001 fc6f 	bl	800224c <HAL_GPIO_WritePin>
 800096e:	bf00      	nop
 8000970:	3708      	adds	r7, #8
 8000972:	46bd      	mov	sp, r7
 8000974:	bd80      	pop	{r7, pc}
 8000976:	bf00      	nop
 8000978:	40020000 	.word	0x40020000
 800097c:	40020800 	.word	0x40020800
 8000980:	40020400 	.word	0x40020400

08000984 <SetWindows>:
 8000984:	b580      	push	{r7, lr}
 8000986:	b084      	sub	sp, #16
 8000988:	af00      	add	r7, sp, #0
 800098a:	60f8      	str	r0, [r7, #12]
 800098c:	60b9      	str	r1, [r7, #8]
 800098e:	607a      	str	r2, [r7, #4]
 8000990:	603b      	str	r3, [r7, #0]
 8000992:	202a      	movs	r0, #42	@ 0x2a
 8000994:	f7ff feaa 	bl	80006ec <LCD_CMD>
 8000998:	68fb      	ldr	r3, [r7, #12]
 800099a:	0a1b      	lsrs	r3, r3, #8
 800099c:	b2db      	uxtb	r3, r3
 800099e:	4618      	mov	r0, r3
 80009a0:	f7ff ff4a 	bl	8000838 <LCD_DATA>
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	b2db      	uxtb	r3, r3
 80009a8:	4618      	mov	r0, r3
 80009aa:	f7ff ff45 	bl	8000838 <LCD_DATA>
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	0a1b      	lsrs	r3, r3, #8
 80009b2:	b2db      	uxtb	r3, r3
 80009b4:	4618      	mov	r0, r3
 80009b6:	f7ff ff3f 	bl	8000838 <LCD_DATA>
 80009ba:	687b      	ldr	r3, [r7, #4]
 80009bc:	b2db      	uxtb	r3, r3
 80009be:	4618      	mov	r0, r3
 80009c0:	f7ff ff3a 	bl	8000838 <LCD_DATA>
 80009c4:	202b      	movs	r0, #43	@ 0x2b
 80009c6:	f7ff fe91 	bl	80006ec <LCD_CMD>
 80009ca:	68bb      	ldr	r3, [r7, #8]
 80009cc:	0a1b      	lsrs	r3, r3, #8
 80009ce:	b2db      	uxtb	r3, r3
 80009d0:	4618      	mov	r0, r3
 80009d2:	f7ff ff31 	bl	8000838 <LCD_DATA>
 80009d6:	68bb      	ldr	r3, [r7, #8]
 80009d8:	b2db      	uxtb	r3, r3
 80009da:	4618      	mov	r0, r3
 80009dc:	f7ff ff2c 	bl	8000838 <LCD_DATA>
 80009e0:	683b      	ldr	r3, [r7, #0]
 80009e2:	0a1b      	lsrs	r3, r3, #8
 80009e4:	b2db      	uxtb	r3, r3
 80009e6:	4618      	mov	r0, r3
 80009e8:	f7ff ff26 	bl	8000838 <LCD_DATA>
 80009ec:	683b      	ldr	r3, [r7, #0]
 80009ee:	b2db      	uxtb	r3, r3
 80009f0:	4618      	mov	r0, r3
 80009f2:	f7ff ff21 	bl	8000838 <LCD_DATA>
 80009f6:	202c      	movs	r0, #44	@ 0x2c
 80009f8:	f7ff fe78 	bl	80006ec <LCD_CMD>
 80009fc:	bf00      	nop
 80009fe:	3710      	adds	r7, #16
 8000a00:	46bd      	mov	sp, r7
 8000a02:	bd80      	pop	{r7, pc}

08000a04 <LCD_Clear>:
 8000a04:	b580      	push	{r7, lr}
 8000a06:	b084      	sub	sp, #16
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	6078      	str	r0, [r7, #4]
 8000a0c:	202c      	movs	r0, #44	@ 0x2c
 8000a0e:	f7ff fe6d 	bl	80006ec <LCD_CMD>
 8000a12:	2201      	movs	r2, #1
 8000a14:	2110      	movs	r1, #16
 8000a16:	481b      	ldr	r0, [pc, #108]	@ (8000a84 <LCD_Clear+0x80>)
 8000a18:	f001 fc18 	bl	800224c <HAL_GPIO_WritePin>
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	2101      	movs	r1, #1
 8000a20:	4819      	ldr	r0, [pc, #100]	@ (8000a88 <LCD_Clear+0x84>)
 8000a22:	f001 fc13 	bl	800224c <HAL_GPIO_WritePin>
 8000a26:	23ef      	movs	r3, #239	@ 0xef
 8000a28:	f240 123f 	movw	r2, #319	@ 0x13f
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	2000      	movs	r0, #0
 8000a30:	f7ff ffa8 	bl	8000984 <SetWindows>
 8000a34:	2300      	movs	r3, #0
 8000a36:	60fb      	str	r3, [r7, #12]
 8000a38:	e016      	b.n	8000a68 <LCD_Clear+0x64>
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	60bb      	str	r3, [r7, #8]
 8000a3e:	e00d      	b.n	8000a5c <LCD_Clear+0x58>
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	0a1b      	lsrs	r3, r3, #8
 8000a44:	b2db      	uxtb	r3, r3
 8000a46:	4618      	mov	r0, r3
 8000a48:	f7ff fef6 	bl	8000838 <LCD_DATA>
 8000a4c:	687b      	ldr	r3, [r7, #4]
 8000a4e:	b2db      	uxtb	r3, r3
 8000a50:	4618      	mov	r0, r3
 8000a52:	f7ff fef1 	bl	8000838 <LCD_DATA>
 8000a56:	68bb      	ldr	r3, [r7, #8]
 8000a58:	3301      	adds	r3, #1
 8000a5a:	60bb      	str	r3, [r7, #8]
 8000a5c:	68bb      	ldr	r3, [r7, #8]
 8000a5e:	2bef      	cmp	r3, #239	@ 0xef
 8000a60:	d9ee      	bls.n	8000a40 <LCD_Clear+0x3c>
 8000a62:	68fb      	ldr	r3, [r7, #12]
 8000a64:	3301      	adds	r3, #1
 8000a66:	60fb      	str	r3, [r7, #12]
 8000a68:	68fb      	ldr	r3, [r7, #12]
 8000a6a:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8000a6e:	d3e4      	bcc.n	8000a3a <LCD_Clear+0x36>
 8000a70:	2201      	movs	r2, #1
 8000a72:	2101      	movs	r1, #1
 8000a74:	4804      	ldr	r0, [pc, #16]	@ (8000a88 <LCD_Clear+0x84>)
 8000a76:	f001 fbe9 	bl	800224c <HAL_GPIO_WritePin>
 8000a7a:	bf00      	nop
 8000a7c:	3710      	adds	r7, #16
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	40020000 	.word	0x40020000
 8000a88:	40020400 	.word	0x40020400

08000a8c <V_line>:
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	b086      	sub	sp, #24
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	60f8      	str	r0, [r7, #12]
 8000a94:	60b9      	str	r1, [r7, #8]
 8000a96:	607a      	str	r2, [r7, #4]
 8000a98:	603b      	str	r3, [r7, #0]
 8000a9a:	202c      	movs	r0, #44	@ 0x2c
 8000a9c:	f7ff fe26 	bl	80006ec <LCD_CMD>
 8000aa0:	2201      	movs	r2, #1
 8000aa2:	2110      	movs	r1, #16
 8000aa4:	4817      	ldr	r0, [pc, #92]	@ (8000b04 <V_line+0x78>)
 8000aa6:	f001 fbd1 	bl	800224c <HAL_GPIO_WritePin>
 8000aaa:	2200      	movs	r2, #0
 8000aac:	2101      	movs	r1, #1
 8000aae:	4816      	ldr	r0, [pc, #88]	@ (8000b08 <V_line+0x7c>)
 8000ab0:	f001 fbcc 	bl	800224c <HAL_GPIO_WritePin>
 8000ab4:	687a      	ldr	r2, [r7, #4]
 8000ab6:	68bb      	ldr	r3, [r7, #8]
 8000ab8:	4413      	add	r3, r2
 8000aba:	607b      	str	r3, [r7, #4]
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	68fa      	ldr	r2, [r7, #12]
 8000ac0:	68b9      	ldr	r1, [r7, #8]
 8000ac2:	68f8      	ldr	r0, [r7, #12]
 8000ac4:	f7ff ff5e 	bl	8000984 <SetWindows>
 8000ac8:	2301      	movs	r3, #1
 8000aca:	617b      	str	r3, [r7, #20]
 8000acc:	e00d      	b.n	8000aea <V_line+0x5e>
 8000ace:	683b      	ldr	r3, [r7, #0]
 8000ad0:	0a1b      	lsrs	r3, r3, #8
 8000ad2:	b2db      	uxtb	r3, r3
 8000ad4:	4618      	mov	r0, r3
 8000ad6:	f7ff feaf 	bl	8000838 <LCD_DATA>
 8000ada:	683b      	ldr	r3, [r7, #0]
 8000adc:	b2db      	uxtb	r3, r3
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f7ff feaa 	bl	8000838 <LCD_DATA>
 8000ae4:	697b      	ldr	r3, [r7, #20]
 8000ae6:	3301      	adds	r3, #1
 8000ae8:	617b      	str	r3, [r7, #20]
 8000aea:	697a      	ldr	r2, [r7, #20]
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	429a      	cmp	r2, r3
 8000af0:	d9ed      	bls.n	8000ace <V_line+0x42>
 8000af2:	2201      	movs	r2, #1
 8000af4:	2101      	movs	r1, #1
 8000af6:	4804      	ldr	r0, [pc, #16]	@ (8000b08 <V_line+0x7c>)
 8000af8:	f001 fba8 	bl	800224c <HAL_GPIO_WritePin>
 8000afc:	bf00      	nop
 8000afe:	3718      	adds	r7, #24
 8000b00:	46bd      	mov	sp, r7
 8000b02:	bd80      	pop	{r7, pc}
 8000b04:	40020000 	.word	0x40020000
 8000b08:	40020400 	.word	0x40020400

08000b0c <FillRect>:
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	b08a      	sub	sp, #40	@ 0x28
 8000b10:	af00      	add	r7, sp, #0
 8000b12:	60f8      	str	r0, [r7, #12]
 8000b14:	60b9      	str	r1, [r7, #8]
 8000b16:	607a      	str	r2, [r7, #4]
 8000b18:	603b      	str	r3, [r7, #0]
 8000b1a:	202c      	movs	r0, #44	@ 0x2c
 8000b1c:	f7ff fde6 	bl	80006ec <LCD_CMD>
 8000b20:	2201      	movs	r2, #1
 8000b22:	2110      	movs	r1, #16
 8000b24:	4824      	ldr	r0, [pc, #144]	@ (8000bb8 <FillRect+0xac>)
 8000b26:	f001 fb91 	bl	800224c <HAL_GPIO_WritePin>
 8000b2a:	2200      	movs	r2, #0
 8000b2c:	2101      	movs	r1, #1
 8000b2e:	4823      	ldr	r0, [pc, #140]	@ (8000bbc <FillRect+0xb0>)
 8000b30:	f001 fb8c 	bl	800224c <HAL_GPIO_WritePin>
 8000b34:	68fa      	ldr	r2, [r7, #12]
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	4413      	add	r3, r2
 8000b3a:	61bb      	str	r3, [r7, #24]
 8000b3c:	68ba      	ldr	r2, [r7, #8]
 8000b3e:	683b      	ldr	r3, [r7, #0]
 8000b40:	4413      	add	r3, r2
 8000b42:	617b      	str	r3, [r7, #20]
 8000b44:	69bb      	ldr	r3, [r7, #24]
 8000b46:	1e5a      	subs	r2, r3, #1
 8000b48:	697b      	ldr	r3, [r7, #20]
 8000b4a:	3b01      	subs	r3, #1
 8000b4c:	68b9      	ldr	r1, [r7, #8]
 8000b4e:	68f8      	ldr	r0, [r7, #12]
 8000b50:	f7ff ff18 	bl	8000984 <SetWindows>
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	683a      	ldr	r2, [r7, #0]
 8000b58:	fb02 f303 	mul.w	r3, r2, r3
 8000b5c:	005b      	lsls	r3, r3, #1
 8000b5e:	3b01      	subs	r3, #1
 8000b60:	627b      	str	r3, [r7, #36]	@ 0x24
 8000b62:	2300      	movs	r3, #0
 8000b64:	623b      	str	r3, [r7, #32]
 8000b66:	e01a      	b.n	8000b9e <FillRect+0x92>
 8000b68:	2300      	movs	r3, #0
 8000b6a:	61fb      	str	r3, [r7, #28]
 8000b6c:	e010      	b.n	8000b90 <FillRect+0x84>
 8000b6e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000b70:	0a1b      	lsrs	r3, r3, #8
 8000b72:	b2db      	uxtb	r3, r3
 8000b74:	4618      	mov	r0, r3
 8000b76:	f7ff fe5f 	bl	8000838 <LCD_DATA>
 8000b7a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000b7c:	b2db      	uxtb	r3, r3
 8000b7e:	4618      	mov	r0, r3
 8000b80:	f7ff fe5a 	bl	8000838 <LCD_DATA>
 8000b84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000b86:	3b02      	subs	r3, #2
 8000b88:	627b      	str	r3, [r7, #36]	@ 0x24
 8000b8a:	69fb      	ldr	r3, [r7, #28]
 8000b8c:	3301      	adds	r3, #1
 8000b8e:	61fb      	str	r3, [r7, #28]
 8000b90:	69fb      	ldr	r3, [r7, #28]
 8000b92:	683a      	ldr	r2, [r7, #0]
 8000b94:	429a      	cmp	r2, r3
 8000b96:	d8ea      	bhi.n	8000b6e <FillRect+0x62>
 8000b98:	6a3b      	ldr	r3, [r7, #32]
 8000b9a:	3301      	adds	r3, #1
 8000b9c:	623b      	str	r3, [r7, #32]
 8000b9e:	6a3b      	ldr	r3, [r7, #32]
 8000ba0:	687a      	ldr	r2, [r7, #4]
 8000ba2:	429a      	cmp	r2, r3
 8000ba4:	d8e0      	bhi.n	8000b68 <FillRect+0x5c>
 8000ba6:	2201      	movs	r2, #1
 8000ba8:	2101      	movs	r1, #1
 8000baa:	4804      	ldr	r0, [pc, #16]	@ (8000bbc <FillRect+0xb0>)
 8000bac:	f001 fb4e 	bl	800224c <HAL_GPIO_WritePin>
 8000bb0:	bf00      	nop
 8000bb2:	3728      	adds	r7, #40	@ 0x28
 8000bb4:	46bd      	mov	sp, r7
 8000bb6:	bd80      	pop	{r7, pc}
 8000bb8:	40020000 	.word	0x40020000
 8000bbc:	40020400 	.word	0x40020400

08000bc0 <initEnemy1>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

//Funciones Enemigo tipo 1
void initEnemy1(enemy_type1* enemy, unsigned int startX, unsigned int startY, unsigned int width, unsigned int height, int health) {
 8000bc0:	b590      	push	{r4, r7, lr}
 8000bc2:	b087      	sub	sp, #28
 8000bc4:	af02      	add	r7, sp, #8
 8000bc6:	60f8      	str	r0, [r7, #12]
 8000bc8:	60b9      	str	r1, [r7, #8]
 8000bca:	607a      	str	r2, [r7, #4]
 8000bcc:	603b      	str	r3, [r7, #0]
    // Inicializar las coordenadas y dimensiones
    enemy->x = startX;
 8000bce:	68fb      	ldr	r3, [r7, #12]
 8000bd0:	68ba      	ldr	r2, [r7, #8]
 8000bd2:	601a      	str	r2, [r3, #0]
    enemy->y = startY;
 8000bd4:	68fb      	ldr	r3, [r7, #12]
 8000bd6:	687a      	ldr	r2, [r7, #4]
 8000bd8:	605a      	str	r2, [r3, #4]
    enemy->width = width;
 8000bda:	68fb      	ldr	r3, [r7, #12]
 8000bdc:	683a      	ldr	r2, [r7, #0]
 8000bde:	609a      	str	r2, [r3, #8]
    enemy->height = height;
 8000be0:	68fb      	ldr	r3, [r7, #12]
 8000be2:	6a3a      	ldr	r2, [r7, #32]
 8000be4:	60da      	str	r2, [r3, #12]

    // Inicializar la vida y el estado
    enemy->health = health;
 8000be6:	68fb      	ldr	r3, [r7, #12]
 8000be8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000bea:	611a      	str	r2, [r3, #16]
    enemy->isAlive = 1;  // El enemigo comienza vivo
 8000bec:	68fb      	ldr	r3, [r7, #12]
 8000bee:	2201      	movs	r2, #1
 8000bf0:	615a      	str	r2, [r3, #20]

    // Dibujar el enemigo en pantalla
    FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
 8000bf2:	68fb      	ldr	r3, [r7, #12]
 8000bf4:	681a      	ldr	r2, [r3, #0]
 8000bf6:	68fb      	ldr	r3, [r7, #12]
 8000bf8:	689b      	ldr	r3, [r3, #8]
 8000bfa:	085b      	lsrs	r3, r3, #1
 8000bfc:	1ad0      	subs	r0, r2, r3
 8000bfe:	68fb      	ldr	r3, [r7, #12]
 8000c00:	685a      	ldr	r2, [r3, #4]
 8000c02:	68fb      	ldr	r3, [r7, #12]
 8000c04:	68db      	ldr	r3, [r3, #12]
 8000c06:	085b      	lsrs	r3, r3, #1
 8000c08:	1ad1      	subs	r1, r2, r3
 8000c0a:	68fb      	ldr	r3, [r7, #12]
 8000c0c:	689a      	ldr	r2, [r3, #8]
 8000c0e:	68fb      	ldr	r3, [r7, #12]
 8000c10:	68db      	ldr	r3, [r3, #12]
 8000c12:	f44f 047f 	mov.w	r4, #16711680	@ 0xff0000
 8000c16:	9400      	str	r4, [sp, #0]
 8000c18:	f7ff ff78 	bl	8000b0c <FillRect>
    FillRect(enemy->x , enemy->y, 1, 1, 0xFFFFFF);
 8000c1c:	68fb      	ldr	r3, [r7, #12]
 8000c1e:	6818      	ldr	r0, [r3, #0]
 8000c20:	68fb      	ldr	r3, [r7, #12]
 8000c22:	6859      	ldr	r1, [r3, #4]
 8000c24:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000c28:	9300      	str	r3, [sp, #0]
 8000c2a:	2301      	movs	r3, #1
 8000c2c:	2201      	movs	r2, #1
 8000c2e:	f7ff ff6d 	bl	8000b0c <FillRect>

    //HITBOX DEBUG
	enemy->e1Left = enemy->x - (enemy->width / 2);
 8000c32:	68fb      	ldr	r3, [r7, #12]
 8000c34:	681a      	ldr	r2, [r3, #0]
 8000c36:	68fb      	ldr	r3, [r7, #12]
 8000c38:	689b      	ldr	r3, [r3, #8]
 8000c3a:	085b      	lsrs	r3, r3, #1
 8000c3c:	1ad2      	subs	r2, r2, r3
 8000c3e:	68fb      	ldr	r3, [r7, #12]
 8000c40:	619a      	str	r2, [r3, #24]
	enemy->e1Right = (enemy->x + (enemy->width / 2)-1);
 8000c42:	68fb      	ldr	r3, [r7, #12]
 8000c44:	681a      	ldr	r2, [r3, #0]
 8000c46:	68fb      	ldr	r3, [r7, #12]
 8000c48:	689b      	ldr	r3, [r3, #8]
 8000c4a:	085b      	lsrs	r3, r3, #1
 8000c4c:	4413      	add	r3, r2
 8000c4e:	1e5a      	subs	r2, r3, #1
 8000c50:	68fb      	ldr	r3, [r7, #12]
 8000c52:	61da      	str	r2, [r3, #28]
	enemy->e1Up = enemy->y - (enemy->height / 2);
 8000c54:	68fb      	ldr	r3, [r7, #12]
 8000c56:	685a      	ldr	r2, [r3, #4]
 8000c58:	68fb      	ldr	r3, [r7, #12]
 8000c5a:	68db      	ldr	r3, [r3, #12]
 8000c5c:	085b      	lsrs	r3, r3, #1
 8000c5e:	1ad2      	subs	r2, r2, r3
 8000c60:	68fb      	ldr	r3, [r7, #12]
 8000c62:	621a      	str	r2, [r3, #32]
	enemy->e1Down= (enemy->y + (enemy->height / 2)-1);
 8000c64:	68fb      	ldr	r3, [r7, #12]
 8000c66:	685a      	ldr	r2, [r3, #4]
 8000c68:	68fb      	ldr	r3, [r7, #12]
 8000c6a:	68db      	ldr	r3, [r3, #12]
 8000c6c:	085b      	lsrs	r3, r3, #1
 8000c6e:	4413      	add	r3, r2
 8000c70:	1e5a      	subs	r2, r3, #1
 8000c72:	68fb      	ldr	r3, [r7, #12]
 8000c74:	625a      	str	r2, [r3, #36]	@ 0x24
	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xFFFFFF); //Izquierda
 8000c76:	68fb      	ldr	r3, [r7, #12]
 8000c78:	6998      	ldr	r0, [r3, #24]
 8000c7a:	68fb      	ldr	r3, [r7, #12]
 8000c7c:	6859      	ldr	r1, [r3, #4]
 8000c7e:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000c82:	9300      	str	r3, [sp, #0]
 8000c84:	2301      	movs	r3, #1
 8000c86:	2201      	movs	r2, #1
 8000c88:	f7ff ff40 	bl	8000b0c <FillRect>
	FillRect(enemy->e1Right , enemy->y, 1, 1, 0x0420); //Derecha
 8000c8c:	68fb      	ldr	r3, [r7, #12]
 8000c8e:	69d8      	ldr	r0, [r3, #28]
 8000c90:	68fb      	ldr	r3, [r7, #12]
 8000c92:	6859      	ldr	r1, [r3, #4]
 8000c94:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000c98:	9300      	str	r3, [sp, #0]
 8000c9a:	2301      	movs	r3, #1
 8000c9c:	2201      	movs	r2, #1
 8000c9e:	f7ff ff35 	bl	8000b0c <FillRect>
	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xFFFFFF); //Arriba
 8000ca2:	68fb      	ldr	r3, [r7, #12]
 8000ca4:	6818      	ldr	r0, [r3, #0]
 8000ca6:	68fb      	ldr	r3, [r7, #12]
 8000ca8:	6a19      	ldr	r1, [r3, #32]
 8000caa:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000cae:	9300      	str	r3, [sp, #0]
 8000cb0:	2301      	movs	r3, #1
 8000cb2:	2201      	movs	r2, #1
 8000cb4:	f7ff ff2a 	bl	8000b0c <FillRect>
	FillRect(enemy->x , enemy->e1Down, 1, 1, 0x0420); //Abajo
 8000cb8:	68fb      	ldr	r3, [r7, #12]
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	68fb      	ldr	r3, [r7, #12]
 8000cbe:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8000cc0:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000cc4:	9300      	str	r3, [sp, #0]
 8000cc6:	2301      	movs	r3, #1
 8000cc8:	2201      	movs	r2, #1
 8000cca:	f7ff ff1f 	bl	8000b0c <FillRect>
}
 8000cce:	bf00      	nop
 8000cd0:	3714      	adds	r7, #20
 8000cd2:	46bd      	mov	sp, r7
 8000cd4:	bd90      	pop	{r4, r7, pc}

08000cd6 <ColisionPlayer_e1>:

int ColisionPlayer_e1(enemy_type1* enemy, player* player,int direction, int futureX, int futureY){
 8000cd6:	b480      	push	{r7}
 8000cd8:	b085      	sub	sp, #20
 8000cda:	af00      	add	r7, sp, #0
 8000cdc:	60f8      	str	r0, [r7, #12]
 8000cde:	60b9      	str	r1, [r7, #8]
 8000ce0:	607a      	str	r2, [r7, #4]
 8000ce2:	603b      	str	r3, [r7, #0]
	// Verificar colisión con el enemigo basado en la dirección de movimiento
	    switch (direction) {
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d11a      	bne.n	8000d20 <ColisionPlayer_e1+0x4a>
	        case 0: // Movimiento hacia abajo
	        	if (futureY >= enemy->e1Up && (player->playerRight<=enemy->e1Right && player->playerLeft>=enemy->e1Left)){
 8000cea:	68fb      	ldr	r3, [r7, #12]
 8000cec:	6a1a      	ldr	r2, [r3, #32]
 8000cee:	69bb      	ldr	r3, [r7, #24]
 8000cf0:	429a      	cmp	r2, r3
 8000cf2:	d814      	bhi.n	8000d1e <ColisionPlayer_e1+0x48>
 8000cf4:	68bb      	ldr	r3, [r7, #8]
 8000cf6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000cf8:	68fb      	ldr	r3, [r7, #12]
 8000cfa:	69db      	ldr	r3, [r3, #28]
 8000cfc:	429a      	cmp	r2, r3
 8000cfe:	d80e      	bhi.n	8000d1e <ColisionPlayer_e1+0x48>
 8000d00:	68bb      	ldr	r3, [r7, #8]
 8000d02:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000d04:	68fb      	ldr	r3, [r7, #12]
 8000d06:	699b      	ldr	r3, [r3, #24]
 8000d08:	429a      	cmp	r2, r3
 8000d0a:	d308      	bcc.n	8000d1e <ColisionPlayer_e1+0x48>
	        		player->y -= player->speed;
 8000d0c:	68bb      	ldr	r3, [r7, #8]
 8000d0e:	685a      	ldr	r2, [r3, #4]
 8000d10:	68bb      	ldr	r3, [r7, #8]
 8000d12:	691b      	ldr	r3, [r3, #16]
 8000d14:	1ad2      	subs	r2, r2, r3
 8000d16:	68bb      	ldr	r3, [r7, #8]
 8000d18:	605a      	str	r2, [r3, #4]
	        		return 0;  // Colisión con el enemigo
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	e000      	b.n	8000d20 <ColisionPlayer_e1+0x4a>
	        	}
	        	 break;
 8000d1e:	bf00      	nop
	            }
	            break;
	    }
*/
}
}
 8000d20:	4618      	mov	r0, r3
 8000d22:	3714      	adds	r7, #20
 8000d24:	46bd      	mov	sp, r7
 8000d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d2a:	4770      	bx	lr

08000d2c <initPlayer>:

    }
 */

//Funciones Player
void initPlayer(player* player, unsigned int startX, unsigned int startY, unsigned int playerWidth, unsigned int playerHeight, unsigned int speed, unsigned int life, unsigned int limitWidth, unsigned int limitHeight) {
 8000d2c:	b590      	push	{r4, r7, lr}
 8000d2e:	b087      	sub	sp, #28
 8000d30:	af02      	add	r7, sp, #8
 8000d32:	60f8      	str	r0, [r7, #12]
 8000d34:	60b9      	str	r1, [r7, #8]
 8000d36:	607a      	str	r2, [r7, #4]
 8000d38:	603b      	str	r3, [r7, #0]
    // Inicializar las propiedades del jugador
    player->x = startX;
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	68ba      	ldr	r2, [r7, #8]
 8000d3e:	601a      	str	r2, [r3, #0]
    player->y = startY;
 8000d40:	68fb      	ldr	r3, [r7, #12]
 8000d42:	687a      	ldr	r2, [r7, #4]
 8000d44:	605a      	str	r2, [r3, #4]
    player->width = playerWidth;
 8000d46:	68fb      	ldr	r3, [r7, #12]
 8000d48:	683a      	ldr	r2, [r7, #0]
 8000d4a:	609a      	str	r2, [r3, #8]
    player->height = playerHeight;
 8000d4c:	68fb      	ldr	r3, [r7, #12]
 8000d4e:	6a3a      	ldr	r2, [r7, #32]
 8000d50:	60da      	str	r2, [r3, #12]
    player->speed = speed;
 8000d52:	68fb      	ldr	r3, [r7, #12]
 8000d54:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000d56:	611a      	str	r2, [r3, #16]
    player->life = life;
 8000d58:	68fb      	ldr	r3, [r7, #12]
 8000d5a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000d5c:	615a      	str	r2, [r3, #20]
    player->score = 0;          // Puntuación inicial en 0
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	2200      	movs	r2, #0
 8000d62:	619a      	str	r2, [r3, #24]
    player->isAlive = 1;        // El jugador comienza vivo
 8000d64:	68fb      	ldr	r3, [r7, #12]
 8000d66:	2201      	movs	r2, #1
 8000d68:	61da      	str	r2, [r3, #28]
    player->direction = 0;      // Dirección inicial (arriba)
 8000d6a:	68fb      	ldr	r3, [r7, #12]
 8000d6c:	2200      	movs	r2, #0
 8000d6e:	621a      	str	r2, [r3, #32]
    player->limitWidth = limitWidth;
 8000d70:	68fb      	ldr	r3, [r7, #12]
 8000d72:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000d74:	625a      	str	r2, [r3, #36]	@ 0x24
    player->limitHeight = limitHeight;
 8000d76:	68fb      	ldr	r3, [r7, #12]
 8000d78:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8000d7a:	629a      	str	r2, [r3, #40]	@ 0x28

    // Dibujar el jugador en pantalla
    FillRect(player->x - (player->width / 2), player->y - (player->height / 2), player->width, player->height, 0xFFFB00);
 8000d7c:	68fb      	ldr	r3, [r7, #12]
 8000d7e:	681a      	ldr	r2, [r3, #0]
 8000d80:	68fb      	ldr	r3, [r7, #12]
 8000d82:	689b      	ldr	r3, [r3, #8]
 8000d84:	085b      	lsrs	r3, r3, #1
 8000d86:	1ad0      	subs	r0, r2, r3
 8000d88:	68fb      	ldr	r3, [r7, #12]
 8000d8a:	685a      	ldr	r2, [r3, #4]
 8000d8c:	68fb      	ldr	r3, [r7, #12]
 8000d8e:	68db      	ldr	r3, [r3, #12]
 8000d90:	085b      	lsrs	r3, r3, #1
 8000d92:	1ad1      	subs	r1, r2, r3
 8000d94:	68fb      	ldr	r3, [r7, #12]
 8000d96:	689a      	ldr	r2, [r3, #8]
 8000d98:	68fb      	ldr	r3, [r7, #12]
 8000d9a:	68db      	ldr	r3, [r3, #12]
 8000d9c:	4c2f      	ldr	r4, [pc, #188]	@ (8000e5c <initPlayer+0x130>)
 8000d9e:	9400      	str	r4, [sp, #0]
 8000da0:	f7ff feb4 	bl	8000b0c <FillRect>
    FillRect(player->x , player->y, 1, 1, 0x000000);
 8000da4:	68fb      	ldr	r3, [r7, #12]
 8000da6:	6818      	ldr	r0, [r3, #0]
 8000da8:	68fb      	ldr	r3, [r7, #12]
 8000daa:	6859      	ldr	r1, [r3, #4]
 8000dac:	2300      	movs	r3, #0
 8000dae:	9300      	str	r3, [sp, #0]
 8000db0:	2301      	movs	r3, #1
 8000db2:	2201      	movs	r2, #1
 8000db4:	f7ff feaa 	bl	8000b0c <FillRect>

    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 8000db8:	68fb      	ldr	r3, [r7, #12]
 8000dba:	681a      	ldr	r2, [r3, #0]
 8000dbc:	68fb      	ldr	r3, [r7, #12]
 8000dbe:	689b      	ldr	r3, [r3, #8]
 8000dc0:	085b      	lsrs	r3, r3, #1
 8000dc2:	1ad2      	subs	r2, r2, r3
 8000dc4:	68fb      	ldr	r3, [r7, #12]
 8000dc6:	631a      	str	r2, [r3, #48]	@ 0x30
    player->playerRight=(player->x+(player->width / 2)-1);
 8000dc8:	68fb      	ldr	r3, [r7, #12]
 8000dca:	681a      	ldr	r2, [r3, #0]
 8000dcc:	68fb      	ldr	r3, [r7, #12]
 8000dce:	689b      	ldr	r3, [r3, #8]
 8000dd0:	085b      	lsrs	r3, r3, #1
 8000dd2:	4413      	add	r3, r2
 8000dd4:	1e5a      	subs	r2, r3, #1
 8000dd6:	68fb      	ldr	r3, [r7, #12]
 8000dd8:	635a      	str	r2, [r3, #52]	@ 0x34
    player->playerUp=player->y-(player->height / 2);
 8000dda:	68fb      	ldr	r3, [r7, #12]
 8000ddc:	685a      	ldr	r2, [r3, #4]
 8000dde:	68fb      	ldr	r3, [r7, #12]
 8000de0:	68db      	ldr	r3, [r3, #12]
 8000de2:	085b      	lsrs	r3, r3, #1
 8000de4:	1ad2      	subs	r2, r2, r3
 8000de6:	68fb      	ldr	r3, [r7, #12]
 8000de8:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)-1);
 8000dea:	68fb      	ldr	r3, [r7, #12]
 8000dec:	685a      	ldr	r2, [r3, #4]
 8000dee:	68fb      	ldr	r3, [r7, #12]
 8000df0:	68db      	ldr	r3, [r3, #12]
 8000df2:	085b      	lsrs	r3, r3, #1
 8000df4:	4413      	add	r3, r2
 8000df6:	1e5a      	subs	r2, r3, #1
 8000df8:	68fb      	ldr	r3, [r7, #12]
 8000dfa:	63da      	str	r2, [r3, #60]	@ 0x3c
    FillRect(player->playerLeft , player->y, 1, 1, 0xFFFFFF); //Izquierda
 8000dfc:	68fb      	ldr	r3, [r7, #12]
 8000dfe:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8000e00:	68fb      	ldr	r3, [r7, #12]
 8000e02:	6859      	ldr	r1, [r3, #4]
 8000e04:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000e08:	9300      	str	r3, [sp, #0]
 8000e0a:	2301      	movs	r3, #1
 8000e0c:	2201      	movs	r2, #1
 8000e0e:	f7ff fe7d 	bl	8000b0c <FillRect>
    FillRect(player->playerRight , player->y, 1, 1, 0x0420); //Derecha
 8000e12:	68fb      	ldr	r3, [r7, #12]
 8000e14:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8000e16:	68fb      	ldr	r3, [r7, #12]
 8000e18:	6859      	ldr	r1, [r3, #4]
 8000e1a:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000e1e:	9300      	str	r3, [sp, #0]
 8000e20:	2301      	movs	r3, #1
 8000e22:	2201      	movs	r2, #1
 8000e24:	f7ff fe72 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerUp, 1, 1, 0xFFFFFF); //Arriba
 8000e28:	68fb      	ldr	r3, [r7, #12]
 8000e2a:	6818      	ldr	r0, [r3, #0]
 8000e2c:	68fb      	ldr	r3, [r7, #12]
 8000e2e:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8000e30:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000e34:	9300      	str	r3, [sp, #0]
 8000e36:	2301      	movs	r3, #1
 8000e38:	2201      	movs	r2, #1
 8000e3a:	f7ff fe67 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerDown, 1, 1, 0x0420); //Abajo
 8000e3e:	68fb      	ldr	r3, [r7, #12]
 8000e40:	6818      	ldr	r0, [r3, #0]
 8000e42:	68fb      	ldr	r3, [r7, #12]
 8000e44:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8000e46:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000e4a:	9300      	str	r3, [sp, #0]
 8000e4c:	2301      	movs	r3, #1
 8000e4e:	2201      	movs	r2, #1
 8000e50:	f7ff fe5c 	bl	8000b0c <FillRect>


}
 8000e54:	bf00      	nop
 8000e56:	3714      	adds	r7, #20
 8000e58:	46bd      	mov	sp, r7
 8000e5a:	bd90      	pop	{r4, r7, pc}
 8000e5c:	00fffb00 	.word	0x00fffb00

08000e60 <playerCanMove>:

int playerCanMove(player* player, unsigned int direction) {
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b086      	sub	sp, #24
 8000e64:	af02      	add	r7, sp, #8
 8000e66:	6078      	str	r0, [r7, #4]
 8000e68:	6039      	str	r1, [r7, #0]
    // Variables para calcular la posición futura del jugador según la dirección
    int futureX = player->x;
 8000e6a:	687b      	ldr	r3, [r7, #4]
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	60fb      	str	r3, [r7, #12]
    int futureY = player->y;
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	685b      	ldr	r3, [r3, #4]
 8000e74:	60bb      	str	r3, [r7, #8]

    // Calcular las nuevas coordenadas dependiendo de la dirección
    switch (direction) {
 8000e76:	683b      	ldr	r3, [r7, #0]
 8000e78:	2b03      	cmp	r3, #3
 8000e7a:	d823      	bhi.n	8000ec4 <playerCanMove+0x64>
 8000e7c:	a201      	add	r2, pc, #4	@ (adr r2, 8000e84 <playerCanMove+0x24>)
 8000e7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e82:	bf00      	nop
 8000e84:	08000e95 	.word	0x08000e95
 8000e88:	08000ea1 	.word	0x08000ea1
 8000e8c:	08000ead 	.word	0x08000ead
 8000e90:	08000eb9 	.word	0x08000eb9
        case 0:  // Abajo
            futureY += player->speed;
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	691a      	ldr	r2, [r3, #16]
 8000e98:	68bb      	ldr	r3, [r7, #8]
 8000e9a:	4413      	add	r3, r2
 8000e9c:	60bb      	str	r3, [r7, #8]
            break;
 8000e9e:	e011      	b.n	8000ec4 <playerCanMove+0x64>
        case 1:  // Derecha
            futureX += player->speed;
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	691a      	ldr	r2, [r3, #16]
 8000ea4:	68fb      	ldr	r3, [r7, #12]
 8000ea6:	4413      	add	r3, r2
 8000ea8:	60fb      	str	r3, [r7, #12]
            break;
 8000eaa:	e00b      	b.n	8000ec4 <playerCanMove+0x64>
        case 2:  // Arriba
            futureY -= player->speed;
 8000eac:	68ba      	ldr	r2, [r7, #8]
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	691b      	ldr	r3, [r3, #16]
 8000eb2:	1ad3      	subs	r3, r2, r3
 8000eb4:	60bb      	str	r3, [r7, #8]
            break;
 8000eb6:	e005      	b.n	8000ec4 <playerCanMove+0x64>
        case 3:  // Izquierda
            futureX -= player->speed;
 8000eb8:	68fa      	ldr	r2, [r7, #12]
 8000eba:	687b      	ldr	r3, [r7, #4]
 8000ebc:	691b      	ldr	r3, [r3, #16]
 8000ebe:	1ad3      	subs	r3, r2, r3
 8000ec0:	60fb      	str	r3, [r7, #12]
            break;
 8000ec2:	bf00      	nop
    }

    if (ColisionPlayer_e1(&e1_2, player, direction,futureX,futureY)==0){
 8000ec4:	683a      	ldr	r2, [r7, #0]
 8000ec6:	68bb      	ldr	r3, [r7, #8]
 8000ec8:	9300      	str	r3, [sp, #0]
 8000eca:	68fb      	ldr	r3, [r7, #12]
 8000ecc:	6879      	ldr	r1, [r7, #4]
 8000ece:	481f      	ldr	r0, [pc, #124]	@ (8000f4c <playerCanMove+0xec>)
 8000ed0:	f7ff ff01 	bl	8000cd6 <ColisionPlayer_e1>
 8000ed4:	4603      	mov	r3, r0
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d101      	bne.n	8000ede <playerCanMove+0x7e>
    	return 0;
 8000eda:	2300      	movs	r3, #0
 8000edc:	e032      	b.n	8000f44 <playerCanMove+0xe4>
    }
    if (ColisionPlayer_e1(&e1_2, player, direction,futureX,futureY)==0){
 8000ede:	683a      	ldr	r2, [r7, #0]
 8000ee0:	68bb      	ldr	r3, [r7, #8]
 8000ee2:	9300      	str	r3, [sp, #0]
 8000ee4:	68fb      	ldr	r3, [r7, #12]
 8000ee6:	6879      	ldr	r1, [r7, #4]
 8000ee8:	4818      	ldr	r0, [pc, #96]	@ (8000f4c <playerCanMove+0xec>)
 8000eea:	f7ff fef4 	bl	8000cd6 <ColisionPlayer_e1>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	d101      	bne.n	8000ef8 <playerCanMove+0x98>
        	return 0;
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	e025      	b.n	8000f44 <playerCanMove+0xe4>
        }
    if (ColisionPlayer_e1(&e1_3, player, direction,futureX,futureY)==0){
 8000ef8:	683a      	ldr	r2, [r7, #0]
 8000efa:	68bb      	ldr	r3, [r7, #8]
 8000efc:	9300      	str	r3, [sp, #0]
 8000efe:	68fb      	ldr	r3, [r7, #12]
 8000f00:	6879      	ldr	r1, [r7, #4]
 8000f02:	4813      	ldr	r0, [pc, #76]	@ (8000f50 <playerCanMove+0xf0>)
 8000f04:	f7ff fee7 	bl	8000cd6 <ColisionPlayer_e1>
 8000f08:	4603      	mov	r3, r0
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d101      	bne.n	8000f12 <playerCanMove+0xb2>
        	return 0;
 8000f0e:	2300      	movs	r3, #0
 8000f10:	e018      	b.n	8000f44 <playerCanMove+0xe4>
        }

    // Verificar colisiones con los bordes en base a la posición futura
    if (futureX <= 0) {
 8000f12:	68fb      	ldr	r3, [r7, #12]
 8000f14:	2b00      	cmp	r3, #0
 8000f16:	dc01      	bgt.n	8000f1c <playerCanMove+0xbc>
        return 0;  // Colisión con el borde izquierdo
 8000f18:	2300      	movs	r3, #0
 8000f1a:	e013      	b.n	8000f44 <playerCanMove+0xe4>
    }
    if (futureX >= player->limitWidth) {
 8000f1c:	687b      	ldr	r3, [r7, #4]
 8000f1e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000f20:	68fb      	ldr	r3, [r7, #12]
 8000f22:	429a      	cmp	r2, r3
 8000f24:	d801      	bhi.n	8000f2a <playerCanMove+0xca>
        return 0;  // Colisión con el borde derecho
 8000f26:	2300      	movs	r3, #0
 8000f28:	e00c      	b.n	8000f44 <playerCanMove+0xe4>
    }
    if (futureY  <= 0) {
 8000f2a:	68bb      	ldr	r3, [r7, #8]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	dc01      	bgt.n	8000f34 <playerCanMove+0xd4>
        return 0;  // Colisión con el borde superior
 8000f30:	2300      	movs	r3, #0
 8000f32:	e007      	b.n	8000f44 <playerCanMove+0xe4>
    }
    if (futureY>= player->limitHeight) {
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8000f38:	68bb      	ldr	r3, [r7, #8]
 8000f3a:	429a      	cmp	r2, r3
 8000f3c:	d801      	bhi.n	8000f42 <playerCanMove+0xe2>
        return 0;  // Colisión con el borde inferior
 8000f3e:	2300      	movs	r3, #0
 8000f40:	e000      	b.n	8000f44 <playerCanMove+0xe4>
    }
    // No hay colisiones, se puede mover
    return 1;
 8000f42:	2301      	movs	r3, #1
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3710      	adds	r7, #16
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}
 8000f4c:	20000184 	.word	0x20000184
 8000f50:	200001ac 	.word	0x200001ac

08000f54 <HitboxPlayer>:

void HitboxPlayer(player* player){
 8000f54:	b580      	push	{r7, lr}
 8000f56:	b084      	sub	sp, #16
 8000f58:	af02      	add	r7, sp, #8
 8000f5a:	6078      	str	r0, [r7, #4]
    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	681a      	ldr	r2, [r3, #0]
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	689b      	ldr	r3, [r3, #8]
 8000f64:	085b      	lsrs	r3, r3, #1
 8000f66:	1ad2      	subs	r2, r2, r3
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	631a      	str	r2, [r3, #48]	@ 0x30
    player->playerRight=(player->x+(player->width / 2)-1);
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	681a      	ldr	r2, [r3, #0]
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	689b      	ldr	r3, [r3, #8]
 8000f74:	085b      	lsrs	r3, r3, #1
 8000f76:	4413      	add	r3, r2
 8000f78:	1e5a      	subs	r2, r3, #1
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	635a      	str	r2, [r3, #52]	@ 0x34
    player->playerUp=player->y-(player->height / 2);
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	685a      	ldr	r2, [r3, #4]
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	68db      	ldr	r3, [r3, #12]
 8000f86:	085b      	lsrs	r3, r3, #1
 8000f88:	1ad2      	subs	r2, r2, r3
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)-1);
 8000f8e:	687b      	ldr	r3, [r7, #4]
 8000f90:	685a      	ldr	r2, [r3, #4]
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	68db      	ldr	r3, [r3, #12]
 8000f96:	085b      	lsrs	r3, r3, #1
 8000f98:	4413      	add	r3, r2
 8000f9a:	1e5a      	subs	r2, r3, #1
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	63da      	str	r2, [r3, #60]	@ 0x3c
    FillRect(player->playerLeft , player->y, 1, 1, 0xFFFFFF); //Izquierda
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	6859      	ldr	r1, [r3, #4]
 8000fa8:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000fac:	9300      	str	r3, [sp, #0]
 8000fae:	2301      	movs	r3, #1
 8000fb0:	2201      	movs	r2, #1
 8000fb2:	f7ff fdab 	bl	8000b0c <FillRect>
    FillRect(player->playerRight , player->y, 1, 1, 0x0420); //Derecha
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	6859      	ldr	r1, [r3, #4]
 8000fbe:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000fc2:	9300      	str	r3, [sp, #0]
 8000fc4:	2301      	movs	r3, #1
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f7ff fda0 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerUp, 1, 1, 0xFFFFFF); //Arriba
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	6818      	ldr	r0, [r3, #0]
 8000fd0:	687b      	ldr	r3, [r7, #4]
 8000fd2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 8000fd4:	f06f 437f 	mvn.w	r3, #4278190080	@ 0xff000000
 8000fd8:	9300      	str	r3, [sp, #0]
 8000fda:	2301      	movs	r3, #1
 8000fdc:	2201      	movs	r2, #1
 8000fde:	f7ff fd95 	bl	8000b0c <FillRect>
    FillRect(player->x , player->playerDown, 1, 1, 0x0420); //Abajo
 8000fe2:	687b      	ldr	r3, [r7, #4]
 8000fe4:	6818      	ldr	r0, [r3, #0]
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8000fea:	f44f 6384 	mov.w	r3, #1056	@ 0x420
 8000fee:	9300      	str	r3, [sp, #0]
 8000ff0:	2301      	movs	r3, #1
 8000ff2:	2201      	movs	r2, #1
 8000ff4:	f7ff fd8a 	bl	8000b0c <FillRect>
}
 8000ff8:	bf00      	nop
 8000ffa:	3708      	adds	r7, #8
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	bd80      	pop	{r7, pc}

08001000 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001000:	b580      	push	{r7, lr}
 8001002:	b086      	sub	sp, #24
 8001004:	af06      	add	r7, sp, #24
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001006:	f000 fd53 	bl	8001ab0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800100a:	f000 f86f 	bl	80010ec <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800100e:	f000 f963 	bl	80012d8 <MX_GPIO_Init>
  MX_SPI1_Init();
 8001012:	f000 f8d7 	bl	80011c4 <MX_SPI1_Init>
  MX_USART2_UART_Init();
 8001016:	f000 f935 	bl	8001284 <MX_USART2_UART_Init>
  MX_UART5_Init();
 800101a:	f000 f909 	bl	8001230 <MX_UART5_Init>
  /* USER CODE BEGIN 2 */

	LCD_Init();
 800101e:	f7ff fa69 	bl	80004f4 <LCD_Init>
	LCD_Clear(0x00);
 8001022:	2000      	movs	r0, #0
 8001024:	f7ff fcee 	bl	8000a04 <LCD_Clear>

	//Fondo
	FillRect(0, 0, 319, 239, 0xFFFF);
 8001028:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800102c:	9300      	str	r3, [sp, #0]
 800102e:	23ef      	movs	r3, #239	@ 0xef
 8001030:	f240 123f 	movw	r2, #319	@ 0x13f
 8001034:	2100      	movs	r1, #0
 8001036:	2000      	movs	r0, #0
 8001038:	f7ff fd68 	bl	8000b0c <FillRect>
	//FillRect(0, 0, 319, 206, 0x1911);

	//LCD_Print("Hola Mundo", 20, 100, 1, 0x001F, 0xCAB9);

	  // Activar bandera interrupcion
	  HAL_UART_Receive_IT(&huart5, buffer, 1);
 800103c:	2201      	movs	r2, #1
 800103e:	4924      	ldr	r1, [pc, #144]	@ (80010d0 <main+0xd0>)
 8001040:	4824      	ldr	r0, [pc, #144]	@ (80010d4 <main+0xd4>)
 8001042:	f001 ff58 	bl	8002ef6 <HAL_UART_Receive_IT>
	  modo=1;
 8001046:	4b24      	ldr	r3, [pc, #144]	@ (80010d8 <main+0xd8>)
 8001048:	2201      	movs	r2, #1
 800104a:	701a      	strb	r2, [r3, #0]
	  if (modo==1){
 800104c:	4b22      	ldr	r3, [pc, #136]	@ (80010d8 <main+0xd8>)
 800104e:	781b      	ldrb	r3, [r3, #0]
 8001050:	2b01      	cmp	r3, #1
 8001052:	d12f      	bne.n	80010b4 <main+0xb4>
	    //Inicializar Jugador 1
		initPlayer(&p1, 160, 200, 20, 20, 20, 3, 320, 240);
 8001054:	23f0      	movs	r3, #240	@ 0xf0
 8001056:	9304      	str	r3, [sp, #16]
 8001058:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800105c:	9303      	str	r3, [sp, #12]
 800105e:	2303      	movs	r3, #3
 8001060:	9302      	str	r3, [sp, #8]
 8001062:	2314      	movs	r3, #20
 8001064:	9301      	str	r3, [sp, #4]
 8001066:	2314      	movs	r3, #20
 8001068:	9300      	str	r3, [sp, #0]
 800106a:	2314      	movs	r3, #20
 800106c:	22c8      	movs	r2, #200	@ 0xc8
 800106e:	21a0      	movs	r1, #160	@ 0xa0
 8001070:	481a      	ldr	r0, [pc, #104]	@ (80010dc <main+0xdc>)
 8001072:	f7ff fe5b 	bl	8000d2c <initPlayer>
		//Inicializar enemigo 1
		initEnemy1(&e1_1, 50, 80, 20, 20, 3);
 8001076:	2303      	movs	r3, #3
 8001078:	9301      	str	r3, [sp, #4]
 800107a:	2314      	movs	r3, #20
 800107c:	9300      	str	r3, [sp, #0]
 800107e:	2314      	movs	r3, #20
 8001080:	2250      	movs	r2, #80	@ 0x50
 8001082:	2132      	movs	r1, #50	@ 0x32
 8001084:	4816      	ldr	r0, [pc, #88]	@ (80010e0 <main+0xe0>)
 8001086:	f7ff fd9b 	bl	8000bc0 <initEnemy1>
		//Inicializar enemigo 2
		initEnemy1(&e1_2, 160, 80, 20, 20, 3);
 800108a:	2303      	movs	r3, #3
 800108c:	9301      	str	r3, [sp, #4]
 800108e:	2314      	movs	r3, #20
 8001090:	9300      	str	r3, [sp, #0]
 8001092:	2314      	movs	r3, #20
 8001094:	2250      	movs	r2, #80	@ 0x50
 8001096:	21a0      	movs	r1, #160	@ 0xa0
 8001098:	4812      	ldr	r0, [pc, #72]	@ (80010e4 <main+0xe4>)
 800109a:	f7ff fd91 	bl	8000bc0 <initEnemy1>
		//Inicializar enemigo 3
		initEnemy1(&e1_3, 270, 80, 20, 20, 3);}
 800109e:	2303      	movs	r3, #3
 80010a0:	9301      	str	r3, [sp, #4]
 80010a2:	2314      	movs	r3, #20
 80010a4:	9300      	str	r3, [sp, #0]
 80010a6:	2314      	movs	r3, #20
 80010a8:	2250      	movs	r2, #80	@ 0x50
 80010aa:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 80010ae:	480e      	ldr	r0, [pc, #56]	@ (80010e8 <main+0xe8>)
 80010b0:	f7ff fd86 	bl	8000bc0 <initEnemy1>
	  if (modo==2){
 80010b4:	4b08      	ldr	r3, [pc, #32]	@ (80010d8 <main+0xd8>)
 80010b6:	781b      	ldrb	r3, [r3, #0]
 80010b8:	2b02      	cmp	r3, #2
 80010ba:	d106      	bne.n	80010ca <main+0xca>
		//Linea de en medio
		V_line(160, 0, 240, 0x0000);
 80010bc:	2300      	movs	r3, #0
 80010be:	22f0      	movs	r2, #240	@ 0xf0
 80010c0:	2100      	movs	r1, #0
 80010c2:	20a0      	movs	r0, #160	@ 0xa0
 80010c4:	f7ff fce2 	bl	8000a8c <V_line>
	  }
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
 80010c8:	bf00      	nop
 80010ca:	bf00      	nop
 80010cc:	e7fd      	b.n	80010ca <main+0xca>
 80010ce:	bf00      	nop
 80010d0:	20000110 	.word	0x20000110
 80010d4:	20000080 	.word	0x20000080
 80010d8:	200001d4 	.word	0x200001d4
 80010dc:	2000011c 	.word	0x2000011c
 80010e0:	2000015c 	.word	0x2000015c
 80010e4:	20000184 	.word	0x20000184
 80010e8:	200001ac 	.word	0x200001ac

080010ec <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	b094      	sub	sp, #80	@ 0x50
 80010f0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010f2:	f107 031c 	add.w	r3, r7, #28
 80010f6:	2234      	movs	r2, #52	@ 0x34
 80010f8:	2100      	movs	r1, #0
 80010fa:	4618      	mov	r0, r3
 80010fc:	f002 fe1e 	bl	8003d3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001100:	f107 0308 	add.w	r3, r7, #8
 8001104:	2200      	movs	r2, #0
 8001106:	601a      	str	r2, [r3, #0]
 8001108:	605a      	str	r2, [r3, #4]
 800110a:	609a      	str	r2, [r3, #8]
 800110c:	60da      	str	r2, [r3, #12]
 800110e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001110:	2300      	movs	r3, #0
 8001112:	607b      	str	r3, [r7, #4]
 8001114:	4b29      	ldr	r3, [pc, #164]	@ (80011bc <SystemClock_Config+0xd0>)
 8001116:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001118:	4a28      	ldr	r2, [pc, #160]	@ (80011bc <SystemClock_Config+0xd0>)
 800111a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800111e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001120:	4b26      	ldr	r3, [pc, #152]	@ (80011bc <SystemClock_Config+0xd0>)
 8001122:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001124:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001128:	607b      	str	r3, [r7, #4]
 800112a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800112c:	2300      	movs	r3, #0
 800112e:	603b      	str	r3, [r7, #0]
 8001130:	4b23      	ldr	r3, [pc, #140]	@ (80011c0 <SystemClock_Config+0xd4>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001138:	4a21      	ldr	r2, [pc, #132]	@ (80011c0 <SystemClock_Config+0xd4>)
 800113a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800113e:	6013      	str	r3, [r2, #0]
 8001140:	4b1f      	ldr	r3, [pc, #124]	@ (80011c0 <SystemClock_Config+0xd4>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001148:	603b      	str	r3, [r7, #0]
 800114a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800114c:	2302      	movs	r3, #2
 800114e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001150:	2301      	movs	r3, #1
 8001152:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001154:	2310      	movs	r3, #16
 8001156:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001158:	2302      	movs	r3, #2
 800115a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800115c:	2300      	movs	r3, #0
 800115e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001160:	2308      	movs	r3, #8
 8001162:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 8001164:	2350      	movs	r3, #80	@ 0x50
 8001166:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001168:	2302      	movs	r3, #2
 800116a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800116c:	2302      	movs	r3, #2
 800116e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001170:	2302      	movs	r3, #2
 8001172:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001174:	f107 031c 	add.w	r3, r7, #28
 8001178:	4618      	mov	r0, r3
 800117a:	f001 fb45 	bl	8002808 <HAL_RCC_OscConfig>
 800117e:	4603      	mov	r3, r0
 8001180:	2b00      	cmp	r3, #0
 8001182:	d001      	beq.n	8001188 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001184:	f000 faf0 	bl	8001768 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001188:	230f      	movs	r3, #15
 800118a:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800118c:	2302      	movs	r3, #2
 800118e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001190:	2300      	movs	r3, #0
 8001192:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001194:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001198:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800119a:	2300      	movs	r3, #0
 800119c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800119e:	f107 0308 	add.w	r3, r7, #8
 80011a2:	2102      	movs	r1, #2
 80011a4:	4618      	mov	r0, r3
 80011a6:	f001 f86b 	bl	8002280 <HAL_RCC_ClockConfig>
 80011aa:	4603      	mov	r3, r0
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	d001      	beq.n	80011b4 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 80011b0:	f000 fada 	bl	8001768 <Error_Handler>
  }
}
 80011b4:	bf00      	nop
 80011b6:	3750      	adds	r7, #80	@ 0x50
 80011b8:	46bd      	mov	sp, r7
 80011ba:	bd80      	pop	{r7, pc}
 80011bc:	40023800 	.word	0x40023800
 80011c0:	40007000 	.word	0x40007000

080011c4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80011c4:	b580      	push	{r7, lr}
 80011c6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80011c8:	4b17      	ldr	r3, [pc, #92]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011ca:	4a18      	ldr	r2, [pc, #96]	@ (800122c <MX_SPI1_Init+0x68>)
 80011cc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80011ce:	4b16      	ldr	r3, [pc, #88]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011d0:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80011d4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80011d6:	4b14      	ldr	r3, [pc, #80]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011d8:	2200      	movs	r2, #0
 80011da:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80011dc:	4b12      	ldr	r3, [pc, #72]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011de:	2200      	movs	r2, #0
 80011e0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80011e2:	4b11      	ldr	r3, [pc, #68]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011e4:	2200      	movs	r2, #0
 80011e6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80011e8:	4b0f      	ldr	r3, [pc, #60]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80011ee:	4b0e      	ldr	r3, [pc, #56]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011f0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80011f4:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80011f6:	4b0c      	ldr	r3, [pc, #48]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011f8:	2200      	movs	r2, #0
 80011fa:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80011fc:	4b0a      	ldr	r3, [pc, #40]	@ (8001228 <MX_SPI1_Init+0x64>)
 80011fe:	2200      	movs	r2, #0
 8001200:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001202:	4b09      	ldr	r3, [pc, #36]	@ (8001228 <MX_SPI1_Init+0x64>)
 8001204:	2200      	movs	r2, #0
 8001206:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001208:	4b07      	ldr	r3, [pc, #28]	@ (8001228 <MX_SPI1_Init+0x64>)
 800120a:	2200      	movs	r2, #0
 800120c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 800120e:	4b06      	ldr	r3, [pc, #24]	@ (8001228 <MX_SPI1_Init+0x64>)
 8001210:	220a      	movs	r2, #10
 8001212:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001214:	4804      	ldr	r0, [pc, #16]	@ (8001228 <MX_SPI1_Init+0x64>)
 8001216:	f001 fd95 	bl	8002d44 <HAL_SPI_Init>
 800121a:	4603      	mov	r3, r0
 800121c:	2b00      	cmp	r3, #0
 800121e:	d001      	beq.n	8001224 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8001220:	f000 faa2 	bl	8001768 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8001224:	bf00      	nop
 8001226:	bd80      	pop	{r7, pc}
 8001228:	20000028 	.word	0x20000028
 800122c:	40013000 	.word	0x40013000

08001230 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 8001230:	b580      	push	{r7, lr}
 8001232:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 8001234:	4b11      	ldr	r3, [pc, #68]	@ (800127c <MX_UART5_Init+0x4c>)
 8001236:	4a12      	ldr	r2, [pc, #72]	@ (8001280 <MX_UART5_Init+0x50>)
 8001238:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 115200;
 800123a:	4b10      	ldr	r3, [pc, #64]	@ (800127c <MX_UART5_Init+0x4c>)
 800123c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001240:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 8001242:	4b0e      	ldr	r3, [pc, #56]	@ (800127c <MX_UART5_Init+0x4c>)
 8001244:	2200      	movs	r2, #0
 8001246:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8001248:	4b0c      	ldr	r3, [pc, #48]	@ (800127c <MX_UART5_Init+0x4c>)
 800124a:	2200      	movs	r2, #0
 800124c:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 800124e:	4b0b      	ldr	r3, [pc, #44]	@ (800127c <MX_UART5_Init+0x4c>)
 8001250:	2200      	movs	r2, #0
 8001252:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8001254:	4b09      	ldr	r3, [pc, #36]	@ (800127c <MX_UART5_Init+0x4c>)
 8001256:	220c      	movs	r2, #12
 8001258:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800125a:	4b08      	ldr	r3, [pc, #32]	@ (800127c <MX_UART5_Init+0x4c>)
 800125c:	2200      	movs	r2, #0
 800125e:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8001260:	4b06      	ldr	r3, [pc, #24]	@ (800127c <MX_UART5_Init+0x4c>)
 8001262:	2200      	movs	r2, #0
 8001264:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8001266:	4805      	ldr	r0, [pc, #20]	@ (800127c <MX_UART5_Init+0x4c>)
 8001268:	f001 fdf5 	bl	8002e56 <HAL_UART_Init>
 800126c:	4603      	mov	r3, r0
 800126e:	2b00      	cmp	r3, #0
 8001270:	d001      	beq.n	8001276 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 8001272:	f000 fa79 	bl	8001768 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 8001276:	bf00      	nop
 8001278:	bd80      	pop	{r7, pc}
 800127a:	bf00      	nop
 800127c:	20000080 	.word	0x20000080
 8001280:	40005000 	.word	0x40005000

08001284 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001288:	4b11      	ldr	r3, [pc, #68]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 800128a:	4a12      	ldr	r2, [pc, #72]	@ (80012d4 <MX_USART2_UART_Init+0x50>)
 800128c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800128e:	4b10      	ldr	r3, [pc, #64]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 8001290:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001294:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001296:	4b0e      	ldr	r3, [pc, #56]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 8001298:	2200      	movs	r2, #0
 800129a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800129c:	4b0c      	ldr	r3, [pc, #48]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 800129e:	2200      	movs	r2, #0
 80012a0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80012a2:	4b0b      	ldr	r3, [pc, #44]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80012a8:	4b09      	ldr	r3, [pc, #36]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 80012aa:	220c      	movs	r2, #12
 80012ac:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80012ae:	4b08      	ldr	r3, [pc, #32]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 80012b0:	2200      	movs	r2, #0
 80012b2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80012b4:	4b06      	ldr	r3, [pc, #24]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80012ba:	4805      	ldr	r0, [pc, #20]	@ (80012d0 <MX_USART2_UART_Init+0x4c>)
 80012bc:	f001 fdcb 	bl	8002e56 <HAL_UART_Init>
 80012c0:	4603      	mov	r3, r0
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d001      	beq.n	80012ca <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80012c6:	f000 fa4f 	bl	8001768 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80012ca:	bf00      	nop
 80012cc:	bd80      	pop	{r7, pc}
 80012ce:	bf00      	nop
 80012d0:	200000c8 	.word	0x200000c8
 80012d4:	40004400 	.word	0x40004400

080012d8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80012d8:	b580      	push	{r7, lr}
 80012da:	b08a      	sub	sp, #40	@ 0x28
 80012dc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012de:	f107 0314 	add.w	r3, r7, #20
 80012e2:	2200      	movs	r2, #0
 80012e4:	601a      	str	r2, [r3, #0]
 80012e6:	605a      	str	r2, [r3, #4]
 80012e8:	609a      	str	r2, [r3, #8]
 80012ea:	60da      	str	r2, [r3, #12]
 80012ec:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80012ee:	2300      	movs	r3, #0
 80012f0:	613b      	str	r3, [r7, #16]
 80012f2:	4b42      	ldr	r3, [pc, #264]	@ (80013fc <MX_GPIO_Init+0x124>)
 80012f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012f6:	4a41      	ldr	r2, [pc, #260]	@ (80013fc <MX_GPIO_Init+0x124>)
 80012f8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80012fe:	4b3f      	ldr	r3, [pc, #252]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001302:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001306:	613b      	str	r3, [r7, #16]
 8001308:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800130a:	2300      	movs	r3, #0
 800130c:	60fb      	str	r3, [r7, #12]
 800130e:	4b3b      	ldr	r3, [pc, #236]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001312:	4a3a      	ldr	r2, [pc, #232]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001314:	f043 0304 	orr.w	r3, r3, #4
 8001318:	6313      	str	r3, [r2, #48]	@ 0x30
 800131a:	4b38      	ldr	r3, [pc, #224]	@ (80013fc <MX_GPIO_Init+0x124>)
 800131c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800131e:	f003 0304 	and.w	r3, r3, #4
 8001322:	60fb      	str	r3, [r7, #12]
 8001324:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001326:	2300      	movs	r3, #0
 8001328:	60bb      	str	r3, [r7, #8]
 800132a:	4b34      	ldr	r3, [pc, #208]	@ (80013fc <MX_GPIO_Init+0x124>)
 800132c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800132e:	4a33      	ldr	r2, [pc, #204]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001330:	f043 0301 	orr.w	r3, r3, #1
 8001334:	6313      	str	r3, [r2, #48]	@ 0x30
 8001336:	4b31      	ldr	r3, [pc, #196]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800133a:	f003 0301 	and.w	r3, r3, #1
 800133e:	60bb      	str	r3, [r7, #8]
 8001340:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001342:	2300      	movs	r3, #0
 8001344:	607b      	str	r3, [r7, #4]
 8001346:	4b2d      	ldr	r3, [pc, #180]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800134a:	4a2c      	ldr	r2, [pc, #176]	@ (80013fc <MX_GPIO_Init+0x124>)
 800134c:	f043 0302 	orr.w	r3, r3, #2
 8001350:	6313      	str	r3, [r2, #48]	@ 0x30
 8001352:	4b2a      	ldr	r3, [pc, #168]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001356:	f003 0302 	and.w	r3, r3, #2
 800135a:	607b      	str	r3, [r7, #4]
 800135c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800135e:	2300      	movs	r3, #0
 8001360:	603b      	str	r3, [r7, #0]
 8001362:	4b26      	ldr	r3, [pc, #152]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001364:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001366:	4a25      	ldr	r2, [pc, #148]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001368:	f043 0308 	orr.w	r3, r3, #8
 800136c:	6313      	str	r3, [r2, #48]	@ 0x30
 800136e:	4b23      	ldr	r3, [pc, #140]	@ (80013fc <MX_GPIO_Init+0x124>)
 8001370:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001372:	f003 0308 	and.w	r3, r3, #8
 8001376:	603b      	str	r3, [r7, #0]
 8001378:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 800137a:	2200      	movs	r2, #0
 800137c:	2182      	movs	r1, #130	@ 0x82
 800137e:	4820      	ldr	r0, [pc, #128]	@ (8001400 <MX_GPIO_Init+0x128>)
 8001380:	f000 ff64 	bl	800224c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8001384:	2200      	movs	r2, #0
 8001386:	f240 7113 	movw	r1, #1811	@ 0x713
 800138a:	481e      	ldr	r0, [pc, #120]	@ (8001404 <MX_GPIO_Init+0x12c>)
 800138c:	f000 ff5e 	bl	800224c <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 8001390:	2200      	movs	r2, #0
 8001392:	f240 4179 	movw	r1, #1145	@ 0x479
 8001396:	481c      	ldr	r0, [pc, #112]	@ (8001408 <MX_GPIO_Init+0x130>)
 8001398:	f000 ff58 	bl	800224c <HAL_GPIO_WritePin>
                          |LCD_D4_Pin|SD_SS_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 800139c:	2382      	movs	r3, #130	@ 0x82
 800139e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013a0:	2301      	movs	r3, #1
 80013a2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013a4:	2300      	movs	r3, #0
 80013a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013a8:	2302      	movs	r3, #2
 80013aa:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013ac:	f107 0314 	add.w	r3, r7, #20
 80013b0:	4619      	mov	r1, r3
 80013b2:	4813      	ldr	r0, [pc, #76]	@ (8001400 <MX_GPIO_Init+0x128>)
 80013b4:	f000 fdb6 	bl	8001f24 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 80013b8:	f240 7313 	movw	r3, #1811	@ 0x713
 80013bc:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013be:	2301      	movs	r3, #1
 80013c0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013c2:	2300      	movs	r3, #0
 80013c4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013c6:	2302      	movs	r3, #2
 80013c8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013ca:	f107 0314 	add.w	r3, r7, #20
 80013ce:	4619      	mov	r1, r3
 80013d0:	480c      	ldr	r0, [pc, #48]	@ (8001404 <MX_GPIO_Init+0x12c>)
 80013d2:	f000 fda7 	bl	8001f24 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin SD_SS_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 80013d6:	f240 4379 	movw	r3, #1145	@ 0x479
 80013da:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin|SD_SS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013dc:	2301      	movs	r3, #1
 80013de:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013e0:	2300      	movs	r3, #0
 80013e2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013e4:	2302      	movs	r3, #2
 80013e6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80013e8:	f107 0314 	add.w	r3, r7, #20
 80013ec:	4619      	mov	r1, r3
 80013ee:	4806      	ldr	r0, [pc, #24]	@ (8001408 <MX_GPIO_Init+0x130>)
 80013f0:	f000 fd98 	bl	8001f24 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80013f4:	bf00      	nop
 80013f6:	3728      	adds	r7, #40	@ 0x28
 80013f8:	46bd      	mov	sp, r7
 80013fa:	bd80      	pop	{r7, pc}
 80013fc:	40023800 	.word	0x40023800
 8001400:	40020800 	.word	0x40020800
 8001404:	40020000 	.word	0x40020000
 8001408:	40020400 	.word	0x40020400

0800140c <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800140c:	b590      	push	{r4, r7, lr}
 800140e:	b085      	sub	sp, #20
 8001410:	af02      	add	r7, sp, #8
 8001412:	6078      	str	r0, [r7, #4]
	if(buffer[0] == 'd'){
 8001414:	4b86      	ldr	r3, [pc, #536]	@ (8001630 <HAL_UART_RxCpltCallback+0x224>)
 8001416:	781b      	ldrb	r3, [r3, #0]
 8001418:	2b64      	cmp	r3, #100	@ 0x64
 800141a:	d15f      	bne.n	80014dc <HAL_UART_RxCpltCallback+0xd0>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 800141c:	4b85      	ldr	r3, [pc, #532]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800141e:	681a      	ldr	r2, [r3, #0]
 8001420:	4b84      	ldr	r3, [pc, #528]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001422:	689b      	ldr	r3, [r3, #8]
 8001424:	085b      	lsrs	r3, r3, #1
 8001426:	1ad0      	subs	r0, r2, r3
 8001428:	4b82      	ldr	r3, [pc, #520]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800142a:	685a      	ldr	r2, [r3, #4]
 800142c:	4b81      	ldr	r3, [pc, #516]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800142e:	68db      	ldr	r3, [r3, #12]
 8001430:	085b      	lsrs	r3, r3, #1
 8001432:	1ad1      	subs	r1, r2, r3
 8001434:	4b7f      	ldr	r3, [pc, #508]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001436:	689a      	ldr	r2, [r3, #8]
 8001438:	4b7e      	ldr	r3, [pc, #504]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800143a:	68db      	ldr	r3, [r3, #12]
 800143c:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001440:	9400      	str	r4, [sp, #0]
 8001442:	f7ff fb63 	bl	8000b0c <FillRect>
		if (playerCanMove(&p1, 0)) {
 8001446:	2100      	movs	r1, #0
 8001448:	487a      	ldr	r0, [pc, #488]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800144a:	f7ff fd09 	bl	8000e60 <playerCanMove>
 800144e:	4603      	mov	r3, r0
 8001450:	2b00      	cmp	r3, #0
 8001452:	d025      	beq.n	80014a0 <HAL_UART_RxCpltCallback+0x94>
		    p1.y=p1.y+p1.speed;
 8001454:	4b77      	ldr	r3, [pc, #476]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001456:	685a      	ldr	r2, [r3, #4]
 8001458:	4b76      	ldr	r3, [pc, #472]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800145a:	691b      	ldr	r3, [r3, #16]
 800145c:	4413      	add	r3, r2
 800145e:	4a75      	ldr	r2, [pc, #468]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001460:	6053      	str	r3, [r2, #4]
		    FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001462:	4b74      	ldr	r3, [pc, #464]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	4b73      	ldr	r3, [pc, #460]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001468:	689b      	ldr	r3, [r3, #8]
 800146a:	085b      	lsrs	r3, r3, #1
 800146c:	1ad0      	subs	r0, r2, r3
 800146e:	4b71      	ldr	r3, [pc, #452]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001470:	685a      	ldr	r2, [r3, #4]
 8001472:	4b70      	ldr	r3, [pc, #448]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001474:	68db      	ldr	r3, [r3, #12]
 8001476:	085b      	lsrs	r3, r3, #1
 8001478:	1ad1      	subs	r1, r2, r3
 800147a:	4b6e      	ldr	r3, [pc, #440]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800147c:	689a      	ldr	r2, [r3, #8]
 800147e:	4b6d      	ldr	r3, [pc, #436]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001480:	68db      	ldr	r3, [r3, #12]
 8001482:	4c6d      	ldr	r4, [pc, #436]	@ (8001638 <HAL_UART_RxCpltCallback+0x22c>)
 8001484:	9400      	str	r4, [sp, #0]
 8001486:	f7ff fb41 	bl	8000b0c <FillRect>
		    FillRect(p1.x , p1.y, 1, 1, 0x000000);
 800148a:	4b6a      	ldr	r3, [pc, #424]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800148c:	6818      	ldr	r0, [r3, #0]
 800148e:	4b69      	ldr	r3, [pc, #420]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001490:	6859      	ldr	r1, [r3, #4]
 8001492:	2300      	movs	r3, #0
 8001494:	9300      	str	r3, [sp, #0]
 8001496:	2301      	movs	r3, #1
 8001498:	2201      	movs	r2, #1
 800149a:	f7ff fb37 	bl	8000b0c <FillRect>
 800149e:	e01d      	b.n	80014dc <HAL_UART_RxCpltCallback+0xd0>
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 80014a0:	4b64      	ldr	r3, [pc, #400]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014a2:	681a      	ldr	r2, [r3, #0]
 80014a4:	4b63      	ldr	r3, [pc, #396]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014a6:	689b      	ldr	r3, [r3, #8]
 80014a8:	085b      	lsrs	r3, r3, #1
 80014aa:	1ad0      	subs	r0, r2, r3
 80014ac:	4b61      	ldr	r3, [pc, #388]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014ae:	685a      	ldr	r2, [r3, #4]
 80014b0:	4b60      	ldr	r3, [pc, #384]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014b2:	68db      	ldr	r3, [r3, #12]
 80014b4:	085b      	lsrs	r3, r3, #1
 80014b6:	1ad1      	subs	r1, r2, r3
 80014b8:	4b5e      	ldr	r3, [pc, #376]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014ba:	689a      	ldr	r2, [r3, #8]
 80014bc:	4b5d      	ldr	r3, [pc, #372]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014be:	68db      	ldr	r3, [r3, #12]
 80014c0:	4c5d      	ldr	r4, [pc, #372]	@ (8001638 <HAL_UART_RxCpltCallback+0x22c>)
 80014c2:	9400      	str	r4, [sp, #0]
 80014c4:	f7ff fb22 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 80014c8:	4b5a      	ldr	r3, [pc, #360]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014ca:	6818      	ldr	r0, [r3, #0]
 80014cc:	4b59      	ldr	r3, [pc, #356]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014ce:	6859      	ldr	r1, [r3, #4]
 80014d0:	2300      	movs	r3, #0
 80014d2:	9300      	str	r3, [sp, #0]
 80014d4:	2301      	movs	r3, #1
 80014d6:	2201      	movs	r2, #1
 80014d8:	f7ff fb18 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'u'){
 80014dc:	4b54      	ldr	r3, [pc, #336]	@ (8001630 <HAL_UART_RxCpltCallback+0x224>)
 80014de:	781b      	ldrb	r3, [r3, #0]
 80014e0:	2b75      	cmp	r3, #117	@ 0x75
 80014e2:	d15f      	bne.n	80015a4 <HAL_UART_RxCpltCallback+0x198>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 80014e4:	4b53      	ldr	r3, [pc, #332]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014e6:	681a      	ldr	r2, [r3, #0]
 80014e8:	4b52      	ldr	r3, [pc, #328]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014ea:	689b      	ldr	r3, [r3, #8]
 80014ec:	085b      	lsrs	r3, r3, #1
 80014ee:	1ad0      	subs	r0, r2, r3
 80014f0:	4b50      	ldr	r3, [pc, #320]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014f2:	685a      	ldr	r2, [r3, #4]
 80014f4:	4b4f      	ldr	r3, [pc, #316]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014f6:	68db      	ldr	r3, [r3, #12]
 80014f8:	085b      	lsrs	r3, r3, #1
 80014fa:	1ad1      	subs	r1, r2, r3
 80014fc:	4b4d      	ldr	r3, [pc, #308]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80014fe:	689a      	ldr	r2, [r3, #8]
 8001500:	4b4c      	ldr	r3, [pc, #304]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001502:	68db      	ldr	r3, [r3, #12]
 8001504:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 8001508:	9400      	str	r4, [sp, #0]
 800150a:	f7ff faff 	bl	8000b0c <FillRect>
		if (playerCanMove(&p1, 2)) {
 800150e:	2102      	movs	r1, #2
 8001510:	4848      	ldr	r0, [pc, #288]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001512:	f7ff fca5 	bl	8000e60 <playerCanMove>
 8001516:	4603      	mov	r3, r0
 8001518:	2b00      	cmp	r3, #0
 800151a:	d025      	beq.n	8001568 <HAL_UART_RxCpltCallback+0x15c>
			p1.y=p1.y-p1.speed;
 800151c:	4b45      	ldr	r3, [pc, #276]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800151e:	685a      	ldr	r2, [r3, #4]
 8001520:	4b44      	ldr	r3, [pc, #272]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001522:	691b      	ldr	r3, [r3, #16]
 8001524:	1ad3      	subs	r3, r2, r3
 8001526:	4a43      	ldr	r2, [pc, #268]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001528:	6053      	str	r3, [r2, #4]
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 800152a:	4b42      	ldr	r3, [pc, #264]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800152c:	681a      	ldr	r2, [r3, #0]
 800152e:	4b41      	ldr	r3, [pc, #260]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001530:	689b      	ldr	r3, [r3, #8]
 8001532:	085b      	lsrs	r3, r3, #1
 8001534:	1ad0      	subs	r0, r2, r3
 8001536:	4b3f      	ldr	r3, [pc, #252]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001538:	685a      	ldr	r2, [r3, #4]
 800153a:	4b3e      	ldr	r3, [pc, #248]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800153c:	68db      	ldr	r3, [r3, #12]
 800153e:	085b      	lsrs	r3, r3, #1
 8001540:	1ad1      	subs	r1, r2, r3
 8001542:	4b3c      	ldr	r3, [pc, #240]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001544:	689a      	ldr	r2, [r3, #8]
 8001546:	4b3b      	ldr	r3, [pc, #236]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001548:	68db      	ldr	r3, [r3, #12]
 800154a:	4c3b      	ldr	r4, [pc, #236]	@ (8001638 <HAL_UART_RxCpltCallback+0x22c>)
 800154c:	9400      	str	r4, [sp, #0]
 800154e:	f7ff fadd 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001552:	4b38      	ldr	r3, [pc, #224]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001554:	6818      	ldr	r0, [r3, #0]
 8001556:	4b37      	ldr	r3, [pc, #220]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001558:	6859      	ldr	r1, [r3, #4]
 800155a:	2300      	movs	r3, #0
 800155c:	9300      	str	r3, [sp, #0]
 800155e:	2301      	movs	r3, #1
 8001560:	2201      	movs	r2, #1
 8001562:	f7ff fad3 	bl	8000b0c <FillRect>
 8001566:	e01d      	b.n	80015a4 <HAL_UART_RxCpltCallback+0x198>
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001568:	4b32      	ldr	r3, [pc, #200]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800156a:	681a      	ldr	r2, [r3, #0]
 800156c:	4b31      	ldr	r3, [pc, #196]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800156e:	689b      	ldr	r3, [r3, #8]
 8001570:	085b      	lsrs	r3, r3, #1
 8001572:	1ad0      	subs	r0, r2, r3
 8001574:	4b2f      	ldr	r3, [pc, #188]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001576:	685a      	ldr	r2, [r3, #4]
 8001578:	4b2e      	ldr	r3, [pc, #184]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800157a:	68db      	ldr	r3, [r3, #12]
 800157c:	085b      	lsrs	r3, r3, #1
 800157e:	1ad1      	subs	r1, r2, r3
 8001580:	4b2c      	ldr	r3, [pc, #176]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001582:	689a      	ldr	r2, [r3, #8]
 8001584:	4b2b      	ldr	r3, [pc, #172]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001586:	68db      	ldr	r3, [r3, #12]
 8001588:	4c2b      	ldr	r4, [pc, #172]	@ (8001638 <HAL_UART_RxCpltCallback+0x22c>)
 800158a:	9400      	str	r4, [sp, #0]
 800158c:	f7ff fabe 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001590:	4b28      	ldr	r3, [pc, #160]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001592:	6818      	ldr	r0, [r3, #0]
 8001594:	4b27      	ldr	r3, [pc, #156]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001596:	6859      	ldr	r1, [r3, #4]
 8001598:	2300      	movs	r3, #0
 800159a:	9300      	str	r3, [sp, #0]
 800159c:	2301      	movs	r3, #1
 800159e:	2201      	movs	r2, #1
 80015a0:	f7ff fab4 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'r'){
 80015a4:	4b22      	ldr	r3, [pc, #136]	@ (8001630 <HAL_UART_RxCpltCallback+0x224>)
 80015a6:	781b      	ldrb	r3, [r3, #0]
 80015a8:	2b72      	cmp	r3, #114	@ 0x72
 80015aa:	d165      	bne.n	8001678 <HAL_UART_RxCpltCallback+0x26c>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 80015ac:	4b21      	ldr	r3, [pc, #132]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015ae:	681a      	ldr	r2, [r3, #0]
 80015b0:	4b20      	ldr	r3, [pc, #128]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015b2:	689b      	ldr	r3, [r3, #8]
 80015b4:	085b      	lsrs	r3, r3, #1
 80015b6:	1ad0      	subs	r0, r2, r3
 80015b8:	4b1e      	ldr	r3, [pc, #120]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015ba:	685a      	ldr	r2, [r3, #4]
 80015bc:	4b1d      	ldr	r3, [pc, #116]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015be:	68db      	ldr	r3, [r3, #12]
 80015c0:	085b      	lsrs	r3, r3, #1
 80015c2:	1ad1      	subs	r1, r2, r3
 80015c4:	4b1b      	ldr	r3, [pc, #108]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015c6:	689a      	ldr	r2, [r3, #8]
 80015c8:	4b1a      	ldr	r3, [pc, #104]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015ca:	68db      	ldr	r3, [r3, #12]
 80015cc:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 80015d0:	9400      	str	r4, [sp, #0]
 80015d2:	f7ff fa9b 	bl	8000b0c <FillRect>
		if (playerCanMove(&p1, 1)) {
 80015d6:	2101      	movs	r1, #1
 80015d8:	4816      	ldr	r0, [pc, #88]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015da:	f7ff fc41 	bl	8000e60 <playerCanMove>
 80015de:	4603      	mov	r3, r0
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d02b      	beq.n	800163c <HAL_UART_RxCpltCallback+0x230>
			p1.x=p1.x+p1.speed;
 80015e4:	4b13      	ldr	r3, [pc, #76]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015e6:	681a      	ldr	r2, [r3, #0]
 80015e8:	4b12      	ldr	r3, [pc, #72]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015ea:	691b      	ldr	r3, [r3, #16]
 80015ec:	4413      	add	r3, r2
 80015ee:	4a11      	ldr	r2, [pc, #68]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015f0:	6013      	str	r3, [r2, #0]
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 80015f2:	4b10      	ldr	r3, [pc, #64]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015f4:	681a      	ldr	r2, [r3, #0]
 80015f6:	4b0f      	ldr	r3, [pc, #60]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 80015f8:	689b      	ldr	r3, [r3, #8]
 80015fa:	085b      	lsrs	r3, r3, #1
 80015fc:	1ad0      	subs	r0, r2, r3
 80015fe:	4b0d      	ldr	r3, [pc, #52]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001600:	685a      	ldr	r2, [r3, #4]
 8001602:	4b0c      	ldr	r3, [pc, #48]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001604:	68db      	ldr	r3, [r3, #12]
 8001606:	085b      	lsrs	r3, r3, #1
 8001608:	1ad1      	subs	r1, r2, r3
 800160a:	4b0a      	ldr	r3, [pc, #40]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800160c:	689a      	ldr	r2, [r3, #8]
 800160e:	4b09      	ldr	r3, [pc, #36]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001610:	68db      	ldr	r3, [r3, #12]
 8001612:	4c09      	ldr	r4, [pc, #36]	@ (8001638 <HAL_UART_RxCpltCallback+0x22c>)
 8001614:	9400      	str	r4, [sp, #0]
 8001616:	f7ff fa79 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 800161a:	4b06      	ldr	r3, [pc, #24]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 800161c:	6818      	ldr	r0, [r3, #0]
 800161e:	4b05      	ldr	r3, [pc, #20]	@ (8001634 <HAL_UART_RxCpltCallback+0x228>)
 8001620:	6859      	ldr	r1, [r3, #4]
 8001622:	2300      	movs	r3, #0
 8001624:	9300      	str	r3, [sp, #0]
 8001626:	2301      	movs	r3, #1
 8001628:	2201      	movs	r2, #1
 800162a:	f7ff fa6f 	bl	8000b0c <FillRect>
 800162e:	e023      	b.n	8001678 <HAL_UART_RxCpltCallback+0x26c>
 8001630:	20000110 	.word	0x20000110
 8001634:	2000011c 	.word	0x2000011c
 8001638:	00fffb00 	.word	0x00fffb00
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 800163c:	4b46      	ldr	r3, [pc, #280]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800163e:	681a      	ldr	r2, [r3, #0]
 8001640:	4b45      	ldr	r3, [pc, #276]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001642:	689b      	ldr	r3, [r3, #8]
 8001644:	085b      	lsrs	r3, r3, #1
 8001646:	1ad0      	subs	r0, r2, r3
 8001648:	4b43      	ldr	r3, [pc, #268]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800164a:	685a      	ldr	r2, [r3, #4]
 800164c:	4b42      	ldr	r3, [pc, #264]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800164e:	68db      	ldr	r3, [r3, #12]
 8001650:	085b      	lsrs	r3, r3, #1
 8001652:	1ad1      	subs	r1, r2, r3
 8001654:	4b40      	ldr	r3, [pc, #256]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001656:	689a      	ldr	r2, [r3, #8]
 8001658:	4b3f      	ldr	r3, [pc, #252]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800165a:	68db      	ldr	r3, [r3, #12]
 800165c:	4c3f      	ldr	r4, [pc, #252]	@ (800175c <HAL_UART_RxCpltCallback+0x350>)
 800165e:	9400      	str	r4, [sp, #0]
 8001660:	f7ff fa54 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 8001664:	4b3c      	ldr	r3, [pc, #240]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001666:	6818      	ldr	r0, [r3, #0]
 8001668:	4b3b      	ldr	r3, [pc, #236]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800166a:	6859      	ldr	r1, [r3, #4]
 800166c:	2300      	movs	r3, #0
 800166e:	9300      	str	r3, [sp, #0]
 8001670:	2301      	movs	r3, #1
 8001672:	2201      	movs	r2, #1
 8001674:	f7ff fa4a 	bl	8000b0c <FillRect>
		}
	}
	if(buffer[0] == 'l'){
 8001678:	4b39      	ldr	r3, [pc, #228]	@ (8001760 <HAL_UART_RxCpltCallback+0x354>)
 800167a:	781b      	ldrb	r3, [r3, #0]
 800167c:	2b6c      	cmp	r3, #108	@ 0x6c
 800167e:	d15f      	bne.n	8001740 <HAL_UART_RxCpltCallback+0x334>
		FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFFFF);
 8001680:	4b35      	ldr	r3, [pc, #212]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001682:	681a      	ldr	r2, [r3, #0]
 8001684:	4b34      	ldr	r3, [pc, #208]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001686:	689b      	ldr	r3, [r3, #8]
 8001688:	085b      	lsrs	r3, r3, #1
 800168a:	1ad0      	subs	r0, r2, r3
 800168c:	4b32      	ldr	r3, [pc, #200]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800168e:	685a      	ldr	r2, [r3, #4]
 8001690:	4b31      	ldr	r3, [pc, #196]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001692:	68db      	ldr	r3, [r3, #12]
 8001694:	085b      	lsrs	r3, r3, #1
 8001696:	1ad1      	subs	r1, r2, r3
 8001698:	4b2f      	ldr	r3, [pc, #188]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800169a:	689a      	ldr	r2, [r3, #8]
 800169c:	4b2e      	ldr	r3, [pc, #184]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800169e:	68db      	ldr	r3, [r3, #12]
 80016a0:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
 80016a4:	9400      	str	r4, [sp, #0]
 80016a6:	f7ff fa31 	bl	8000b0c <FillRect>
		if (playerCanMove(&p1, 3)) {
 80016aa:	2103      	movs	r1, #3
 80016ac:	482a      	ldr	r0, [pc, #168]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016ae:	f7ff fbd7 	bl	8000e60 <playerCanMove>
 80016b2:	4603      	mov	r3, r0
 80016b4:	2b00      	cmp	r3, #0
 80016b6:	d025      	beq.n	8001704 <HAL_UART_RxCpltCallback+0x2f8>
			p1.x=p1.x-p1.speed;
 80016b8:	4b27      	ldr	r3, [pc, #156]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	4b26      	ldr	r3, [pc, #152]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016be:	691b      	ldr	r3, [r3, #16]
 80016c0:	1ad3      	subs	r3, r2, r3
 80016c2:	4a25      	ldr	r2, [pc, #148]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016c4:	6013      	str	r3, [r2, #0]
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 80016c6:	4b24      	ldr	r3, [pc, #144]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016c8:	681a      	ldr	r2, [r3, #0]
 80016ca:	4b23      	ldr	r3, [pc, #140]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016cc:	689b      	ldr	r3, [r3, #8]
 80016ce:	085b      	lsrs	r3, r3, #1
 80016d0:	1ad0      	subs	r0, r2, r3
 80016d2:	4b21      	ldr	r3, [pc, #132]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016d4:	685a      	ldr	r2, [r3, #4]
 80016d6:	4b20      	ldr	r3, [pc, #128]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016d8:	68db      	ldr	r3, [r3, #12]
 80016da:	085b      	lsrs	r3, r3, #1
 80016dc:	1ad1      	subs	r1, r2, r3
 80016de:	4b1e      	ldr	r3, [pc, #120]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016e0:	689a      	ldr	r2, [r3, #8]
 80016e2:	4b1d      	ldr	r3, [pc, #116]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016e4:	68db      	ldr	r3, [r3, #12]
 80016e6:	4c1d      	ldr	r4, [pc, #116]	@ (800175c <HAL_UART_RxCpltCallback+0x350>)
 80016e8:	9400      	str	r4, [sp, #0]
 80016ea:	f7ff fa0f 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 80016ee:	4b1a      	ldr	r3, [pc, #104]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016f0:	6818      	ldr	r0, [r3, #0]
 80016f2:	4b19      	ldr	r3, [pc, #100]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 80016f4:	6859      	ldr	r1, [r3, #4]
 80016f6:	2300      	movs	r3, #0
 80016f8:	9300      	str	r3, [sp, #0]
 80016fa:	2301      	movs	r3, #1
 80016fc:	2201      	movs	r2, #1
 80016fe:	f7ff fa05 	bl	8000b0c <FillRect>
 8001702:	e01d      	b.n	8001740 <HAL_UART_RxCpltCallback+0x334>
		} else {
			FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
 8001704:	4b14      	ldr	r3, [pc, #80]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001706:	681a      	ldr	r2, [r3, #0]
 8001708:	4b13      	ldr	r3, [pc, #76]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800170a:	689b      	ldr	r3, [r3, #8]
 800170c:	085b      	lsrs	r3, r3, #1
 800170e:	1ad0      	subs	r0, r2, r3
 8001710:	4b11      	ldr	r3, [pc, #68]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001712:	685a      	ldr	r2, [r3, #4]
 8001714:	4b10      	ldr	r3, [pc, #64]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001716:	68db      	ldr	r3, [r3, #12]
 8001718:	085b      	lsrs	r3, r3, #1
 800171a:	1ad1      	subs	r1, r2, r3
 800171c:	4b0e      	ldr	r3, [pc, #56]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800171e:	689a      	ldr	r2, [r3, #8]
 8001720:	4b0d      	ldr	r3, [pc, #52]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001722:	68db      	ldr	r3, [r3, #12]
 8001724:	4c0d      	ldr	r4, [pc, #52]	@ (800175c <HAL_UART_RxCpltCallback+0x350>)
 8001726:	9400      	str	r4, [sp, #0]
 8001728:	f7ff f9f0 	bl	8000b0c <FillRect>
			FillRect(p1.x , p1.y, 1, 1, 0x000000);
 800172c:	4b0a      	ldr	r3, [pc, #40]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 800172e:	6818      	ldr	r0, [r3, #0]
 8001730:	4b09      	ldr	r3, [pc, #36]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001732:	6859      	ldr	r1, [r3, #4]
 8001734:	2300      	movs	r3, #0
 8001736:	9300      	str	r3, [sp, #0]
 8001738:	2301      	movs	r3, #1
 800173a:	2201      	movs	r2, #1
 800173c:	f7ff f9e6 	bl	8000b0c <FillRect>
	    verificar_golpe(&e1, position_p1);
	    verificar_golpe(&e2, position_p1);
	    verificar_golpe(&e3, position_p1);
	    */
	}
	HitboxPlayer(&p1);
 8001740:	4805      	ldr	r0, [pc, #20]	@ (8001758 <HAL_UART_RxCpltCallback+0x34c>)
 8001742:	f7ff fc07 	bl	8000f54 <HitboxPlayer>
	// Vuelve a activar la recepción por interrupción
	HAL_UART_Receive_IT(&huart5, buffer, 1);
 8001746:	2201      	movs	r2, #1
 8001748:	4905      	ldr	r1, [pc, #20]	@ (8001760 <HAL_UART_RxCpltCallback+0x354>)
 800174a:	4806      	ldr	r0, [pc, #24]	@ (8001764 <HAL_UART_RxCpltCallback+0x358>)
 800174c:	f001 fbd3 	bl	8002ef6 <HAL_UART_Receive_IT>
}
 8001750:	bf00      	nop
 8001752:	370c      	adds	r7, #12
 8001754:	46bd      	mov	sp, r7
 8001756:	bd90      	pop	{r4, r7, pc}
 8001758:	2000011c 	.word	0x2000011c
 800175c:	00fffb00 	.word	0x00fffb00
 8001760:	20000110 	.word	0x20000110
 8001764:	20000080 	.word	0x20000080

08001768 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001768:	b480      	push	{r7}
 800176a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800176c:	b672      	cpsid	i
}
 800176e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001770:	bf00      	nop
 8001772:	e7fd      	b.n	8001770 <Error_Handler+0x8>

08001774 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001774:	b480      	push	{r7}
 8001776:	b083      	sub	sp, #12
 8001778:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800177a:	2300      	movs	r3, #0
 800177c:	607b      	str	r3, [r7, #4]
 800177e:	4b10      	ldr	r3, [pc, #64]	@ (80017c0 <HAL_MspInit+0x4c>)
 8001780:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001782:	4a0f      	ldr	r2, [pc, #60]	@ (80017c0 <HAL_MspInit+0x4c>)
 8001784:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001788:	6453      	str	r3, [r2, #68]	@ 0x44
 800178a:	4b0d      	ldr	r3, [pc, #52]	@ (80017c0 <HAL_MspInit+0x4c>)
 800178c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800178e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001792:	607b      	str	r3, [r7, #4]
 8001794:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001796:	2300      	movs	r3, #0
 8001798:	603b      	str	r3, [r7, #0]
 800179a:	4b09      	ldr	r3, [pc, #36]	@ (80017c0 <HAL_MspInit+0x4c>)
 800179c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800179e:	4a08      	ldr	r2, [pc, #32]	@ (80017c0 <HAL_MspInit+0x4c>)
 80017a0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80017a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80017a6:	4b06      	ldr	r3, [pc, #24]	@ (80017c0 <HAL_MspInit+0x4c>)
 80017a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017aa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80017ae:	603b      	str	r3, [r7, #0]
 80017b0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80017b2:	bf00      	nop
 80017b4:	370c      	adds	r7, #12
 80017b6:	46bd      	mov	sp, r7
 80017b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017bc:	4770      	bx	lr
 80017be:	bf00      	nop
 80017c0:	40023800 	.word	0x40023800

080017c4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b08a      	sub	sp, #40	@ 0x28
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017cc:	f107 0314 	add.w	r3, r7, #20
 80017d0:	2200      	movs	r2, #0
 80017d2:	601a      	str	r2, [r3, #0]
 80017d4:	605a      	str	r2, [r3, #4]
 80017d6:	609a      	str	r2, [r3, #8]
 80017d8:	60da      	str	r2, [r3, #12]
 80017da:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	4a19      	ldr	r2, [pc, #100]	@ (8001848 <HAL_SPI_MspInit+0x84>)
 80017e2:	4293      	cmp	r3, r2
 80017e4:	d12b      	bne.n	800183e <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80017e6:	2300      	movs	r3, #0
 80017e8:	613b      	str	r3, [r7, #16]
 80017ea:	4b18      	ldr	r3, [pc, #96]	@ (800184c <HAL_SPI_MspInit+0x88>)
 80017ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017ee:	4a17      	ldr	r2, [pc, #92]	@ (800184c <HAL_SPI_MspInit+0x88>)
 80017f0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80017f4:	6453      	str	r3, [r2, #68]	@ 0x44
 80017f6:	4b15      	ldr	r3, [pc, #84]	@ (800184c <HAL_SPI_MspInit+0x88>)
 80017f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017fa:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001802:	2300      	movs	r3, #0
 8001804:	60fb      	str	r3, [r7, #12]
 8001806:	4b11      	ldr	r3, [pc, #68]	@ (800184c <HAL_SPI_MspInit+0x88>)
 8001808:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800180a:	4a10      	ldr	r2, [pc, #64]	@ (800184c <HAL_SPI_MspInit+0x88>)
 800180c:	f043 0301 	orr.w	r3, r3, #1
 8001810:	6313      	str	r3, [r2, #48]	@ 0x30
 8001812:	4b0e      	ldr	r3, [pc, #56]	@ (800184c <HAL_SPI_MspInit+0x88>)
 8001814:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001816:	f003 0301 	and.w	r3, r3, #1
 800181a:	60fb      	str	r3, [r7, #12]
 800181c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 800181e:	23e0      	movs	r3, #224	@ 0xe0
 8001820:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001822:	2302      	movs	r3, #2
 8001824:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001826:	2300      	movs	r3, #0
 8001828:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800182a:	2303      	movs	r3, #3
 800182c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800182e:	2305      	movs	r3, #5
 8001830:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001832:	f107 0314 	add.w	r3, r7, #20
 8001836:	4619      	mov	r1, r3
 8001838:	4805      	ldr	r0, [pc, #20]	@ (8001850 <HAL_SPI_MspInit+0x8c>)
 800183a:	f000 fb73 	bl	8001f24 <HAL_GPIO_Init>

  /* USER CODE END SPI1_MspInit 1 */

  }

}
 800183e:	bf00      	nop
 8001840:	3728      	adds	r7, #40	@ 0x28
 8001842:	46bd      	mov	sp, r7
 8001844:	bd80      	pop	{r7, pc}
 8001846:	bf00      	nop
 8001848:	40013000 	.word	0x40013000
 800184c:	40023800 	.word	0x40023800
 8001850:	40020000 	.word	0x40020000

08001854 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001854:	b580      	push	{r7, lr}
 8001856:	b08c      	sub	sp, #48	@ 0x30
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800185c:	f107 031c 	add.w	r3, r7, #28
 8001860:	2200      	movs	r2, #0
 8001862:	601a      	str	r2, [r3, #0]
 8001864:	605a      	str	r2, [r3, #4]
 8001866:	609a      	str	r2, [r3, #8]
 8001868:	60da      	str	r2, [r3, #12]
 800186a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	4a49      	ldr	r2, [pc, #292]	@ (8001998 <HAL_UART_MspInit+0x144>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d153      	bne.n	800191e <HAL_UART_MspInit+0xca>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8001876:	2300      	movs	r3, #0
 8001878:	61bb      	str	r3, [r7, #24]
 800187a:	4b48      	ldr	r3, [pc, #288]	@ (800199c <HAL_UART_MspInit+0x148>)
 800187c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800187e:	4a47      	ldr	r2, [pc, #284]	@ (800199c <HAL_UART_MspInit+0x148>)
 8001880:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001884:	6413      	str	r3, [r2, #64]	@ 0x40
 8001886:	4b45      	ldr	r3, [pc, #276]	@ (800199c <HAL_UART_MspInit+0x148>)
 8001888:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800188a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800188e:	61bb      	str	r3, [r7, #24]
 8001890:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001892:	2300      	movs	r3, #0
 8001894:	617b      	str	r3, [r7, #20]
 8001896:	4b41      	ldr	r3, [pc, #260]	@ (800199c <HAL_UART_MspInit+0x148>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800189a:	4a40      	ldr	r2, [pc, #256]	@ (800199c <HAL_UART_MspInit+0x148>)
 800189c:	f043 0304 	orr.w	r3, r3, #4
 80018a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80018a2:	4b3e      	ldr	r3, [pc, #248]	@ (800199c <HAL_UART_MspInit+0x148>)
 80018a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018a6:	f003 0304 	and.w	r3, r3, #4
 80018aa:	617b      	str	r3, [r7, #20]
 80018ac:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80018ae:	2300      	movs	r3, #0
 80018b0:	613b      	str	r3, [r7, #16]
 80018b2:	4b3a      	ldr	r3, [pc, #232]	@ (800199c <HAL_UART_MspInit+0x148>)
 80018b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018b6:	4a39      	ldr	r2, [pc, #228]	@ (800199c <HAL_UART_MspInit+0x148>)
 80018b8:	f043 0308 	orr.w	r3, r3, #8
 80018bc:	6313      	str	r3, [r2, #48]	@ 0x30
 80018be:	4b37      	ldr	r3, [pc, #220]	@ (800199c <HAL_UART_MspInit+0x148>)
 80018c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018c2:	f003 0308 	and.w	r3, r3, #8
 80018c6:	613b      	str	r3, [r7, #16]
 80018c8:	693b      	ldr	r3, [r7, #16]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 80018ca:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80018ce:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018d0:	2302      	movs	r3, #2
 80018d2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018d4:	2300      	movs	r3, #0
 80018d6:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018d8:	2303      	movs	r3, #3
 80018da:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80018dc:	2308      	movs	r3, #8
 80018de:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018e0:	f107 031c 	add.w	r3, r7, #28
 80018e4:	4619      	mov	r1, r3
 80018e6:	482e      	ldr	r0, [pc, #184]	@ (80019a0 <HAL_UART_MspInit+0x14c>)
 80018e8:	f000 fb1c 	bl	8001f24 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80018ec:	2304      	movs	r3, #4
 80018ee:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018f0:	2302      	movs	r3, #2
 80018f2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018f4:	2300      	movs	r3, #0
 80018f6:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018f8:	2303      	movs	r3, #3
 80018fa:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80018fc:	2308      	movs	r3, #8
 80018fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001900:	f107 031c 	add.w	r3, r7, #28
 8001904:	4619      	mov	r1, r3
 8001906:	4827      	ldr	r0, [pc, #156]	@ (80019a4 <HAL_UART_MspInit+0x150>)
 8001908:	f000 fb0c 	bl	8001f24 <HAL_GPIO_Init>

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 0, 0);
 800190c:	2200      	movs	r2, #0
 800190e:	2100      	movs	r1, #0
 8001910:	2035      	movs	r0, #53	@ 0x35
 8001912:	f000 fa3e 	bl	8001d92 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 8001916:	2035      	movs	r0, #53	@ 0x35
 8001918:	f000 fa57 	bl	8001dca <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800191c:	e038      	b.n	8001990 <HAL_UART_MspInit+0x13c>
  else if(huart->Instance==USART2)
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4a21      	ldr	r2, [pc, #132]	@ (80019a8 <HAL_UART_MspInit+0x154>)
 8001924:	4293      	cmp	r3, r2
 8001926:	d133      	bne.n	8001990 <HAL_UART_MspInit+0x13c>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001928:	2300      	movs	r3, #0
 800192a:	60fb      	str	r3, [r7, #12]
 800192c:	4b1b      	ldr	r3, [pc, #108]	@ (800199c <HAL_UART_MspInit+0x148>)
 800192e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001930:	4a1a      	ldr	r2, [pc, #104]	@ (800199c <HAL_UART_MspInit+0x148>)
 8001932:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001936:	6413      	str	r3, [r2, #64]	@ 0x40
 8001938:	4b18      	ldr	r3, [pc, #96]	@ (800199c <HAL_UART_MspInit+0x148>)
 800193a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800193c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001940:	60fb      	str	r3, [r7, #12]
 8001942:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001944:	2300      	movs	r3, #0
 8001946:	60bb      	str	r3, [r7, #8]
 8001948:	4b14      	ldr	r3, [pc, #80]	@ (800199c <HAL_UART_MspInit+0x148>)
 800194a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800194c:	4a13      	ldr	r2, [pc, #76]	@ (800199c <HAL_UART_MspInit+0x148>)
 800194e:	f043 0301 	orr.w	r3, r3, #1
 8001952:	6313      	str	r3, [r2, #48]	@ 0x30
 8001954:	4b11      	ldr	r3, [pc, #68]	@ (800199c <HAL_UART_MspInit+0x148>)
 8001956:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001958:	f003 0301 	and.w	r3, r3, #1
 800195c:	60bb      	str	r3, [r7, #8]
 800195e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001960:	230c      	movs	r3, #12
 8001962:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001964:	2302      	movs	r3, #2
 8001966:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001968:	2300      	movs	r3, #0
 800196a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800196c:	2303      	movs	r3, #3
 800196e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001970:	2307      	movs	r3, #7
 8001972:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001974:	f107 031c 	add.w	r3, r7, #28
 8001978:	4619      	mov	r1, r3
 800197a:	480c      	ldr	r0, [pc, #48]	@ (80019ac <HAL_UART_MspInit+0x158>)
 800197c:	f000 fad2 	bl	8001f24 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001980:	2200      	movs	r2, #0
 8001982:	2100      	movs	r1, #0
 8001984:	2026      	movs	r0, #38	@ 0x26
 8001986:	f000 fa04 	bl	8001d92 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 800198a:	2026      	movs	r0, #38	@ 0x26
 800198c:	f000 fa1d 	bl	8001dca <HAL_NVIC_EnableIRQ>
}
 8001990:	bf00      	nop
 8001992:	3730      	adds	r7, #48	@ 0x30
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}
 8001998:	40005000 	.word	0x40005000
 800199c:	40023800 	.word	0x40023800
 80019a0:	40020800 	.word	0x40020800
 80019a4:	40020c00 	.word	0x40020c00
 80019a8:	40004400 	.word	0x40004400
 80019ac:	40020000 	.word	0x40020000

080019b0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80019b0:	b480      	push	{r7}
 80019b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80019b4:	bf00      	nop
 80019b6:	e7fd      	b.n	80019b4 <NMI_Handler+0x4>

080019b8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80019b8:	b480      	push	{r7}
 80019ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80019bc:	bf00      	nop
 80019be:	e7fd      	b.n	80019bc <HardFault_Handler+0x4>

080019c0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80019c0:	b480      	push	{r7}
 80019c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80019c4:	bf00      	nop
 80019c6:	e7fd      	b.n	80019c4 <MemManage_Handler+0x4>

080019c8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80019c8:	b480      	push	{r7}
 80019ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80019cc:	bf00      	nop
 80019ce:	e7fd      	b.n	80019cc <BusFault_Handler+0x4>

080019d0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80019d0:	b480      	push	{r7}
 80019d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80019d4:	bf00      	nop
 80019d6:	e7fd      	b.n	80019d4 <UsageFault_Handler+0x4>

080019d8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80019d8:	b480      	push	{r7}
 80019da:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80019dc:	bf00      	nop
 80019de:	46bd      	mov	sp, r7
 80019e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e4:	4770      	bx	lr

080019e6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80019e6:	b480      	push	{r7}
 80019e8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80019ea:	bf00      	nop
 80019ec:	46bd      	mov	sp, r7
 80019ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f2:	4770      	bx	lr

080019f4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80019f4:	b480      	push	{r7}
 80019f6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80019f8:	bf00      	nop
 80019fa:	46bd      	mov	sp, r7
 80019fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a00:	4770      	bx	lr

08001a02 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001a02:	b580      	push	{r7, lr}
 8001a04:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001a06:	f000 f8a5 	bl	8001b54 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001a0a:	bf00      	nop
 8001a0c:	bd80      	pop	{r7, pc}
	...

08001a10 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001a10:	b580      	push	{r7, lr}
 8001a12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001a14:	4802      	ldr	r0, [pc, #8]	@ (8001a20 <USART2_IRQHandler+0x10>)
 8001a16:	f001 fa93 	bl	8002f40 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001a1a:	bf00      	nop
 8001a1c:	bd80      	pop	{r7, pc}
 8001a1e:	bf00      	nop
 8001a20:	200000c8 	.word	0x200000c8

08001a24 <UART5_IRQHandler>:

/**
  * @brief This function handles UART5 global interrupt.
  */
void UART5_IRQHandler(void)
{
 8001a24:	b580      	push	{r7, lr}
 8001a26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 8001a28:	4802      	ldr	r0, [pc, #8]	@ (8001a34 <UART5_IRQHandler+0x10>)
 8001a2a:	f001 fa89 	bl	8002f40 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART5_IRQn 1 */

  /* USER CODE END UART5_IRQn 1 */
}
 8001a2e:	bf00      	nop
 8001a30:	bd80      	pop	{r7, pc}
 8001a32:	bf00      	nop
 8001a34:	20000080 	.word	0x20000080

08001a38 <SystemInit>:
 8001a38:	b480      	push	{r7}
 8001a3a:	af00      	add	r7, sp, #0
 8001a3c:	4b06      	ldr	r3, [pc, #24]	@ (8001a58 <SystemInit+0x20>)
 8001a3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a42:	4a05      	ldr	r2, [pc, #20]	@ (8001a58 <SystemInit+0x20>)
 8001a44:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001a48:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001a4c:	bf00      	nop
 8001a4e:	46bd      	mov	sp, r7
 8001a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a54:	4770      	bx	lr
 8001a56:	bf00      	nop
 8001a58:	e000ed00 	.word	0xe000ed00

08001a5c <Reset_Handler>:
 8001a5c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001a94 <LoopFillZerobss+0xe>
 8001a60:	f7ff ffea 	bl	8001a38 <SystemInit>
 8001a64:	480c      	ldr	r0, [pc, #48]	@ (8001a98 <LoopFillZerobss+0x12>)
 8001a66:	490d      	ldr	r1, [pc, #52]	@ (8001a9c <LoopFillZerobss+0x16>)
 8001a68:	4a0d      	ldr	r2, [pc, #52]	@ (8001aa0 <LoopFillZerobss+0x1a>)
 8001a6a:	2300      	movs	r3, #0
 8001a6c:	e002      	b.n	8001a74 <LoopCopyDataInit>

08001a6e <CopyDataInit>:
 8001a6e:	58d4      	ldr	r4, [r2, r3]
 8001a70:	50c4      	str	r4, [r0, r3]
 8001a72:	3304      	adds	r3, #4

08001a74 <LoopCopyDataInit>:
 8001a74:	18c4      	adds	r4, r0, r3
 8001a76:	428c      	cmp	r4, r1
 8001a78:	d3f9      	bcc.n	8001a6e <CopyDataInit>
 8001a7a:	4a0a      	ldr	r2, [pc, #40]	@ (8001aa4 <LoopFillZerobss+0x1e>)
 8001a7c:	4c0a      	ldr	r4, [pc, #40]	@ (8001aa8 <LoopFillZerobss+0x22>)
 8001a7e:	2300      	movs	r3, #0
 8001a80:	e001      	b.n	8001a86 <LoopFillZerobss>

08001a82 <FillZerobss>:
 8001a82:	6013      	str	r3, [r2, #0]
 8001a84:	3204      	adds	r2, #4

08001a86 <LoopFillZerobss>:
 8001a86:	42a2      	cmp	r2, r4
 8001a88:	d3fb      	bcc.n	8001a82 <FillZerobss>
 8001a8a:	f002 f95f 	bl	8003d4c <__libc_init_array>
 8001a8e:	f7ff fab7 	bl	8001000 <main>
 8001a92:	4770      	bx	lr
 8001a94:	20020000 	.word	0x20020000
 8001a98:	20000000 	.word	0x20000000
 8001a9c:	2000000c 	.word	0x2000000c
 8001aa0:	08003dd4 	.word	0x08003dd4
 8001aa4:	2000000c 	.word	0x2000000c
 8001aa8:	200001dc 	.word	0x200001dc

08001aac <ADC_IRQHandler>:
 8001aac:	e7fe      	b.n	8001aac <ADC_IRQHandler>
	...

08001ab0 <HAL_Init>:
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	af00      	add	r7, sp, #0
 8001ab4:	4b0e      	ldr	r3, [pc, #56]	@ (8001af0 <HAL_Init+0x40>)
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	4a0d      	ldr	r2, [pc, #52]	@ (8001af0 <HAL_Init+0x40>)
 8001aba:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001abe:	6013      	str	r3, [r2, #0]
 8001ac0:	4b0b      	ldr	r3, [pc, #44]	@ (8001af0 <HAL_Init+0x40>)
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	4a0a      	ldr	r2, [pc, #40]	@ (8001af0 <HAL_Init+0x40>)
 8001ac6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001aca:	6013      	str	r3, [r2, #0]
 8001acc:	4b08      	ldr	r3, [pc, #32]	@ (8001af0 <HAL_Init+0x40>)
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	4a07      	ldr	r2, [pc, #28]	@ (8001af0 <HAL_Init+0x40>)
 8001ad2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001ad6:	6013      	str	r3, [r2, #0]
 8001ad8:	2003      	movs	r0, #3
 8001ada:	f000 f94f 	bl	8001d7c <HAL_NVIC_SetPriorityGrouping>
 8001ade:	200f      	movs	r0, #15
 8001ae0:	f000 f808 	bl	8001af4 <HAL_InitTick>
 8001ae4:	f7ff fe46 	bl	8001774 <HAL_MspInit>
 8001ae8:	2300      	movs	r3, #0
 8001aea:	4618      	mov	r0, r3
 8001aec:	bd80      	pop	{r7, pc}
 8001aee:	bf00      	nop
 8001af0:	40023c00 	.word	0x40023c00

08001af4 <HAL_InitTick>:
 8001af4:	b580      	push	{r7, lr}
 8001af6:	b082      	sub	sp, #8
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	6078      	str	r0, [r7, #4]
 8001afc:	4b12      	ldr	r3, [pc, #72]	@ (8001b48 <HAL_InitTick+0x54>)
 8001afe:	681a      	ldr	r2, [r3, #0]
 8001b00:	4b12      	ldr	r3, [pc, #72]	@ (8001b4c <HAL_InitTick+0x58>)
 8001b02:	781b      	ldrb	r3, [r3, #0]
 8001b04:	4619      	mov	r1, r3
 8001b06:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001b0a:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b0e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b12:	4618      	mov	r0, r3
 8001b14:	f000 f967 	bl	8001de6 <HAL_SYSTICK_Config>
 8001b18:	4603      	mov	r3, r0
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	d001      	beq.n	8001b22 <HAL_InitTick+0x2e>
 8001b1e:	2301      	movs	r3, #1
 8001b20:	e00e      	b.n	8001b40 <HAL_InitTick+0x4c>
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	2b0f      	cmp	r3, #15
 8001b26:	d80a      	bhi.n	8001b3e <HAL_InitTick+0x4a>
 8001b28:	2200      	movs	r2, #0
 8001b2a:	6879      	ldr	r1, [r7, #4]
 8001b2c:	f04f 30ff 	mov.w	r0, #4294967295
 8001b30:	f000 f92f 	bl	8001d92 <HAL_NVIC_SetPriority>
 8001b34:	4a06      	ldr	r2, [pc, #24]	@ (8001b50 <HAL_InitTick+0x5c>)
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	6013      	str	r3, [r2, #0]
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	e000      	b.n	8001b40 <HAL_InitTick+0x4c>
 8001b3e:	2301      	movs	r3, #1
 8001b40:	4618      	mov	r0, r3
 8001b42:	3708      	adds	r7, #8
 8001b44:	46bd      	mov	sp, r7
 8001b46:	bd80      	pop	{r7, pc}
 8001b48:	20000000 	.word	0x20000000
 8001b4c:	20000008 	.word	0x20000008
 8001b50:	20000004 	.word	0x20000004

08001b54 <HAL_IncTick>:
 8001b54:	b480      	push	{r7}
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	4b06      	ldr	r3, [pc, #24]	@ (8001b74 <HAL_IncTick+0x20>)
 8001b5a:	781b      	ldrb	r3, [r3, #0]
 8001b5c:	461a      	mov	r2, r3
 8001b5e:	4b06      	ldr	r3, [pc, #24]	@ (8001b78 <HAL_IncTick+0x24>)
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	4413      	add	r3, r2
 8001b64:	4a04      	ldr	r2, [pc, #16]	@ (8001b78 <HAL_IncTick+0x24>)
 8001b66:	6013      	str	r3, [r2, #0]
 8001b68:	bf00      	nop
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b70:	4770      	bx	lr
 8001b72:	bf00      	nop
 8001b74:	20000008 	.word	0x20000008
 8001b78:	200001d8 	.word	0x200001d8

08001b7c <HAL_GetTick>:
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	4b03      	ldr	r3, [pc, #12]	@ (8001b90 <HAL_GetTick+0x14>)
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	4618      	mov	r0, r3
 8001b86:	46bd      	mov	sp, r7
 8001b88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b8c:	4770      	bx	lr
 8001b8e:	bf00      	nop
 8001b90:	200001d8 	.word	0x200001d8

08001b94 <HAL_Delay>:
 8001b94:	b580      	push	{r7, lr}
 8001b96:	b084      	sub	sp, #16
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	6078      	str	r0, [r7, #4]
 8001b9c:	f7ff ffee 	bl	8001b7c <HAL_GetTick>
 8001ba0:	60b8      	str	r0, [r7, #8]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	60fb      	str	r3, [r7, #12]
 8001ba6:	68fb      	ldr	r3, [r7, #12]
 8001ba8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001bac:	d005      	beq.n	8001bba <HAL_Delay+0x26>
 8001bae:	4b0a      	ldr	r3, [pc, #40]	@ (8001bd8 <HAL_Delay+0x44>)
 8001bb0:	781b      	ldrb	r3, [r3, #0]
 8001bb2:	461a      	mov	r2, r3
 8001bb4:	68fb      	ldr	r3, [r7, #12]
 8001bb6:	4413      	add	r3, r2
 8001bb8:	60fb      	str	r3, [r7, #12]
 8001bba:	bf00      	nop
 8001bbc:	f7ff ffde 	bl	8001b7c <HAL_GetTick>
 8001bc0:	4602      	mov	r2, r0
 8001bc2:	68bb      	ldr	r3, [r7, #8]
 8001bc4:	1ad3      	subs	r3, r2, r3
 8001bc6:	68fa      	ldr	r2, [r7, #12]
 8001bc8:	429a      	cmp	r2, r3
 8001bca:	d8f7      	bhi.n	8001bbc <HAL_Delay+0x28>
 8001bcc:	bf00      	nop
 8001bce:	bf00      	nop
 8001bd0:	3710      	adds	r7, #16
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bd80      	pop	{r7, pc}
 8001bd6:	bf00      	nop
 8001bd8:	20000008 	.word	0x20000008

08001bdc <__NVIC_SetPriorityGrouping>:
 8001bdc:	b480      	push	{r7}
 8001bde:	b085      	sub	sp, #20
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	f003 0307 	and.w	r3, r3, #7
 8001bea:	60fb      	str	r3, [r7, #12]
 8001bec:	4b0c      	ldr	r3, [pc, #48]	@ (8001c20 <__NVIC_SetPriorityGrouping+0x44>)
 8001bee:	68db      	ldr	r3, [r3, #12]
 8001bf0:	60bb      	str	r3, [r7, #8]
 8001bf2:	68ba      	ldr	r2, [r7, #8]
 8001bf4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001bf8:	4013      	ands	r3, r2
 8001bfa:	60bb      	str	r3, [r7, #8]
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	021a      	lsls	r2, r3, #8
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	4313      	orrs	r3, r2
 8001c04:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001c08:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001c0c:	60bb      	str	r3, [r7, #8]
 8001c0e:	4a04      	ldr	r2, [pc, #16]	@ (8001c20 <__NVIC_SetPriorityGrouping+0x44>)
 8001c10:	68bb      	ldr	r3, [r7, #8]
 8001c12:	60d3      	str	r3, [r2, #12]
 8001c14:	bf00      	nop
 8001c16:	3714      	adds	r7, #20
 8001c18:	46bd      	mov	sp, r7
 8001c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1e:	4770      	bx	lr
 8001c20:	e000ed00 	.word	0xe000ed00

08001c24 <__NVIC_GetPriorityGrouping>:
 8001c24:	b480      	push	{r7}
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	4b04      	ldr	r3, [pc, #16]	@ (8001c3c <__NVIC_GetPriorityGrouping+0x18>)
 8001c2a:	68db      	ldr	r3, [r3, #12]
 8001c2c:	0a1b      	lsrs	r3, r3, #8
 8001c2e:	f003 0307 	and.w	r3, r3, #7
 8001c32:	4618      	mov	r0, r3
 8001c34:	46bd      	mov	sp, r7
 8001c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c3a:	4770      	bx	lr
 8001c3c:	e000ed00 	.word	0xe000ed00

08001c40 <__NVIC_EnableIRQ>:
 8001c40:	b480      	push	{r7}
 8001c42:	b083      	sub	sp, #12
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	4603      	mov	r3, r0
 8001c48:	71fb      	strb	r3, [r7, #7]
 8001c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	db0b      	blt.n	8001c6a <__NVIC_EnableIRQ+0x2a>
 8001c52:	79fb      	ldrb	r3, [r7, #7]
 8001c54:	f003 021f 	and.w	r2, r3, #31
 8001c58:	4907      	ldr	r1, [pc, #28]	@ (8001c78 <__NVIC_EnableIRQ+0x38>)
 8001c5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c5e:	095b      	lsrs	r3, r3, #5
 8001c60:	2001      	movs	r0, #1
 8001c62:	fa00 f202 	lsl.w	r2, r0, r2
 8001c66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c6a:	bf00      	nop
 8001c6c:	370c      	adds	r7, #12
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c74:	4770      	bx	lr
 8001c76:	bf00      	nop
 8001c78:	e000e100 	.word	0xe000e100

08001c7c <__NVIC_SetPriority>:
 8001c7c:	b480      	push	{r7}
 8001c7e:	b083      	sub	sp, #12
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	4603      	mov	r3, r0
 8001c84:	6039      	str	r1, [r7, #0]
 8001c86:	71fb      	strb	r3, [r7, #7]
 8001c88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c8c:	2b00      	cmp	r3, #0
 8001c8e:	db0a      	blt.n	8001ca6 <__NVIC_SetPriority+0x2a>
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	b2da      	uxtb	r2, r3
 8001c94:	490c      	ldr	r1, [pc, #48]	@ (8001cc8 <__NVIC_SetPriority+0x4c>)
 8001c96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c9a:	0112      	lsls	r2, r2, #4
 8001c9c:	b2d2      	uxtb	r2, r2
 8001c9e:	440b      	add	r3, r1
 8001ca0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001ca4:	e00a      	b.n	8001cbc <__NVIC_SetPriority+0x40>
 8001ca6:	683b      	ldr	r3, [r7, #0]
 8001ca8:	b2da      	uxtb	r2, r3
 8001caa:	4908      	ldr	r1, [pc, #32]	@ (8001ccc <__NVIC_SetPriority+0x50>)
 8001cac:	79fb      	ldrb	r3, [r7, #7]
 8001cae:	f003 030f 	and.w	r3, r3, #15
 8001cb2:	3b04      	subs	r3, #4
 8001cb4:	0112      	lsls	r2, r2, #4
 8001cb6:	b2d2      	uxtb	r2, r2
 8001cb8:	440b      	add	r3, r1
 8001cba:	761a      	strb	r2, [r3, #24]
 8001cbc:	bf00      	nop
 8001cbe:	370c      	adds	r7, #12
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc6:	4770      	bx	lr
 8001cc8:	e000e100 	.word	0xe000e100
 8001ccc:	e000ed00 	.word	0xe000ed00

08001cd0 <NVIC_EncodePriority>:
 8001cd0:	b480      	push	{r7}
 8001cd2:	b089      	sub	sp, #36	@ 0x24
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	60f8      	str	r0, [r7, #12]
 8001cd8:	60b9      	str	r1, [r7, #8]
 8001cda:	607a      	str	r2, [r7, #4]
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	f003 0307 	and.w	r3, r3, #7
 8001ce2:	61fb      	str	r3, [r7, #28]
 8001ce4:	69fb      	ldr	r3, [r7, #28]
 8001ce6:	f1c3 0307 	rsb	r3, r3, #7
 8001cea:	2b04      	cmp	r3, #4
 8001cec:	bf28      	it	cs
 8001cee:	2304      	movcs	r3, #4
 8001cf0:	61bb      	str	r3, [r7, #24]
 8001cf2:	69fb      	ldr	r3, [r7, #28]
 8001cf4:	3304      	adds	r3, #4
 8001cf6:	2b06      	cmp	r3, #6
 8001cf8:	d902      	bls.n	8001d00 <NVIC_EncodePriority+0x30>
 8001cfa:	69fb      	ldr	r3, [r7, #28]
 8001cfc:	3b03      	subs	r3, #3
 8001cfe:	e000      	b.n	8001d02 <NVIC_EncodePriority+0x32>
 8001d00:	2300      	movs	r3, #0
 8001d02:	617b      	str	r3, [r7, #20]
 8001d04:	f04f 32ff 	mov.w	r2, #4294967295
 8001d08:	69bb      	ldr	r3, [r7, #24]
 8001d0a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d0e:	43da      	mvns	r2, r3
 8001d10:	68bb      	ldr	r3, [r7, #8]
 8001d12:	401a      	ands	r2, r3
 8001d14:	697b      	ldr	r3, [r7, #20]
 8001d16:	409a      	lsls	r2, r3
 8001d18:	f04f 31ff 	mov.w	r1, #4294967295
 8001d1c:	697b      	ldr	r3, [r7, #20]
 8001d1e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d22:	43d9      	mvns	r1, r3
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	400b      	ands	r3, r1
 8001d28:	4313      	orrs	r3, r2
 8001d2a:	4618      	mov	r0, r3
 8001d2c:	3724      	adds	r7, #36	@ 0x24
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d34:	4770      	bx	lr
	...

08001d38 <SysTick_Config>:
 8001d38:	b580      	push	{r7, lr}
 8001d3a:	b082      	sub	sp, #8
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001d48:	d301      	bcc.n	8001d4e <SysTick_Config+0x16>
 8001d4a:	2301      	movs	r3, #1
 8001d4c:	e00f      	b.n	8001d6e <SysTick_Config+0x36>
 8001d4e:	4a0a      	ldr	r2, [pc, #40]	@ (8001d78 <SysTick_Config+0x40>)
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	3b01      	subs	r3, #1
 8001d54:	6053      	str	r3, [r2, #4]
 8001d56:	210f      	movs	r1, #15
 8001d58:	f04f 30ff 	mov.w	r0, #4294967295
 8001d5c:	f7ff ff8e 	bl	8001c7c <__NVIC_SetPriority>
 8001d60:	4b05      	ldr	r3, [pc, #20]	@ (8001d78 <SysTick_Config+0x40>)
 8001d62:	2200      	movs	r2, #0
 8001d64:	609a      	str	r2, [r3, #8]
 8001d66:	4b04      	ldr	r3, [pc, #16]	@ (8001d78 <SysTick_Config+0x40>)
 8001d68:	2207      	movs	r2, #7
 8001d6a:	601a      	str	r2, [r3, #0]
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	4618      	mov	r0, r3
 8001d70:	3708      	adds	r7, #8
 8001d72:	46bd      	mov	sp, r7
 8001d74:	bd80      	pop	{r7, pc}
 8001d76:	bf00      	nop
 8001d78:	e000e010 	.word	0xe000e010

08001d7c <HAL_NVIC_SetPriorityGrouping>:
 8001d7c:	b580      	push	{r7, lr}
 8001d7e:	b082      	sub	sp, #8
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	6078      	str	r0, [r7, #4]
 8001d84:	6878      	ldr	r0, [r7, #4]
 8001d86:	f7ff ff29 	bl	8001bdc <__NVIC_SetPriorityGrouping>
 8001d8a:	bf00      	nop
 8001d8c:	3708      	adds	r7, #8
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	bd80      	pop	{r7, pc}

08001d92 <HAL_NVIC_SetPriority>:
 8001d92:	b580      	push	{r7, lr}
 8001d94:	b086      	sub	sp, #24
 8001d96:	af00      	add	r7, sp, #0
 8001d98:	4603      	mov	r3, r0
 8001d9a:	60b9      	str	r1, [r7, #8]
 8001d9c:	607a      	str	r2, [r7, #4]
 8001d9e:	73fb      	strb	r3, [r7, #15]
 8001da0:	2300      	movs	r3, #0
 8001da2:	617b      	str	r3, [r7, #20]
 8001da4:	f7ff ff3e 	bl	8001c24 <__NVIC_GetPriorityGrouping>
 8001da8:	6178      	str	r0, [r7, #20]
 8001daa:	687a      	ldr	r2, [r7, #4]
 8001dac:	68b9      	ldr	r1, [r7, #8]
 8001dae:	6978      	ldr	r0, [r7, #20]
 8001db0:	f7ff ff8e 	bl	8001cd0 <NVIC_EncodePriority>
 8001db4:	4602      	mov	r2, r0
 8001db6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001dba:	4611      	mov	r1, r2
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	f7ff ff5d 	bl	8001c7c <__NVIC_SetPriority>
 8001dc2:	bf00      	nop
 8001dc4:	3718      	adds	r7, #24
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	bd80      	pop	{r7, pc}

08001dca <HAL_NVIC_EnableIRQ>:
 8001dca:	b580      	push	{r7, lr}
 8001dcc:	b082      	sub	sp, #8
 8001dce:	af00      	add	r7, sp, #0
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	71fb      	strb	r3, [r7, #7]
 8001dd4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dd8:	4618      	mov	r0, r3
 8001dda:	f7ff ff31 	bl	8001c40 <__NVIC_EnableIRQ>
 8001dde:	bf00      	nop
 8001de0:	3708      	adds	r7, #8
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bd80      	pop	{r7, pc}

08001de6 <HAL_SYSTICK_Config>:
 8001de6:	b580      	push	{r7, lr}
 8001de8:	b082      	sub	sp, #8
 8001dea:	af00      	add	r7, sp, #0
 8001dec:	6078      	str	r0, [r7, #4]
 8001dee:	6878      	ldr	r0, [r7, #4]
 8001df0:	f7ff ffa2 	bl	8001d38 <SysTick_Config>
 8001df4:	4603      	mov	r3, r0
 8001df6:	4618      	mov	r0, r3
 8001df8:	3708      	adds	r7, #8
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	bd80      	pop	{r7, pc}

08001dfe <HAL_DMA_Abort>:
 8001dfe:	b580      	push	{r7, lr}
 8001e00:	b084      	sub	sp, #16
 8001e02:	af00      	add	r7, sp, #0
 8001e04:	6078      	str	r0, [r7, #4]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001e0a:	60fb      	str	r3, [r7, #12]
 8001e0c:	f7ff feb6 	bl	8001b7c <HAL_GetTick>
 8001e10:	60b8      	str	r0, [r7, #8]
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001e18:	b2db      	uxtb	r3, r3
 8001e1a:	2b02      	cmp	r3, #2
 8001e1c:	d008      	beq.n	8001e30 <HAL_DMA_Abort+0x32>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	2280      	movs	r2, #128	@ 0x80
 8001e22:	655a      	str	r2, [r3, #84]	@ 0x54
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	2200      	movs	r2, #0
 8001e28:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001e2c:	2301      	movs	r3, #1
 8001e2e:	e052      	b.n	8001ed6 <HAL_DMA_Abort+0xd8>
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	681a      	ldr	r2, [r3, #0]
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	f022 0216 	bic.w	r2, r2, #22
 8001e3e:	601a      	str	r2, [r3, #0]
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	695a      	ldr	r2, [r3, #20]
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001e4e:	615a      	str	r2, [r3, #20]
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d103      	bne.n	8001e60 <HAL_DMA_Abort+0x62>
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001e5c:	2b00      	cmp	r3, #0
 8001e5e:	d007      	beq.n	8001e70 <HAL_DMA_Abort+0x72>
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	681a      	ldr	r2, [r3, #0]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	f022 0208 	bic.w	r2, r2, #8
 8001e6e:	601a      	str	r2, [r3, #0]
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	681a      	ldr	r2, [r3, #0]
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	f022 0201 	bic.w	r2, r2, #1
 8001e7e:	601a      	str	r2, [r3, #0]
 8001e80:	e013      	b.n	8001eaa <HAL_DMA_Abort+0xac>
 8001e82:	f7ff fe7b 	bl	8001b7c <HAL_GetTick>
 8001e86:	4602      	mov	r2, r0
 8001e88:	68bb      	ldr	r3, [r7, #8]
 8001e8a:	1ad3      	subs	r3, r2, r3
 8001e8c:	2b05      	cmp	r3, #5
 8001e8e:	d90c      	bls.n	8001eaa <HAL_DMA_Abort+0xac>
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	2220      	movs	r2, #32
 8001e94:	655a      	str	r2, [r3, #84]	@ 0x54
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	2203      	movs	r2, #3
 8001e9a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001ea6:	2303      	movs	r3, #3
 8001ea8:	e015      	b.n	8001ed6 <HAL_DMA_Abort+0xd8>
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	f003 0301 	and.w	r3, r3, #1
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d1e4      	bne.n	8001e82 <HAL_DMA_Abort+0x84>
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001ebc:	223f      	movs	r2, #63	@ 0x3f
 8001ebe:	409a      	lsls	r2, r3
 8001ec0:	68fb      	ldr	r3, [r7, #12]
 8001ec2:	609a      	str	r2, [r3, #8]
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	2201      	movs	r2, #1
 8001ec8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	2200      	movs	r2, #0
 8001ed0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	4618      	mov	r0, r3
 8001ed8:	3710      	adds	r7, #16
 8001eda:	46bd      	mov	sp, r7
 8001edc:	bd80      	pop	{r7, pc}

08001ede <HAL_DMA_Abort_IT>:
 8001ede:	b480      	push	{r7}
 8001ee0:	b083      	sub	sp, #12
 8001ee2:	af00      	add	r7, sp, #0
 8001ee4:	6078      	str	r0, [r7, #4]
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001eec:	b2db      	uxtb	r3, r3
 8001eee:	2b02      	cmp	r3, #2
 8001ef0:	d004      	beq.n	8001efc <HAL_DMA_Abort_IT+0x1e>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	2280      	movs	r2, #128	@ 0x80
 8001ef6:	655a      	str	r2, [r3, #84]	@ 0x54
 8001ef8:	2301      	movs	r3, #1
 8001efa:	e00c      	b.n	8001f16 <HAL_DMA_Abort_IT+0x38>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	2205      	movs	r2, #5
 8001f00:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	681b      	ldr	r3, [r3, #0]
 8001f08:	681a      	ldr	r2, [r3, #0]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	f022 0201 	bic.w	r2, r2, #1
 8001f12:	601a      	str	r2, [r3, #0]
 8001f14:	2300      	movs	r3, #0
 8001f16:	4618      	mov	r0, r3
 8001f18:	370c      	adds	r7, #12
 8001f1a:	46bd      	mov	sp, r7
 8001f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f20:	4770      	bx	lr
	...

08001f24 <HAL_GPIO_Init>:
 8001f24:	b480      	push	{r7}
 8001f26:	b089      	sub	sp, #36	@ 0x24
 8001f28:	af00      	add	r7, sp, #0
 8001f2a:	6078      	str	r0, [r7, #4]
 8001f2c:	6039      	str	r1, [r7, #0]
 8001f2e:	2300      	movs	r3, #0
 8001f30:	617b      	str	r3, [r7, #20]
 8001f32:	2300      	movs	r3, #0
 8001f34:	613b      	str	r3, [r7, #16]
 8001f36:	2300      	movs	r3, #0
 8001f38:	61bb      	str	r3, [r7, #24]
 8001f3a:	2300      	movs	r3, #0
 8001f3c:	61fb      	str	r3, [r7, #28]
 8001f3e:	e165      	b.n	800220c <HAL_GPIO_Init+0x2e8>
 8001f40:	2201      	movs	r2, #1
 8001f42:	69fb      	ldr	r3, [r7, #28]
 8001f44:	fa02 f303 	lsl.w	r3, r2, r3
 8001f48:	617b      	str	r3, [r7, #20]
 8001f4a:	683b      	ldr	r3, [r7, #0]
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	697a      	ldr	r2, [r7, #20]
 8001f50:	4013      	ands	r3, r2
 8001f52:	613b      	str	r3, [r7, #16]
 8001f54:	693a      	ldr	r2, [r7, #16]
 8001f56:	697b      	ldr	r3, [r7, #20]
 8001f58:	429a      	cmp	r2, r3
 8001f5a:	f040 8154 	bne.w	8002206 <HAL_GPIO_Init+0x2e2>
 8001f5e:	683b      	ldr	r3, [r7, #0]
 8001f60:	685b      	ldr	r3, [r3, #4]
 8001f62:	f003 0303 	and.w	r3, r3, #3
 8001f66:	2b01      	cmp	r3, #1
 8001f68:	d005      	beq.n	8001f76 <HAL_GPIO_Init+0x52>
 8001f6a:	683b      	ldr	r3, [r7, #0]
 8001f6c:	685b      	ldr	r3, [r3, #4]
 8001f6e:	f003 0303 	and.w	r3, r3, #3
 8001f72:	2b02      	cmp	r3, #2
 8001f74:	d130      	bne.n	8001fd8 <HAL_GPIO_Init+0xb4>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	689b      	ldr	r3, [r3, #8]
 8001f7a:	61bb      	str	r3, [r7, #24]
 8001f7c:	69fb      	ldr	r3, [r7, #28]
 8001f7e:	005b      	lsls	r3, r3, #1
 8001f80:	2203      	movs	r2, #3
 8001f82:	fa02 f303 	lsl.w	r3, r2, r3
 8001f86:	43db      	mvns	r3, r3
 8001f88:	69ba      	ldr	r2, [r7, #24]
 8001f8a:	4013      	ands	r3, r2
 8001f8c:	61bb      	str	r3, [r7, #24]
 8001f8e:	683b      	ldr	r3, [r7, #0]
 8001f90:	68da      	ldr	r2, [r3, #12]
 8001f92:	69fb      	ldr	r3, [r7, #28]
 8001f94:	005b      	lsls	r3, r3, #1
 8001f96:	fa02 f303 	lsl.w	r3, r2, r3
 8001f9a:	69ba      	ldr	r2, [r7, #24]
 8001f9c:	4313      	orrs	r3, r2
 8001f9e:	61bb      	str	r3, [r7, #24]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	69ba      	ldr	r2, [r7, #24]
 8001fa4:	609a      	str	r2, [r3, #8]
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	685b      	ldr	r3, [r3, #4]
 8001faa:	61bb      	str	r3, [r7, #24]
 8001fac:	2201      	movs	r2, #1
 8001fae:	69fb      	ldr	r3, [r7, #28]
 8001fb0:	fa02 f303 	lsl.w	r3, r2, r3
 8001fb4:	43db      	mvns	r3, r3
 8001fb6:	69ba      	ldr	r2, [r7, #24]
 8001fb8:	4013      	ands	r3, r2
 8001fba:	61bb      	str	r3, [r7, #24]
 8001fbc:	683b      	ldr	r3, [r7, #0]
 8001fbe:	685b      	ldr	r3, [r3, #4]
 8001fc0:	091b      	lsrs	r3, r3, #4
 8001fc2:	f003 0201 	and.w	r2, r3, #1
 8001fc6:	69fb      	ldr	r3, [r7, #28]
 8001fc8:	fa02 f303 	lsl.w	r3, r2, r3
 8001fcc:	69ba      	ldr	r2, [r7, #24]
 8001fce:	4313      	orrs	r3, r2
 8001fd0:	61bb      	str	r3, [r7, #24]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	69ba      	ldr	r2, [r7, #24]
 8001fd6:	605a      	str	r2, [r3, #4]
 8001fd8:	683b      	ldr	r3, [r7, #0]
 8001fda:	685b      	ldr	r3, [r3, #4]
 8001fdc:	f003 0303 	and.w	r3, r3, #3
 8001fe0:	2b03      	cmp	r3, #3
 8001fe2:	d017      	beq.n	8002014 <HAL_GPIO_Init+0xf0>
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	68db      	ldr	r3, [r3, #12]
 8001fe8:	61bb      	str	r3, [r7, #24]
 8001fea:	69fb      	ldr	r3, [r7, #28]
 8001fec:	005b      	lsls	r3, r3, #1
 8001fee:	2203      	movs	r2, #3
 8001ff0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ff4:	43db      	mvns	r3, r3
 8001ff6:	69ba      	ldr	r2, [r7, #24]
 8001ff8:	4013      	ands	r3, r2
 8001ffa:	61bb      	str	r3, [r7, #24]
 8001ffc:	683b      	ldr	r3, [r7, #0]
 8001ffe:	689a      	ldr	r2, [r3, #8]
 8002000:	69fb      	ldr	r3, [r7, #28]
 8002002:	005b      	lsls	r3, r3, #1
 8002004:	fa02 f303 	lsl.w	r3, r2, r3
 8002008:	69ba      	ldr	r2, [r7, #24]
 800200a:	4313      	orrs	r3, r2
 800200c:	61bb      	str	r3, [r7, #24]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	69ba      	ldr	r2, [r7, #24]
 8002012:	60da      	str	r2, [r3, #12]
 8002014:	683b      	ldr	r3, [r7, #0]
 8002016:	685b      	ldr	r3, [r3, #4]
 8002018:	f003 0303 	and.w	r3, r3, #3
 800201c:	2b02      	cmp	r3, #2
 800201e:	d123      	bne.n	8002068 <HAL_GPIO_Init+0x144>
 8002020:	69fb      	ldr	r3, [r7, #28]
 8002022:	08da      	lsrs	r2, r3, #3
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	3208      	adds	r2, #8
 8002028:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800202c:	61bb      	str	r3, [r7, #24]
 800202e:	69fb      	ldr	r3, [r7, #28]
 8002030:	f003 0307 	and.w	r3, r3, #7
 8002034:	009b      	lsls	r3, r3, #2
 8002036:	220f      	movs	r2, #15
 8002038:	fa02 f303 	lsl.w	r3, r2, r3
 800203c:	43db      	mvns	r3, r3
 800203e:	69ba      	ldr	r2, [r7, #24]
 8002040:	4013      	ands	r3, r2
 8002042:	61bb      	str	r3, [r7, #24]
 8002044:	683b      	ldr	r3, [r7, #0]
 8002046:	691a      	ldr	r2, [r3, #16]
 8002048:	69fb      	ldr	r3, [r7, #28]
 800204a:	f003 0307 	and.w	r3, r3, #7
 800204e:	009b      	lsls	r3, r3, #2
 8002050:	fa02 f303 	lsl.w	r3, r2, r3
 8002054:	69ba      	ldr	r2, [r7, #24]
 8002056:	4313      	orrs	r3, r2
 8002058:	61bb      	str	r3, [r7, #24]
 800205a:	69fb      	ldr	r3, [r7, #28]
 800205c:	08da      	lsrs	r2, r3, #3
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	3208      	adds	r2, #8
 8002062:	69b9      	ldr	r1, [r7, #24]
 8002064:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	61bb      	str	r3, [r7, #24]
 800206e:	69fb      	ldr	r3, [r7, #28]
 8002070:	005b      	lsls	r3, r3, #1
 8002072:	2203      	movs	r2, #3
 8002074:	fa02 f303 	lsl.w	r3, r2, r3
 8002078:	43db      	mvns	r3, r3
 800207a:	69ba      	ldr	r2, [r7, #24]
 800207c:	4013      	ands	r3, r2
 800207e:	61bb      	str	r3, [r7, #24]
 8002080:	683b      	ldr	r3, [r7, #0]
 8002082:	685b      	ldr	r3, [r3, #4]
 8002084:	f003 0203 	and.w	r2, r3, #3
 8002088:	69fb      	ldr	r3, [r7, #28]
 800208a:	005b      	lsls	r3, r3, #1
 800208c:	fa02 f303 	lsl.w	r3, r2, r3
 8002090:	69ba      	ldr	r2, [r7, #24]
 8002092:	4313      	orrs	r3, r2
 8002094:	61bb      	str	r3, [r7, #24]
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	69ba      	ldr	r2, [r7, #24]
 800209a:	601a      	str	r2, [r3, #0]
 800209c:	683b      	ldr	r3, [r7, #0]
 800209e:	685b      	ldr	r3, [r3, #4]
 80020a0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	f000 80ae 	beq.w	8002206 <HAL_GPIO_Init+0x2e2>
 80020aa:	2300      	movs	r3, #0
 80020ac:	60fb      	str	r3, [r7, #12]
 80020ae:	4b5d      	ldr	r3, [pc, #372]	@ (8002224 <HAL_GPIO_Init+0x300>)
 80020b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020b2:	4a5c      	ldr	r2, [pc, #368]	@ (8002224 <HAL_GPIO_Init+0x300>)
 80020b4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80020b8:	6453      	str	r3, [r2, #68]	@ 0x44
 80020ba:	4b5a      	ldr	r3, [pc, #360]	@ (8002224 <HAL_GPIO_Init+0x300>)
 80020bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020be:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80020c2:	60fb      	str	r3, [r7, #12]
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	4a58      	ldr	r2, [pc, #352]	@ (8002228 <HAL_GPIO_Init+0x304>)
 80020c8:	69fb      	ldr	r3, [r7, #28]
 80020ca:	089b      	lsrs	r3, r3, #2
 80020cc:	3302      	adds	r3, #2
 80020ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80020d2:	61bb      	str	r3, [r7, #24]
 80020d4:	69fb      	ldr	r3, [r7, #28]
 80020d6:	f003 0303 	and.w	r3, r3, #3
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	220f      	movs	r2, #15
 80020de:	fa02 f303 	lsl.w	r3, r2, r3
 80020e2:	43db      	mvns	r3, r3
 80020e4:	69ba      	ldr	r2, [r7, #24]
 80020e6:	4013      	ands	r3, r2
 80020e8:	61bb      	str	r3, [r7, #24]
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	4a4f      	ldr	r2, [pc, #316]	@ (800222c <HAL_GPIO_Init+0x308>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d025      	beq.n	800213e <HAL_GPIO_Init+0x21a>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	4a4e      	ldr	r2, [pc, #312]	@ (8002230 <HAL_GPIO_Init+0x30c>)
 80020f6:	4293      	cmp	r3, r2
 80020f8:	d01f      	beq.n	800213a <HAL_GPIO_Init+0x216>
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	4a4d      	ldr	r2, [pc, #308]	@ (8002234 <HAL_GPIO_Init+0x310>)
 80020fe:	4293      	cmp	r3, r2
 8002100:	d019      	beq.n	8002136 <HAL_GPIO_Init+0x212>
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	4a4c      	ldr	r2, [pc, #304]	@ (8002238 <HAL_GPIO_Init+0x314>)
 8002106:	4293      	cmp	r3, r2
 8002108:	d013      	beq.n	8002132 <HAL_GPIO_Init+0x20e>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	4a4b      	ldr	r2, [pc, #300]	@ (800223c <HAL_GPIO_Init+0x318>)
 800210e:	4293      	cmp	r3, r2
 8002110:	d00d      	beq.n	800212e <HAL_GPIO_Init+0x20a>
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	4a4a      	ldr	r2, [pc, #296]	@ (8002240 <HAL_GPIO_Init+0x31c>)
 8002116:	4293      	cmp	r3, r2
 8002118:	d007      	beq.n	800212a <HAL_GPIO_Init+0x206>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	4a49      	ldr	r2, [pc, #292]	@ (8002244 <HAL_GPIO_Init+0x320>)
 800211e:	4293      	cmp	r3, r2
 8002120:	d101      	bne.n	8002126 <HAL_GPIO_Init+0x202>
 8002122:	2306      	movs	r3, #6
 8002124:	e00c      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 8002126:	2307      	movs	r3, #7
 8002128:	e00a      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 800212a:	2305      	movs	r3, #5
 800212c:	e008      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 800212e:	2304      	movs	r3, #4
 8002130:	e006      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 8002132:	2303      	movs	r3, #3
 8002134:	e004      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 8002136:	2302      	movs	r3, #2
 8002138:	e002      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 800213a:	2301      	movs	r3, #1
 800213c:	e000      	b.n	8002140 <HAL_GPIO_Init+0x21c>
 800213e:	2300      	movs	r3, #0
 8002140:	69fa      	ldr	r2, [r7, #28]
 8002142:	f002 0203 	and.w	r2, r2, #3
 8002146:	0092      	lsls	r2, r2, #2
 8002148:	4093      	lsls	r3, r2
 800214a:	69ba      	ldr	r2, [r7, #24]
 800214c:	4313      	orrs	r3, r2
 800214e:	61bb      	str	r3, [r7, #24]
 8002150:	4935      	ldr	r1, [pc, #212]	@ (8002228 <HAL_GPIO_Init+0x304>)
 8002152:	69fb      	ldr	r3, [r7, #28]
 8002154:	089b      	lsrs	r3, r3, #2
 8002156:	3302      	adds	r3, #2
 8002158:	69ba      	ldr	r2, [r7, #24]
 800215a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800215e:	4b3a      	ldr	r3, [pc, #232]	@ (8002248 <HAL_GPIO_Init+0x324>)
 8002160:	689b      	ldr	r3, [r3, #8]
 8002162:	61bb      	str	r3, [r7, #24]
 8002164:	693b      	ldr	r3, [r7, #16]
 8002166:	43db      	mvns	r3, r3
 8002168:	69ba      	ldr	r2, [r7, #24]
 800216a:	4013      	ands	r3, r2
 800216c:	61bb      	str	r3, [r7, #24]
 800216e:	683b      	ldr	r3, [r7, #0]
 8002170:	685b      	ldr	r3, [r3, #4]
 8002172:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002176:	2b00      	cmp	r3, #0
 8002178:	d003      	beq.n	8002182 <HAL_GPIO_Init+0x25e>
 800217a:	69ba      	ldr	r2, [r7, #24]
 800217c:	693b      	ldr	r3, [r7, #16]
 800217e:	4313      	orrs	r3, r2
 8002180:	61bb      	str	r3, [r7, #24]
 8002182:	4a31      	ldr	r2, [pc, #196]	@ (8002248 <HAL_GPIO_Init+0x324>)
 8002184:	69bb      	ldr	r3, [r7, #24]
 8002186:	6093      	str	r3, [r2, #8]
 8002188:	4b2f      	ldr	r3, [pc, #188]	@ (8002248 <HAL_GPIO_Init+0x324>)
 800218a:	68db      	ldr	r3, [r3, #12]
 800218c:	61bb      	str	r3, [r7, #24]
 800218e:	693b      	ldr	r3, [r7, #16]
 8002190:	43db      	mvns	r3, r3
 8002192:	69ba      	ldr	r2, [r7, #24]
 8002194:	4013      	ands	r3, r2
 8002196:	61bb      	str	r3, [r7, #24]
 8002198:	683b      	ldr	r3, [r7, #0]
 800219a:	685b      	ldr	r3, [r3, #4]
 800219c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d003      	beq.n	80021ac <HAL_GPIO_Init+0x288>
 80021a4:	69ba      	ldr	r2, [r7, #24]
 80021a6:	693b      	ldr	r3, [r7, #16]
 80021a8:	4313      	orrs	r3, r2
 80021aa:	61bb      	str	r3, [r7, #24]
 80021ac:	4a26      	ldr	r2, [pc, #152]	@ (8002248 <HAL_GPIO_Init+0x324>)
 80021ae:	69bb      	ldr	r3, [r7, #24]
 80021b0:	60d3      	str	r3, [r2, #12]
 80021b2:	4b25      	ldr	r3, [pc, #148]	@ (8002248 <HAL_GPIO_Init+0x324>)
 80021b4:	685b      	ldr	r3, [r3, #4]
 80021b6:	61bb      	str	r3, [r7, #24]
 80021b8:	693b      	ldr	r3, [r7, #16]
 80021ba:	43db      	mvns	r3, r3
 80021bc:	69ba      	ldr	r2, [r7, #24]
 80021be:	4013      	ands	r3, r2
 80021c0:	61bb      	str	r3, [r7, #24]
 80021c2:	683b      	ldr	r3, [r7, #0]
 80021c4:	685b      	ldr	r3, [r3, #4]
 80021c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021ca:	2b00      	cmp	r3, #0
 80021cc:	d003      	beq.n	80021d6 <HAL_GPIO_Init+0x2b2>
 80021ce:	69ba      	ldr	r2, [r7, #24]
 80021d0:	693b      	ldr	r3, [r7, #16]
 80021d2:	4313      	orrs	r3, r2
 80021d4:	61bb      	str	r3, [r7, #24]
 80021d6:	4a1c      	ldr	r2, [pc, #112]	@ (8002248 <HAL_GPIO_Init+0x324>)
 80021d8:	69bb      	ldr	r3, [r7, #24]
 80021da:	6053      	str	r3, [r2, #4]
 80021dc:	4b1a      	ldr	r3, [pc, #104]	@ (8002248 <HAL_GPIO_Init+0x324>)
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	61bb      	str	r3, [r7, #24]
 80021e2:	693b      	ldr	r3, [r7, #16]
 80021e4:	43db      	mvns	r3, r3
 80021e6:	69ba      	ldr	r2, [r7, #24]
 80021e8:	4013      	ands	r3, r2
 80021ea:	61bb      	str	r3, [r7, #24]
 80021ec:	683b      	ldr	r3, [r7, #0]
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d003      	beq.n	8002200 <HAL_GPIO_Init+0x2dc>
 80021f8:	69ba      	ldr	r2, [r7, #24]
 80021fa:	693b      	ldr	r3, [r7, #16]
 80021fc:	4313      	orrs	r3, r2
 80021fe:	61bb      	str	r3, [r7, #24]
 8002200:	4a11      	ldr	r2, [pc, #68]	@ (8002248 <HAL_GPIO_Init+0x324>)
 8002202:	69bb      	ldr	r3, [r7, #24]
 8002204:	6013      	str	r3, [r2, #0]
 8002206:	69fb      	ldr	r3, [r7, #28]
 8002208:	3301      	adds	r3, #1
 800220a:	61fb      	str	r3, [r7, #28]
 800220c:	69fb      	ldr	r3, [r7, #28]
 800220e:	2b0f      	cmp	r3, #15
 8002210:	f67f ae96 	bls.w	8001f40 <HAL_GPIO_Init+0x1c>
 8002214:	bf00      	nop
 8002216:	bf00      	nop
 8002218:	3724      	adds	r7, #36	@ 0x24
 800221a:	46bd      	mov	sp, r7
 800221c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002220:	4770      	bx	lr
 8002222:	bf00      	nop
 8002224:	40023800 	.word	0x40023800
 8002228:	40013800 	.word	0x40013800
 800222c:	40020000 	.word	0x40020000
 8002230:	40020400 	.word	0x40020400
 8002234:	40020800 	.word	0x40020800
 8002238:	40020c00 	.word	0x40020c00
 800223c:	40021000 	.word	0x40021000
 8002240:	40021400 	.word	0x40021400
 8002244:	40021800 	.word	0x40021800
 8002248:	40013c00 	.word	0x40013c00

0800224c <HAL_GPIO_WritePin>:
 800224c:	b480      	push	{r7}
 800224e:	b083      	sub	sp, #12
 8002250:	af00      	add	r7, sp, #0
 8002252:	6078      	str	r0, [r7, #4]
 8002254:	460b      	mov	r3, r1
 8002256:	807b      	strh	r3, [r7, #2]
 8002258:	4613      	mov	r3, r2
 800225a:	707b      	strb	r3, [r7, #1]
 800225c:	787b      	ldrb	r3, [r7, #1]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d003      	beq.n	800226a <HAL_GPIO_WritePin+0x1e>
 8002262:	887a      	ldrh	r2, [r7, #2]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	619a      	str	r2, [r3, #24]
 8002268:	e003      	b.n	8002272 <HAL_GPIO_WritePin+0x26>
 800226a:	887b      	ldrh	r3, [r7, #2]
 800226c:	041a      	lsls	r2, r3, #16
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	619a      	str	r2, [r3, #24]
 8002272:	bf00      	nop
 8002274:	370c      	adds	r7, #12
 8002276:	46bd      	mov	sp, r7
 8002278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800227c:	4770      	bx	lr
	...

08002280 <HAL_RCC_ClockConfig>:
 8002280:	b580      	push	{r7, lr}
 8002282:	b084      	sub	sp, #16
 8002284:	af00      	add	r7, sp, #0
 8002286:	6078      	str	r0, [r7, #4]
 8002288:	6039      	str	r1, [r7, #0]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	2b00      	cmp	r3, #0
 800228e:	d101      	bne.n	8002294 <HAL_RCC_ClockConfig+0x14>
 8002290:	2301      	movs	r3, #1
 8002292:	e0cc      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 8002294:	4b68      	ldr	r3, [pc, #416]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f003 030f 	and.w	r3, r3, #15
 800229c:	683a      	ldr	r2, [r7, #0]
 800229e:	429a      	cmp	r2, r3
 80022a0:	d90c      	bls.n	80022bc <HAL_RCC_ClockConfig+0x3c>
 80022a2:	4b65      	ldr	r3, [pc, #404]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 80022a4:	683a      	ldr	r2, [r7, #0]
 80022a6:	b2d2      	uxtb	r2, r2
 80022a8:	701a      	strb	r2, [r3, #0]
 80022aa:	4b63      	ldr	r3, [pc, #396]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	f003 030f 	and.w	r3, r3, #15
 80022b2:	683a      	ldr	r2, [r7, #0]
 80022b4:	429a      	cmp	r2, r3
 80022b6:	d001      	beq.n	80022bc <HAL_RCC_ClockConfig+0x3c>
 80022b8:	2301      	movs	r3, #1
 80022ba:	e0b8      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	f003 0302 	and.w	r3, r3, #2
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d020      	beq.n	800230a <HAL_RCC_ClockConfig+0x8a>
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f003 0304 	and.w	r3, r3, #4
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d005      	beq.n	80022e0 <HAL_RCC_ClockConfig+0x60>
 80022d4:	4b59      	ldr	r3, [pc, #356]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80022d6:	689b      	ldr	r3, [r3, #8]
 80022d8:	4a58      	ldr	r2, [pc, #352]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80022da:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80022de:	6093      	str	r3, [r2, #8]
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	f003 0308 	and.w	r3, r3, #8
 80022e8:	2b00      	cmp	r3, #0
 80022ea:	d005      	beq.n	80022f8 <HAL_RCC_ClockConfig+0x78>
 80022ec:	4b53      	ldr	r3, [pc, #332]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80022ee:	689b      	ldr	r3, [r3, #8]
 80022f0:	4a52      	ldr	r2, [pc, #328]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80022f2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80022f6:	6093      	str	r3, [r2, #8]
 80022f8:	4b50      	ldr	r3, [pc, #320]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80022fa:	689b      	ldr	r3, [r3, #8]
 80022fc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	689b      	ldr	r3, [r3, #8]
 8002304:	494d      	ldr	r1, [pc, #308]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002306:	4313      	orrs	r3, r2
 8002308:	608b      	str	r3, [r1, #8]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	f003 0301 	and.w	r3, r3, #1
 8002312:	2b00      	cmp	r3, #0
 8002314:	d044      	beq.n	80023a0 <HAL_RCC_ClockConfig+0x120>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	685b      	ldr	r3, [r3, #4]
 800231a:	2b01      	cmp	r3, #1
 800231c:	d107      	bne.n	800232e <HAL_RCC_ClockConfig+0xae>
 800231e:	4b47      	ldr	r3, [pc, #284]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002326:	2b00      	cmp	r3, #0
 8002328:	d119      	bne.n	800235e <HAL_RCC_ClockConfig+0xde>
 800232a:	2301      	movs	r3, #1
 800232c:	e07f      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	2b02      	cmp	r3, #2
 8002334:	d003      	beq.n	800233e <HAL_RCC_ClockConfig+0xbe>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	685b      	ldr	r3, [r3, #4]
 800233a:	2b03      	cmp	r3, #3
 800233c:	d107      	bne.n	800234e <HAL_RCC_ClockConfig+0xce>
 800233e:	4b3f      	ldr	r3, [pc, #252]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d109      	bne.n	800235e <HAL_RCC_ClockConfig+0xde>
 800234a:	2301      	movs	r3, #1
 800234c:	e06f      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 800234e:	4b3b      	ldr	r3, [pc, #236]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f003 0302 	and.w	r3, r3, #2
 8002356:	2b00      	cmp	r3, #0
 8002358:	d101      	bne.n	800235e <HAL_RCC_ClockConfig+0xde>
 800235a:	2301      	movs	r3, #1
 800235c:	e067      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 800235e:	4b37      	ldr	r3, [pc, #220]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002360:	689b      	ldr	r3, [r3, #8]
 8002362:	f023 0203 	bic.w	r2, r3, #3
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	4934      	ldr	r1, [pc, #208]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 800236c:	4313      	orrs	r3, r2
 800236e:	608b      	str	r3, [r1, #8]
 8002370:	f7ff fc04 	bl	8001b7c <HAL_GetTick>
 8002374:	60f8      	str	r0, [r7, #12]
 8002376:	e00a      	b.n	800238e <HAL_RCC_ClockConfig+0x10e>
 8002378:	f7ff fc00 	bl	8001b7c <HAL_GetTick>
 800237c:	4602      	mov	r2, r0
 800237e:	68fb      	ldr	r3, [r7, #12]
 8002380:	1ad3      	subs	r3, r2, r3
 8002382:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002386:	4293      	cmp	r3, r2
 8002388:	d901      	bls.n	800238e <HAL_RCC_ClockConfig+0x10e>
 800238a:	2303      	movs	r3, #3
 800238c:	e04f      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 800238e:	4b2b      	ldr	r3, [pc, #172]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002390:	689b      	ldr	r3, [r3, #8]
 8002392:	f003 020c 	and.w	r2, r3, #12
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	685b      	ldr	r3, [r3, #4]
 800239a:	009b      	lsls	r3, r3, #2
 800239c:	429a      	cmp	r2, r3
 800239e:	d1eb      	bne.n	8002378 <HAL_RCC_ClockConfig+0xf8>
 80023a0:	4b25      	ldr	r3, [pc, #148]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 030f 	and.w	r3, r3, #15
 80023a8:	683a      	ldr	r2, [r7, #0]
 80023aa:	429a      	cmp	r2, r3
 80023ac:	d20c      	bcs.n	80023c8 <HAL_RCC_ClockConfig+0x148>
 80023ae:	4b22      	ldr	r3, [pc, #136]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 80023b0:	683a      	ldr	r2, [r7, #0]
 80023b2:	b2d2      	uxtb	r2, r2
 80023b4:	701a      	strb	r2, [r3, #0]
 80023b6:	4b20      	ldr	r3, [pc, #128]	@ (8002438 <HAL_RCC_ClockConfig+0x1b8>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	f003 030f 	and.w	r3, r3, #15
 80023be:	683a      	ldr	r2, [r7, #0]
 80023c0:	429a      	cmp	r2, r3
 80023c2:	d001      	beq.n	80023c8 <HAL_RCC_ClockConfig+0x148>
 80023c4:	2301      	movs	r3, #1
 80023c6:	e032      	b.n	800242e <HAL_RCC_ClockConfig+0x1ae>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	f003 0304 	and.w	r3, r3, #4
 80023d0:	2b00      	cmp	r3, #0
 80023d2:	d008      	beq.n	80023e6 <HAL_RCC_ClockConfig+0x166>
 80023d4:	4b19      	ldr	r3, [pc, #100]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80023d6:	689b      	ldr	r3, [r3, #8]
 80023d8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	68db      	ldr	r3, [r3, #12]
 80023e0:	4916      	ldr	r1, [pc, #88]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80023e2:	4313      	orrs	r3, r2
 80023e4:	608b      	str	r3, [r1, #8]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	f003 0308 	and.w	r3, r3, #8
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d009      	beq.n	8002406 <HAL_RCC_ClockConfig+0x186>
 80023f2:	4b12      	ldr	r3, [pc, #72]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 80023f4:	689b      	ldr	r3, [r3, #8]
 80023f6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	691b      	ldr	r3, [r3, #16]
 80023fe:	00db      	lsls	r3, r3, #3
 8002400:	490e      	ldr	r1, [pc, #56]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 8002402:	4313      	orrs	r3, r2
 8002404:	608b      	str	r3, [r1, #8]
 8002406:	f000 f855 	bl	80024b4 <HAL_RCC_GetSysClockFreq>
 800240a:	4602      	mov	r2, r0
 800240c:	4b0b      	ldr	r3, [pc, #44]	@ (800243c <HAL_RCC_ClockConfig+0x1bc>)
 800240e:	689b      	ldr	r3, [r3, #8]
 8002410:	091b      	lsrs	r3, r3, #4
 8002412:	f003 030f 	and.w	r3, r3, #15
 8002416:	490a      	ldr	r1, [pc, #40]	@ (8002440 <HAL_RCC_ClockConfig+0x1c0>)
 8002418:	5ccb      	ldrb	r3, [r1, r3]
 800241a:	fa22 f303 	lsr.w	r3, r2, r3
 800241e:	4a09      	ldr	r2, [pc, #36]	@ (8002444 <HAL_RCC_ClockConfig+0x1c4>)
 8002420:	6013      	str	r3, [r2, #0]
 8002422:	4b09      	ldr	r3, [pc, #36]	@ (8002448 <HAL_RCC_ClockConfig+0x1c8>)
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	4618      	mov	r0, r3
 8002428:	f7ff fb64 	bl	8001af4 <HAL_InitTick>
 800242c:	2300      	movs	r3, #0
 800242e:	4618      	mov	r0, r3
 8002430:	3710      	adds	r7, #16
 8002432:	46bd      	mov	sp, r7
 8002434:	bd80      	pop	{r7, pc}
 8002436:	bf00      	nop
 8002438:	40023c00 	.word	0x40023c00
 800243c:	40023800 	.word	0x40023800
 8002440:	08003dac 	.word	0x08003dac
 8002444:	20000000 	.word	0x20000000
 8002448:	20000004 	.word	0x20000004

0800244c <HAL_RCC_GetHCLKFreq>:
 800244c:	b480      	push	{r7}
 800244e:	af00      	add	r7, sp, #0
 8002450:	4b03      	ldr	r3, [pc, #12]	@ (8002460 <HAL_RCC_GetHCLKFreq+0x14>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	4618      	mov	r0, r3
 8002456:	46bd      	mov	sp, r7
 8002458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800245c:	4770      	bx	lr
 800245e:	bf00      	nop
 8002460:	20000000 	.word	0x20000000

08002464 <HAL_RCC_GetPCLK1Freq>:
 8002464:	b580      	push	{r7, lr}
 8002466:	af00      	add	r7, sp, #0
 8002468:	f7ff fff0 	bl	800244c <HAL_RCC_GetHCLKFreq>
 800246c:	4602      	mov	r2, r0
 800246e:	4b05      	ldr	r3, [pc, #20]	@ (8002484 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002470:	689b      	ldr	r3, [r3, #8]
 8002472:	0a9b      	lsrs	r3, r3, #10
 8002474:	f003 0307 	and.w	r3, r3, #7
 8002478:	4903      	ldr	r1, [pc, #12]	@ (8002488 <HAL_RCC_GetPCLK1Freq+0x24>)
 800247a:	5ccb      	ldrb	r3, [r1, r3]
 800247c:	fa22 f303 	lsr.w	r3, r2, r3
 8002480:	4618      	mov	r0, r3
 8002482:	bd80      	pop	{r7, pc}
 8002484:	40023800 	.word	0x40023800
 8002488:	08003dbc 	.word	0x08003dbc

0800248c <HAL_RCC_GetPCLK2Freq>:
 800248c:	b580      	push	{r7, lr}
 800248e:	af00      	add	r7, sp, #0
 8002490:	f7ff ffdc 	bl	800244c <HAL_RCC_GetHCLKFreq>
 8002494:	4602      	mov	r2, r0
 8002496:	4b05      	ldr	r3, [pc, #20]	@ (80024ac <HAL_RCC_GetPCLK2Freq+0x20>)
 8002498:	689b      	ldr	r3, [r3, #8]
 800249a:	0b5b      	lsrs	r3, r3, #13
 800249c:	f003 0307 	and.w	r3, r3, #7
 80024a0:	4903      	ldr	r1, [pc, #12]	@ (80024b0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80024a2:	5ccb      	ldrb	r3, [r1, r3]
 80024a4:	fa22 f303 	lsr.w	r3, r2, r3
 80024a8:	4618      	mov	r0, r3
 80024aa:	bd80      	pop	{r7, pc}
 80024ac:	40023800 	.word	0x40023800
 80024b0:	08003dbc 	.word	0x08003dbc

080024b4 <HAL_RCC_GetSysClockFreq>:
 80024b4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80024b8:	b0a6      	sub	sp, #152	@ 0x98
 80024ba:	af00      	add	r7, sp, #0
 80024bc:	2300      	movs	r3, #0
 80024be:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80024c2:	2300      	movs	r3, #0
 80024c4:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80024c8:	2300      	movs	r3, #0
 80024ca:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80024ce:	2300      	movs	r3, #0
 80024d0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80024d4:	2300      	movs	r3, #0
 80024d6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80024da:	4bc8      	ldr	r3, [pc, #800]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80024dc:	689b      	ldr	r3, [r3, #8]
 80024de:	f003 030c 	and.w	r3, r3, #12
 80024e2:	2b0c      	cmp	r3, #12
 80024e4:	f200 817e 	bhi.w	80027e4 <HAL_RCC_GetSysClockFreq+0x330>
 80024e8:	a201      	add	r2, pc, #4	@ (adr r2, 80024f0 <HAL_RCC_GetSysClockFreq+0x3c>)
 80024ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80024ee:	bf00      	nop
 80024f0:	08002525 	.word	0x08002525
 80024f4:	080027e5 	.word	0x080027e5
 80024f8:	080027e5 	.word	0x080027e5
 80024fc:	080027e5 	.word	0x080027e5
 8002500:	0800252d 	.word	0x0800252d
 8002504:	080027e5 	.word	0x080027e5
 8002508:	080027e5 	.word	0x080027e5
 800250c:	080027e5 	.word	0x080027e5
 8002510:	08002535 	.word	0x08002535
 8002514:	080027e5 	.word	0x080027e5
 8002518:	080027e5 	.word	0x080027e5
 800251c:	080027e5 	.word	0x080027e5
 8002520:	0800269f 	.word	0x0800269f
 8002524:	4bb6      	ldr	r3, [pc, #728]	@ (8002800 <HAL_RCC_GetSysClockFreq+0x34c>)
 8002526:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800252a:	e15f      	b.n	80027ec <HAL_RCC_GetSysClockFreq+0x338>
 800252c:	4bb5      	ldr	r3, [pc, #724]	@ (8002804 <HAL_RCC_GetSysClockFreq+0x350>)
 800252e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002532:	e15b      	b.n	80027ec <HAL_RCC_GetSysClockFreq+0x338>
 8002534:	4bb1      	ldr	r3, [pc, #708]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 8002536:	685b      	ldr	r3, [r3, #4]
 8002538:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800253c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002540:	4bae      	ldr	r3, [pc, #696]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 8002542:	685b      	ldr	r3, [r3, #4]
 8002544:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002548:	2b00      	cmp	r3, #0
 800254a:	d031      	beq.n	80025b0 <HAL_RCC_GetSysClockFreq+0xfc>
 800254c:	4bab      	ldr	r3, [pc, #684]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 800254e:	685b      	ldr	r3, [r3, #4]
 8002550:	099b      	lsrs	r3, r3, #6
 8002552:	2200      	movs	r2, #0
 8002554:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002556:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8002558:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800255a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800255e:	663b      	str	r3, [r7, #96]	@ 0x60
 8002560:	2300      	movs	r3, #0
 8002562:	667b      	str	r3, [r7, #100]	@ 0x64
 8002564:	4ba7      	ldr	r3, [pc, #668]	@ (8002804 <HAL_RCC_GetSysClockFreq+0x350>)
 8002566:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800256a:	462a      	mov	r2, r5
 800256c:	fb03 f202 	mul.w	r2, r3, r2
 8002570:	2300      	movs	r3, #0
 8002572:	4621      	mov	r1, r4
 8002574:	fb01 f303 	mul.w	r3, r1, r3
 8002578:	4413      	add	r3, r2
 800257a:	4aa2      	ldr	r2, [pc, #648]	@ (8002804 <HAL_RCC_GetSysClockFreq+0x350>)
 800257c:	4621      	mov	r1, r4
 800257e:	fba1 1202 	umull	r1, r2, r1, r2
 8002582:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8002584:	460a      	mov	r2, r1
 8002586:	67ba      	str	r2, [r7, #120]	@ 0x78
 8002588:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800258a:	4413      	add	r3, r2
 800258c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800258e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002592:	2200      	movs	r2, #0
 8002594:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002596:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8002598:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800259c:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 80025a0:	f7fd fe30 	bl	8000204 <__aeabi_uldivmod>
 80025a4:	4602      	mov	r2, r0
 80025a6:	460b      	mov	r3, r1
 80025a8:	4613      	mov	r3, r2
 80025aa:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80025ae:	e064      	b.n	800267a <HAL_RCC_GetSysClockFreq+0x1c6>
 80025b0:	4b92      	ldr	r3, [pc, #584]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80025b2:	685b      	ldr	r3, [r3, #4]
 80025b4:	099b      	lsrs	r3, r3, #6
 80025b6:	2200      	movs	r2, #0
 80025b8:	653b      	str	r3, [r7, #80]	@ 0x50
 80025ba:	657a      	str	r2, [r7, #84]	@ 0x54
 80025bc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80025be:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80025c2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80025c4:	2300      	movs	r3, #0
 80025c6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80025c8:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 80025cc:	4622      	mov	r2, r4
 80025ce:	462b      	mov	r3, r5
 80025d0:	f04f 0000 	mov.w	r0, #0
 80025d4:	f04f 0100 	mov.w	r1, #0
 80025d8:	0159      	lsls	r1, r3, #5
 80025da:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80025de:	0150      	lsls	r0, r2, #5
 80025e0:	4602      	mov	r2, r0
 80025e2:	460b      	mov	r3, r1
 80025e4:	4621      	mov	r1, r4
 80025e6:	1a51      	subs	r1, r2, r1
 80025e8:	6139      	str	r1, [r7, #16]
 80025ea:	4629      	mov	r1, r5
 80025ec:	eb63 0301 	sbc.w	r3, r3, r1
 80025f0:	617b      	str	r3, [r7, #20]
 80025f2:	f04f 0200 	mov.w	r2, #0
 80025f6:	f04f 0300 	mov.w	r3, #0
 80025fa:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80025fe:	4659      	mov	r1, fp
 8002600:	018b      	lsls	r3, r1, #6
 8002602:	4651      	mov	r1, sl
 8002604:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002608:	4651      	mov	r1, sl
 800260a:	018a      	lsls	r2, r1, #6
 800260c:	4651      	mov	r1, sl
 800260e:	ebb2 0801 	subs.w	r8, r2, r1
 8002612:	4659      	mov	r1, fp
 8002614:	eb63 0901 	sbc.w	r9, r3, r1
 8002618:	f04f 0200 	mov.w	r2, #0
 800261c:	f04f 0300 	mov.w	r3, #0
 8002620:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002624:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002628:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800262c:	4690      	mov	r8, r2
 800262e:	4699      	mov	r9, r3
 8002630:	4623      	mov	r3, r4
 8002632:	eb18 0303 	adds.w	r3, r8, r3
 8002636:	60bb      	str	r3, [r7, #8]
 8002638:	462b      	mov	r3, r5
 800263a:	eb49 0303 	adc.w	r3, r9, r3
 800263e:	60fb      	str	r3, [r7, #12]
 8002640:	f04f 0200 	mov.w	r2, #0
 8002644:	f04f 0300 	mov.w	r3, #0
 8002648:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800264c:	4629      	mov	r1, r5
 800264e:	028b      	lsls	r3, r1, #10
 8002650:	4621      	mov	r1, r4
 8002652:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002656:	4621      	mov	r1, r4
 8002658:	028a      	lsls	r2, r1, #10
 800265a:	4610      	mov	r0, r2
 800265c:	4619      	mov	r1, r3
 800265e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002662:	2200      	movs	r2, #0
 8002664:	643b      	str	r3, [r7, #64]	@ 0x40
 8002666:	647a      	str	r2, [r7, #68]	@ 0x44
 8002668:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800266c:	f7fd fdca 	bl	8000204 <__aeabi_uldivmod>
 8002670:	4602      	mov	r2, r0
 8002672:	460b      	mov	r3, r1
 8002674:	4613      	mov	r3, r2
 8002676:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800267a:	4b60      	ldr	r3, [pc, #384]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 800267c:	685b      	ldr	r3, [r3, #4]
 800267e:	0c1b      	lsrs	r3, r3, #16
 8002680:	f003 0303 	and.w	r3, r3, #3
 8002684:	3301      	adds	r3, #1
 8002686:	005b      	lsls	r3, r3, #1
 8002688:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800268c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8002690:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002694:	fbb2 f3f3 	udiv	r3, r2, r3
 8002698:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800269c:	e0a6      	b.n	80027ec <HAL_RCC_GetSysClockFreq+0x338>
 800269e:	4b57      	ldr	r3, [pc, #348]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80026a0:	685b      	ldr	r3, [r3, #4]
 80026a2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80026a6:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80026aa:	4b54      	ldr	r3, [pc, #336]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80026ac:	685b      	ldr	r3, [r3, #4]
 80026ae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d02a      	beq.n	800270c <HAL_RCC_GetSysClockFreq+0x258>
 80026b6:	4b51      	ldr	r3, [pc, #324]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80026b8:	685b      	ldr	r3, [r3, #4]
 80026ba:	099b      	lsrs	r3, r3, #6
 80026bc:	2200      	movs	r2, #0
 80026be:	63bb      	str	r3, [r7, #56]	@ 0x38
 80026c0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80026c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80026c4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80026c8:	2100      	movs	r1, #0
 80026ca:	4b4e      	ldr	r3, [pc, #312]	@ (8002804 <HAL_RCC_GetSysClockFreq+0x350>)
 80026cc:	fb03 f201 	mul.w	r2, r3, r1
 80026d0:	2300      	movs	r3, #0
 80026d2:	fb00 f303 	mul.w	r3, r0, r3
 80026d6:	4413      	add	r3, r2
 80026d8:	4a4a      	ldr	r2, [pc, #296]	@ (8002804 <HAL_RCC_GetSysClockFreq+0x350>)
 80026da:	fba0 1202 	umull	r1, r2, r0, r2
 80026de:	677a      	str	r2, [r7, #116]	@ 0x74
 80026e0:	460a      	mov	r2, r1
 80026e2:	673a      	str	r2, [r7, #112]	@ 0x70
 80026e4:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80026e6:	4413      	add	r3, r2
 80026e8:	677b      	str	r3, [r7, #116]	@ 0x74
 80026ea:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80026ee:	2200      	movs	r2, #0
 80026f0:	633b      	str	r3, [r7, #48]	@ 0x30
 80026f2:	637a      	str	r2, [r7, #52]	@ 0x34
 80026f4:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80026f8:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80026fc:	f7fd fd82 	bl	8000204 <__aeabi_uldivmod>
 8002700:	4602      	mov	r2, r0
 8002702:	460b      	mov	r3, r1
 8002704:	4613      	mov	r3, r2
 8002706:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800270a:	e05b      	b.n	80027c4 <HAL_RCC_GetSysClockFreq+0x310>
 800270c:	4b3b      	ldr	r3, [pc, #236]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 800270e:	685b      	ldr	r3, [r3, #4]
 8002710:	099b      	lsrs	r3, r3, #6
 8002712:	2200      	movs	r2, #0
 8002714:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002716:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002718:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800271a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800271e:	623b      	str	r3, [r7, #32]
 8002720:	2300      	movs	r3, #0
 8002722:	627b      	str	r3, [r7, #36]	@ 0x24
 8002724:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002728:	4642      	mov	r2, r8
 800272a:	464b      	mov	r3, r9
 800272c:	f04f 0000 	mov.w	r0, #0
 8002730:	f04f 0100 	mov.w	r1, #0
 8002734:	0159      	lsls	r1, r3, #5
 8002736:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800273a:	0150      	lsls	r0, r2, #5
 800273c:	4602      	mov	r2, r0
 800273e:	460b      	mov	r3, r1
 8002740:	4641      	mov	r1, r8
 8002742:	ebb2 0a01 	subs.w	sl, r2, r1
 8002746:	4649      	mov	r1, r9
 8002748:	eb63 0b01 	sbc.w	fp, r3, r1
 800274c:	f04f 0200 	mov.w	r2, #0
 8002750:	f04f 0300 	mov.w	r3, #0
 8002754:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002758:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800275c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002760:	ebb2 040a 	subs.w	r4, r2, sl
 8002764:	eb63 050b 	sbc.w	r5, r3, fp
 8002768:	f04f 0200 	mov.w	r2, #0
 800276c:	f04f 0300 	mov.w	r3, #0
 8002770:	00eb      	lsls	r3, r5, #3
 8002772:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002776:	00e2      	lsls	r2, r4, #3
 8002778:	4614      	mov	r4, r2
 800277a:	461d      	mov	r5, r3
 800277c:	4643      	mov	r3, r8
 800277e:	18e3      	adds	r3, r4, r3
 8002780:	603b      	str	r3, [r7, #0]
 8002782:	464b      	mov	r3, r9
 8002784:	eb45 0303 	adc.w	r3, r5, r3
 8002788:	607b      	str	r3, [r7, #4]
 800278a:	f04f 0200 	mov.w	r2, #0
 800278e:	f04f 0300 	mov.w	r3, #0
 8002792:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002796:	4629      	mov	r1, r5
 8002798:	028b      	lsls	r3, r1, #10
 800279a:	4621      	mov	r1, r4
 800279c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80027a0:	4621      	mov	r1, r4
 80027a2:	028a      	lsls	r2, r1, #10
 80027a4:	4610      	mov	r0, r2
 80027a6:	4619      	mov	r1, r3
 80027a8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80027ac:	2200      	movs	r2, #0
 80027ae:	61bb      	str	r3, [r7, #24]
 80027b0:	61fa      	str	r2, [r7, #28]
 80027b2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80027b6:	f7fd fd25 	bl	8000204 <__aeabi_uldivmod>
 80027ba:	4602      	mov	r2, r0
 80027bc:	460b      	mov	r3, r1
 80027be:	4613      	mov	r3, r2
 80027c0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80027c4:	4b0d      	ldr	r3, [pc, #52]	@ (80027fc <HAL_RCC_GetSysClockFreq+0x348>)
 80027c6:	685b      	ldr	r3, [r3, #4]
 80027c8:	0f1b      	lsrs	r3, r3, #28
 80027ca:	f003 0307 	and.w	r3, r3, #7
 80027ce:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80027d2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80027d6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80027da:	fbb2 f3f3 	udiv	r3, r2, r3
 80027de:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80027e2:	e003      	b.n	80027ec <HAL_RCC_GetSysClockFreq+0x338>
 80027e4:	4b06      	ldr	r3, [pc, #24]	@ (8002800 <HAL_RCC_GetSysClockFreq+0x34c>)
 80027e6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80027ea:	bf00      	nop
 80027ec:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80027f0:	4618      	mov	r0, r3
 80027f2:	3798      	adds	r7, #152	@ 0x98
 80027f4:	46bd      	mov	sp, r7
 80027f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80027fa:	bf00      	nop
 80027fc:	40023800 	.word	0x40023800
 8002800:	00f42400 	.word	0x00f42400
 8002804:	017d7840 	.word	0x017d7840

08002808 <HAL_RCC_OscConfig>:
 8002808:	b580      	push	{r7, lr}
 800280a:	b086      	sub	sp, #24
 800280c:	af00      	add	r7, sp, #0
 800280e:	6078      	str	r0, [r7, #4]
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	2b00      	cmp	r3, #0
 8002814:	d101      	bne.n	800281a <HAL_RCC_OscConfig+0x12>
 8002816:	2301      	movs	r3, #1
 8002818:	e28d      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	f003 0301 	and.w	r3, r3, #1
 8002822:	2b00      	cmp	r3, #0
 8002824:	f000 8083 	beq.w	800292e <HAL_RCC_OscConfig+0x126>
 8002828:	4b94      	ldr	r3, [pc, #592]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800282a:	689b      	ldr	r3, [r3, #8]
 800282c:	f003 030c 	and.w	r3, r3, #12
 8002830:	2b04      	cmp	r3, #4
 8002832:	d019      	beq.n	8002868 <HAL_RCC_OscConfig+0x60>
 8002834:	4b91      	ldr	r3, [pc, #580]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002836:	689b      	ldr	r3, [r3, #8]
 8002838:	f003 030c 	and.w	r3, r3, #12
 800283c:	2b08      	cmp	r3, #8
 800283e:	d106      	bne.n	800284e <HAL_RCC_OscConfig+0x46>
 8002840:	4b8e      	ldr	r3, [pc, #568]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002842:	685b      	ldr	r3, [r3, #4]
 8002844:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002848:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800284c:	d00c      	beq.n	8002868 <HAL_RCC_OscConfig+0x60>
 800284e:	4b8b      	ldr	r3, [pc, #556]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002850:	689b      	ldr	r3, [r3, #8]
 8002852:	f003 030c 	and.w	r3, r3, #12
 8002856:	2b0c      	cmp	r3, #12
 8002858:	d112      	bne.n	8002880 <HAL_RCC_OscConfig+0x78>
 800285a:	4b88      	ldr	r3, [pc, #544]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800285c:	685b      	ldr	r3, [r3, #4]
 800285e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002862:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002866:	d10b      	bne.n	8002880 <HAL_RCC_OscConfig+0x78>
 8002868:	4b84      	ldr	r3, [pc, #528]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002870:	2b00      	cmp	r3, #0
 8002872:	d05b      	beq.n	800292c <HAL_RCC_OscConfig+0x124>
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	685b      	ldr	r3, [r3, #4]
 8002878:	2b00      	cmp	r3, #0
 800287a:	d157      	bne.n	800292c <HAL_RCC_OscConfig+0x124>
 800287c:	2301      	movs	r3, #1
 800287e:	e25a      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	685b      	ldr	r3, [r3, #4]
 8002884:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002888:	d106      	bne.n	8002898 <HAL_RCC_OscConfig+0x90>
 800288a:	4b7c      	ldr	r3, [pc, #496]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	4a7b      	ldr	r2, [pc, #492]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002890:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002894:	6013      	str	r3, [r2, #0]
 8002896:	e01d      	b.n	80028d4 <HAL_RCC_OscConfig+0xcc>
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	685b      	ldr	r3, [r3, #4]
 800289c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80028a0:	d10c      	bne.n	80028bc <HAL_RCC_OscConfig+0xb4>
 80028a2:	4b76      	ldr	r3, [pc, #472]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	4a75      	ldr	r2, [pc, #468]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028a8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80028ac:	6013      	str	r3, [r2, #0]
 80028ae:	4b73      	ldr	r3, [pc, #460]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	4a72      	ldr	r2, [pc, #456]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028b4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80028b8:	6013      	str	r3, [r2, #0]
 80028ba:	e00b      	b.n	80028d4 <HAL_RCC_OscConfig+0xcc>
 80028bc:	4b6f      	ldr	r3, [pc, #444]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028be:	681b      	ldr	r3, [r3, #0]
 80028c0:	4a6e      	ldr	r2, [pc, #440]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028c2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80028c6:	6013      	str	r3, [r2, #0]
 80028c8:	4b6c      	ldr	r3, [pc, #432]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4a6b      	ldr	r2, [pc, #428]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028ce:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80028d2:	6013      	str	r3, [r2, #0]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	685b      	ldr	r3, [r3, #4]
 80028d8:	2b00      	cmp	r3, #0
 80028da:	d013      	beq.n	8002904 <HAL_RCC_OscConfig+0xfc>
 80028dc:	f7ff f94e 	bl	8001b7c <HAL_GetTick>
 80028e0:	6138      	str	r0, [r7, #16]
 80028e2:	e008      	b.n	80028f6 <HAL_RCC_OscConfig+0xee>
 80028e4:	f7ff f94a 	bl	8001b7c <HAL_GetTick>
 80028e8:	4602      	mov	r2, r0
 80028ea:	693b      	ldr	r3, [r7, #16]
 80028ec:	1ad3      	subs	r3, r2, r3
 80028ee:	2b64      	cmp	r3, #100	@ 0x64
 80028f0:	d901      	bls.n	80028f6 <HAL_RCC_OscConfig+0xee>
 80028f2:	2303      	movs	r3, #3
 80028f4:	e21f      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 80028f6:	4b61      	ldr	r3, [pc, #388]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80028fe:	2b00      	cmp	r3, #0
 8002900:	d0f0      	beq.n	80028e4 <HAL_RCC_OscConfig+0xdc>
 8002902:	e014      	b.n	800292e <HAL_RCC_OscConfig+0x126>
 8002904:	f7ff f93a 	bl	8001b7c <HAL_GetTick>
 8002908:	6138      	str	r0, [r7, #16]
 800290a:	e008      	b.n	800291e <HAL_RCC_OscConfig+0x116>
 800290c:	f7ff f936 	bl	8001b7c <HAL_GetTick>
 8002910:	4602      	mov	r2, r0
 8002912:	693b      	ldr	r3, [r7, #16]
 8002914:	1ad3      	subs	r3, r2, r3
 8002916:	2b64      	cmp	r3, #100	@ 0x64
 8002918:	d901      	bls.n	800291e <HAL_RCC_OscConfig+0x116>
 800291a:	2303      	movs	r3, #3
 800291c:	e20b      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 800291e:	4b57      	ldr	r3, [pc, #348]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002926:	2b00      	cmp	r3, #0
 8002928:	d1f0      	bne.n	800290c <HAL_RCC_OscConfig+0x104>
 800292a:	e000      	b.n	800292e <HAL_RCC_OscConfig+0x126>
 800292c:	bf00      	nop
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	f003 0302 	and.w	r3, r3, #2
 8002936:	2b00      	cmp	r3, #0
 8002938:	d06f      	beq.n	8002a1a <HAL_RCC_OscConfig+0x212>
 800293a:	4b50      	ldr	r3, [pc, #320]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800293c:	689b      	ldr	r3, [r3, #8]
 800293e:	f003 030c 	and.w	r3, r3, #12
 8002942:	2b00      	cmp	r3, #0
 8002944:	d017      	beq.n	8002976 <HAL_RCC_OscConfig+0x16e>
 8002946:	4b4d      	ldr	r3, [pc, #308]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002948:	689b      	ldr	r3, [r3, #8]
 800294a:	f003 030c 	and.w	r3, r3, #12
 800294e:	2b08      	cmp	r3, #8
 8002950:	d105      	bne.n	800295e <HAL_RCC_OscConfig+0x156>
 8002952:	4b4a      	ldr	r3, [pc, #296]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002954:	685b      	ldr	r3, [r3, #4]
 8002956:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800295a:	2b00      	cmp	r3, #0
 800295c:	d00b      	beq.n	8002976 <HAL_RCC_OscConfig+0x16e>
 800295e:	4b47      	ldr	r3, [pc, #284]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002960:	689b      	ldr	r3, [r3, #8]
 8002962:	f003 030c 	and.w	r3, r3, #12
 8002966:	2b0c      	cmp	r3, #12
 8002968:	d11c      	bne.n	80029a4 <HAL_RCC_OscConfig+0x19c>
 800296a:	4b44      	ldr	r3, [pc, #272]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800296c:	685b      	ldr	r3, [r3, #4]
 800296e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002972:	2b00      	cmp	r3, #0
 8002974:	d116      	bne.n	80029a4 <HAL_RCC_OscConfig+0x19c>
 8002976:	4b41      	ldr	r3, [pc, #260]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	f003 0302 	and.w	r3, r3, #2
 800297e:	2b00      	cmp	r3, #0
 8002980:	d005      	beq.n	800298e <HAL_RCC_OscConfig+0x186>
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	68db      	ldr	r3, [r3, #12]
 8002986:	2b01      	cmp	r3, #1
 8002988:	d001      	beq.n	800298e <HAL_RCC_OscConfig+0x186>
 800298a:	2301      	movs	r3, #1
 800298c:	e1d3      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 800298e:	4b3b      	ldr	r3, [pc, #236]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	691b      	ldr	r3, [r3, #16]
 800299a:	00db      	lsls	r3, r3, #3
 800299c:	4937      	ldr	r1, [pc, #220]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 800299e:	4313      	orrs	r3, r2
 80029a0:	600b      	str	r3, [r1, #0]
 80029a2:	e03a      	b.n	8002a1a <HAL_RCC_OscConfig+0x212>
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	68db      	ldr	r3, [r3, #12]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d020      	beq.n	80029ee <HAL_RCC_OscConfig+0x1e6>
 80029ac:	4b34      	ldr	r3, [pc, #208]	@ (8002a80 <HAL_RCC_OscConfig+0x278>)
 80029ae:	2201      	movs	r2, #1
 80029b0:	601a      	str	r2, [r3, #0]
 80029b2:	f7ff f8e3 	bl	8001b7c <HAL_GetTick>
 80029b6:	6138      	str	r0, [r7, #16]
 80029b8:	e008      	b.n	80029cc <HAL_RCC_OscConfig+0x1c4>
 80029ba:	f7ff f8df 	bl	8001b7c <HAL_GetTick>
 80029be:	4602      	mov	r2, r0
 80029c0:	693b      	ldr	r3, [r7, #16]
 80029c2:	1ad3      	subs	r3, r2, r3
 80029c4:	2b02      	cmp	r3, #2
 80029c6:	d901      	bls.n	80029cc <HAL_RCC_OscConfig+0x1c4>
 80029c8:	2303      	movs	r3, #3
 80029ca:	e1b4      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 80029cc:	4b2b      	ldr	r3, [pc, #172]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	f003 0302 	and.w	r3, r3, #2
 80029d4:	2b00      	cmp	r3, #0
 80029d6:	d0f0      	beq.n	80029ba <HAL_RCC_OscConfig+0x1b2>
 80029d8:	4b28      	ldr	r3, [pc, #160]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80029da:	681b      	ldr	r3, [r3, #0]
 80029dc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	691b      	ldr	r3, [r3, #16]
 80029e4:	00db      	lsls	r3, r3, #3
 80029e6:	4925      	ldr	r1, [pc, #148]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 80029e8:	4313      	orrs	r3, r2
 80029ea:	600b      	str	r3, [r1, #0]
 80029ec:	e015      	b.n	8002a1a <HAL_RCC_OscConfig+0x212>
 80029ee:	4b24      	ldr	r3, [pc, #144]	@ (8002a80 <HAL_RCC_OscConfig+0x278>)
 80029f0:	2200      	movs	r2, #0
 80029f2:	601a      	str	r2, [r3, #0]
 80029f4:	f7ff f8c2 	bl	8001b7c <HAL_GetTick>
 80029f8:	6138      	str	r0, [r7, #16]
 80029fa:	e008      	b.n	8002a0e <HAL_RCC_OscConfig+0x206>
 80029fc:	f7ff f8be 	bl	8001b7c <HAL_GetTick>
 8002a00:	4602      	mov	r2, r0
 8002a02:	693b      	ldr	r3, [r7, #16]
 8002a04:	1ad3      	subs	r3, r2, r3
 8002a06:	2b02      	cmp	r3, #2
 8002a08:	d901      	bls.n	8002a0e <HAL_RCC_OscConfig+0x206>
 8002a0a:	2303      	movs	r3, #3
 8002a0c:	e193      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002a0e:	4b1b      	ldr	r3, [pc, #108]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	f003 0302 	and.w	r3, r3, #2
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	d1f0      	bne.n	80029fc <HAL_RCC_OscConfig+0x1f4>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	f003 0308 	and.w	r3, r3, #8
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d036      	beq.n	8002a94 <HAL_RCC_OscConfig+0x28c>
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	695b      	ldr	r3, [r3, #20]
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d016      	beq.n	8002a5c <HAL_RCC_OscConfig+0x254>
 8002a2e:	4b15      	ldr	r3, [pc, #84]	@ (8002a84 <HAL_RCC_OscConfig+0x27c>)
 8002a30:	2201      	movs	r2, #1
 8002a32:	601a      	str	r2, [r3, #0]
 8002a34:	f7ff f8a2 	bl	8001b7c <HAL_GetTick>
 8002a38:	6138      	str	r0, [r7, #16]
 8002a3a:	e008      	b.n	8002a4e <HAL_RCC_OscConfig+0x246>
 8002a3c:	f7ff f89e 	bl	8001b7c <HAL_GetTick>
 8002a40:	4602      	mov	r2, r0
 8002a42:	693b      	ldr	r3, [r7, #16]
 8002a44:	1ad3      	subs	r3, r2, r3
 8002a46:	2b02      	cmp	r3, #2
 8002a48:	d901      	bls.n	8002a4e <HAL_RCC_OscConfig+0x246>
 8002a4a:	2303      	movs	r3, #3
 8002a4c:	e173      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002a4e:	4b0b      	ldr	r3, [pc, #44]	@ (8002a7c <HAL_RCC_OscConfig+0x274>)
 8002a50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002a52:	f003 0302 	and.w	r3, r3, #2
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d0f0      	beq.n	8002a3c <HAL_RCC_OscConfig+0x234>
 8002a5a:	e01b      	b.n	8002a94 <HAL_RCC_OscConfig+0x28c>
 8002a5c:	4b09      	ldr	r3, [pc, #36]	@ (8002a84 <HAL_RCC_OscConfig+0x27c>)
 8002a5e:	2200      	movs	r2, #0
 8002a60:	601a      	str	r2, [r3, #0]
 8002a62:	f7ff f88b 	bl	8001b7c <HAL_GetTick>
 8002a66:	6138      	str	r0, [r7, #16]
 8002a68:	e00e      	b.n	8002a88 <HAL_RCC_OscConfig+0x280>
 8002a6a:	f7ff f887 	bl	8001b7c <HAL_GetTick>
 8002a6e:	4602      	mov	r2, r0
 8002a70:	693b      	ldr	r3, [r7, #16]
 8002a72:	1ad3      	subs	r3, r2, r3
 8002a74:	2b02      	cmp	r3, #2
 8002a76:	d907      	bls.n	8002a88 <HAL_RCC_OscConfig+0x280>
 8002a78:	2303      	movs	r3, #3
 8002a7a:	e15c      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002a7c:	40023800 	.word	0x40023800
 8002a80:	42470000 	.word	0x42470000
 8002a84:	42470e80 	.word	0x42470e80
 8002a88:	4b8a      	ldr	r3, [pc, #552]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002a8a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002a8c:	f003 0302 	and.w	r3, r3, #2
 8002a90:	2b00      	cmp	r3, #0
 8002a92:	d1ea      	bne.n	8002a6a <HAL_RCC_OscConfig+0x262>
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	f003 0304 	and.w	r3, r3, #4
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	f000 8097 	beq.w	8002bd0 <HAL_RCC_OscConfig+0x3c8>
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	75fb      	strb	r3, [r7, #23]
 8002aa6:	4b83      	ldr	r3, [pc, #524]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002aae:	2b00      	cmp	r3, #0
 8002ab0:	d10f      	bne.n	8002ad2 <HAL_RCC_OscConfig+0x2ca>
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	60bb      	str	r3, [r7, #8]
 8002ab6:	4b7f      	ldr	r3, [pc, #508]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002ab8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aba:	4a7e      	ldr	r2, [pc, #504]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002abc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ac0:	6413      	str	r3, [r2, #64]	@ 0x40
 8002ac2:	4b7c      	ldr	r3, [pc, #496]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002ac4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ac6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002aca:	60bb      	str	r3, [r7, #8]
 8002acc:	68bb      	ldr	r3, [r7, #8]
 8002ace:	2301      	movs	r3, #1
 8002ad0:	75fb      	strb	r3, [r7, #23]
 8002ad2:	4b79      	ldr	r3, [pc, #484]	@ (8002cb8 <HAL_RCC_OscConfig+0x4b0>)
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	d118      	bne.n	8002b10 <HAL_RCC_OscConfig+0x308>
 8002ade:	4b76      	ldr	r3, [pc, #472]	@ (8002cb8 <HAL_RCC_OscConfig+0x4b0>)
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	4a75      	ldr	r2, [pc, #468]	@ (8002cb8 <HAL_RCC_OscConfig+0x4b0>)
 8002ae4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002ae8:	6013      	str	r3, [r2, #0]
 8002aea:	f7ff f847 	bl	8001b7c <HAL_GetTick>
 8002aee:	6138      	str	r0, [r7, #16]
 8002af0:	e008      	b.n	8002b04 <HAL_RCC_OscConfig+0x2fc>
 8002af2:	f7ff f843 	bl	8001b7c <HAL_GetTick>
 8002af6:	4602      	mov	r2, r0
 8002af8:	693b      	ldr	r3, [r7, #16]
 8002afa:	1ad3      	subs	r3, r2, r3
 8002afc:	2b02      	cmp	r3, #2
 8002afe:	d901      	bls.n	8002b04 <HAL_RCC_OscConfig+0x2fc>
 8002b00:	2303      	movs	r3, #3
 8002b02:	e118      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002b04:	4b6c      	ldr	r3, [pc, #432]	@ (8002cb8 <HAL_RCC_OscConfig+0x4b0>)
 8002b06:	681b      	ldr	r3, [r3, #0]
 8002b08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b0c:	2b00      	cmp	r3, #0
 8002b0e:	d0f0      	beq.n	8002af2 <HAL_RCC_OscConfig+0x2ea>
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	689b      	ldr	r3, [r3, #8]
 8002b14:	2b01      	cmp	r3, #1
 8002b16:	d106      	bne.n	8002b26 <HAL_RCC_OscConfig+0x31e>
 8002b18:	4b66      	ldr	r3, [pc, #408]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b1a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b1c:	4a65      	ldr	r2, [pc, #404]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b1e:	f043 0301 	orr.w	r3, r3, #1
 8002b22:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b24:	e01c      	b.n	8002b60 <HAL_RCC_OscConfig+0x358>
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	689b      	ldr	r3, [r3, #8]
 8002b2a:	2b05      	cmp	r3, #5
 8002b2c:	d10c      	bne.n	8002b48 <HAL_RCC_OscConfig+0x340>
 8002b2e:	4b61      	ldr	r3, [pc, #388]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b30:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b32:	4a60      	ldr	r2, [pc, #384]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b34:	f043 0304 	orr.w	r3, r3, #4
 8002b38:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b3a:	4b5e      	ldr	r3, [pc, #376]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b3c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b3e:	4a5d      	ldr	r2, [pc, #372]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b40:	f043 0301 	orr.w	r3, r3, #1
 8002b44:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b46:	e00b      	b.n	8002b60 <HAL_RCC_OscConfig+0x358>
 8002b48:	4b5a      	ldr	r3, [pc, #360]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b4a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b4c:	4a59      	ldr	r2, [pc, #356]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b4e:	f023 0301 	bic.w	r3, r3, #1
 8002b52:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b54:	4b57      	ldr	r3, [pc, #348]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b56:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b58:	4a56      	ldr	r2, [pc, #344]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b5a:	f023 0304 	bic.w	r3, r3, #4
 8002b5e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	689b      	ldr	r3, [r3, #8]
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d015      	beq.n	8002b94 <HAL_RCC_OscConfig+0x38c>
 8002b68:	f7ff f808 	bl	8001b7c <HAL_GetTick>
 8002b6c:	6138      	str	r0, [r7, #16]
 8002b6e:	e00a      	b.n	8002b86 <HAL_RCC_OscConfig+0x37e>
 8002b70:	f7ff f804 	bl	8001b7c <HAL_GetTick>
 8002b74:	4602      	mov	r2, r0
 8002b76:	693b      	ldr	r3, [r7, #16]
 8002b78:	1ad3      	subs	r3, r2, r3
 8002b7a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002b7e:	4293      	cmp	r3, r2
 8002b80:	d901      	bls.n	8002b86 <HAL_RCC_OscConfig+0x37e>
 8002b82:	2303      	movs	r3, #3
 8002b84:	e0d7      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002b86:	4b4b      	ldr	r3, [pc, #300]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002b88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b8a:	f003 0302 	and.w	r3, r3, #2
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d0ee      	beq.n	8002b70 <HAL_RCC_OscConfig+0x368>
 8002b92:	e014      	b.n	8002bbe <HAL_RCC_OscConfig+0x3b6>
 8002b94:	f7fe fff2 	bl	8001b7c <HAL_GetTick>
 8002b98:	6138      	str	r0, [r7, #16]
 8002b9a:	e00a      	b.n	8002bb2 <HAL_RCC_OscConfig+0x3aa>
 8002b9c:	f7fe ffee 	bl	8001b7c <HAL_GetTick>
 8002ba0:	4602      	mov	r2, r0
 8002ba2:	693b      	ldr	r3, [r7, #16]
 8002ba4:	1ad3      	subs	r3, r2, r3
 8002ba6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d901      	bls.n	8002bb2 <HAL_RCC_OscConfig+0x3aa>
 8002bae:	2303      	movs	r3, #3
 8002bb0:	e0c1      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002bb2:	4b40      	ldr	r3, [pc, #256]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002bb4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bb6:	f003 0302 	and.w	r3, r3, #2
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d1ee      	bne.n	8002b9c <HAL_RCC_OscConfig+0x394>
 8002bbe:	7dfb      	ldrb	r3, [r7, #23]
 8002bc0:	2b01      	cmp	r3, #1
 8002bc2:	d105      	bne.n	8002bd0 <HAL_RCC_OscConfig+0x3c8>
 8002bc4:	4b3b      	ldr	r3, [pc, #236]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002bc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bc8:	4a3a      	ldr	r2, [pc, #232]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002bca:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002bce:	6413      	str	r3, [r2, #64]	@ 0x40
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	699b      	ldr	r3, [r3, #24]
 8002bd4:	2b00      	cmp	r3, #0
 8002bd6:	f000 80ad 	beq.w	8002d34 <HAL_RCC_OscConfig+0x52c>
 8002bda:	4b36      	ldr	r3, [pc, #216]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002bdc:	689b      	ldr	r3, [r3, #8]
 8002bde:	f003 030c 	and.w	r3, r3, #12
 8002be2:	2b08      	cmp	r3, #8
 8002be4:	d060      	beq.n	8002ca8 <HAL_RCC_OscConfig+0x4a0>
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	699b      	ldr	r3, [r3, #24]
 8002bea:	2b02      	cmp	r3, #2
 8002bec:	d145      	bne.n	8002c7a <HAL_RCC_OscConfig+0x472>
 8002bee:	4b33      	ldr	r3, [pc, #204]	@ (8002cbc <HAL_RCC_OscConfig+0x4b4>)
 8002bf0:	2200      	movs	r2, #0
 8002bf2:	601a      	str	r2, [r3, #0]
 8002bf4:	f7fe ffc2 	bl	8001b7c <HAL_GetTick>
 8002bf8:	6138      	str	r0, [r7, #16]
 8002bfa:	e008      	b.n	8002c0e <HAL_RCC_OscConfig+0x406>
 8002bfc:	f7fe ffbe 	bl	8001b7c <HAL_GetTick>
 8002c00:	4602      	mov	r2, r0
 8002c02:	693b      	ldr	r3, [r7, #16]
 8002c04:	1ad3      	subs	r3, r2, r3
 8002c06:	2b02      	cmp	r3, #2
 8002c08:	d901      	bls.n	8002c0e <HAL_RCC_OscConfig+0x406>
 8002c0a:	2303      	movs	r3, #3
 8002c0c:	e093      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002c0e:	4b29      	ldr	r3, [pc, #164]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d1f0      	bne.n	8002bfc <HAL_RCC_OscConfig+0x3f4>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	69da      	ldr	r2, [r3, #28]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	6a1b      	ldr	r3, [r3, #32]
 8002c22:	431a      	orrs	r2, r3
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c28:	019b      	lsls	r3, r3, #6
 8002c2a:	431a      	orrs	r2, r3
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c30:	085b      	lsrs	r3, r3, #1
 8002c32:	3b01      	subs	r3, #1
 8002c34:	041b      	lsls	r3, r3, #16
 8002c36:	431a      	orrs	r2, r3
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c3c:	061b      	lsls	r3, r3, #24
 8002c3e:	431a      	orrs	r2, r3
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c44:	071b      	lsls	r3, r3, #28
 8002c46:	491b      	ldr	r1, [pc, #108]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002c48:	4313      	orrs	r3, r2
 8002c4a:	604b      	str	r3, [r1, #4]
 8002c4c:	4b1b      	ldr	r3, [pc, #108]	@ (8002cbc <HAL_RCC_OscConfig+0x4b4>)
 8002c4e:	2201      	movs	r2, #1
 8002c50:	601a      	str	r2, [r3, #0]
 8002c52:	f7fe ff93 	bl	8001b7c <HAL_GetTick>
 8002c56:	6138      	str	r0, [r7, #16]
 8002c58:	e008      	b.n	8002c6c <HAL_RCC_OscConfig+0x464>
 8002c5a:	f7fe ff8f 	bl	8001b7c <HAL_GetTick>
 8002c5e:	4602      	mov	r2, r0
 8002c60:	693b      	ldr	r3, [r7, #16]
 8002c62:	1ad3      	subs	r3, r2, r3
 8002c64:	2b02      	cmp	r3, #2
 8002c66:	d901      	bls.n	8002c6c <HAL_RCC_OscConfig+0x464>
 8002c68:	2303      	movs	r3, #3
 8002c6a:	e064      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002c6c:	4b11      	ldr	r3, [pc, #68]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d0f0      	beq.n	8002c5a <HAL_RCC_OscConfig+0x452>
 8002c78:	e05c      	b.n	8002d34 <HAL_RCC_OscConfig+0x52c>
 8002c7a:	4b10      	ldr	r3, [pc, #64]	@ (8002cbc <HAL_RCC_OscConfig+0x4b4>)
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	601a      	str	r2, [r3, #0]
 8002c80:	f7fe ff7c 	bl	8001b7c <HAL_GetTick>
 8002c84:	6138      	str	r0, [r7, #16]
 8002c86:	e008      	b.n	8002c9a <HAL_RCC_OscConfig+0x492>
 8002c88:	f7fe ff78 	bl	8001b7c <HAL_GetTick>
 8002c8c:	4602      	mov	r2, r0
 8002c8e:	693b      	ldr	r3, [r7, #16]
 8002c90:	1ad3      	subs	r3, r2, r3
 8002c92:	2b02      	cmp	r3, #2
 8002c94:	d901      	bls.n	8002c9a <HAL_RCC_OscConfig+0x492>
 8002c96:	2303      	movs	r3, #3
 8002c98:	e04d      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002c9a:	4b06      	ldr	r3, [pc, #24]	@ (8002cb4 <HAL_RCC_OscConfig+0x4ac>)
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d1f0      	bne.n	8002c88 <HAL_RCC_OscConfig+0x480>
 8002ca6:	e045      	b.n	8002d34 <HAL_RCC_OscConfig+0x52c>
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	699b      	ldr	r3, [r3, #24]
 8002cac:	2b01      	cmp	r3, #1
 8002cae:	d107      	bne.n	8002cc0 <HAL_RCC_OscConfig+0x4b8>
 8002cb0:	2301      	movs	r3, #1
 8002cb2:	e040      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002cb4:	40023800 	.word	0x40023800
 8002cb8:	40007000 	.word	0x40007000
 8002cbc:	42470060 	.word	0x42470060
 8002cc0:	4b1f      	ldr	r3, [pc, #124]	@ (8002d40 <HAL_RCC_OscConfig+0x538>)
 8002cc2:	685b      	ldr	r3, [r3, #4]
 8002cc4:	60fb      	str	r3, [r7, #12]
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	699b      	ldr	r3, [r3, #24]
 8002cca:	2b01      	cmp	r3, #1
 8002ccc:	d030      	beq.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	69db      	ldr	r3, [r3, #28]
 8002cd8:	429a      	cmp	r2, r3
 8002cda:	d129      	bne.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002cdc:	68fb      	ldr	r3, [r7, #12]
 8002cde:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	6a1b      	ldr	r3, [r3, #32]
 8002ce6:	429a      	cmp	r2, r3
 8002ce8:	d122      	bne.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002cea:	68fa      	ldr	r2, [r7, #12]
 8002cec:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002cf0:	4013      	ands	r3, r2
 8002cf2:	687a      	ldr	r2, [r7, #4]
 8002cf4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002cf6:	0192      	lsls	r2, r2, #6
 8002cf8:	4293      	cmp	r3, r2
 8002cfa:	d119      	bne.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d06:	085b      	lsrs	r3, r3, #1
 8002d08:	3b01      	subs	r3, #1
 8002d0a:	041b      	lsls	r3, r3, #16
 8002d0c:	429a      	cmp	r2, r3
 8002d0e:	d10f      	bne.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d1a:	061b      	lsls	r3, r3, #24
 8002d1c:	429a      	cmp	r2, r3
 8002d1e:	d107      	bne.n	8002d30 <HAL_RCC_OscConfig+0x528>
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d2a:	071b      	lsls	r3, r3, #28
 8002d2c:	429a      	cmp	r2, r3
 8002d2e:	d001      	beq.n	8002d34 <HAL_RCC_OscConfig+0x52c>
 8002d30:	2301      	movs	r3, #1
 8002d32:	e000      	b.n	8002d36 <HAL_RCC_OscConfig+0x52e>
 8002d34:	2300      	movs	r3, #0
 8002d36:	4618      	mov	r0, r3
 8002d38:	3718      	adds	r7, #24
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bd80      	pop	{r7, pc}
 8002d3e:	bf00      	nop
 8002d40:	40023800 	.word	0x40023800

08002d44 <HAL_SPI_Init>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	b082      	sub	sp, #8
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	6078      	str	r0, [r7, #4]
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d101      	bne.n	8002d56 <HAL_SPI_Init+0x12>
 8002d52:	2301      	movs	r3, #1
 8002d54:	e07b      	b.n	8002e4e <HAL_SPI_Init+0x10a>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	d108      	bne.n	8002d70 <HAL_SPI_Init+0x2c>
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	685b      	ldr	r3, [r3, #4]
 8002d62:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8002d66:	d009      	beq.n	8002d7c <HAL_SPI_Init+0x38>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	2200      	movs	r2, #0
 8002d6c:	61da      	str	r2, [r3, #28]
 8002d6e:	e005      	b.n	8002d7c <HAL_SPI_Init+0x38>
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	2200      	movs	r2, #0
 8002d74:	611a      	str	r2, [r3, #16]
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	2200      	movs	r2, #0
 8002d7a:	615a      	str	r2, [r3, #20]
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2200      	movs	r2, #0
 8002d80:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8002d88:	b2db      	uxtb	r3, r3
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d106      	bne.n	8002d9c <HAL_SPI_Init+0x58>
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	2200      	movs	r2, #0
 8002d92:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002d96:	6878      	ldr	r0, [r7, #4]
 8002d98:	f7fe fd14 	bl	80017c4 <HAL_SPI_MspInit>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	2202      	movs	r2, #2
 8002da0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	681a      	ldr	r2, [r3, #0]
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002db2:	601a      	str	r2, [r3, #0]
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	685b      	ldr	r3, [r3, #4]
 8002db8:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	689b      	ldr	r3, [r3, #8]
 8002dc0:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8002dc4:	431a      	orrs	r2, r3
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	68db      	ldr	r3, [r3, #12]
 8002dca:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002dce:	431a      	orrs	r2, r3
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	691b      	ldr	r3, [r3, #16]
 8002dd4:	f003 0302 	and.w	r3, r3, #2
 8002dd8:	431a      	orrs	r2, r3
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	695b      	ldr	r3, [r3, #20]
 8002dde:	f003 0301 	and.w	r3, r3, #1
 8002de2:	431a      	orrs	r2, r3
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	699b      	ldr	r3, [r3, #24]
 8002de8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002dec:	431a      	orrs	r2, r3
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	69db      	ldr	r3, [r3, #28]
 8002df2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8002df6:	431a      	orrs	r2, r3
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	6a1b      	ldr	r3, [r3, #32]
 8002dfc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002e00:	ea42 0103 	orr.w	r1, r2, r3
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e08:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	430a      	orrs	r2, r1
 8002e12:	601a      	str	r2, [r3, #0]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	699b      	ldr	r3, [r3, #24]
 8002e18:	0c1b      	lsrs	r3, r3, #16
 8002e1a:	f003 0104 	and.w	r1, r3, #4
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e22:	f003 0210 	and.w	r2, r3, #16
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	430a      	orrs	r2, r1
 8002e2c:	605a      	str	r2, [r3, #4]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	69da      	ldr	r2, [r3, #28]
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002e3c:	61da      	str	r2, [r3, #28]
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	2200      	movs	r2, #0
 8002e42:	655a      	str	r2, [r3, #84]	@ 0x54
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	2201      	movs	r2, #1
 8002e48:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8002e4c:	2300      	movs	r3, #0
 8002e4e:	4618      	mov	r0, r3
 8002e50:	3708      	adds	r7, #8
 8002e52:	46bd      	mov	sp, r7
 8002e54:	bd80      	pop	{r7, pc}

08002e56 <HAL_UART_Init>:
 8002e56:	b580      	push	{r7, lr}
 8002e58:	b082      	sub	sp, #8
 8002e5a:	af00      	add	r7, sp, #0
 8002e5c:	6078      	str	r0, [r7, #4]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d101      	bne.n	8002e68 <HAL_UART_Init+0x12>
 8002e64:	2301      	movs	r3, #1
 8002e66:	e042      	b.n	8002eee <HAL_UART_Init+0x98>
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002e6e:	b2db      	uxtb	r3, r3
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d106      	bne.n	8002e82 <HAL_UART_Init+0x2c>
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	2200      	movs	r2, #0
 8002e78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002e7c:	6878      	ldr	r0, [r7, #4]
 8002e7e:	f7fe fce9 	bl	8001854 <HAL_UART_MspInit>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	2224      	movs	r2, #36	@ 0x24
 8002e86:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	68da      	ldr	r2, [r3, #12]
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002e98:	60da      	str	r2, [r3, #12]
 8002e9a:	6878      	ldr	r0, [r7, #4]
 8002e9c:	f000 fcda 	bl	8003854 <UART_SetConfig>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	691a      	ldr	r2, [r3, #16]
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	681b      	ldr	r3, [r3, #0]
 8002eaa:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002eae:	611a      	str	r2, [r3, #16]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	695a      	ldr	r2, [r3, #20]
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002ebe:	615a      	str	r2, [r3, #20]
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	68da      	ldr	r2, [r3, #12]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002ece:	60da      	str	r2, [r3, #12]
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	2220      	movs	r2, #32
 8002eda:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	2220      	movs	r2, #32
 8002ee2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	2200      	movs	r2, #0
 8002eea:	635a      	str	r2, [r3, #52]	@ 0x34
 8002eec:	2300      	movs	r3, #0
 8002eee:	4618      	mov	r0, r3
 8002ef0:	3708      	adds	r7, #8
 8002ef2:	46bd      	mov	sp, r7
 8002ef4:	bd80      	pop	{r7, pc}

08002ef6 <HAL_UART_Receive_IT>:
 8002ef6:	b580      	push	{r7, lr}
 8002ef8:	b084      	sub	sp, #16
 8002efa:	af00      	add	r7, sp, #0
 8002efc:	60f8      	str	r0, [r7, #12]
 8002efe:	60b9      	str	r1, [r7, #8]
 8002f00:	4613      	mov	r3, r2
 8002f02:	80fb      	strh	r3, [r7, #6]
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002f0a:	b2db      	uxtb	r3, r3
 8002f0c:	2b20      	cmp	r3, #32
 8002f0e:	d112      	bne.n	8002f36 <HAL_UART_Receive_IT+0x40>
 8002f10:	68bb      	ldr	r3, [r7, #8]
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d002      	beq.n	8002f1c <HAL_UART_Receive_IT+0x26>
 8002f16:	88fb      	ldrh	r3, [r7, #6]
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d101      	bne.n	8002f20 <HAL_UART_Receive_IT+0x2a>
 8002f1c:	2301      	movs	r3, #1
 8002f1e:	e00b      	b.n	8002f38 <HAL_UART_Receive_IT+0x42>
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	2200      	movs	r2, #0
 8002f24:	631a      	str	r2, [r3, #48]	@ 0x30
 8002f26:	88fb      	ldrh	r3, [r7, #6]
 8002f28:	461a      	mov	r2, r3
 8002f2a:	68b9      	ldr	r1, [r7, #8]
 8002f2c:	68f8      	ldr	r0, [r7, #12]
 8002f2e:	f000 fab9 	bl	80034a4 <UART_Start_Receive_IT>
 8002f32:	4603      	mov	r3, r0
 8002f34:	e000      	b.n	8002f38 <HAL_UART_Receive_IT+0x42>
 8002f36:	2302      	movs	r3, #2
 8002f38:	4618      	mov	r0, r3
 8002f3a:	3710      	adds	r7, #16
 8002f3c:	46bd      	mov	sp, r7
 8002f3e:	bd80      	pop	{r7, pc}

08002f40 <HAL_UART_IRQHandler>:
 8002f40:	b580      	push	{r7, lr}
 8002f42:	b0ba      	sub	sp, #232	@ 0xe8
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	68db      	ldr	r3, [r3, #12]
 8002f58:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	695b      	ldr	r3, [r3, #20]
 8002f62:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8002f66:	2300      	movs	r3, #0
 8002f68:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8002f72:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f76:	f003 030f 	and.w	r3, r3, #15
 8002f7a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002f7e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	d10f      	bne.n	8002fa6 <HAL_UART_IRQHandler+0x66>
 8002f86:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002f8a:	f003 0320 	and.w	r3, r3, #32
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d009      	beq.n	8002fa6 <HAL_UART_IRQHandler+0x66>
 8002f92:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002f96:	f003 0320 	and.w	r3, r3, #32
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d003      	beq.n	8002fa6 <HAL_UART_IRQHandler+0x66>
 8002f9e:	6878      	ldr	r0, [r7, #4]
 8002fa0:	f000 fb99 	bl	80036d6 <UART_Receive_IT>
 8002fa4:	e25b      	b.n	800345e <HAL_UART_IRQHandler+0x51e>
 8002fa6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	f000 80de 	beq.w	800316c <HAL_UART_IRQHandler+0x22c>
 8002fb0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002fb4:	f003 0301 	and.w	r3, r3, #1
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d106      	bne.n	8002fca <HAL_UART_IRQHandler+0x8a>
 8002fbc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002fc0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	f000 80d1 	beq.w	800316c <HAL_UART_IRQHandler+0x22c>
 8002fca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002fce:	f003 0301 	and.w	r3, r3, #1
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	d00b      	beq.n	8002fee <HAL_UART_IRQHandler+0xae>
 8002fd6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002fda:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d005      	beq.n	8002fee <HAL_UART_IRQHandler+0xae>
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fe6:	f043 0201 	orr.w	r2, r3, #1
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	645a      	str	r2, [r3, #68]	@ 0x44
 8002fee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002ff2:	f003 0304 	and.w	r3, r3, #4
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	d00b      	beq.n	8003012 <HAL_UART_IRQHandler+0xd2>
 8002ffa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002ffe:	f003 0301 	and.w	r3, r3, #1
 8003002:	2b00      	cmp	r3, #0
 8003004:	d005      	beq.n	8003012 <HAL_UART_IRQHandler+0xd2>
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800300a:	f043 0202 	orr.w	r2, r3, #2
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	645a      	str	r2, [r3, #68]	@ 0x44
 8003012:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003016:	f003 0302 	and.w	r3, r3, #2
 800301a:	2b00      	cmp	r3, #0
 800301c:	d00b      	beq.n	8003036 <HAL_UART_IRQHandler+0xf6>
 800301e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003022:	f003 0301 	and.w	r3, r3, #1
 8003026:	2b00      	cmp	r3, #0
 8003028:	d005      	beq.n	8003036 <HAL_UART_IRQHandler+0xf6>
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800302e:	f043 0204 	orr.w	r2, r3, #4
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	645a      	str	r2, [r3, #68]	@ 0x44
 8003036:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800303a:	f003 0308 	and.w	r3, r3, #8
 800303e:	2b00      	cmp	r3, #0
 8003040:	d011      	beq.n	8003066 <HAL_UART_IRQHandler+0x126>
 8003042:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003046:	f003 0320 	and.w	r3, r3, #32
 800304a:	2b00      	cmp	r3, #0
 800304c:	d105      	bne.n	800305a <HAL_UART_IRQHandler+0x11a>
 800304e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003052:	f003 0301 	and.w	r3, r3, #1
 8003056:	2b00      	cmp	r3, #0
 8003058:	d005      	beq.n	8003066 <HAL_UART_IRQHandler+0x126>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800305e:	f043 0208 	orr.w	r2, r3, #8
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	645a      	str	r2, [r3, #68]	@ 0x44
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800306a:	2b00      	cmp	r3, #0
 800306c:	f000 81f2 	beq.w	8003454 <HAL_UART_IRQHandler+0x514>
 8003070:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003074:	f003 0320 	and.w	r3, r3, #32
 8003078:	2b00      	cmp	r3, #0
 800307a:	d008      	beq.n	800308e <HAL_UART_IRQHandler+0x14e>
 800307c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003080:	f003 0320 	and.w	r3, r3, #32
 8003084:	2b00      	cmp	r3, #0
 8003086:	d002      	beq.n	800308e <HAL_UART_IRQHandler+0x14e>
 8003088:	6878      	ldr	r0, [r7, #4]
 800308a:	f000 fb24 	bl	80036d6 <UART_Receive_IT>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	695b      	ldr	r3, [r3, #20]
 8003094:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003098:	2b40      	cmp	r3, #64	@ 0x40
 800309a:	bf0c      	ite	eq
 800309c:	2301      	moveq	r3, #1
 800309e:	2300      	movne	r3, #0
 80030a0:	b2db      	uxtb	r3, r3
 80030a2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80030aa:	f003 0308 	and.w	r3, r3, #8
 80030ae:	2b00      	cmp	r3, #0
 80030b0:	d103      	bne.n	80030ba <HAL_UART_IRQHandler+0x17a>
 80030b2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d04f      	beq.n	800315a <HAL_UART_IRQHandler+0x21a>
 80030ba:	6878      	ldr	r0, [r7, #4]
 80030bc:	f000 fa2c 	bl	8003518 <UART_EndRxTransfer>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	695b      	ldr	r3, [r3, #20]
 80030c6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80030ca:	2b40      	cmp	r3, #64	@ 0x40
 80030cc:	d141      	bne.n	8003152 <HAL_UART_IRQHandler+0x212>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	3314      	adds	r3, #20
 80030d4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80030d8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80030dc:	e853 3f00 	ldrex	r3, [r3]
 80030e0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80030e4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80030e8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80030ec:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	3314      	adds	r3, #20
 80030f6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80030fa:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80030fe:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003102:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003106:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800310a:	e841 2300 	strex	r3, r2, [r1]
 800310e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003112:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003116:	2b00      	cmp	r3, #0
 8003118:	d1d9      	bne.n	80030ce <HAL_UART_IRQHandler+0x18e>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800311e:	2b00      	cmp	r3, #0
 8003120:	d013      	beq.n	800314a <HAL_UART_IRQHandler+0x20a>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003126:	4a7e      	ldr	r2, [pc, #504]	@ (8003320 <HAL_UART_IRQHandler+0x3e0>)
 8003128:	651a      	str	r2, [r3, #80]	@ 0x50
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800312e:	4618      	mov	r0, r3
 8003130:	f7fe fed5 	bl	8001ede <HAL_DMA_Abort_IT>
 8003134:	4603      	mov	r3, r0
 8003136:	2b00      	cmp	r3, #0
 8003138:	d016      	beq.n	8003168 <HAL_UART_IRQHandler+0x228>
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800313e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003140:	687a      	ldr	r2, [r7, #4]
 8003142:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003144:	4610      	mov	r0, r2
 8003146:	4798      	blx	r3
 8003148:	e00e      	b.n	8003168 <HAL_UART_IRQHandler+0x228>
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f000 f994 	bl	8003478 <HAL_UART_ErrorCallback>
 8003150:	e00a      	b.n	8003168 <HAL_UART_IRQHandler+0x228>
 8003152:	6878      	ldr	r0, [r7, #4]
 8003154:	f000 f990 	bl	8003478 <HAL_UART_ErrorCallback>
 8003158:	e006      	b.n	8003168 <HAL_UART_IRQHandler+0x228>
 800315a:	6878      	ldr	r0, [r7, #4]
 800315c:	f000 f98c 	bl	8003478 <HAL_UART_ErrorCallback>
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	2200      	movs	r2, #0
 8003164:	645a      	str	r2, [r3, #68]	@ 0x44
 8003166:	e175      	b.n	8003454 <HAL_UART_IRQHandler+0x514>
 8003168:	bf00      	nop
 800316a:	e173      	b.n	8003454 <HAL_UART_IRQHandler+0x514>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003170:	2b01      	cmp	r3, #1
 8003172:	f040 814f 	bne.w	8003414 <HAL_UART_IRQHandler+0x4d4>
 8003176:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800317a:	f003 0310 	and.w	r3, r3, #16
 800317e:	2b00      	cmp	r3, #0
 8003180:	f000 8148 	beq.w	8003414 <HAL_UART_IRQHandler+0x4d4>
 8003184:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003188:	f003 0310 	and.w	r3, r3, #16
 800318c:	2b00      	cmp	r3, #0
 800318e:	f000 8141 	beq.w	8003414 <HAL_UART_IRQHandler+0x4d4>
 8003192:	2300      	movs	r3, #0
 8003194:	60bb      	str	r3, [r7, #8]
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	60bb      	str	r3, [r7, #8]
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	685b      	ldr	r3, [r3, #4]
 80031a4:	60bb      	str	r3, [r7, #8]
 80031a6:	68bb      	ldr	r3, [r7, #8]
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	695b      	ldr	r3, [r3, #20]
 80031ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80031b2:	2b40      	cmp	r3, #64	@ 0x40
 80031b4:	f040 80b6 	bne.w	8003324 <HAL_UART_IRQHandler+0x3e4>
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	685b      	ldr	r3, [r3, #4]
 80031c0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80031c4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	f000 8145 	beq.w	8003458 <HAL_UART_IRQHandler+0x518>
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80031d2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80031d6:	429a      	cmp	r2, r3
 80031d8:	f080 813e 	bcs.w	8003458 <HAL_UART_IRQHandler+0x518>
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80031e2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80031e8:	69db      	ldr	r3, [r3, #28]
 80031ea:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80031ee:	f000 8088 	beq.w	8003302 <HAL_UART_IRQHandler+0x3c2>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	330c      	adds	r3, #12
 80031f8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80031fc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003200:	e853 3f00 	ldrex	r3, [r3]
 8003204:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003208:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800320c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003210:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	330c      	adds	r3, #12
 800321a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800321e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003222:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003226:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800322a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800322e:	e841 2300 	strex	r3, r2, [r1]
 8003232:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003236:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800323a:	2b00      	cmp	r3, #0
 800323c:	d1d9      	bne.n	80031f2 <HAL_UART_IRQHandler+0x2b2>
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	3314      	adds	r3, #20
 8003244:	677b      	str	r3, [r7, #116]	@ 0x74
 8003246:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003248:	e853 3f00 	ldrex	r3, [r3]
 800324c:	673b      	str	r3, [r7, #112]	@ 0x70
 800324e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003250:	f023 0301 	bic.w	r3, r3, #1
 8003254:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	3314      	adds	r3, #20
 800325e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003262:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8003266:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003268:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800326a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800326e:	e841 2300 	strex	r3, r2, [r1]
 8003272:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003274:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003276:	2b00      	cmp	r3, #0
 8003278:	d1e1      	bne.n	800323e <HAL_UART_IRQHandler+0x2fe>
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	3314      	adds	r3, #20
 8003280:	663b      	str	r3, [r7, #96]	@ 0x60
 8003282:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003284:	e853 3f00 	ldrex	r3, [r3]
 8003288:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800328a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800328c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003290:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	3314      	adds	r3, #20
 800329a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800329e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80032a0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80032a2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80032a4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80032a6:	e841 2300 	strex	r3, r2, [r1]
 80032aa:	667b      	str	r3, [r7, #100]	@ 0x64
 80032ac:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d1e3      	bne.n	800327a <HAL_UART_IRQHandler+0x33a>
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	2220      	movs	r2, #32
 80032b6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	2200      	movs	r2, #0
 80032be:	631a      	str	r2, [r3, #48]	@ 0x30
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	330c      	adds	r3, #12
 80032c6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80032c8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80032ca:	e853 3f00 	ldrex	r3, [r3]
 80032ce:	64bb      	str	r3, [r7, #72]	@ 0x48
 80032d0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80032d2:	f023 0310 	bic.w	r3, r3, #16
 80032d6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	330c      	adds	r3, #12
 80032e0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80032e4:	65ba      	str	r2, [r7, #88]	@ 0x58
 80032e6:	657b      	str	r3, [r7, #84]	@ 0x54
 80032e8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80032ea:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80032ec:	e841 2300 	strex	r3, r2, [r1]
 80032f0:	653b      	str	r3, [r7, #80]	@ 0x50
 80032f2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d1e3      	bne.n	80032c0 <HAL_UART_IRQHandler+0x380>
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80032fc:	4618      	mov	r0, r3
 80032fe:	f7fe fd7e 	bl	8001dfe <HAL_DMA_Abort>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	2202      	movs	r2, #2
 8003306:	635a      	str	r2, [r3, #52]	@ 0x34
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003310:	b29b      	uxth	r3, r3
 8003312:	1ad3      	subs	r3, r2, r3
 8003314:	b29b      	uxth	r3, r3
 8003316:	4619      	mov	r1, r3
 8003318:	6878      	ldr	r0, [r7, #4]
 800331a:	f000 f8b7 	bl	800348c <HAL_UARTEx_RxEventCallback>
 800331e:	e09b      	b.n	8003458 <HAL_UART_IRQHandler+0x518>
 8003320:	080035df 	.word	0x080035df
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800332c:	b29b      	uxth	r3, r3
 800332e:	1ad3      	subs	r3, r2, r3
 8003330:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003338:	b29b      	uxth	r3, r3
 800333a:	2b00      	cmp	r3, #0
 800333c:	f000 808e 	beq.w	800345c <HAL_UART_IRQHandler+0x51c>
 8003340:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003344:	2b00      	cmp	r3, #0
 8003346:	f000 8089 	beq.w	800345c <HAL_UART_IRQHandler+0x51c>
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	330c      	adds	r3, #12
 8003350:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003352:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003354:	e853 3f00 	ldrex	r3, [r3]
 8003358:	637b      	str	r3, [r7, #52]	@ 0x34
 800335a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800335c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003360:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	330c      	adds	r3, #12
 800336a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800336e:	647a      	str	r2, [r7, #68]	@ 0x44
 8003370:	643b      	str	r3, [r7, #64]	@ 0x40
 8003372:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003374:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003376:	e841 2300 	strex	r3, r2, [r1]
 800337a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800337c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800337e:	2b00      	cmp	r3, #0
 8003380:	d1e3      	bne.n	800334a <HAL_UART_IRQHandler+0x40a>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	3314      	adds	r3, #20
 8003388:	627b      	str	r3, [r7, #36]	@ 0x24
 800338a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800338c:	e853 3f00 	ldrex	r3, [r3]
 8003390:	623b      	str	r3, [r7, #32]
 8003392:	6a3b      	ldr	r3, [r7, #32]
 8003394:	f023 0301 	bic.w	r3, r3, #1
 8003398:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	3314      	adds	r3, #20
 80033a2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80033a6:	633a      	str	r2, [r7, #48]	@ 0x30
 80033a8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033aa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80033ac:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80033ae:	e841 2300 	strex	r3, r2, [r1]
 80033b2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d1e3      	bne.n	8003382 <HAL_UART_IRQHandler+0x442>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	2220      	movs	r2, #32
 80033be:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	2200      	movs	r2, #0
 80033c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	330c      	adds	r3, #12
 80033ce:	613b      	str	r3, [r7, #16]
 80033d0:	693b      	ldr	r3, [r7, #16]
 80033d2:	e853 3f00 	ldrex	r3, [r3]
 80033d6:	60fb      	str	r3, [r7, #12]
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	f023 0310 	bic.w	r3, r3, #16
 80033de:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	330c      	adds	r3, #12
 80033e8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80033ec:	61fa      	str	r2, [r7, #28]
 80033ee:	61bb      	str	r3, [r7, #24]
 80033f0:	69b9      	ldr	r1, [r7, #24]
 80033f2:	69fa      	ldr	r2, [r7, #28]
 80033f4:	e841 2300 	strex	r3, r2, [r1]
 80033f8:	617b      	str	r3, [r7, #20]
 80033fa:	697b      	ldr	r3, [r7, #20]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d1e3      	bne.n	80033c8 <HAL_UART_IRQHandler+0x488>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	2202      	movs	r2, #2
 8003404:	635a      	str	r2, [r3, #52]	@ 0x34
 8003406:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800340a:	4619      	mov	r1, r3
 800340c:	6878      	ldr	r0, [r7, #4]
 800340e:	f000 f83d 	bl	800348c <HAL_UARTEx_RxEventCallback>
 8003412:	e023      	b.n	800345c <HAL_UART_IRQHandler+0x51c>
 8003414:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003418:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800341c:	2b00      	cmp	r3, #0
 800341e:	d009      	beq.n	8003434 <HAL_UART_IRQHandler+0x4f4>
 8003420:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003424:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003428:	2b00      	cmp	r3, #0
 800342a:	d003      	beq.n	8003434 <HAL_UART_IRQHandler+0x4f4>
 800342c:	6878      	ldr	r0, [r7, #4]
 800342e:	f000 f8ea 	bl	8003606 <UART_Transmit_IT>
 8003432:	e014      	b.n	800345e <HAL_UART_IRQHandler+0x51e>
 8003434:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003438:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800343c:	2b00      	cmp	r3, #0
 800343e:	d00e      	beq.n	800345e <HAL_UART_IRQHandler+0x51e>
 8003440:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003444:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003448:	2b00      	cmp	r3, #0
 800344a:	d008      	beq.n	800345e <HAL_UART_IRQHandler+0x51e>
 800344c:	6878      	ldr	r0, [r7, #4]
 800344e:	f000 f92a 	bl	80036a6 <UART_EndTransmit_IT>
 8003452:	e004      	b.n	800345e <HAL_UART_IRQHandler+0x51e>
 8003454:	bf00      	nop
 8003456:	e002      	b.n	800345e <HAL_UART_IRQHandler+0x51e>
 8003458:	bf00      	nop
 800345a:	e000      	b.n	800345e <HAL_UART_IRQHandler+0x51e>
 800345c:	bf00      	nop
 800345e:	37e8      	adds	r7, #232	@ 0xe8
 8003460:	46bd      	mov	sp, r7
 8003462:	bd80      	pop	{r7, pc}

08003464 <HAL_UART_TxCpltCallback>:
 8003464:	b480      	push	{r7}
 8003466:	b083      	sub	sp, #12
 8003468:	af00      	add	r7, sp, #0
 800346a:	6078      	str	r0, [r7, #4]
 800346c:	bf00      	nop
 800346e:	370c      	adds	r7, #12
 8003470:	46bd      	mov	sp, r7
 8003472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003476:	4770      	bx	lr

08003478 <HAL_UART_ErrorCallback>:
 8003478:	b480      	push	{r7}
 800347a:	b083      	sub	sp, #12
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	bf00      	nop
 8003482:	370c      	adds	r7, #12
 8003484:	46bd      	mov	sp, r7
 8003486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800348a:	4770      	bx	lr

0800348c <HAL_UARTEx_RxEventCallback>:
 800348c:	b480      	push	{r7}
 800348e:	b083      	sub	sp, #12
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
 8003494:	460b      	mov	r3, r1
 8003496:	807b      	strh	r3, [r7, #2]
 8003498:	bf00      	nop
 800349a:	370c      	adds	r7, #12
 800349c:	46bd      	mov	sp, r7
 800349e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a2:	4770      	bx	lr

080034a4 <UART_Start_Receive_IT>:
 80034a4:	b480      	push	{r7}
 80034a6:	b085      	sub	sp, #20
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	60f8      	str	r0, [r7, #12]
 80034ac:	60b9      	str	r1, [r7, #8]
 80034ae:	4613      	mov	r3, r2
 80034b0:	80fb      	strh	r3, [r7, #6]
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	68ba      	ldr	r2, [r7, #8]
 80034b6:	629a      	str	r2, [r3, #40]	@ 0x28
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	88fa      	ldrh	r2, [r7, #6]
 80034bc:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	88fa      	ldrh	r2, [r7, #6]
 80034c2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	2200      	movs	r2, #0
 80034c8:	645a      	str	r2, [r3, #68]	@ 0x44
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	2222      	movs	r2, #34	@ 0x22
 80034ce:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	691b      	ldr	r3, [r3, #16]
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	d007      	beq.n	80034ea <UART_Start_Receive_IT+0x46>
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	68da      	ldr	r2, [r3, #12]
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80034e8:	60da      	str	r2, [r3, #12]
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	695a      	ldr	r2, [r3, #20]
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	f042 0201 	orr.w	r2, r2, #1
 80034f8:	615a      	str	r2, [r3, #20]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	68da      	ldr	r2, [r3, #12]
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	f042 0220 	orr.w	r2, r2, #32
 8003508:	60da      	str	r2, [r3, #12]
 800350a:	2300      	movs	r3, #0
 800350c:	4618      	mov	r0, r3
 800350e:	3714      	adds	r7, #20
 8003510:	46bd      	mov	sp, r7
 8003512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003516:	4770      	bx	lr

08003518 <UART_EndRxTransfer>:
 8003518:	b480      	push	{r7}
 800351a:	b095      	sub	sp, #84	@ 0x54
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	330c      	adds	r3, #12
 8003526:	637b      	str	r3, [r7, #52]	@ 0x34
 8003528:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800352a:	e853 3f00 	ldrex	r3, [r3]
 800352e:	633b      	str	r3, [r7, #48]	@ 0x30
 8003530:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003532:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003536:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	330c      	adds	r3, #12
 800353e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003540:	643a      	str	r2, [r7, #64]	@ 0x40
 8003542:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003544:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003546:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003548:	e841 2300 	strex	r3, r2, [r1]
 800354c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800354e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003550:	2b00      	cmp	r3, #0
 8003552:	d1e5      	bne.n	8003520 <UART_EndRxTransfer+0x8>
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	681b      	ldr	r3, [r3, #0]
 8003558:	3314      	adds	r3, #20
 800355a:	623b      	str	r3, [r7, #32]
 800355c:	6a3b      	ldr	r3, [r7, #32]
 800355e:	e853 3f00 	ldrex	r3, [r3]
 8003562:	61fb      	str	r3, [r7, #28]
 8003564:	69fb      	ldr	r3, [r7, #28]
 8003566:	f023 0301 	bic.w	r3, r3, #1
 800356a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	3314      	adds	r3, #20
 8003572:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003574:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003576:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003578:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800357a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800357c:	e841 2300 	strex	r3, r2, [r1]
 8003580:	627b      	str	r3, [r7, #36]	@ 0x24
 8003582:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003584:	2b00      	cmp	r3, #0
 8003586:	d1e5      	bne.n	8003554 <UART_EndRxTransfer+0x3c>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800358c:	2b01      	cmp	r3, #1
 800358e:	d119      	bne.n	80035c4 <UART_EndRxTransfer+0xac>
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	330c      	adds	r3, #12
 8003596:	60fb      	str	r3, [r7, #12]
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	e853 3f00 	ldrex	r3, [r3]
 800359e:	60bb      	str	r3, [r7, #8]
 80035a0:	68bb      	ldr	r3, [r7, #8]
 80035a2:	f023 0310 	bic.w	r3, r3, #16
 80035a6:	647b      	str	r3, [r7, #68]	@ 0x44
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	330c      	adds	r3, #12
 80035ae:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80035b0:	61ba      	str	r2, [r7, #24]
 80035b2:	617b      	str	r3, [r7, #20]
 80035b4:	6979      	ldr	r1, [r7, #20]
 80035b6:	69ba      	ldr	r2, [r7, #24]
 80035b8:	e841 2300 	strex	r3, r2, [r1]
 80035bc:	613b      	str	r3, [r7, #16]
 80035be:	693b      	ldr	r3, [r7, #16]
 80035c0:	2b00      	cmp	r3, #0
 80035c2:	d1e5      	bne.n	8003590 <UART_EndRxTransfer+0x78>
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	2220      	movs	r2, #32
 80035c8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	2200      	movs	r2, #0
 80035d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80035d2:	bf00      	nop
 80035d4:	3754      	adds	r7, #84	@ 0x54
 80035d6:	46bd      	mov	sp, r7
 80035d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035dc:	4770      	bx	lr

080035de <UART_DMAAbortOnError>:
 80035de:	b580      	push	{r7, lr}
 80035e0:	b084      	sub	sp, #16
 80035e2:	af00      	add	r7, sp, #0
 80035e4:	6078      	str	r0, [r7, #4]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80035ea:	60fb      	str	r3, [r7, #12]
 80035ec:	68fb      	ldr	r3, [r7, #12]
 80035ee:	2200      	movs	r2, #0
 80035f0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80035f2:	68fb      	ldr	r3, [r7, #12]
 80035f4:	2200      	movs	r2, #0
 80035f6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80035f8:	68f8      	ldr	r0, [r7, #12]
 80035fa:	f7ff ff3d 	bl	8003478 <HAL_UART_ErrorCallback>
 80035fe:	bf00      	nop
 8003600:	3710      	adds	r7, #16
 8003602:	46bd      	mov	sp, r7
 8003604:	bd80      	pop	{r7, pc}

08003606 <UART_Transmit_IT>:
 8003606:	b480      	push	{r7}
 8003608:	b085      	sub	sp, #20
 800360a:	af00      	add	r7, sp, #0
 800360c:	6078      	str	r0, [r7, #4]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003614:	b2db      	uxtb	r3, r3
 8003616:	2b21      	cmp	r3, #33	@ 0x21
 8003618:	d13e      	bne.n	8003698 <UART_Transmit_IT+0x92>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	689b      	ldr	r3, [r3, #8]
 800361e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003622:	d114      	bne.n	800364e <UART_Transmit_IT+0x48>
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	691b      	ldr	r3, [r3, #16]
 8003628:	2b00      	cmp	r3, #0
 800362a:	d110      	bne.n	800364e <UART_Transmit_IT+0x48>
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	6a1b      	ldr	r3, [r3, #32]
 8003630:	60fb      	str	r3, [r7, #12]
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	881b      	ldrh	r3, [r3, #0]
 8003636:	461a      	mov	r2, r3
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003640:	605a      	str	r2, [r3, #4]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	6a1b      	ldr	r3, [r3, #32]
 8003646:	1c9a      	adds	r2, r3, #2
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	621a      	str	r2, [r3, #32]
 800364c:	e008      	b.n	8003660 <UART_Transmit_IT+0x5a>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	6a1b      	ldr	r3, [r3, #32]
 8003652:	1c59      	adds	r1, r3, #1
 8003654:	687a      	ldr	r2, [r7, #4]
 8003656:	6211      	str	r1, [r2, #32]
 8003658:	781a      	ldrb	r2, [r3, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	605a      	str	r2, [r3, #4]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003664:	b29b      	uxth	r3, r3
 8003666:	3b01      	subs	r3, #1
 8003668:	b29b      	uxth	r3, r3
 800366a:	687a      	ldr	r2, [r7, #4]
 800366c:	4619      	mov	r1, r3
 800366e:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8003670:	2b00      	cmp	r3, #0
 8003672:	d10f      	bne.n	8003694 <UART_Transmit_IT+0x8e>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	68da      	ldr	r2, [r3, #12]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003682:	60da      	str	r2, [r3, #12]
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	68da      	ldr	r2, [r3, #12]
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003692:	60da      	str	r2, [r3, #12]
 8003694:	2300      	movs	r3, #0
 8003696:	e000      	b.n	800369a <UART_Transmit_IT+0x94>
 8003698:	2302      	movs	r3, #2
 800369a:	4618      	mov	r0, r3
 800369c:	3714      	adds	r7, #20
 800369e:	46bd      	mov	sp, r7
 80036a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a4:	4770      	bx	lr

080036a6 <UART_EndTransmit_IT>:
 80036a6:	b580      	push	{r7, lr}
 80036a8:	b082      	sub	sp, #8
 80036aa:	af00      	add	r7, sp, #0
 80036ac:	6078      	str	r0, [r7, #4]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	68da      	ldr	r2, [r3, #12]
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80036bc:	60da      	str	r2, [r3, #12]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	2220      	movs	r2, #32
 80036c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80036c6:	6878      	ldr	r0, [r7, #4]
 80036c8:	f7ff fecc 	bl	8003464 <HAL_UART_TxCpltCallback>
 80036cc:	2300      	movs	r3, #0
 80036ce:	4618      	mov	r0, r3
 80036d0:	3708      	adds	r7, #8
 80036d2:	46bd      	mov	sp, r7
 80036d4:	bd80      	pop	{r7, pc}

080036d6 <UART_Receive_IT>:
 80036d6:	b580      	push	{r7, lr}
 80036d8:	b08c      	sub	sp, #48	@ 0x30
 80036da:	af00      	add	r7, sp, #0
 80036dc:	6078      	str	r0, [r7, #4]
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80036e4:	b2db      	uxtb	r3, r3
 80036e6:	2b22      	cmp	r3, #34	@ 0x22
 80036e8:	f040 80ae 	bne.w	8003848 <UART_Receive_IT+0x172>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	689b      	ldr	r3, [r3, #8]
 80036f0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80036f4:	d117      	bne.n	8003726 <UART_Receive_IT+0x50>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	691b      	ldr	r3, [r3, #16]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d113      	bne.n	8003726 <UART_Receive_IT+0x50>
 80036fe:	2300      	movs	r3, #0
 8003700:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003706:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	685b      	ldr	r3, [r3, #4]
 800370e:	b29b      	uxth	r3, r3
 8003710:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003714:	b29a      	uxth	r2, r3
 8003716:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003718:	801a      	strh	r2, [r3, #0]
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800371e:	1c9a      	adds	r2, r3, #2
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	629a      	str	r2, [r3, #40]	@ 0x28
 8003724:	e026      	b.n	8003774 <UART_Receive_IT+0x9e>
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800372a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800372c:	2300      	movs	r3, #0
 800372e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	689b      	ldr	r3, [r3, #8]
 8003734:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003738:	d007      	beq.n	800374a <UART_Receive_IT+0x74>
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	689b      	ldr	r3, [r3, #8]
 800373e:	2b00      	cmp	r3, #0
 8003740:	d10a      	bne.n	8003758 <UART_Receive_IT+0x82>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	691b      	ldr	r3, [r3, #16]
 8003746:	2b00      	cmp	r3, #0
 8003748:	d106      	bne.n	8003758 <UART_Receive_IT+0x82>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	685b      	ldr	r3, [r3, #4]
 8003750:	b2da      	uxtb	r2, r3
 8003752:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003754:	701a      	strb	r2, [r3, #0]
 8003756:	e008      	b.n	800376a <UART_Receive_IT+0x94>
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	685b      	ldr	r3, [r3, #4]
 800375e:	b2db      	uxtb	r3, r3
 8003760:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003764:	b2da      	uxtb	r2, r3
 8003766:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003768:	701a      	strb	r2, [r3, #0]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800376e:	1c5a      	adds	r2, r3, #1
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	629a      	str	r2, [r3, #40]	@ 0x28
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003778:	b29b      	uxth	r3, r3
 800377a:	3b01      	subs	r3, #1
 800377c:	b29b      	uxth	r3, r3
 800377e:	687a      	ldr	r2, [r7, #4]
 8003780:	4619      	mov	r1, r3
 8003782:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8003784:	2b00      	cmp	r3, #0
 8003786:	d15d      	bne.n	8003844 <UART_Receive_IT+0x16e>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	68da      	ldr	r2, [r3, #12]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	f022 0220 	bic.w	r2, r2, #32
 8003796:	60da      	str	r2, [r3, #12]
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	68da      	ldr	r2, [r3, #12]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80037a6:	60da      	str	r2, [r3, #12]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	695a      	ldr	r2, [r3, #20]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	f022 0201 	bic.w	r2, r2, #1
 80037b6:	615a      	str	r2, [r3, #20]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	2220      	movs	r2, #32
 80037bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	2200      	movs	r2, #0
 80037c4:	635a      	str	r2, [r3, #52]	@ 0x34
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80037ca:	2b01      	cmp	r3, #1
 80037cc:	d135      	bne.n	800383a <UART_Receive_IT+0x164>
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	2200      	movs	r2, #0
 80037d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	330c      	adds	r3, #12
 80037da:	617b      	str	r3, [r7, #20]
 80037dc:	697b      	ldr	r3, [r7, #20]
 80037de:	e853 3f00 	ldrex	r3, [r3]
 80037e2:	613b      	str	r3, [r7, #16]
 80037e4:	693b      	ldr	r3, [r7, #16]
 80037e6:	f023 0310 	bic.w	r3, r3, #16
 80037ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	330c      	adds	r3, #12
 80037f2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80037f4:	623a      	str	r2, [r7, #32]
 80037f6:	61fb      	str	r3, [r7, #28]
 80037f8:	69f9      	ldr	r1, [r7, #28]
 80037fa:	6a3a      	ldr	r2, [r7, #32]
 80037fc:	e841 2300 	strex	r3, r2, [r1]
 8003800:	61bb      	str	r3, [r7, #24]
 8003802:	69bb      	ldr	r3, [r7, #24]
 8003804:	2b00      	cmp	r3, #0
 8003806:	d1e5      	bne.n	80037d4 <UART_Receive_IT+0xfe>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	f003 0310 	and.w	r3, r3, #16
 8003812:	2b10      	cmp	r3, #16
 8003814:	d10a      	bne.n	800382c <UART_Receive_IT+0x156>
 8003816:	2300      	movs	r3, #0
 8003818:	60fb      	str	r3, [r7, #12]
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	60fb      	str	r3, [r7, #12]
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	685b      	ldr	r3, [r3, #4]
 8003828:	60fb      	str	r3, [r7, #12]
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8003830:	4619      	mov	r1, r3
 8003832:	6878      	ldr	r0, [r7, #4]
 8003834:	f7ff fe2a 	bl	800348c <HAL_UARTEx_RxEventCallback>
 8003838:	e002      	b.n	8003840 <UART_Receive_IT+0x16a>
 800383a:	6878      	ldr	r0, [r7, #4]
 800383c:	f7fd fde6 	bl	800140c <HAL_UART_RxCpltCallback>
 8003840:	2300      	movs	r3, #0
 8003842:	e002      	b.n	800384a <UART_Receive_IT+0x174>
 8003844:	2300      	movs	r3, #0
 8003846:	e000      	b.n	800384a <UART_Receive_IT+0x174>
 8003848:	2302      	movs	r3, #2
 800384a:	4618      	mov	r0, r3
 800384c:	3730      	adds	r7, #48	@ 0x30
 800384e:	46bd      	mov	sp, r7
 8003850:	bd80      	pop	{r7, pc}
	...

08003854 <UART_SetConfig>:
 8003854:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003858:	b0c0      	sub	sp, #256	@ 0x100
 800385a:	af00      	add	r7, sp, #0
 800385c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003860:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	691b      	ldr	r3, [r3, #16]
 8003868:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800386c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003870:	68d9      	ldr	r1, [r3, #12]
 8003872:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003876:	681a      	ldr	r2, [r3, #0]
 8003878:	ea40 0301 	orr.w	r3, r0, r1
 800387c:	6113      	str	r3, [r2, #16]
 800387e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003882:	689a      	ldr	r2, [r3, #8]
 8003884:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003888:	691b      	ldr	r3, [r3, #16]
 800388a:	431a      	orrs	r2, r3
 800388c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003890:	695b      	ldr	r3, [r3, #20]
 8003892:	431a      	orrs	r2, r3
 8003894:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003898:	69db      	ldr	r3, [r3, #28]
 800389a:	4313      	orrs	r3, r2
 800389c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80038a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	68db      	ldr	r3, [r3, #12]
 80038a8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80038ac:	f021 010c 	bic.w	r1, r1, #12
 80038b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038b4:	681a      	ldr	r2, [r3, #0]
 80038b6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80038ba:	430b      	orrs	r3, r1
 80038bc:	60d3      	str	r3, [r2, #12]
 80038be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	695b      	ldr	r3, [r3, #20]
 80038c6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80038ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038ce:	6999      	ldr	r1, [r3, #24]
 80038d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038d4:	681a      	ldr	r2, [r3, #0]
 80038d6:	ea40 0301 	orr.w	r3, r0, r1
 80038da:	6153      	str	r3, [r2, #20]
 80038dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038e0:	681a      	ldr	r2, [r3, #0]
 80038e2:	4b8f      	ldr	r3, [pc, #572]	@ (8003b20 <UART_SetConfig+0x2cc>)
 80038e4:	429a      	cmp	r2, r3
 80038e6:	d005      	beq.n	80038f4 <UART_SetConfig+0xa0>
 80038e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80038ec:	681a      	ldr	r2, [r3, #0]
 80038ee:	4b8d      	ldr	r3, [pc, #564]	@ (8003b24 <UART_SetConfig+0x2d0>)
 80038f0:	429a      	cmp	r2, r3
 80038f2:	d104      	bne.n	80038fe <UART_SetConfig+0xaa>
 80038f4:	f7fe fdca 	bl	800248c <HAL_RCC_GetPCLK2Freq>
 80038f8:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80038fc:	e003      	b.n	8003906 <UART_SetConfig+0xb2>
 80038fe:	f7fe fdb1 	bl	8002464 <HAL_RCC_GetPCLK1Freq>
 8003902:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003906:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800390a:	69db      	ldr	r3, [r3, #28]
 800390c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003910:	f040 810c 	bne.w	8003b2c <UART_SetConfig+0x2d8>
 8003914:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003918:	2200      	movs	r2, #0
 800391a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800391e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8003922:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8003926:	4622      	mov	r2, r4
 8003928:	462b      	mov	r3, r5
 800392a:	1891      	adds	r1, r2, r2
 800392c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800392e:	415b      	adcs	r3, r3
 8003930:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003932:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003936:	4621      	mov	r1, r4
 8003938:	eb12 0801 	adds.w	r8, r2, r1
 800393c:	4629      	mov	r1, r5
 800393e:	eb43 0901 	adc.w	r9, r3, r1
 8003942:	f04f 0200 	mov.w	r2, #0
 8003946:	f04f 0300 	mov.w	r3, #0
 800394a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800394e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003952:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003956:	4690      	mov	r8, r2
 8003958:	4699      	mov	r9, r3
 800395a:	4623      	mov	r3, r4
 800395c:	eb18 0303 	adds.w	r3, r8, r3
 8003960:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003964:	462b      	mov	r3, r5
 8003966:	eb49 0303 	adc.w	r3, r9, r3
 800396a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800396e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003972:	685b      	ldr	r3, [r3, #4]
 8003974:	2200      	movs	r2, #0
 8003976:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800397a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800397e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8003982:	460b      	mov	r3, r1
 8003984:	18db      	adds	r3, r3, r3
 8003986:	653b      	str	r3, [r7, #80]	@ 0x50
 8003988:	4613      	mov	r3, r2
 800398a:	eb42 0303 	adc.w	r3, r2, r3
 800398e:	657b      	str	r3, [r7, #84]	@ 0x54
 8003990:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8003994:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003998:	f7fc fc34 	bl	8000204 <__aeabi_uldivmod>
 800399c:	4602      	mov	r2, r0
 800399e:	460b      	mov	r3, r1
 80039a0:	4b61      	ldr	r3, [pc, #388]	@ (8003b28 <UART_SetConfig+0x2d4>)
 80039a2:	fba3 2302 	umull	r2, r3, r3, r2
 80039a6:	095b      	lsrs	r3, r3, #5
 80039a8:	011c      	lsls	r4, r3, #4
 80039aa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80039ae:	2200      	movs	r2, #0
 80039b0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80039b4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80039b8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80039bc:	4642      	mov	r2, r8
 80039be:	464b      	mov	r3, r9
 80039c0:	1891      	adds	r1, r2, r2
 80039c2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80039c4:	415b      	adcs	r3, r3
 80039c6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80039c8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80039cc:	4641      	mov	r1, r8
 80039ce:	eb12 0a01 	adds.w	sl, r2, r1
 80039d2:	4649      	mov	r1, r9
 80039d4:	eb43 0b01 	adc.w	fp, r3, r1
 80039d8:	f04f 0200 	mov.w	r2, #0
 80039dc:	f04f 0300 	mov.w	r3, #0
 80039e0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80039e4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80039e8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80039ec:	4692      	mov	sl, r2
 80039ee:	469b      	mov	fp, r3
 80039f0:	4643      	mov	r3, r8
 80039f2:	eb1a 0303 	adds.w	r3, sl, r3
 80039f6:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80039fa:	464b      	mov	r3, r9
 80039fc:	eb4b 0303 	adc.w	r3, fp, r3
 8003a00:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8003a04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003a08:	685b      	ldr	r3, [r3, #4]
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003a10:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8003a14:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8003a18:	460b      	mov	r3, r1
 8003a1a:	18db      	adds	r3, r3, r3
 8003a1c:	643b      	str	r3, [r7, #64]	@ 0x40
 8003a1e:	4613      	mov	r3, r2
 8003a20:	eb42 0303 	adc.w	r3, r2, r3
 8003a24:	647b      	str	r3, [r7, #68]	@ 0x44
 8003a26:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8003a2a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8003a2e:	f7fc fbe9 	bl	8000204 <__aeabi_uldivmod>
 8003a32:	4602      	mov	r2, r0
 8003a34:	460b      	mov	r3, r1
 8003a36:	4611      	mov	r1, r2
 8003a38:	4b3b      	ldr	r3, [pc, #236]	@ (8003b28 <UART_SetConfig+0x2d4>)
 8003a3a:	fba3 2301 	umull	r2, r3, r3, r1
 8003a3e:	095b      	lsrs	r3, r3, #5
 8003a40:	2264      	movs	r2, #100	@ 0x64
 8003a42:	fb02 f303 	mul.w	r3, r2, r3
 8003a46:	1acb      	subs	r3, r1, r3
 8003a48:	00db      	lsls	r3, r3, #3
 8003a4a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8003a4e:	4b36      	ldr	r3, [pc, #216]	@ (8003b28 <UART_SetConfig+0x2d4>)
 8003a50:	fba3 2302 	umull	r2, r3, r3, r2
 8003a54:	095b      	lsrs	r3, r3, #5
 8003a56:	005b      	lsls	r3, r3, #1
 8003a58:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003a5c:	441c      	add	r4, r3
 8003a5e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003a62:	2200      	movs	r2, #0
 8003a64:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003a68:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8003a6c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8003a70:	4642      	mov	r2, r8
 8003a72:	464b      	mov	r3, r9
 8003a74:	1891      	adds	r1, r2, r2
 8003a76:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003a78:	415b      	adcs	r3, r3
 8003a7a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003a7c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003a80:	4641      	mov	r1, r8
 8003a82:	1851      	adds	r1, r2, r1
 8003a84:	6339      	str	r1, [r7, #48]	@ 0x30
 8003a86:	4649      	mov	r1, r9
 8003a88:	414b      	adcs	r3, r1
 8003a8a:	637b      	str	r3, [r7, #52]	@ 0x34
 8003a8c:	f04f 0200 	mov.w	r2, #0
 8003a90:	f04f 0300 	mov.w	r3, #0
 8003a94:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003a98:	4659      	mov	r1, fp
 8003a9a:	00cb      	lsls	r3, r1, #3
 8003a9c:	4651      	mov	r1, sl
 8003a9e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003aa2:	4651      	mov	r1, sl
 8003aa4:	00ca      	lsls	r2, r1, #3
 8003aa6:	4610      	mov	r0, r2
 8003aa8:	4619      	mov	r1, r3
 8003aaa:	4603      	mov	r3, r0
 8003aac:	4642      	mov	r2, r8
 8003aae:	189b      	adds	r3, r3, r2
 8003ab0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003ab4:	464b      	mov	r3, r9
 8003ab6:	460a      	mov	r2, r1
 8003ab8:	eb42 0303 	adc.w	r3, r2, r3
 8003abc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003ac0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ac4:	685b      	ldr	r3, [r3, #4]
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003acc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8003ad0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8003ad4:	460b      	mov	r3, r1
 8003ad6:	18db      	adds	r3, r3, r3
 8003ad8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003ada:	4613      	mov	r3, r2
 8003adc:	eb42 0303 	adc.w	r3, r2, r3
 8003ae0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ae2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003ae6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8003aea:	f7fc fb8b 	bl	8000204 <__aeabi_uldivmod>
 8003aee:	4602      	mov	r2, r0
 8003af0:	460b      	mov	r3, r1
 8003af2:	4b0d      	ldr	r3, [pc, #52]	@ (8003b28 <UART_SetConfig+0x2d4>)
 8003af4:	fba3 1302 	umull	r1, r3, r3, r2
 8003af8:	095b      	lsrs	r3, r3, #5
 8003afa:	2164      	movs	r1, #100	@ 0x64
 8003afc:	fb01 f303 	mul.w	r3, r1, r3
 8003b00:	1ad3      	subs	r3, r2, r3
 8003b02:	00db      	lsls	r3, r3, #3
 8003b04:	3332      	adds	r3, #50	@ 0x32
 8003b06:	4a08      	ldr	r2, [pc, #32]	@ (8003b28 <UART_SetConfig+0x2d4>)
 8003b08:	fba2 2303 	umull	r2, r3, r2, r3
 8003b0c:	095b      	lsrs	r3, r3, #5
 8003b0e:	f003 0207 	and.w	r2, r3, #7
 8003b12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4422      	add	r2, r4
 8003b1a:	609a      	str	r2, [r3, #8]
 8003b1c:	e106      	b.n	8003d2c <UART_SetConfig+0x4d8>
 8003b1e:	bf00      	nop
 8003b20:	40011000 	.word	0x40011000
 8003b24:	40011400 	.word	0x40011400
 8003b28:	51eb851f 	.word	0x51eb851f
 8003b2c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003b30:	2200      	movs	r2, #0
 8003b32:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003b36:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8003b3a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8003b3e:	4642      	mov	r2, r8
 8003b40:	464b      	mov	r3, r9
 8003b42:	1891      	adds	r1, r2, r2
 8003b44:	6239      	str	r1, [r7, #32]
 8003b46:	415b      	adcs	r3, r3
 8003b48:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b4a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003b4e:	4641      	mov	r1, r8
 8003b50:	1854      	adds	r4, r2, r1
 8003b52:	4649      	mov	r1, r9
 8003b54:	eb43 0501 	adc.w	r5, r3, r1
 8003b58:	f04f 0200 	mov.w	r2, #0
 8003b5c:	f04f 0300 	mov.w	r3, #0
 8003b60:	00eb      	lsls	r3, r5, #3
 8003b62:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003b66:	00e2      	lsls	r2, r4, #3
 8003b68:	4614      	mov	r4, r2
 8003b6a:	461d      	mov	r5, r3
 8003b6c:	4643      	mov	r3, r8
 8003b6e:	18e3      	adds	r3, r4, r3
 8003b70:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003b74:	464b      	mov	r3, r9
 8003b76:	eb45 0303 	adc.w	r3, r5, r3
 8003b7a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003b7e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003b82:	685b      	ldr	r3, [r3, #4]
 8003b84:	2200      	movs	r2, #0
 8003b86:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003b8a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003b8e:	f04f 0200 	mov.w	r2, #0
 8003b92:	f04f 0300 	mov.w	r3, #0
 8003b96:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003b9a:	4629      	mov	r1, r5
 8003b9c:	008b      	lsls	r3, r1, #2
 8003b9e:	4621      	mov	r1, r4
 8003ba0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003ba4:	4621      	mov	r1, r4
 8003ba6:	008a      	lsls	r2, r1, #2
 8003ba8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8003bac:	f7fc fb2a 	bl	8000204 <__aeabi_uldivmod>
 8003bb0:	4602      	mov	r2, r0
 8003bb2:	460b      	mov	r3, r1
 8003bb4:	4b60      	ldr	r3, [pc, #384]	@ (8003d38 <UART_SetConfig+0x4e4>)
 8003bb6:	fba3 2302 	umull	r2, r3, r3, r2
 8003bba:	095b      	lsrs	r3, r3, #5
 8003bbc:	011c      	lsls	r4, r3, #4
 8003bbe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003bc2:	2200      	movs	r2, #0
 8003bc4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003bc8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003bcc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8003bd0:	4642      	mov	r2, r8
 8003bd2:	464b      	mov	r3, r9
 8003bd4:	1891      	adds	r1, r2, r2
 8003bd6:	61b9      	str	r1, [r7, #24]
 8003bd8:	415b      	adcs	r3, r3
 8003bda:	61fb      	str	r3, [r7, #28]
 8003bdc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003be0:	4641      	mov	r1, r8
 8003be2:	1851      	adds	r1, r2, r1
 8003be4:	6139      	str	r1, [r7, #16]
 8003be6:	4649      	mov	r1, r9
 8003be8:	414b      	adcs	r3, r1
 8003bea:	617b      	str	r3, [r7, #20]
 8003bec:	f04f 0200 	mov.w	r2, #0
 8003bf0:	f04f 0300 	mov.w	r3, #0
 8003bf4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003bf8:	4659      	mov	r1, fp
 8003bfa:	00cb      	lsls	r3, r1, #3
 8003bfc:	4651      	mov	r1, sl
 8003bfe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003c02:	4651      	mov	r1, sl
 8003c04:	00ca      	lsls	r2, r1, #3
 8003c06:	4610      	mov	r0, r2
 8003c08:	4619      	mov	r1, r3
 8003c0a:	4603      	mov	r3, r0
 8003c0c:	4642      	mov	r2, r8
 8003c0e:	189b      	adds	r3, r3, r2
 8003c10:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003c14:	464b      	mov	r3, r9
 8003c16:	460a      	mov	r2, r1
 8003c18:	eb42 0303 	adc.w	r3, r2, r3
 8003c1c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003c20:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003c24:	685b      	ldr	r3, [r3, #4]
 8003c26:	2200      	movs	r2, #0
 8003c28:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c2a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8003c2c:	f04f 0200 	mov.w	r2, #0
 8003c30:	f04f 0300 	mov.w	r3, #0
 8003c34:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003c38:	4649      	mov	r1, r9
 8003c3a:	008b      	lsls	r3, r1, #2
 8003c3c:	4641      	mov	r1, r8
 8003c3e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003c42:	4641      	mov	r1, r8
 8003c44:	008a      	lsls	r2, r1, #2
 8003c46:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8003c4a:	f7fc fadb 	bl	8000204 <__aeabi_uldivmod>
 8003c4e:	4602      	mov	r2, r0
 8003c50:	460b      	mov	r3, r1
 8003c52:	4611      	mov	r1, r2
 8003c54:	4b38      	ldr	r3, [pc, #224]	@ (8003d38 <UART_SetConfig+0x4e4>)
 8003c56:	fba3 2301 	umull	r2, r3, r3, r1
 8003c5a:	095b      	lsrs	r3, r3, #5
 8003c5c:	2264      	movs	r2, #100	@ 0x64
 8003c5e:	fb02 f303 	mul.w	r3, r2, r3
 8003c62:	1acb      	subs	r3, r1, r3
 8003c64:	011b      	lsls	r3, r3, #4
 8003c66:	3332      	adds	r3, #50	@ 0x32
 8003c68:	4a33      	ldr	r2, [pc, #204]	@ (8003d38 <UART_SetConfig+0x4e4>)
 8003c6a:	fba2 2303 	umull	r2, r3, r2, r3
 8003c6e:	095b      	lsrs	r3, r3, #5
 8003c70:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003c74:	441c      	add	r4, r3
 8003c76:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003c7a:	2200      	movs	r2, #0
 8003c7c:	673b      	str	r3, [r7, #112]	@ 0x70
 8003c7e:	677a      	str	r2, [r7, #116]	@ 0x74
 8003c80:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003c84:	4642      	mov	r2, r8
 8003c86:	464b      	mov	r3, r9
 8003c88:	1891      	adds	r1, r2, r2
 8003c8a:	60b9      	str	r1, [r7, #8]
 8003c8c:	415b      	adcs	r3, r3
 8003c8e:	60fb      	str	r3, [r7, #12]
 8003c90:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003c94:	4641      	mov	r1, r8
 8003c96:	1851      	adds	r1, r2, r1
 8003c98:	6039      	str	r1, [r7, #0]
 8003c9a:	4649      	mov	r1, r9
 8003c9c:	414b      	adcs	r3, r1
 8003c9e:	607b      	str	r3, [r7, #4]
 8003ca0:	f04f 0200 	mov.w	r2, #0
 8003ca4:	f04f 0300 	mov.w	r3, #0
 8003ca8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003cac:	4659      	mov	r1, fp
 8003cae:	00cb      	lsls	r3, r1, #3
 8003cb0:	4651      	mov	r1, sl
 8003cb2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003cb6:	4651      	mov	r1, sl
 8003cb8:	00ca      	lsls	r2, r1, #3
 8003cba:	4610      	mov	r0, r2
 8003cbc:	4619      	mov	r1, r3
 8003cbe:	4603      	mov	r3, r0
 8003cc0:	4642      	mov	r2, r8
 8003cc2:	189b      	adds	r3, r3, r2
 8003cc4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003cc6:	464b      	mov	r3, r9
 8003cc8:	460a      	mov	r2, r1
 8003cca:	eb42 0303 	adc.w	r3, r2, r3
 8003cce:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003cd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cd4:	685b      	ldr	r3, [r3, #4]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	663b      	str	r3, [r7, #96]	@ 0x60
 8003cda:	667a      	str	r2, [r7, #100]	@ 0x64
 8003cdc:	f04f 0200 	mov.w	r2, #0
 8003ce0:	f04f 0300 	mov.w	r3, #0
 8003ce4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8003ce8:	4649      	mov	r1, r9
 8003cea:	008b      	lsls	r3, r1, #2
 8003cec:	4641      	mov	r1, r8
 8003cee:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003cf2:	4641      	mov	r1, r8
 8003cf4:	008a      	lsls	r2, r1, #2
 8003cf6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8003cfa:	f7fc fa83 	bl	8000204 <__aeabi_uldivmod>
 8003cfe:	4602      	mov	r2, r0
 8003d00:	460b      	mov	r3, r1
 8003d02:	4b0d      	ldr	r3, [pc, #52]	@ (8003d38 <UART_SetConfig+0x4e4>)
 8003d04:	fba3 1302 	umull	r1, r3, r3, r2
 8003d08:	095b      	lsrs	r3, r3, #5
 8003d0a:	2164      	movs	r1, #100	@ 0x64
 8003d0c:	fb01 f303 	mul.w	r3, r1, r3
 8003d10:	1ad3      	subs	r3, r2, r3
 8003d12:	011b      	lsls	r3, r3, #4
 8003d14:	3332      	adds	r3, #50	@ 0x32
 8003d16:	4a08      	ldr	r2, [pc, #32]	@ (8003d38 <UART_SetConfig+0x4e4>)
 8003d18:	fba2 2303 	umull	r2, r3, r2, r3
 8003d1c:	095b      	lsrs	r3, r3, #5
 8003d1e:	f003 020f 	and.w	r2, r3, #15
 8003d22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	4422      	add	r2, r4
 8003d2a:	609a      	str	r2, [r3, #8]
 8003d2c:	bf00      	nop
 8003d2e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8003d32:	46bd      	mov	sp, r7
 8003d34:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003d38:	51eb851f 	.word	0x51eb851f

08003d3c <memset>:
 8003d3c:	4402      	add	r2, r0
 8003d3e:	4603      	mov	r3, r0
 8003d40:	4293      	cmp	r3, r2
 8003d42:	d100      	bne.n	8003d46 <memset+0xa>
 8003d44:	4770      	bx	lr
 8003d46:	f803 1b01 	strb.w	r1, [r3], #1
 8003d4a:	e7f9      	b.n	8003d40 <memset+0x4>

08003d4c <__libc_init_array>:
 8003d4c:	b570      	push	{r4, r5, r6, lr}
 8003d4e:	4d0d      	ldr	r5, [pc, #52]	@ (8003d84 <__libc_init_array+0x38>)
 8003d50:	4c0d      	ldr	r4, [pc, #52]	@ (8003d88 <__libc_init_array+0x3c>)
 8003d52:	1b64      	subs	r4, r4, r5
 8003d54:	10a4      	asrs	r4, r4, #2
 8003d56:	2600      	movs	r6, #0
 8003d58:	42a6      	cmp	r6, r4
 8003d5a:	d109      	bne.n	8003d70 <__libc_init_array+0x24>
 8003d5c:	4d0b      	ldr	r5, [pc, #44]	@ (8003d8c <__libc_init_array+0x40>)
 8003d5e:	4c0c      	ldr	r4, [pc, #48]	@ (8003d90 <__libc_init_array+0x44>)
 8003d60:	f000 f818 	bl	8003d94 <_init>
 8003d64:	1b64      	subs	r4, r4, r5
 8003d66:	10a4      	asrs	r4, r4, #2
 8003d68:	2600      	movs	r6, #0
 8003d6a:	42a6      	cmp	r6, r4
 8003d6c:	d105      	bne.n	8003d7a <__libc_init_array+0x2e>
 8003d6e:	bd70      	pop	{r4, r5, r6, pc}
 8003d70:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d74:	4798      	blx	r3
 8003d76:	3601      	adds	r6, #1
 8003d78:	e7ee      	b.n	8003d58 <__libc_init_array+0xc>
 8003d7a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d7e:	4798      	blx	r3
 8003d80:	3601      	adds	r6, #1
 8003d82:	e7f2      	b.n	8003d6a <__libc_init_array+0x1e>
 8003d84:	08003dcc 	.word	0x08003dcc
 8003d88:	08003dcc 	.word	0x08003dcc
 8003d8c:	08003dcc 	.word	0x08003dcc
 8003d90:	08003dd0 	.word	0x08003dd0

08003d94 <_init>:
 8003d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d96:	bf00      	nop
 8003d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d9a:	bc08      	pop	{r3}
 8003d9c:	469e      	mov	lr, r3
 8003d9e:	4770      	bx	lr

08003da0 <_fini>:
 8003da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003da2:	bf00      	nop
 8003da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003da6:	bc08      	pop	{r3}
 8003da8:	469e      	mov	lr, r3
 8003daa:	4770      	bx	lr

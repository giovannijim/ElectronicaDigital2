
ILI9341.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000cad4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000588  0800cca4  0800cca4  0000dca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d22c  0800d22c  00025aec  2**0
                  CONTENTS
  4 .ARM          00000008  0800d22c  0800d22c  0000e22c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d234  0800d234  00025aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d234  0800d234  0000e234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800d238  0800d238  0000e238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00016aec  20000000  0800d23c  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00006390  20016aec  08023d28  00025aec  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2001ce7c  08023d28  00025e7c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00025aec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015797  00000000  00000000  00025b1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000030de  00000000  00000000  0003b2b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001428  00000000  00000000  0003e398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001065  00000000  00000000  0003f7c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00024807  00000000  00000000  00040825  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001c4f6  00000000  00000000  0006502c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d74c7  00000000  00000000  00081522  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  001589e9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005b04  00000000  00000000  00158a2c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  0015e530  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20016aec 	.word	0x20016aec
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800cc8c 	.word	0x0800cc8c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20016af0 	.word	0x20016af0
 800020c:	0800cc8c 	.word	0x0800cc8c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_d2f>:
 8000638:	ea4f 0241 	mov.w	r2, r1, lsl #1
 800063c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000640:	bf24      	itt	cs
 8000642:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000646:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 800064a:	d90d      	bls.n	8000668 <__aeabi_d2f+0x30>
 800064c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000650:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000654:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000658:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 800065c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000660:	bf08      	it	eq
 8000662:	f020 0001 	biceq.w	r0, r0, #1
 8000666:	4770      	bx	lr
 8000668:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 800066c:	d121      	bne.n	80006b2 <__aeabi_d2f+0x7a>
 800066e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000672:	bfbc      	itt	lt
 8000674:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000678:	4770      	bxlt	lr
 800067a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800067e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000682:	f1c2 0218 	rsb	r2, r2, #24
 8000686:	f1c2 0c20 	rsb	ip, r2, #32
 800068a:	fa10 f30c 	lsls.w	r3, r0, ip
 800068e:	fa20 f002 	lsr.w	r0, r0, r2
 8000692:	bf18      	it	ne
 8000694:	f040 0001 	orrne.w	r0, r0, #1
 8000698:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800069c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80006a0:	fa03 fc0c 	lsl.w	ip, r3, ip
 80006a4:	ea40 000c 	orr.w	r0, r0, ip
 80006a8:	fa23 f302 	lsr.w	r3, r3, r2
 80006ac:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80006b0:	e7cc      	b.n	800064c <__aeabi_d2f+0x14>
 80006b2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80006b6:	d107      	bne.n	80006c8 <__aeabi_d2f+0x90>
 80006b8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80006bc:	bf1e      	ittt	ne
 80006be:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 80006c2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 80006c6:	4770      	bxne	lr
 80006c8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 80006cc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80006d0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80006d4:	4770      	bx	lr
 80006d6:	bf00      	nop

080006d8 <__aeabi_uldivmod>:
 80006d8:	b953      	cbnz	r3, 80006f0 <__aeabi_uldivmod+0x18>
 80006da:	b94a      	cbnz	r2, 80006f0 <__aeabi_uldivmod+0x18>
 80006dc:	2900      	cmp	r1, #0
 80006de:	bf08      	it	eq
 80006e0:	2800      	cmpeq	r0, #0
 80006e2:	bf1c      	itt	ne
 80006e4:	f04f 31ff 	movne.w	r1, #4294967295
 80006e8:	f04f 30ff 	movne.w	r0, #4294967295
 80006ec:	f000 b96a 	b.w	80009c4 <__aeabi_idiv0>
 80006f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80006f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006f8:	f000 f806 	bl	8000708 <__udivmoddi4>
 80006fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000700:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000704:	b004      	add	sp, #16
 8000706:	4770      	bx	lr

08000708 <__udivmoddi4>:
 8000708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800070c:	9d08      	ldr	r5, [sp, #32]
 800070e:	460c      	mov	r4, r1
 8000710:	2b00      	cmp	r3, #0
 8000712:	d14e      	bne.n	80007b2 <__udivmoddi4+0xaa>
 8000714:	4694      	mov	ip, r2
 8000716:	458c      	cmp	ip, r1
 8000718:	4686      	mov	lr, r0
 800071a:	fab2 f282 	clz	r2, r2
 800071e:	d962      	bls.n	80007e6 <__udivmoddi4+0xde>
 8000720:	b14a      	cbz	r2, 8000736 <__udivmoddi4+0x2e>
 8000722:	f1c2 0320 	rsb	r3, r2, #32
 8000726:	4091      	lsls	r1, r2
 8000728:	fa20 f303 	lsr.w	r3, r0, r3
 800072c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000730:	4319      	orrs	r1, r3
 8000732:	fa00 fe02 	lsl.w	lr, r0, r2
 8000736:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800073a:	fa1f f68c 	uxth.w	r6, ip
 800073e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000742:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000746:	fb07 1114 	mls	r1, r7, r4, r1
 800074a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800074e:	fb04 f106 	mul.w	r1, r4, r6
 8000752:	4299      	cmp	r1, r3
 8000754:	d90a      	bls.n	800076c <__udivmoddi4+0x64>
 8000756:	eb1c 0303 	adds.w	r3, ip, r3
 800075a:	f104 30ff 	add.w	r0, r4, #4294967295
 800075e:	f080 8112 	bcs.w	8000986 <__udivmoddi4+0x27e>
 8000762:	4299      	cmp	r1, r3
 8000764:	f240 810f 	bls.w	8000986 <__udivmoddi4+0x27e>
 8000768:	3c02      	subs	r4, #2
 800076a:	4463      	add	r3, ip
 800076c:	1a59      	subs	r1, r3, r1
 800076e:	fa1f f38e 	uxth.w	r3, lr
 8000772:	fbb1 f0f7 	udiv	r0, r1, r7
 8000776:	fb07 1110 	mls	r1, r7, r0, r1
 800077a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800077e:	fb00 f606 	mul.w	r6, r0, r6
 8000782:	429e      	cmp	r6, r3
 8000784:	d90a      	bls.n	800079c <__udivmoddi4+0x94>
 8000786:	eb1c 0303 	adds.w	r3, ip, r3
 800078a:	f100 31ff 	add.w	r1, r0, #4294967295
 800078e:	f080 80fc 	bcs.w	800098a <__udivmoddi4+0x282>
 8000792:	429e      	cmp	r6, r3
 8000794:	f240 80f9 	bls.w	800098a <__udivmoddi4+0x282>
 8000798:	4463      	add	r3, ip
 800079a:	3802      	subs	r0, #2
 800079c:	1b9b      	subs	r3, r3, r6
 800079e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80007a2:	2100      	movs	r1, #0
 80007a4:	b11d      	cbz	r5, 80007ae <__udivmoddi4+0xa6>
 80007a6:	40d3      	lsrs	r3, r2
 80007a8:	2200      	movs	r2, #0
 80007aa:	e9c5 3200 	strd	r3, r2, [r5]
 80007ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007b2:	428b      	cmp	r3, r1
 80007b4:	d905      	bls.n	80007c2 <__udivmoddi4+0xba>
 80007b6:	b10d      	cbz	r5, 80007bc <__udivmoddi4+0xb4>
 80007b8:	e9c5 0100 	strd	r0, r1, [r5]
 80007bc:	2100      	movs	r1, #0
 80007be:	4608      	mov	r0, r1
 80007c0:	e7f5      	b.n	80007ae <__udivmoddi4+0xa6>
 80007c2:	fab3 f183 	clz	r1, r3
 80007c6:	2900      	cmp	r1, #0
 80007c8:	d146      	bne.n	8000858 <__udivmoddi4+0x150>
 80007ca:	42a3      	cmp	r3, r4
 80007cc:	d302      	bcc.n	80007d4 <__udivmoddi4+0xcc>
 80007ce:	4290      	cmp	r0, r2
 80007d0:	f0c0 80f0 	bcc.w	80009b4 <__udivmoddi4+0x2ac>
 80007d4:	1a86      	subs	r6, r0, r2
 80007d6:	eb64 0303 	sbc.w	r3, r4, r3
 80007da:	2001      	movs	r0, #1
 80007dc:	2d00      	cmp	r5, #0
 80007de:	d0e6      	beq.n	80007ae <__udivmoddi4+0xa6>
 80007e0:	e9c5 6300 	strd	r6, r3, [r5]
 80007e4:	e7e3      	b.n	80007ae <__udivmoddi4+0xa6>
 80007e6:	2a00      	cmp	r2, #0
 80007e8:	f040 8090 	bne.w	800090c <__udivmoddi4+0x204>
 80007ec:	eba1 040c 	sub.w	r4, r1, ip
 80007f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80007f4:	fa1f f78c 	uxth.w	r7, ip
 80007f8:	2101      	movs	r1, #1
 80007fa:	fbb4 f6f8 	udiv	r6, r4, r8
 80007fe:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000802:	fb08 4416 	mls	r4, r8, r6, r4
 8000806:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800080a:	fb07 f006 	mul.w	r0, r7, r6
 800080e:	4298      	cmp	r0, r3
 8000810:	d908      	bls.n	8000824 <__udivmoddi4+0x11c>
 8000812:	eb1c 0303 	adds.w	r3, ip, r3
 8000816:	f106 34ff 	add.w	r4, r6, #4294967295
 800081a:	d202      	bcs.n	8000822 <__udivmoddi4+0x11a>
 800081c:	4298      	cmp	r0, r3
 800081e:	f200 80cd 	bhi.w	80009bc <__udivmoddi4+0x2b4>
 8000822:	4626      	mov	r6, r4
 8000824:	1a1c      	subs	r4, r3, r0
 8000826:	fa1f f38e 	uxth.w	r3, lr
 800082a:	fbb4 f0f8 	udiv	r0, r4, r8
 800082e:	fb08 4410 	mls	r4, r8, r0, r4
 8000832:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000836:	fb00 f707 	mul.w	r7, r0, r7
 800083a:	429f      	cmp	r7, r3
 800083c:	d908      	bls.n	8000850 <__udivmoddi4+0x148>
 800083e:	eb1c 0303 	adds.w	r3, ip, r3
 8000842:	f100 34ff 	add.w	r4, r0, #4294967295
 8000846:	d202      	bcs.n	800084e <__udivmoddi4+0x146>
 8000848:	429f      	cmp	r7, r3
 800084a:	f200 80b0 	bhi.w	80009ae <__udivmoddi4+0x2a6>
 800084e:	4620      	mov	r0, r4
 8000850:	1bdb      	subs	r3, r3, r7
 8000852:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000856:	e7a5      	b.n	80007a4 <__udivmoddi4+0x9c>
 8000858:	f1c1 0620 	rsb	r6, r1, #32
 800085c:	408b      	lsls	r3, r1
 800085e:	fa22 f706 	lsr.w	r7, r2, r6
 8000862:	431f      	orrs	r7, r3
 8000864:	fa20 fc06 	lsr.w	ip, r0, r6
 8000868:	fa04 f301 	lsl.w	r3, r4, r1
 800086c:	ea43 030c 	orr.w	r3, r3, ip
 8000870:	40f4      	lsrs	r4, r6
 8000872:	fa00 f801 	lsl.w	r8, r0, r1
 8000876:	0c38      	lsrs	r0, r7, #16
 8000878:	ea4f 4913 	mov.w	r9, r3, lsr #16
 800087c:	fbb4 fef0 	udiv	lr, r4, r0
 8000880:	fa1f fc87 	uxth.w	ip, r7
 8000884:	fb00 441e 	mls	r4, r0, lr, r4
 8000888:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800088c:	fb0e f90c 	mul.w	r9, lr, ip
 8000890:	45a1      	cmp	r9, r4
 8000892:	fa02 f201 	lsl.w	r2, r2, r1
 8000896:	d90a      	bls.n	80008ae <__udivmoddi4+0x1a6>
 8000898:	193c      	adds	r4, r7, r4
 800089a:	f10e 3aff 	add.w	sl, lr, #4294967295
 800089e:	f080 8084 	bcs.w	80009aa <__udivmoddi4+0x2a2>
 80008a2:	45a1      	cmp	r9, r4
 80008a4:	f240 8081 	bls.w	80009aa <__udivmoddi4+0x2a2>
 80008a8:	f1ae 0e02 	sub.w	lr, lr, #2
 80008ac:	443c      	add	r4, r7
 80008ae:	eba4 0409 	sub.w	r4, r4, r9
 80008b2:	fa1f f983 	uxth.w	r9, r3
 80008b6:	fbb4 f3f0 	udiv	r3, r4, r0
 80008ba:	fb00 4413 	mls	r4, r0, r3, r4
 80008be:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80008c2:	fb03 fc0c 	mul.w	ip, r3, ip
 80008c6:	45a4      	cmp	ip, r4
 80008c8:	d907      	bls.n	80008da <__udivmoddi4+0x1d2>
 80008ca:	193c      	adds	r4, r7, r4
 80008cc:	f103 30ff 	add.w	r0, r3, #4294967295
 80008d0:	d267      	bcs.n	80009a2 <__udivmoddi4+0x29a>
 80008d2:	45a4      	cmp	ip, r4
 80008d4:	d965      	bls.n	80009a2 <__udivmoddi4+0x29a>
 80008d6:	3b02      	subs	r3, #2
 80008d8:	443c      	add	r4, r7
 80008da:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80008de:	fba0 9302 	umull	r9, r3, r0, r2
 80008e2:	eba4 040c 	sub.w	r4, r4, ip
 80008e6:	429c      	cmp	r4, r3
 80008e8:	46ce      	mov	lr, r9
 80008ea:	469c      	mov	ip, r3
 80008ec:	d351      	bcc.n	8000992 <__udivmoddi4+0x28a>
 80008ee:	d04e      	beq.n	800098e <__udivmoddi4+0x286>
 80008f0:	b155      	cbz	r5, 8000908 <__udivmoddi4+0x200>
 80008f2:	ebb8 030e 	subs.w	r3, r8, lr
 80008f6:	eb64 040c 	sbc.w	r4, r4, ip
 80008fa:	fa04 f606 	lsl.w	r6, r4, r6
 80008fe:	40cb      	lsrs	r3, r1
 8000900:	431e      	orrs	r6, r3
 8000902:	40cc      	lsrs	r4, r1
 8000904:	e9c5 6400 	strd	r6, r4, [r5]
 8000908:	2100      	movs	r1, #0
 800090a:	e750      	b.n	80007ae <__udivmoddi4+0xa6>
 800090c:	f1c2 0320 	rsb	r3, r2, #32
 8000910:	fa20 f103 	lsr.w	r1, r0, r3
 8000914:	fa0c fc02 	lsl.w	ip, ip, r2
 8000918:	fa24 f303 	lsr.w	r3, r4, r3
 800091c:	4094      	lsls	r4, r2
 800091e:	430c      	orrs	r4, r1
 8000920:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000924:	fa00 fe02 	lsl.w	lr, r0, r2
 8000928:	fa1f f78c 	uxth.w	r7, ip
 800092c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000930:	fb08 3110 	mls	r1, r8, r0, r3
 8000934:	0c23      	lsrs	r3, r4, #16
 8000936:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800093a:	fb00 f107 	mul.w	r1, r0, r7
 800093e:	4299      	cmp	r1, r3
 8000940:	d908      	bls.n	8000954 <__udivmoddi4+0x24c>
 8000942:	eb1c 0303 	adds.w	r3, ip, r3
 8000946:	f100 36ff 	add.w	r6, r0, #4294967295
 800094a:	d22c      	bcs.n	80009a6 <__udivmoddi4+0x29e>
 800094c:	4299      	cmp	r1, r3
 800094e:	d92a      	bls.n	80009a6 <__udivmoddi4+0x29e>
 8000950:	3802      	subs	r0, #2
 8000952:	4463      	add	r3, ip
 8000954:	1a5b      	subs	r3, r3, r1
 8000956:	b2a4      	uxth	r4, r4
 8000958:	fbb3 f1f8 	udiv	r1, r3, r8
 800095c:	fb08 3311 	mls	r3, r8, r1, r3
 8000960:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000964:	fb01 f307 	mul.w	r3, r1, r7
 8000968:	42a3      	cmp	r3, r4
 800096a:	d908      	bls.n	800097e <__udivmoddi4+0x276>
 800096c:	eb1c 0404 	adds.w	r4, ip, r4
 8000970:	f101 36ff 	add.w	r6, r1, #4294967295
 8000974:	d213      	bcs.n	800099e <__udivmoddi4+0x296>
 8000976:	42a3      	cmp	r3, r4
 8000978:	d911      	bls.n	800099e <__udivmoddi4+0x296>
 800097a:	3902      	subs	r1, #2
 800097c:	4464      	add	r4, ip
 800097e:	1ae4      	subs	r4, r4, r3
 8000980:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000984:	e739      	b.n	80007fa <__udivmoddi4+0xf2>
 8000986:	4604      	mov	r4, r0
 8000988:	e6f0      	b.n	800076c <__udivmoddi4+0x64>
 800098a:	4608      	mov	r0, r1
 800098c:	e706      	b.n	800079c <__udivmoddi4+0x94>
 800098e:	45c8      	cmp	r8, r9
 8000990:	d2ae      	bcs.n	80008f0 <__udivmoddi4+0x1e8>
 8000992:	ebb9 0e02 	subs.w	lr, r9, r2
 8000996:	eb63 0c07 	sbc.w	ip, r3, r7
 800099a:	3801      	subs	r0, #1
 800099c:	e7a8      	b.n	80008f0 <__udivmoddi4+0x1e8>
 800099e:	4631      	mov	r1, r6
 80009a0:	e7ed      	b.n	800097e <__udivmoddi4+0x276>
 80009a2:	4603      	mov	r3, r0
 80009a4:	e799      	b.n	80008da <__udivmoddi4+0x1d2>
 80009a6:	4630      	mov	r0, r6
 80009a8:	e7d4      	b.n	8000954 <__udivmoddi4+0x24c>
 80009aa:	46d6      	mov	lr, sl
 80009ac:	e77f      	b.n	80008ae <__udivmoddi4+0x1a6>
 80009ae:	4463      	add	r3, ip
 80009b0:	3802      	subs	r0, #2
 80009b2:	e74d      	b.n	8000850 <__udivmoddi4+0x148>
 80009b4:	4606      	mov	r6, r0
 80009b6:	4623      	mov	r3, r4
 80009b8:	4608      	mov	r0, r1
 80009ba:	e70f      	b.n	80007dc <__udivmoddi4+0xd4>
 80009bc:	3e02      	subs	r6, #2
 80009be:	4463      	add	r3, ip
 80009c0:	e730      	b.n	8000824 <__udivmoddi4+0x11c>
 80009c2:	bf00      	nop

080009c4 <__aeabi_idiv0>:
 80009c4:	4770      	bx	lr
 80009c6:	bf00      	nop

080009c8 <SELECT>:
 80009c8:	b580      	push	{r7, lr}
 80009ca:	af00      	add	r7, sp, #0
 80009cc:	2200      	movs	r2, #0
 80009ce:	2140      	movs	r1, #64	@ 0x40
 80009d0:	4803      	ldr	r0, [pc, #12]	@ (80009e0 <SELECT+0x18>)
 80009d2:	f005 fe39 	bl	8006648 <HAL_GPIO_WritePin>
 80009d6:	2001      	movs	r0, #1
 80009d8:	f005 face 	bl	8005f78 <HAL_Delay>
 80009dc:	bf00      	nop
 80009de:	bd80      	pop	{r7, pc}
 80009e0:	40020400 	.word	0x40020400

080009e4 <DESELECT>:
 80009e4:	b580      	push	{r7, lr}
 80009e6:	af00      	add	r7, sp, #0
 80009e8:	2201      	movs	r2, #1
 80009ea:	2140      	movs	r1, #64	@ 0x40
 80009ec:	4803      	ldr	r0, [pc, #12]	@ (80009fc <DESELECT+0x18>)
 80009ee:	f005 fe2b 	bl	8006648 <HAL_GPIO_WritePin>
 80009f2:	2001      	movs	r0, #1
 80009f4:	f005 fac0 	bl	8005f78 <HAL_Delay>
 80009f8:	bf00      	nop
 80009fa:	bd80      	pop	{r7, pc}
 80009fc:	40020400 	.word	0x40020400

08000a00 <SPI_TxByte>:
 8000a00:	b580      	push	{r7, lr}
 8000a02:	b082      	sub	sp, #8
 8000a04:	af00      	add	r7, sp, #0
 8000a06:	4603      	mov	r3, r0
 8000a08:	71fb      	strb	r3, [r7, #7]
 8000a0a:	bf00      	nop
 8000a0c:	4b08      	ldr	r3, [pc, #32]	@ (8000a30 <SPI_TxByte+0x30>)
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	689b      	ldr	r3, [r3, #8]
 8000a12:	f003 0302 	and.w	r3, r3, #2
 8000a16:	2b02      	cmp	r3, #2
 8000a18:	d1f8      	bne.n	8000a0c <SPI_TxByte+0xc>
 8000a1a:	1df9      	adds	r1, r7, #7
 8000a1c:	2364      	movs	r3, #100	@ 0x64
 8000a1e:	2201      	movs	r2, #1
 8000a20:	4803      	ldr	r0, [pc, #12]	@ (8000a30 <SPI_TxByte+0x30>)
 8000a22:	f006 fc16 	bl	8007252 <HAL_SPI_Transmit>
 8000a26:	bf00      	nop
 8000a28:	3708      	adds	r7, #8
 8000a2a:	46bd      	mov	sp, r7
 8000a2c:	bd80      	pop	{r7, pc}
 8000a2e:	bf00      	nop
 8000a30:	20016b10 	.word	0x20016b10

08000a34 <SPI_TxBuffer>:
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b082      	sub	sp, #8
 8000a38:	af00      	add	r7, sp, #0
 8000a3a:	6078      	str	r0, [r7, #4]
 8000a3c:	460b      	mov	r3, r1
 8000a3e:	807b      	strh	r3, [r7, #2]
 8000a40:	bf00      	nop
 8000a42:	4b08      	ldr	r3, [pc, #32]	@ (8000a64 <SPI_TxBuffer+0x30>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	689b      	ldr	r3, [r3, #8]
 8000a48:	f003 0302 	and.w	r3, r3, #2
 8000a4c:	2b02      	cmp	r3, #2
 8000a4e:	d1f8      	bne.n	8000a42 <SPI_TxBuffer+0xe>
 8000a50:	887a      	ldrh	r2, [r7, #2]
 8000a52:	2364      	movs	r3, #100	@ 0x64
 8000a54:	6879      	ldr	r1, [r7, #4]
 8000a56:	4803      	ldr	r0, [pc, #12]	@ (8000a64 <SPI_TxBuffer+0x30>)
 8000a58:	f006 fbfb 	bl	8007252 <HAL_SPI_Transmit>
 8000a5c:	bf00      	nop
 8000a5e:	3708      	adds	r7, #8
 8000a60:	46bd      	mov	sp, r7
 8000a62:	bd80      	pop	{r7, pc}
 8000a64:	20016b10 	.word	0x20016b10

08000a68 <SPI_RxByte>:
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	b084      	sub	sp, #16
 8000a6c:	af02      	add	r7, sp, #8
 8000a6e:	23ff      	movs	r3, #255	@ 0xff
 8000a70:	71fb      	strb	r3, [r7, #7]
 8000a72:	bf00      	nop
 8000a74:	4b09      	ldr	r3, [pc, #36]	@ (8000a9c <SPI_RxByte+0x34>)
 8000a76:	681b      	ldr	r3, [r3, #0]
 8000a78:	689b      	ldr	r3, [r3, #8]
 8000a7a:	f003 0302 	and.w	r3, r3, #2
 8000a7e:	2b02      	cmp	r3, #2
 8000a80:	d1f8      	bne.n	8000a74 <SPI_RxByte+0xc>
 8000a82:	1dba      	adds	r2, r7, #6
 8000a84:	1df9      	adds	r1, r7, #7
 8000a86:	2364      	movs	r3, #100	@ 0x64
 8000a88:	9300      	str	r3, [sp, #0]
 8000a8a:	2301      	movs	r3, #1
 8000a8c:	4803      	ldr	r0, [pc, #12]	@ (8000a9c <SPI_RxByte+0x34>)
 8000a8e:	f006 fd23 	bl	80074d8 <HAL_SPI_TransmitReceive>
 8000a92:	79bb      	ldrb	r3, [r7, #6]
 8000a94:	4618      	mov	r0, r3
 8000a96:	3708      	adds	r7, #8
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	bd80      	pop	{r7, pc}
 8000a9c:	20016b10 	.word	0x20016b10

08000aa0 <SPI_RxBytePtr>:
 8000aa0:	b580      	push	{r7, lr}
 8000aa2:	b082      	sub	sp, #8
 8000aa4:	af00      	add	r7, sp, #0
 8000aa6:	6078      	str	r0, [r7, #4]
 8000aa8:	f7ff ffde 	bl	8000a68 <SPI_RxByte>
 8000aac:	4603      	mov	r3, r0
 8000aae:	461a      	mov	r2, r3
 8000ab0:	687b      	ldr	r3, [r7, #4]
 8000ab2:	701a      	strb	r2, [r3, #0]
 8000ab4:	bf00      	nop
 8000ab6:	3708      	adds	r7, #8
 8000ab8:	46bd      	mov	sp, r7
 8000aba:	bd80      	pop	{r7, pc}

08000abc <SD_ReadyWait>:
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b082      	sub	sp, #8
 8000ac0:	af00      	add	r7, sp, #0
 8000ac2:	4b0a      	ldr	r3, [pc, #40]	@ (8000aec <SD_ReadyWait+0x30>)
 8000ac4:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8000ac8:	801a      	strh	r2, [r3, #0]
 8000aca:	f7ff ffcd 	bl	8000a68 <SPI_RxByte>
 8000ace:	4603      	mov	r3, r0
 8000ad0:	71fb      	strb	r3, [r7, #7]
 8000ad2:	79fb      	ldrb	r3, [r7, #7]
 8000ad4:	2bff      	cmp	r3, #255	@ 0xff
 8000ad6:	d003      	beq.n	8000ae0 <SD_ReadyWait+0x24>
 8000ad8:	4b04      	ldr	r3, [pc, #16]	@ (8000aec <SD_ReadyWait+0x30>)
 8000ada:	881b      	ldrh	r3, [r3, #0]
 8000adc:	2b00      	cmp	r3, #0
 8000ade:	d1f4      	bne.n	8000aca <SD_ReadyWait+0xe>
 8000ae0:	79fb      	ldrb	r3, [r7, #7]
 8000ae2:	4618      	mov	r0, r3
 8000ae4:	3708      	adds	r7, #8
 8000ae6:	46bd      	mov	sp, r7
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	20016b0a 	.word	0x20016b0a

08000af0 <SD_PowerOn>:
 8000af0:	b580      	push	{r7, lr}
 8000af2:	b084      	sub	sp, #16
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	f641 73ff 	movw	r3, #8191	@ 0x1fff
 8000afa:	60fb      	str	r3, [r7, #12]
 8000afc:	f7ff ff72 	bl	80009e4 <DESELECT>
 8000b00:	2300      	movs	r3, #0
 8000b02:	60bb      	str	r3, [r7, #8]
 8000b04:	e005      	b.n	8000b12 <SD_PowerOn+0x22>
 8000b06:	20ff      	movs	r0, #255	@ 0xff
 8000b08:	f7ff ff7a 	bl	8000a00 <SPI_TxByte>
 8000b0c:	68bb      	ldr	r3, [r7, #8]
 8000b0e:	3301      	adds	r3, #1
 8000b10:	60bb      	str	r3, [r7, #8]
 8000b12:	68bb      	ldr	r3, [r7, #8]
 8000b14:	2b09      	cmp	r3, #9
 8000b16:	ddf6      	ble.n	8000b06 <SD_PowerOn+0x16>
 8000b18:	f7ff ff56 	bl	80009c8 <SELECT>
 8000b1c:	2340      	movs	r3, #64	@ 0x40
 8000b1e:	703b      	strb	r3, [r7, #0]
 8000b20:	2300      	movs	r3, #0
 8000b22:	707b      	strb	r3, [r7, #1]
 8000b24:	2300      	movs	r3, #0
 8000b26:	70bb      	strb	r3, [r7, #2]
 8000b28:	2300      	movs	r3, #0
 8000b2a:	70fb      	strb	r3, [r7, #3]
 8000b2c:	2300      	movs	r3, #0
 8000b2e:	713b      	strb	r3, [r7, #4]
 8000b30:	2395      	movs	r3, #149	@ 0x95
 8000b32:	717b      	strb	r3, [r7, #5]
 8000b34:	463b      	mov	r3, r7
 8000b36:	2106      	movs	r1, #6
 8000b38:	4618      	mov	r0, r3
 8000b3a:	f7ff ff7b 	bl	8000a34 <SPI_TxBuffer>
 8000b3e:	e002      	b.n	8000b46 <SD_PowerOn+0x56>
 8000b40:	68fb      	ldr	r3, [r7, #12]
 8000b42:	3b01      	subs	r3, #1
 8000b44:	60fb      	str	r3, [r7, #12]
 8000b46:	f7ff ff8f 	bl	8000a68 <SPI_RxByte>
 8000b4a:	4603      	mov	r3, r0
 8000b4c:	2b01      	cmp	r3, #1
 8000b4e:	d002      	beq.n	8000b56 <SD_PowerOn+0x66>
 8000b50:	68fb      	ldr	r3, [r7, #12]
 8000b52:	2b00      	cmp	r3, #0
 8000b54:	d1f4      	bne.n	8000b40 <SD_PowerOn+0x50>
 8000b56:	f7ff ff45 	bl	80009e4 <DESELECT>
 8000b5a:	20ff      	movs	r0, #255	@ 0xff
 8000b5c:	f7ff ff50 	bl	8000a00 <SPI_TxByte>
 8000b60:	4b03      	ldr	r3, [pc, #12]	@ (8000b70 <SD_PowerOn+0x80>)
 8000b62:	2201      	movs	r2, #1
 8000b64:	701a      	strb	r2, [r3, #0]
 8000b66:	bf00      	nop
 8000b68:	3710      	adds	r7, #16
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	bd80      	pop	{r7, pc}
 8000b6e:	bf00      	nop
 8000b70:	20016b0d 	.word	0x20016b0d

08000b74 <SD_PowerOff>:
 8000b74:	b480      	push	{r7}
 8000b76:	af00      	add	r7, sp, #0
 8000b78:	4b03      	ldr	r3, [pc, #12]	@ (8000b88 <SD_PowerOff+0x14>)
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	701a      	strb	r2, [r3, #0]
 8000b7e:	bf00      	nop
 8000b80:	46bd      	mov	sp, r7
 8000b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b86:	4770      	bx	lr
 8000b88:	20016b0d 	.word	0x20016b0d

08000b8c <SD_CheckPower>:
 8000b8c:	b480      	push	{r7}
 8000b8e:	af00      	add	r7, sp, #0
 8000b90:	4b03      	ldr	r3, [pc, #12]	@ (8000ba0 <SD_CheckPower+0x14>)
 8000b92:	781b      	ldrb	r3, [r3, #0]
 8000b94:	4618      	mov	r0, r3
 8000b96:	46bd      	mov	sp, r7
 8000b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b9c:	4770      	bx	lr
 8000b9e:	bf00      	nop
 8000ba0:	20016b0d 	.word	0x20016b0d

08000ba4 <SD_RxDataBlock>:
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b084      	sub	sp, #16
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]
 8000bac:	6039      	str	r1, [r7, #0]
 8000bae:	4b13      	ldr	r3, [pc, #76]	@ (8000bfc <SD_RxDataBlock+0x58>)
 8000bb0:	22c8      	movs	r2, #200	@ 0xc8
 8000bb2:	801a      	strh	r2, [r3, #0]
 8000bb4:	f7ff ff58 	bl	8000a68 <SPI_RxByte>
 8000bb8:	4603      	mov	r3, r0
 8000bba:	73fb      	strb	r3, [r7, #15]
 8000bbc:	7bfb      	ldrb	r3, [r7, #15]
 8000bbe:	2bff      	cmp	r3, #255	@ 0xff
 8000bc0:	d103      	bne.n	8000bca <SD_RxDataBlock+0x26>
 8000bc2:	4b0e      	ldr	r3, [pc, #56]	@ (8000bfc <SD_RxDataBlock+0x58>)
 8000bc4:	881b      	ldrh	r3, [r3, #0]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d1f4      	bne.n	8000bb4 <SD_RxDataBlock+0x10>
 8000bca:	7bfb      	ldrb	r3, [r7, #15]
 8000bcc:	2bfe      	cmp	r3, #254	@ 0xfe
 8000bce:	d001      	beq.n	8000bd4 <SD_RxDataBlock+0x30>
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	e00f      	b.n	8000bf4 <SD_RxDataBlock+0x50>
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	1c5a      	adds	r2, r3, #1
 8000bd8:	607a      	str	r2, [r7, #4]
 8000bda:	4618      	mov	r0, r3
 8000bdc:	f7ff ff60 	bl	8000aa0 <SPI_RxBytePtr>
 8000be0:	683b      	ldr	r3, [r7, #0]
 8000be2:	1e5a      	subs	r2, r3, #1
 8000be4:	603a      	str	r2, [r7, #0]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d1f4      	bne.n	8000bd4 <SD_RxDataBlock+0x30>
 8000bea:	f7ff ff3d 	bl	8000a68 <SPI_RxByte>
 8000bee:	f7ff ff3b 	bl	8000a68 <SPI_RxByte>
 8000bf2:	2301      	movs	r3, #1
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	3710      	adds	r7, #16
 8000bf8:	46bd      	mov	sp, r7
 8000bfa:	bd80      	pop	{r7, pc}
 8000bfc:	20016b08 	.word	0x20016b08

08000c00 <SD_TxDataBlock>:
 8000c00:	b580      	push	{r7, lr}
 8000c02:	b084      	sub	sp, #16
 8000c04:	af00      	add	r7, sp, #0
 8000c06:	6078      	str	r0, [r7, #4]
 8000c08:	460b      	mov	r3, r1
 8000c0a:	70fb      	strb	r3, [r7, #3]
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	73bb      	strb	r3, [r7, #14]
 8000c10:	f7ff ff54 	bl	8000abc <SD_ReadyWait>
 8000c14:	4603      	mov	r3, r0
 8000c16:	2bff      	cmp	r3, #255	@ 0xff
 8000c18:	d001      	beq.n	8000c1e <SD_TxDataBlock+0x1e>
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	e02f      	b.n	8000c7e <SD_TxDataBlock+0x7e>
 8000c1e:	78fb      	ldrb	r3, [r7, #3]
 8000c20:	4618      	mov	r0, r3
 8000c22:	f7ff feed 	bl	8000a00 <SPI_TxByte>
 8000c26:	78fb      	ldrb	r3, [r7, #3]
 8000c28:	2bfd      	cmp	r3, #253	@ 0xfd
 8000c2a:	d020      	beq.n	8000c6e <SD_TxDataBlock+0x6e>
 8000c2c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000c30:	6878      	ldr	r0, [r7, #4]
 8000c32:	f7ff feff 	bl	8000a34 <SPI_TxBuffer>
 8000c36:	f7ff ff17 	bl	8000a68 <SPI_RxByte>
 8000c3a:	f7ff ff15 	bl	8000a68 <SPI_RxByte>
 8000c3e:	e00b      	b.n	8000c58 <SD_TxDataBlock+0x58>
 8000c40:	f7ff ff12 	bl	8000a68 <SPI_RxByte>
 8000c44:	4603      	mov	r3, r0
 8000c46:	73fb      	strb	r3, [r7, #15]
 8000c48:	7bfb      	ldrb	r3, [r7, #15]
 8000c4a:	f003 031f 	and.w	r3, r3, #31
 8000c4e:	2b05      	cmp	r3, #5
 8000c50:	d006      	beq.n	8000c60 <SD_TxDataBlock+0x60>
 8000c52:	7bbb      	ldrb	r3, [r7, #14]
 8000c54:	3301      	adds	r3, #1
 8000c56:	73bb      	strb	r3, [r7, #14]
 8000c58:	7bbb      	ldrb	r3, [r7, #14]
 8000c5a:	2b40      	cmp	r3, #64	@ 0x40
 8000c5c:	d9f0      	bls.n	8000c40 <SD_TxDataBlock+0x40>
 8000c5e:	e000      	b.n	8000c62 <SD_TxDataBlock+0x62>
 8000c60:	bf00      	nop
 8000c62:	bf00      	nop
 8000c64:	f7ff ff00 	bl	8000a68 <SPI_RxByte>
 8000c68:	4603      	mov	r3, r0
 8000c6a:	2b00      	cmp	r3, #0
 8000c6c:	d0fa      	beq.n	8000c64 <SD_TxDataBlock+0x64>
 8000c6e:	7bfb      	ldrb	r3, [r7, #15]
 8000c70:	f003 031f 	and.w	r3, r3, #31
 8000c74:	2b05      	cmp	r3, #5
 8000c76:	d101      	bne.n	8000c7c <SD_TxDataBlock+0x7c>
 8000c78:	2301      	movs	r3, #1
 8000c7a:	e000      	b.n	8000c7e <SD_TxDataBlock+0x7e>
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	4618      	mov	r0, r3
 8000c80:	3710      	adds	r7, #16
 8000c82:	46bd      	mov	sp, r7
 8000c84:	bd80      	pop	{r7, pc}

08000c86 <SD_SendCmd>:
 8000c86:	b580      	push	{r7, lr}
 8000c88:	b084      	sub	sp, #16
 8000c8a:	af00      	add	r7, sp, #0
 8000c8c:	4603      	mov	r3, r0
 8000c8e:	6039      	str	r1, [r7, #0]
 8000c90:	71fb      	strb	r3, [r7, #7]
 8000c92:	f7ff ff13 	bl	8000abc <SD_ReadyWait>
 8000c96:	4603      	mov	r3, r0
 8000c98:	2bff      	cmp	r3, #255	@ 0xff
 8000c9a:	d001      	beq.n	8000ca0 <SD_SendCmd+0x1a>
 8000c9c:	23ff      	movs	r3, #255	@ 0xff
 8000c9e:	e042      	b.n	8000d26 <SD_SendCmd+0xa0>
 8000ca0:	79fb      	ldrb	r3, [r7, #7]
 8000ca2:	4618      	mov	r0, r3
 8000ca4:	f7ff feac 	bl	8000a00 <SPI_TxByte>
 8000ca8:	683b      	ldr	r3, [r7, #0]
 8000caa:	0e1b      	lsrs	r3, r3, #24
 8000cac:	b2db      	uxtb	r3, r3
 8000cae:	4618      	mov	r0, r3
 8000cb0:	f7ff fea6 	bl	8000a00 <SPI_TxByte>
 8000cb4:	683b      	ldr	r3, [r7, #0]
 8000cb6:	0c1b      	lsrs	r3, r3, #16
 8000cb8:	b2db      	uxtb	r3, r3
 8000cba:	4618      	mov	r0, r3
 8000cbc:	f7ff fea0 	bl	8000a00 <SPI_TxByte>
 8000cc0:	683b      	ldr	r3, [r7, #0]
 8000cc2:	0a1b      	lsrs	r3, r3, #8
 8000cc4:	b2db      	uxtb	r3, r3
 8000cc6:	4618      	mov	r0, r3
 8000cc8:	f7ff fe9a 	bl	8000a00 <SPI_TxByte>
 8000ccc:	683b      	ldr	r3, [r7, #0]
 8000cce:	b2db      	uxtb	r3, r3
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f7ff fe95 	bl	8000a00 <SPI_TxByte>
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	2b40      	cmp	r3, #64	@ 0x40
 8000cda:	d102      	bne.n	8000ce2 <SD_SendCmd+0x5c>
 8000cdc:	2395      	movs	r3, #149	@ 0x95
 8000cde:	73fb      	strb	r3, [r7, #15]
 8000ce0:	e007      	b.n	8000cf2 <SD_SendCmd+0x6c>
 8000ce2:	79fb      	ldrb	r3, [r7, #7]
 8000ce4:	2b48      	cmp	r3, #72	@ 0x48
 8000ce6:	d102      	bne.n	8000cee <SD_SendCmd+0x68>
 8000ce8:	2387      	movs	r3, #135	@ 0x87
 8000cea:	73fb      	strb	r3, [r7, #15]
 8000cec:	e001      	b.n	8000cf2 <SD_SendCmd+0x6c>
 8000cee:	2301      	movs	r3, #1
 8000cf0:	73fb      	strb	r3, [r7, #15]
 8000cf2:	7bfb      	ldrb	r3, [r7, #15]
 8000cf4:	4618      	mov	r0, r3
 8000cf6:	f7ff fe83 	bl	8000a00 <SPI_TxByte>
 8000cfa:	79fb      	ldrb	r3, [r7, #7]
 8000cfc:	2b4c      	cmp	r3, #76	@ 0x4c
 8000cfe:	d101      	bne.n	8000d04 <SD_SendCmd+0x7e>
 8000d00:	f7ff feb2 	bl	8000a68 <SPI_RxByte>
 8000d04:	230a      	movs	r3, #10
 8000d06:	73bb      	strb	r3, [r7, #14]
 8000d08:	f7ff feae 	bl	8000a68 <SPI_RxByte>
 8000d0c:	4603      	mov	r3, r0
 8000d0e:	737b      	strb	r3, [r7, #13]
 8000d10:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000d14:	2b00      	cmp	r3, #0
 8000d16:	da05      	bge.n	8000d24 <SD_SendCmd+0x9e>
 8000d18:	7bbb      	ldrb	r3, [r7, #14]
 8000d1a:	3b01      	subs	r3, #1
 8000d1c:	73bb      	strb	r3, [r7, #14]
 8000d1e:	7bbb      	ldrb	r3, [r7, #14]
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d1f1      	bne.n	8000d08 <SD_SendCmd+0x82>
 8000d24:	7b7b      	ldrb	r3, [r7, #13]
 8000d26:	4618      	mov	r0, r3
 8000d28:	3710      	adds	r7, #16
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}
	...

08000d30 <SD_disk_initialize>:
 8000d30:	b590      	push	{r4, r7, lr}
 8000d32:	b085      	sub	sp, #20
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	4603      	mov	r3, r0
 8000d38:	71fb      	strb	r3, [r7, #7]
 8000d3a:	79fb      	ldrb	r3, [r7, #7]
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	d001      	beq.n	8000d44 <SD_disk_initialize+0x14>
 8000d40:	2301      	movs	r3, #1
 8000d42:	e0d1      	b.n	8000ee8 <SD_disk_initialize+0x1b8>
 8000d44:	4b6a      	ldr	r3, [pc, #424]	@ (8000ef0 <SD_disk_initialize+0x1c0>)
 8000d46:	781b      	ldrb	r3, [r3, #0]
 8000d48:	b2db      	uxtb	r3, r3
 8000d4a:	f003 0302 	and.w	r3, r3, #2
 8000d4e:	2b00      	cmp	r3, #0
 8000d50:	d003      	beq.n	8000d5a <SD_disk_initialize+0x2a>
 8000d52:	4b67      	ldr	r3, [pc, #412]	@ (8000ef0 <SD_disk_initialize+0x1c0>)
 8000d54:	781b      	ldrb	r3, [r3, #0]
 8000d56:	b2db      	uxtb	r3, r3
 8000d58:	e0c6      	b.n	8000ee8 <SD_disk_initialize+0x1b8>
 8000d5a:	f7ff fec9 	bl	8000af0 <SD_PowerOn>
 8000d5e:	f7ff fe33 	bl	80009c8 <SELECT>
 8000d62:	2300      	movs	r3, #0
 8000d64:	73bb      	strb	r3, [r7, #14]
 8000d66:	2100      	movs	r1, #0
 8000d68:	2040      	movs	r0, #64	@ 0x40
 8000d6a:	f7ff ff8c 	bl	8000c86 <SD_SendCmd>
 8000d6e:	4603      	mov	r3, r0
 8000d70:	2b01      	cmp	r3, #1
 8000d72:	f040 80a1 	bne.w	8000eb8 <SD_disk_initialize+0x188>
 8000d76:	4b5f      	ldr	r3, [pc, #380]	@ (8000ef4 <SD_disk_initialize+0x1c4>)
 8000d78:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000d7c:	801a      	strh	r2, [r3, #0]
 8000d7e:	f44f 71d5 	mov.w	r1, #426	@ 0x1aa
 8000d82:	2048      	movs	r0, #72	@ 0x48
 8000d84:	f7ff ff7f 	bl	8000c86 <SD_SendCmd>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	2b01      	cmp	r3, #1
 8000d8c:	d155      	bne.n	8000e3a <SD_disk_initialize+0x10a>
 8000d8e:	2300      	movs	r3, #0
 8000d90:	73fb      	strb	r3, [r7, #15]
 8000d92:	e00c      	b.n	8000dae <SD_disk_initialize+0x7e>
 8000d94:	7bfc      	ldrb	r4, [r7, #15]
 8000d96:	f7ff fe67 	bl	8000a68 <SPI_RxByte>
 8000d9a:	4603      	mov	r3, r0
 8000d9c:	461a      	mov	r2, r3
 8000d9e:	f104 0310 	add.w	r3, r4, #16
 8000da2:	443b      	add	r3, r7
 8000da4:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000da8:	7bfb      	ldrb	r3, [r7, #15]
 8000daa:	3301      	adds	r3, #1
 8000dac:	73fb      	strb	r3, [r7, #15]
 8000dae:	7bfb      	ldrb	r3, [r7, #15]
 8000db0:	2b03      	cmp	r3, #3
 8000db2:	d9ef      	bls.n	8000d94 <SD_disk_initialize+0x64>
 8000db4:	7abb      	ldrb	r3, [r7, #10]
 8000db6:	2b01      	cmp	r3, #1
 8000db8:	d17e      	bne.n	8000eb8 <SD_disk_initialize+0x188>
 8000dba:	7afb      	ldrb	r3, [r7, #11]
 8000dbc:	2baa      	cmp	r3, #170	@ 0xaa
 8000dbe:	d17b      	bne.n	8000eb8 <SD_disk_initialize+0x188>
 8000dc0:	2100      	movs	r1, #0
 8000dc2:	2077      	movs	r0, #119	@ 0x77
 8000dc4:	f7ff ff5f 	bl	8000c86 <SD_SendCmd>
 8000dc8:	4603      	mov	r3, r0
 8000dca:	2b01      	cmp	r3, #1
 8000dcc:	d807      	bhi.n	8000dde <SD_disk_initialize+0xae>
 8000dce:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 8000dd2:	2069      	movs	r0, #105	@ 0x69
 8000dd4:	f7ff ff57 	bl	8000c86 <SD_SendCmd>
 8000dd8:	4603      	mov	r3, r0
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	d004      	beq.n	8000de8 <SD_disk_initialize+0xb8>
 8000dde:	4b45      	ldr	r3, [pc, #276]	@ (8000ef4 <SD_disk_initialize+0x1c4>)
 8000de0:	881b      	ldrh	r3, [r3, #0]
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d1ec      	bne.n	8000dc0 <SD_disk_initialize+0x90>
 8000de6:	e000      	b.n	8000dea <SD_disk_initialize+0xba>
 8000de8:	bf00      	nop
 8000dea:	4b42      	ldr	r3, [pc, #264]	@ (8000ef4 <SD_disk_initialize+0x1c4>)
 8000dec:	881b      	ldrh	r3, [r3, #0]
 8000dee:	2b00      	cmp	r3, #0
 8000df0:	d062      	beq.n	8000eb8 <SD_disk_initialize+0x188>
 8000df2:	2100      	movs	r1, #0
 8000df4:	207a      	movs	r0, #122	@ 0x7a
 8000df6:	f7ff ff46 	bl	8000c86 <SD_SendCmd>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d15b      	bne.n	8000eb8 <SD_disk_initialize+0x188>
 8000e00:	2300      	movs	r3, #0
 8000e02:	73fb      	strb	r3, [r7, #15]
 8000e04:	e00c      	b.n	8000e20 <SD_disk_initialize+0xf0>
 8000e06:	7bfc      	ldrb	r4, [r7, #15]
 8000e08:	f7ff fe2e 	bl	8000a68 <SPI_RxByte>
 8000e0c:	4603      	mov	r3, r0
 8000e0e:	461a      	mov	r2, r3
 8000e10:	f104 0310 	add.w	r3, r4, #16
 8000e14:	443b      	add	r3, r7
 8000e16:	f803 2c08 	strb.w	r2, [r3, #-8]
 8000e1a:	7bfb      	ldrb	r3, [r7, #15]
 8000e1c:	3301      	adds	r3, #1
 8000e1e:	73fb      	strb	r3, [r7, #15]
 8000e20:	7bfb      	ldrb	r3, [r7, #15]
 8000e22:	2b03      	cmp	r3, #3
 8000e24:	d9ef      	bls.n	8000e06 <SD_disk_initialize+0xd6>
 8000e26:	7a3b      	ldrb	r3, [r7, #8]
 8000e28:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d001      	beq.n	8000e34 <SD_disk_initialize+0x104>
 8000e30:	230c      	movs	r3, #12
 8000e32:	e000      	b.n	8000e36 <SD_disk_initialize+0x106>
 8000e34:	2304      	movs	r3, #4
 8000e36:	73bb      	strb	r3, [r7, #14]
 8000e38:	e03e      	b.n	8000eb8 <SD_disk_initialize+0x188>
 8000e3a:	2100      	movs	r1, #0
 8000e3c:	2077      	movs	r0, #119	@ 0x77
 8000e3e:	f7ff ff22 	bl	8000c86 <SD_SendCmd>
 8000e42:	4603      	mov	r3, r0
 8000e44:	2b01      	cmp	r3, #1
 8000e46:	d808      	bhi.n	8000e5a <SD_disk_initialize+0x12a>
 8000e48:	2100      	movs	r1, #0
 8000e4a:	2069      	movs	r0, #105	@ 0x69
 8000e4c:	f7ff ff1b 	bl	8000c86 <SD_SendCmd>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2b01      	cmp	r3, #1
 8000e54:	d801      	bhi.n	8000e5a <SD_disk_initialize+0x12a>
 8000e56:	2302      	movs	r3, #2
 8000e58:	e000      	b.n	8000e5c <SD_disk_initialize+0x12c>
 8000e5a:	2301      	movs	r3, #1
 8000e5c:	73bb      	strb	r3, [r7, #14]
 8000e5e:	7bbb      	ldrb	r3, [r7, #14]
 8000e60:	2b02      	cmp	r3, #2
 8000e62:	d10e      	bne.n	8000e82 <SD_disk_initialize+0x152>
 8000e64:	2100      	movs	r1, #0
 8000e66:	2077      	movs	r0, #119	@ 0x77
 8000e68:	f7ff ff0d 	bl	8000c86 <SD_SendCmd>
 8000e6c:	4603      	mov	r3, r0
 8000e6e:	2b01      	cmp	r3, #1
 8000e70:	d80e      	bhi.n	8000e90 <SD_disk_initialize+0x160>
 8000e72:	2100      	movs	r1, #0
 8000e74:	2069      	movs	r0, #105	@ 0x69
 8000e76:	f7ff ff06 	bl	8000c86 <SD_SendCmd>
 8000e7a:	4603      	mov	r3, r0
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d107      	bne.n	8000e90 <SD_disk_initialize+0x160>
 8000e80:	e00c      	b.n	8000e9c <SD_disk_initialize+0x16c>
 8000e82:	2100      	movs	r1, #0
 8000e84:	2041      	movs	r0, #65	@ 0x41
 8000e86:	f7ff fefe 	bl	8000c86 <SD_SendCmd>
 8000e8a:	4603      	mov	r3, r0
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	d004      	beq.n	8000e9a <SD_disk_initialize+0x16a>
 8000e90:	4b18      	ldr	r3, [pc, #96]	@ (8000ef4 <SD_disk_initialize+0x1c4>)
 8000e92:	881b      	ldrh	r3, [r3, #0]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d1e2      	bne.n	8000e5e <SD_disk_initialize+0x12e>
 8000e98:	e000      	b.n	8000e9c <SD_disk_initialize+0x16c>
 8000e9a:	bf00      	nop
 8000e9c:	4b15      	ldr	r3, [pc, #84]	@ (8000ef4 <SD_disk_initialize+0x1c4>)
 8000e9e:	881b      	ldrh	r3, [r3, #0]
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d007      	beq.n	8000eb4 <SD_disk_initialize+0x184>
 8000ea4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000ea8:	2050      	movs	r0, #80	@ 0x50
 8000eaa:	f7ff feec 	bl	8000c86 <SD_SendCmd>
 8000eae:	4603      	mov	r3, r0
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d001      	beq.n	8000eb8 <SD_disk_initialize+0x188>
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	73bb      	strb	r3, [r7, #14]
 8000eb8:	4a0f      	ldr	r2, [pc, #60]	@ (8000ef8 <SD_disk_initialize+0x1c8>)
 8000eba:	7bbb      	ldrb	r3, [r7, #14]
 8000ebc:	7013      	strb	r3, [r2, #0]
 8000ebe:	f7ff fd91 	bl	80009e4 <DESELECT>
 8000ec2:	f7ff fdd1 	bl	8000a68 <SPI_RxByte>
 8000ec6:	7bbb      	ldrb	r3, [r7, #14]
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d008      	beq.n	8000ede <SD_disk_initialize+0x1ae>
 8000ecc:	4b08      	ldr	r3, [pc, #32]	@ (8000ef0 <SD_disk_initialize+0x1c0>)
 8000ece:	781b      	ldrb	r3, [r3, #0]
 8000ed0:	b2db      	uxtb	r3, r3
 8000ed2:	f023 0301 	bic.w	r3, r3, #1
 8000ed6:	b2da      	uxtb	r2, r3
 8000ed8:	4b05      	ldr	r3, [pc, #20]	@ (8000ef0 <SD_disk_initialize+0x1c0>)
 8000eda:	701a      	strb	r2, [r3, #0]
 8000edc:	e001      	b.n	8000ee2 <SD_disk_initialize+0x1b2>
 8000ede:	f7ff fe49 	bl	8000b74 <SD_PowerOff>
 8000ee2:	4b03      	ldr	r3, [pc, #12]	@ (8000ef0 <SD_disk_initialize+0x1c0>)
 8000ee4:	781b      	ldrb	r3, [r3, #0]
 8000ee6:	b2db      	uxtb	r3, r3
 8000ee8:	4618      	mov	r0, r3
 8000eea:	3714      	adds	r7, #20
 8000eec:	46bd      	mov	sp, r7
 8000eee:	bd90      	pop	{r4, r7, pc}
 8000ef0:	20000000 	.word	0x20000000
 8000ef4:	20016b08 	.word	0x20016b08
 8000ef8:	20016b0c 	.word	0x20016b0c

08000efc <SD_disk_status>:
 8000efc:	b480      	push	{r7}
 8000efe:	b083      	sub	sp, #12
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	4603      	mov	r3, r0
 8000f04:	71fb      	strb	r3, [r7, #7]
 8000f06:	79fb      	ldrb	r3, [r7, #7]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d001      	beq.n	8000f10 <SD_disk_status+0x14>
 8000f0c:	2301      	movs	r3, #1
 8000f0e:	e002      	b.n	8000f16 <SD_disk_status+0x1a>
 8000f10:	4b04      	ldr	r3, [pc, #16]	@ (8000f24 <SD_disk_status+0x28>)
 8000f12:	781b      	ldrb	r3, [r3, #0]
 8000f14:	b2db      	uxtb	r3, r3
 8000f16:	4618      	mov	r0, r3
 8000f18:	370c      	adds	r7, #12
 8000f1a:	46bd      	mov	sp, r7
 8000f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f20:	4770      	bx	lr
 8000f22:	bf00      	nop
 8000f24:	20000000 	.word	0x20000000

08000f28 <SD_disk_read>:
 8000f28:	b580      	push	{r7, lr}
 8000f2a:	b084      	sub	sp, #16
 8000f2c:	af00      	add	r7, sp, #0
 8000f2e:	60b9      	str	r1, [r7, #8]
 8000f30:	607a      	str	r2, [r7, #4]
 8000f32:	603b      	str	r3, [r7, #0]
 8000f34:	4603      	mov	r3, r0
 8000f36:	73fb      	strb	r3, [r7, #15]
 8000f38:	7bfb      	ldrb	r3, [r7, #15]
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d102      	bne.n	8000f44 <SD_disk_read+0x1c>
 8000f3e:	683b      	ldr	r3, [r7, #0]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d101      	bne.n	8000f48 <SD_disk_read+0x20>
 8000f44:	2304      	movs	r3, #4
 8000f46:	e051      	b.n	8000fec <SD_disk_read+0xc4>
 8000f48:	4b2a      	ldr	r3, [pc, #168]	@ (8000ff4 <SD_disk_read+0xcc>)
 8000f4a:	781b      	ldrb	r3, [r3, #0]
 8000f4c:	b2db      	uxtb	r3, r3
 8000f4e:	f003 0301 	and.w	r3, r3, #1
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d001      	beq.n	8000f5a <SD_disk_read+0x32>
 8000f56:	2303      	movs	r3, #3
 8000f58:	e048      	b.n	8000fec <SD_disk_read+0xc4>
 8000f5a:	4b27      	ldr	r3, [pc, #156]	@ (8000ff8 <SD_disk_read+0xd0>)
 8000f5c:	781b      	ldrb	r3, [r3, #0]
 8000f5e:	f003 0304 	and.w	r3, r3, #4
 8000f62:	2b00      	cmp	r3, #0
 8000f64:	d102      	bne.n	8000f6c <SD_disk_read+0x44>
 8000f66:	687b      	ldr	r3, [r7, #4]
 8000f68:	025b      	lsls	r3, r3, #9
 8000f6a:	607b      	str	r3, [r7, #4]
 8000f6c:	f7ff fd2c 	bl	80009c8 <SELECT>
 8000f70:	683b      	ldr	r3, [r7, #0]
 8000f72:	2b01      	cmp	r3, #1
 8000f74:	d111      	bne.n	8000f9a <SD_disk_read+0x72>
 8000f76:	6879      	ldr	r1, [r7, #4]
 8000f78:	2051      	movs	r0, #81	@ 0x51
 8000f7a:	f7ff fe84 	bl	8000c86 <SD_SendCmd>
 8000f7e:	4603      	mov	r3, r0
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d129      	bne.n	8000fd8 <SD_disk_read+0xb0>
 8000f84:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000f88:	68b8      	ldr	r0, [r7, #8]
 8000f8a:	f7ff fe0b 	bl	8000ba4 <SD_RxDataBlock>
 8000f8e:	4603      	mov	r3, r0
 8000f90:	2b00      	cmp	r3, #0
 8000f92:	d021      	beq.n	8000fd8 <SD_disk_read+0xb0>
 8000f94:	2300      	movs	r3, #0
 8000f96:	603b      	str	r3, [r7, #0]
 8000f98:	e01e      	b.n	8000fd8 <SD_disk_read+0xb0>
 8000f9a:	6879      	ldr	r1, [r7, #4]
 8000f9c:	2052      	movs	r0, #82	@ 0x52
 8000f9e:	f7ff fe72 	bl	8000c86 <SD_SendCmd>
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d117      	bne.n	8000fd8 <SD_disk_read+0xb0>
 8000fa8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000fac:	68b8      	ldr	r0, [r7, #8]
 8000fae:	f7ff fdf9 	bl	8000ba4 <SD_RxDataBlock>
 8000fb2:	4603      	mov	r3, r0
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d00a      	beq.n	8000fce <SD_disk_read+0xa6>
 8000fb8:	68bb      	ldr	r3, [r7, #8]
 8000fba:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 8000fbe:	60bb      	str	r3, [r7, #8]
 8000fc0:	683b      	ldr	r3, [r7, #0]
 8000fc2:	3b01      	subs	r3, #1
 8000fc4:	603b      	str	r3, [r7, #0]
 8000fc6:	683b      	ldr	r3, [r7, #0]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d1ed      	bne.n	8000fa8 <SD_disk_read+0x80>
 8000fcc:	e000      	b.n	8000fd0 <SD_disk_read+0xa8>
 8000fce:	bf00      	nop
 8000fd0:	2100      	movs	r1, #0
 8000fd2:	204c      	movs	r0, #76	@ 0x4c
 8000fd4:	f7ff fe57 	bl	8000c86 <SD_SendCmd>
 8000fd8:	f7ff fd04 	bl	80009e4 <DESELECT>
 8000fdc:	f7ff fd44 	bl	8000a68 <SPI_RxByte>
 8000fe0:	683b      	ldr	r3, [r7, #0]
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	bf14      	ite	ne
 8000fe6:	2301      	movne	r3, #1
 8000fe8:	2300      	moveq	r3, #0
 8000fea:	b2db      	uxtb	r3, r3
 8000fec:	4618      	mov	r0, r3
 8000fee:	3710      	adds	r7, #16
 8000ff0:	46bd      	mov	sp, r7
 8000ff2:	bd80      	pop	{r7, pc}
 8000ff4:	20000000 	.word	0x20000000
 8000ff8:	20016b0c 	.word	0x20016b0c

08000ffc <SD_disk_write>:
 8000ffc:	b580      	push	{r7, lr}
 8000ffe:	b084      	sub	sp, #16
 8001000:	af00      	add	r7, sp, #0
 8001002:	60b9      	str	r1, [r7, #8]
 8001004:	607a      	str	r2, [r7, #4]
 8001006:	603b      	str	r3, [r7, #0]
 8001008:	4603      	mov	r3, r0
 800100a:	73fb      	strb	r3, [r7, #15]
 800100c:	7bfb      	ldrb	r3, [r7, #15]
 800100e:	2b00      	cmp	r3, #0
 8001010:	d102      	bne.n	8001018 <SD_disk_write+0x1c>
 8001012:	683b      	ldr	r3, [r7, #0]
 8001014:	2b00      	cmp	r3, #0
 8001016:	d101      	bne.n	800101c <SD_disk_write+0x20>
 8001018:	2304      	movs	r3, #4
 800101a:	e06b      	b.n	80010f4 <SD_disk_write+0xf8>
 800101c:	4b37      	ldr	r3, [pc, #220]	@ (80010fc <SD_disk_write+0x100>)
 800101e:	781b      	ldrb	r3, [r3, #0]
 8001020:	b2db      	uxtb	r3, r3
 8001022:	f003 0301 	and.w	r3, r3, #1
 8001026:	2b00      	cmp	r3, #0
 8001028:	d001      	beq.n	800102e <SD_disk_write+0x32>
 800102a:	2303      	movs	r3, #3
 800102c:	e062      	b.n	80010f4 <SD_disk_write+0xf8>
 800102e:	4b33      	ldr	r3, [pc, #204]	@ (80010fc <SD_disk_write+0x100>)
 8001030:	781b      	ldrb	r3, [r3, #0]
 8001032:	b2db      	uxtb	r3, r3
 8001034:	f003 0304 	and.w	r3, r3, #4
 8001038:	2b00      	cmp	r3, #0
 800103a:	d001      	beq.n	8001040 <SD_disk_write+0x44>
 800103c:	2302      	movs	r3, #2
 800103e:	e059      	b.n	80010f4 <SD_disk_write+0xf8>
 8001040:	4b2f      	ldr	r3, [pc, #188]	@ (8001100 <SD_disk_write+0x104>)
 8001042:	781b      	ldrb	r3, [r3, #0]
 8001044:	f003 0304 	and.w	r3, r3, #4
 8001048:	2b00      	cmp	r3, #0
 800104a:	d102      	bne.n	8001052 <SD_disk_write+0x56>
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	025b      	lsls	r3, r3, #9
 8001050:	607b      	str	r3, [r7, #4]
 8001052:	f7ff fcb9 	bl	80009c8 <SELECT>
 8001056:	683b      	ldr	r3, [r7, #0]
 8001058:	2b01      	cmp	r3, #1
 800105a:	d110      	bne.n	800107e <SD_disk_write+0x82>
 800105c:	6879      	ldr	r1, [r7, #4]
 800105e:	2058      	movs	r0, #88	@ 0x58
 8001060:	f7ff fe11 	bl	8000c86 <SD_SendCmd>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d13a      	bne.n	80010e0 <SD_disk_write+0xe4>
 800106a:	21fe      	movs	r1, #254	@ 0xfe
 800106c:	68b8      	ldr	r0, [r7, #8]
 800106e:	f7ff fdc7 	bl	8000c00 <SD_TxDataBlock>
 8001072:	4603      	mov	r3, r0
 8001074:	2b00      	cmp	r3, #0
 8001076:	d033      	beq.n	80010e0 <SD_disk_write+0xe4>
 8001078:	2300      	movs	r3, #0
 800107a:	603b      	str	r3, [r7, #0]
 800107c:	e030      	b.n	80010e0 <SD_disk_write+0xe4>
 800107e:	4b20      	ldr	r3, [pc, #128]	@ (8001100 <SD_disk_write+0x104>)
 8001080:	781b      	ldrb	r3, [r3, #0]
 8001082:	f003 0302 	and.w	r3, r3, #2
 8001086:	2b00      	cmp	r3, #0
 8001088:	d007      	beq.n	800109a <SD_disk_write+0x9e>
 800108a:	2100      	movs	r1, #0
 800108c:	2077      	movs	r0, #119	@ 0x77
 800108e:	f7ff fdfa 	bl	8000c86 <SD_SendCmd>
 8001092:	6839      	ldr	r1, [r7, #0]
 8001094:	2057      	movs	r0, #87	@ 0x57
 8001096:	f7ff fdf6 	bl	8000c86 <SD_SendCmd>
 800109a:	6879      	ldr	r1, [r7, #4]
 800109c:	2059      	movs	r0, #89	@ 0x59
 800109e:	f7ff fdf2 	bl	8000c86 <SD_SendCmd>
 80010a2:	4603      	mov	r3, r0
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d11b      	bne.n	80010e0 <SD_disk_write+0xe4>
 80010a8:	21fc      	movs	r1, #252	@ 0xfc
 80010aa:	68b8      	ldr	r0, [r7, #8]
 80010ac:	f7ff fda8 	bl	8000c00 <SD_TxDataBlock>
 80010b0:	4603      	mov	r3, r0
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d00a      	beq.n	80010cc <SD_disk_write+0xd0>
 80010b6:	68bb      	ldr	r3, [r7, #8]
 80010b8:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 80010bc:	60bb      	str	r3, [r7, #8]
 80010be:	683b      	ldr	r3, [r7, #0]
 80010c0:	3b01      	subs	r3, #1
 80010c2:	603b      	str	r3, [r7, #0]
 80010c4:	683b      	ldr	r3, [r7, #0]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d1ee      	bne.n	80010a8 <SD_disk_write+0xac>
 80010ca:	e000      	b.n	80010ce <SD_disk_write+0xd2>
 80010cc:	bf00      	nop
 80010ce:	21fd      	movs	r1, #253	@ 0xfd
 80010d0:	2000      	movs	r0, #0
 80010d2:	f7ff fd95 	bl	8000c00 <SD_TxDataBlock>
 80010d6:	4603      	mov	r3, r0
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d101      	bne.n	80010e0 <SD_disk_write+0xe4>
 80010dc:	2301      	movs	r3, #1
 80010de:	603b      	str	r3, [r7, #0]
 80010e0:	f7ff fc80 	bl	80009e4 <DESELECT>
 80010e4:	f7ff fcc0 	bl	8000a68 <SPI_RxByte>
 80010e8:	683b      	ldr	r3, [r7, #0]
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	bf14      	ite	ne
 80010ee:	2301      	movne	r3, #1
 80010f0:	2300      	moveq	r3, #0
 80010f2:	b2db      	uxtb	r3, r3
 80010f4:	4618      	mov	r0, r3
 80010f6:	3710      	adds	r7, #16
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bd80      	pop	{r7, pc}
 80010fc:	20000000 	.word	0x20000000
 8001100:	20016b0c 	.word	0x20016b0c

08001104 <SD_disk_ioctl>:
 8001104:	b590      	push	{r4, r7, lr}
 8001106:	b08b      	sub	sp, #44	@ 0x2c
 8001108:	af00      	add	r7, sp, #0
 800110a:	4603      	mov	r3, r0
 800110c:	603a      	str	r2, [r7, #0]
 800110e:	71fb      	strb	r3, [r7, #7]
 8001110:	460b      	mov	r3, r1
 8001112:	71bb      	strb	r3, [r7, #6]
 8001114:	683b      	ldr	r3, [r7, #0]
 8001116:	623b      	str	r3, [r7, #32]
 8001118:	79fb      	ldrb	r3, [r7, #7]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d001      	beq.n	8001122 <SD_disk_ioctl+0x1e>
 800111e:	2304      	movs	r3, #4
 8001120:	e113      	b.n	800134a <SD_disk_ioctl+0x246>
 8001122:	2301      	movs	r3, #1
 8001124:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001128:	79bb      	ldrb	r3, [r7, #6]
 800112a:	2b05      	cmp	r3, #5
 800112c:	d124      	bne.n	8001178 <SD_disk_ioctl+0x74>
 800112e:	6a3b      	ldr	r3, [r7, #32]
 8001130:	781b      	ldrb	r3, [r3, #0]
 8001132:	2b02      	cmp	r3, #2
 8001134:	d012      	beq.n	800115c <SD_disk_ioctl+0x58>
 8001136:	2b02      	cmp	r3, #2
 8001138:	dc1a      	bgt.n	8001170 <SD_disk_ioctl+0x6c>
 800113a:	2b00      	cmp	r3, #0
 800113c:	d002      	beq.n	8001144 <SD_disk_ioctl+0x40>
 800113e:	2b01      	cmp	r3, #1
 8001140:	d006      	beq.n	8001150 <SD_disk_ioctl+0x4c>
 8001142:	e015      	b.n	8001170 <SD_disk_ioctl+0x6c>
 8001144:	f7ff fd16 	bl	8000b74 <SD_PowerOff>
 8001148:	2300      	movs	r3, #0
 800114a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800114e:	e0fa      	b.n	8001346 <SD_disk_ioctl+0x242>
 8001150:	f7ff fcce 	bl	8000af0 <SD_PowerOn>
 8001154:	2300      	movs	r3, #0
 8001156:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800115a:	e0f4      	b.n	8001346 <SD_disk_ioctl+0x242>
 800115c:	6a3b      	ldr	r3, [r7, #32]
 800115e:	1c5c      	adds	r4, r3, #1
 8001160:	f7ff fd14 	bl	8000b8c <SD_CheckPower>
 8001164:	4603      	mov	r3, r0
 8001166:	7023      	strb	r3, [r4, #0]
 8001168:	2300      	movs	r3, #0
 800116a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800116e:	e0ea      	b.n	8001346 <SD_disk_ioctl+0x242>
 8001170:	2304      	movs	r3, #4
 8001172:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001176:	e0e6      	b.n	8001346 <SD_disk_ioctl+0x242>
 8001178:	4b76      	ldr	r3, [pc, #472]	@ (8001354 <SD_disk_ioctl+0x250>)
 800117a:	781b      	ldrb	r3, [r3, #0]
 800117c:	b2db      	uxtb	r3, r3
 800117e:	f003 0301 	and.w	r3, r3, #1
 8001182:	2b00      	cmp	r3, #0
 8001184:	d001      	beq.n	800118a <SD_disk_ioctl+0x86>
 8001186:	2303      	movs	r3, #3
 8001188:	e0df      	b.n	800134a <SD_disk_ioctl+0x246>
 800118a:	f7ff fc1d 	bl	80009c8 <SELECT>
 800118e:	79bb      	ldrb	r3, [r7, #6]
 8001190:	2b0d      	cmp	r3, #13
 8001192:	f200 80c9 	bhi.w	8001328 <SD_disk_ioctl+0x224>
 8001196:	a201      	add	r2, pc, #4	@ (adr r2, 800119c <SD_disk_ioctl+0x98>)
 8001198:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800119c:	08001293 	.word	0x08001293
 80011a0:	080011d5 	.word	0x080011d5
 80011a4:	08001283 	.word	0x08001283
 80011a8:	08001329 	.word	0x08001329
 80011ac:	08001329 	.word	0x08001329
 80011b0:	08001329 	.word	0x08001329
 80011b4:	08001329 	.word	0x08001329
 80011b8:	08001329 	.word	0x08001329
 80011bc:	08001329 	.word	0x08001329
 80011c0:	08001329 	.word	0x08001329
 80011c4:	08001329 	.word	0x08001329
 80011c8:	080012a5 	.word	0x080012a5
 80011cc:	080012c9 	.word	0x080012c9
 80011d0:	080012ed 	.word	0x080012ed
 80011d4:	2100      	movs	r1, #0
 80011d6:	2049      	movs	r0, #73	@ 0x49
 80011d8:	f7ff fd55 	bl	8000c86 <SD_SendCmd>
 80011dc:	4603      	mov	r3, r0
 80011de:	2b00      	cmp	r3, #0
 80011e0:	f040 80a6 	bne.w	8001330 <SD_disk_ioctl+0x22c>
 80011e4:	f107 030c 	add.w	r3, r7, #12
 80011e8:	2110      	movs	r1, #16
 80011ea:	4618      	mov	r0, r3
 80011ec:	f7ff fcda 	bl	8000ba4 <SD_RxDataBlock>
 80011f0:	4603      	mov	r3, r0
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	f000 809c 	beq.w	8001330 <SD_disk_ioctl+0x22c>
 80011f8:	7b3b      	ldrb	r3, [r7, #12]
 80011fa:	099b      	lsrs	r3, r3, #6
 80011fc:	b2db      	uxtb	r3, r3
 80011fe:	2b01      	cmp	r3, #1
 8001200:	d10d      	bne.n	800121e <SD_disk_ioctl+0x11a>
 8001202:	7d7b      	ldrb	r3, [r7, #21]
 8001204:	461a      	mov	r2, r3
 8001206:	7d3b      	ldrb	r3, [r7, #20]
 8001208:	021b      	lsls	r3, r3, #8
 800120a:	b29b      	uxth	r3, r3
 800120c:	4413      	add	r3, r2
 800120e:	b29b      	uxth	r3, r3
 8001210:	3301      	adds	r3, #1
 8001212:	83fb      	strh	r3, [r7, #30]
 8001214:	8bfb      	ldrh	r3, [r7, #30]
 8001216:	029a      	lsls	r2, r3, #10
 8001218:	683b      	ldr	r3, [r7, #0]
 800121a:	601a      	str	r2, [r3, #0]
 800121c:	e02d      	b.n	800127a <SD_disk_ioctl+0x176>
 800121e:	7c7b      	ldrb	r3, [r7, #17]
 8001220:	f003 030f 	and.w	r3, r3, #15
 8001224:	b2da      	uxtb	r2, r3
 8001226:	7dbb      	ldrb	r3, [r7, #22]
 8001228:	09db      	lsrs	r3, r3, #7
 800122a:	b2db      	uxtb	r3, r3
 800122c:	4413      	add	r3, r2
 800122e:	b2da      	uxtb	r2, r3
 8001230:	7d7b      	ldrb	r3, [r7, #21]
 8001232:	005b      	lsls	r3, r3, #1
 8001234:	b2db      	uxtb	r3, r3
 8001236:	f003 0306 	and.w	r3, r3, #6
 800123a:	b2db      	uxtb	r3, r3
 800123c:	4413      	add	r3, r2
 800123e:	b2db      	uxtb	r3, r3
 8001240:	3302      	adds	r3, #2
 8001242:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001246:	7d3b      	ldrb	r3, [r7, #20]
 8001248:	099b      	lsrs	r3, r3, #6
 800124a:	b2db      	uxtb	r3, r3
 800124c:	461a      	mov	r2, r3
 800124e:	7cfb      	ldrb	r3, [r7, #19]
 8001250:	009b      	lsls	r3, r3, #2
 8001252:	b29b      	uxth	r3, r3
 8001254:	4413      	add	r3, r2
 8001256:	b29a      	uxth	r2, r3
 8001258:	7cbb      	ldrb	r3, [r7, #18]
 800125a:	029b      	lsls	r3, r3, #10
 800125c:	b29b      	uxth	r3, r3
 800125e:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8001262:	b29b      	uxth	r3, r3
 8001264:	4413      	add	r3, r2
 8001266:	b29b      	uxth	r3, r3
 8001268:	3301      	adds	r3, #1
 800126a:	83fb      	strh	r3, [r7, #30]
 800126c:	8bfa      	ldrh	r2, [r7, #30]
 800126e:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8001272:	3b09      	subs	r3, #9
 8001274:	409a      	lsls	r2, r3
 8001276:	683b      	ldr	r3, [r7, #0]
 8001278:	601a      	str	r2, [r3, #0]
 800127a:	2300      	movs	r3, #0
 800127c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001280:	e056      	b.n	8001330 <SD_disk_ioctl+0x22c>
 8001282:	683b      	ldr	r3, [r7, #0]
 8001284:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001288:	801a      	strh	r2, [r3, #0]
 800128a:	2300      	movs	r3, #0
 800128c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001290:	e055      	b.n	800133e <SD_disk_ioctl+0x23a>
 8001292:	f7ff fc13 	bl	8000abc <SD_ReadyWait>
 8001296:	4603      	mov	r3, r0
 8001298:	2bff      	cmp	r3, #255	@ 0xff
 800129a:	d14b      	bne.n	8001334 <SD_disk_ioctl+0x230>
 800129c:	2300      	movs	r3, #0
 800129e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80012a2:	e047      	b.n	8001334 <SD_disk_ioctl+0x230>
 80012a4:	2100      	movs	r1, #0
 80012a6:	2049      	movs	r0, #73	@ 0x49
 80012a8:	f7ff fced 	bl	8000c86 <SD_SendCmd>
 80012ac:	4603      	mov	r3, r0
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d142      	bne.n	8001338 <SD_disk_ioctl+0x234>
 80012b2:	2110      	movs	r1, #16
 80012b4:	6a38      	ldr	r0, [r7, #32]
 80012b6:	f7ff fc75 	bl	8000ba4 <SD_RxDataBlock>
 80012ba:	4603      	mov	r3, r0
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d03b      	beq.n	8001338 <SD_disk_ioctl+0x234>
 80012c0:	2300      	movs	r3, #0
 80012c2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80012c6:	e037      	b.n	8001338 <SD_disk_ioctl+0x234>
 80012c8:	2100      	movs	r1, #0
 80012ca:	204a      	movs	r0, #74	@ 0x4a
 80012cc:	f7ff fcdb 	bl	8000c86 <SD_SendCmd>
 80012d0:	4603      	mov	r3, r0
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d132      	bne.n	800133c <SD_disk_ioctl+0x238>
 80012d6:	2110      	movs	r1, #16
 80012d8:	6a38      	ldr	r0, [r7, #32]
 80012da:	f7ff fc63 	bl	8000ba4 <SD_RxDataBlock>
 80012de:	4603      	mov	r3, r0
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d02b      	beq.n	800133c <SD_disk_ioctl+0x238>
 80012e4:	2300      	movs	r3, #0
 80012e6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80012ea:	e027      	b.n	800133c <SD_disk_ioctl+0x238>
 80012ec:	2100      	movs	r1, #0
 80012ee:	207a      	movs	r0, #122	@ 0x7a
 80012f0:	f7ff fcc9 	bl	8000c86 <SD_SendCmd>
 80012f4:	4603      	mov	r3, r0
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	d116      	bne.n	8001328 <SD_disk_ioctl+0x224>
 80012fa:	2300      	movs	r3, #0
 80012fc:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001300:	e00b      	b.n	800131a <SD_disk_ioctl+0x216>
 8001302:	6a3c      	ldr	r4, [r7, #32]
 8001304:	1c63      	adds	r3, r4, #1
 8001306:	623b      	str	r3, [r7, #32]
 8001308:	f7ff fbae 	bl	8000a68 <SPI_RxByte>
 800130c:	4603      	mov	r3, r0
 800130e:	7023      	strb	r3, [r4, #0]
 8001310:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8001314:	3301      	adds	r3, #1
 8001316:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800131a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800131e:	2b03      	cmp	r3, #3
 8001320:	d9ef      	bls.n	8001302 <SD_disk_ioctl+0x1fe>
 8001322:	2300      	movs	r3, #0
 8001324:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001328:	2304      	movs	r3, #4
 800132a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800132e:	e006      	b.n	800133e <SD_disk_ioctl+0x23a>
 8001330:	bf00      	nop
 8001332:	e004      	b.n	800133e <SD_disk_ioctl+0x23a>
 8001334:	bf00      	nop
 8001336:	e002      	b.n	800133e <SD_disk_ioctl+0x23a>
 8001338:	bf00      	nop
 800133a:	e000      	b.n	800133e <SD_disk_ioctl+0x23a>
 800133c:	bf00      	nop
 800133e:	f7ff fb51 	bl	80009e4 <DESELECT>
 8001342:	f7ff fb91 	bl	8000a68 <SPI_RxByte>
 8001346:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800134a:	4618      	mov	r0, r3
 800134c:	372c      	adds	r7, #44	@ 0x2c
 800134e:	46bd      	mov	sp, r7
 8001350:	bd90      	pop	{r4, r7, pc}
 8001352:	bf00      	nop
 8001354:	20000000 	.word	0x20000000

08001358 <LCD_Init>:
 8001358:	b580      	push	{r7, lr}
 800135a:	af00      	add	r7, sp, #0
 800135c:	2201      	movs	r2, #1
 800135e:	2101      	movs	r1, #1
 8001360:	4878      	ldr	r0, [pc, #480]	@ (8001544 <LCD_Init+0x1ec>)
 8001362:	f005 f971 	bl	8006648 <HAL_GPIO_WritePin>
 8001366:	2201      	movs	r2, #1
 8001368:	2113      	movs	r1, #19
 800136a:	4877      	ldr	r0, [pc, #476]	@ (8001548 <LCD_Init+0x1f0>)
 800136c:	f005 f96c 	bl	8006648 <HAL_GPIO_WritePin>
 8001370:	2201      	movs	r2, #1
 8001372:	2102      	movs	r1, #2
 8001374:	4875      	ldr	r0, [pc, #468]	@ (800154c <LCD_Init+0x1f4>)
 8001376:	f005 f967 	bl	8006648 <HAL_GPIO_WritePin>
 800137a:	2005      	movs	r0, #5
 800137c:	f004 fdfc 	bl	8005f78 <HAL_Delay>
 8001380:	2200      	movs	r2, #0
 8001382:	2102      	movs	r1, #2
 8001384:	4871      	ldr	r0, [pc, #452]	@ (800154c <LCD_Init+0x1f4>)
 8001386:	f005 f95f 	bl	8006648 <HAL_GPIO_WritePin>
 800138a:	2014      	movs	r0, #20
 800138c:	f004 fdf4 	bl	8005f78 <HAL_Delay>
 8001390:	2201      	movs	r2, #1
 8001392:	2102      	movs	r1, #2
 8001394:	486d      	ldr	r0, [pc, #436]	@ (800154c <LCD_Init+0x1f4>)
 8001396:	f005 f957 	bl	8006648 <HAL_GPIO_WritePin>
 800139a:	2096      	movs	r0, #150	@ 0x96
 800139c:	f004 fdec 	bl	8005f78 <HAL_Delay>
 80013a0:	2200      	movs	r2, #0
 80013a2:	2101      	movs	r1, #1
 80013a4:	4867      	ldr	r0, [pc, #412]	@ (8001544 <LCD_Init+0x1ec>)
 80013a6:	f005 f94f 	bl	8006648 <HAL_GPIO_WritePin>
 80013aa:	20e9      	movs	r0, #233	@ 0xe9
 80013ac:	f000 f8d0 	bl	8001550 <LCD_CMD>
 80013b0:	2020      	movs	r0, #32
 80013b2:	f000 f973 	bl	800169c <LCD_DATA>
 80013b6:	2011      	movs	r0, #17
 80013b8:	f000 f8ca 	bl	8001550 <LCD_CMD>
 80013bc:	2064      	movs	r0, #100	@ 0x64
 80013be:	f004 fddb 	bl	8005f78 <HAL_Delay>
 80013c2:	20d1      	movs	r0, #209	@ 0xd1
 80013c4:	f000 f8c4 	bl	8001550 <LCD_CMD>
 80013c8:	2000      	movs	r0, #0
 80013ca:	f000 f967 	bl	800169c <LCD_DATA>
 80013ce:	2071      	movs	r0, #113	@ 0x71
 80013d0:	f000 f964 	bl	800169c <LCD_DATA>
 80013d4:	2019      	movs	r0, #25
 80013d6:	f000 f961 	bl	800169c <LCD_DATA>
 80013da:	20d0      	movs	r0, #208	@ 0xd0
 80013dc:	f000 f8b8 	bl	8001550 <LCD_CMD>
 80013e0:	2007      	movs	r0, #7
 80013e2:	f000 f95b 	bl	800169c <LCD_DATA>
 80013e6:	2001      	movs	r0, #1
 80013e8:	f000 f958 	bl	800169c <LCD_DATA>
 80013ec:	2008      	movs	r0, #8
 80013ee:	f000 f955 	bl	800169c <LCD_DATA>
 80013f2:	2036      	movs	r0, #54	@ 0x36
 80013f4:	f000 f8ac 	bl	8001550 <LCD_CMD>
 80013f8:	20e8      	movs	r0, #232	@ 0xe8
 80013fa:	f000 f94f 	bl	800169c <LCD_DATA>
 80013fe:	203a      	movs	r0, #58	@ 0x3a
 8001400:	f000 f8a6 	bl	8001550 <LCD_CMD>
 8001404:	2005      	movs	r0, #5
 8001406:	f000 f949 	bl	800169c <LCD_DATA>
 800140a:	20c1      	movs	r0, #193	@ 0xc1
 800140c:	f000 f8a0 	bl	8001550 <LCD_CMD>
 8001410:	2010      	movs	r0, #16
 8001412:	f000 f943 	bl	800169c <LCD_DATA>
 8001416:	2010      	movs	r0, #16
 8001418:	f000 f940 	bl	800169c <LCD_DATA>
 800141c:	2002      	movs	r0, #2
 800141e:	f000 f93d 	bl	800169c <LCD_DATA>
 8001422:	2002      	movs	r0, #2
 8001424:	f000 f93a 	bl	800169c <LCD_DATA>
 8001428:	20c0      	movs	r0, #192	@ 0xc0
 800142a:	f000 f891 	bl	8001550 <LCD_CMD>
 800142e:	2000      	movs	r0, #0
 8001430:	f000 f934 	bl	800169c <LCD_DATA>
 8001434:	2035      	movs	r0, #53	@ 0x35
 8001436:	f000 f931 	bl	800169c <LCD_DATA>
 800143a:	2000      	movs	r0, #0
 800143c:	f000 f92e 	bl	800169c <LCD_DATA>
 8001440:	2000      	movs	r0, #0
 8001442:	f000 f92b 	bl	800169c <LCD_DATA>
 8001446:	2001      	movs	r0, #1
 8001448:	f000 f928 	bl	800169c <LCD_DATA>
 800144c:	2002      	movs	r0, #2
 800144e:	f000 f925 	bl	800169c <LCD_DATA>
 8001452:	20c5      	movs	r0, #197	@ 0xc5
 8001454:	f000 f87c 	bl	8001550 <LCD_CMD>
 8001458:	2004      	movs	r0, #4
 800145a:	f000 f91f 	bl	800169c <LCD_DATA>
 800145e:	20d2      	movs	r0, #210	@ 0xd2
 8001460:	f000 f876 	bl	8001550 <LCD_CMD>
 8001464:	2001      	movs	r0, #1
 8001466:	f000 f919 	bl	800169c <LCD_DATA>
 800146a:	2044      	movs	r0, #68	@ 0x44
 800146c:	f000 f916 	bl	800169c <LCD_DATA>
 8001470:	20c8      	movs	r0, #200	@ 0xc8
 8001472:	f000 f86d 	bl	8001550 <LCD_CMD>
 8001476:	2004      	movs	r0, #4
 8001478:	f000 f910 	bl	800169c <LCD_DATA>
 800147c:	2067      	movs	r0, #103	@ 0x67
 800147e:	f000 f90d 	bl	800169c <LCD_DATA>
 8001482:	2035      	movs	r0, #53	@ 0x35
 8001484:	f000 f90a 	bl	800169c <LCD_DATA>
 8001488:	2004      	movs	r0, #4
 800148a:	f000 f907 	bl	800169c <LCD_DATA>
 800148e:	2008      	movs	r0, #8
 8001490:	f000 f904 	bl	800169c <LCD_DATA>
 8001494:	2006      	movs	r0, #6
 8001496:	f000 f901 	bl	800169c <LCD_DATA>
 800149a:	2024      	movs	r0, #36	@ 0x24
 800149c:	f000 f8fe 	bl	800169c <LCD_DATA>
 80014a0:	2001      	movs	r0, #1
 80014a2:	f000 f8fb 	bl	800169c <LCD_DATA>
 80014a6:	2037      	movs	r0, #55	@ 0x37
 80014a8:	f000 f8f8 	bl	800169c <LCD_DATA>
 80014ac:	2040      	movs	r0, #64	@ 0x40
 80014ae:	f000 f8f5 	bl	800169c <LCD_DATA>
 80014b2:	2003      	movs	r0, #3
 80014b4:	f000 f8f2 	bl	800169c <LCD_DATA>
 80014b8:	2010      	movs	r0, #16
 80014ba:	f000 f8ef 	bl	800169c <LCD_DATA>
 80014be:	2008      	movs	r0, #8
 80014c0:	f000 f8ec 	bl	800169c <LCD_DATA>
 80014c4:	2080      	movs	r0, #128	@ 0x80
 80014c6:	f000 f8e9 	bl	800169c <LCD_DATA>
 80014ca:	2000      	movs	r0, #0
 80014cc:	f000 f8e6 	bl	800169c <LCD_DATA>
 80014d0:	202a      	movs	r0, #42	@ 0x2a
 80014d2:	f000 f83d 	bl	8001550 <LCD_CMD>
 80014d6:	2000      	movs	r0, #0
 80014d8:	f000 f8e0 	bl	800169c <LCD_DATA>
 80014dc:	2000      	movs	r0, #0
 80014de:	f000 f8dd 	bl	800169c <LCD_DATA>
 80014e2:	2001      	movs	r0, #1
 80014e4:	f000 f8da 	bl	800169c <LCD_DATA>
 80014e8:	20ef      	movs	r0, #239	@ 0xef
 80014ea:	f000 f8d7 	bl	800169c <LCD_DATA>
 80014ee:	202b      	movs	r0, #43	@ 0x2b
 80014f0:	f000 f82e 	bl	8001550 <LCD_CMD>
 80014f4:	2000      	movs	r0, #0
 80014f6:	f000 f8d1 	bl	800169c <LCD_DATA>
 80014fa:	2000      	movs	r0, #0
 80014fc:	f000 f8ce 	bl	800169c <LCD_DATA>
 8001500:	2001      	movs	r0, #1
 8001502:	f000 f8cb 	bl	800169c <LCD_DATA>
 8001506:	203f      	movs	r0, #63	@ 0x3f
 8001508:	f000 f8c8 	bl	800169c <LCD_DATA>
 800150c:	2029      	movs	r0, #41	@ 0x29
 800150e:	f000 f81f 	bl	8001550 <LCD_CMD>
 8001512:	202c      	movs	r0, #44	@ 0x2c
 8001514:	f000 f81c 	bl	8001550 <LCD_CMD>
 8001518:	2020      	movs	r0, #32
 800151a:	f000 f819 	bl	8001550 <LCD_CMD>
 800151e:	2078      	movs	r0, #120	@ 0x78
 8001520:	f004 fd2a 	bl	8005f78 <HAL_Delay>
 8001524:	2011      	movs	r0, #17
 8001526:	f000 f813 	bl	8001550 <LCD_CMD>
 800152a:	2078      	movs	r0, #120	@ 0x78
 800152c:	f004 fd24 	bl	8005f78 <HAL_Delay>
 8001530:	2029      	movs	r0, #41	@ 0x29
 8001532:	f000 f80d 	bl	8001550 <LCD_CMD>
 8001536:	2201      	movs	r2, #1
 8001538:	2101      	movs	r1, #1
 800153a:	4802      	ldr	r0, [pc, #8]	@ (8001544 <LCD_Init+0x1ec>)
 800153c:	f005 f884 	bl	8006648 <HAL_GPIO_WritePin>
 8001540:	bf00      	nop
 8001542:	bd80      	pop	{r7, pc}
 8001544:	40020400 	.word	0x40020400
 8001548:	40020000 	.word	0x40020000
 800154c:	40020800 	.word	0x40020800

08001550 <LCD_CMD>:
 8001550:	b580      	push	{r7, lr}
 8001552:	b082      	sub	sp, #8
 8001554:	af00      	add	r7, sp, #0
 8001556:	4603      	mov	r3, r0
 8001558:	71fb      	strb	r3, [r7, #7]
 800155a:	2200      	movs	r2, #0
 800155c:	2110      	movs	r1, #16
 800155e:	484c      	ldr	r0, [pc, #304]	@ (8001690 <LCD_CMD+0x140>)
 8001560:	f005 f872 	bl	8006648 <HAL_GPIO_WritePin>
 8001564:	2200      	movs	r2, #0
 8001566:	2102      	movs	r1, #2
 8001568:	4849      	ldr	r0, [pc, #292]	@ (8001690 <LCD_CMD+0x140>)
 800156a:	f005 f86d 	bl	8006648 <HAL_GPIO_WritePin>
 800156e:	79fb      	ldrb	r3, [r7, #7]
 8001570:	f003 0301 	and.w	r3, r3, #1
 8001574:	2b00      	cmp	r3, #0
 8001576:	d006      	beq.n	8001586 <LCD_CMD+0x36>
 8001578:	2201      	movs	r2, #1
 800157a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800157e:	4844      	ldr	r0, [pc, #272]	@ (8001690 <LCD_CMD+0x140>)
 8001580:	f005 f862 	bl	8006648 <HAL_GPIO_WritePin>
 8001584:	e005      	b.n	8001592 <LCD_CMD+0x42>
 8001586:	2200      	movs	r2, #0
 8001588:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800158c:	4840      	ldr	r0, [pc, #256]	@ (8001690 <LCD_CMD+0x140>)
 800158e:	f005 f85b 	bl	8006648 <HAL_GPIO_WritePin>
 8001592:	79fb      	ldrb	r3, [r7, #7]
 8001594:	f003 0302 	and.w	r3, r3, #2
 8001598:	2b00      	cmp	r3, #0
 800159a:	d005      	beq.n	80015a8 <LCD_CMD+0x58>
 800159c:	2201      	movs	r2, #1
 800159e:	2180      	movs	r1, #128	@ 0x80
 80015a0:	483c      	ldr	r0, [pc, #240]	@ (8001694 <LCD_CMD+0x144>)
 80015a2:	f005 f851 	bl	8006648 <HAL_GPIO_WritePin>
 80015a6:	e004      	b.n	80015b2 <LCD_CMD+0x62>
 80015a8:	2200      	movs	r2, #0
 80015aa:	2180      	movs	r1, #128	@ 0x80
 80015ac:	4839      	ldr	r0, [pc, #228]	@ (8001694 <LCD_CMD+0x144>)
 80015ae:	f005 f84b 	bl	8006648 <HAL_GPIO_WritePin>
 80015b2:	79fb      	ldrb	r3, [r7, #7]
 80015b4:	f003 0304 	and.w	r3, r3, #4
 80015b8:	2b00      	cmp	r3, #0
 80015ba:	d006      	beq.n	80015ca <LCD_CMD+0x7a>
 80015bc:	2201      	movs	r2, #1
 80015be:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80015c2:	4833      	ldr	r0, [pc, #204]	@ (8001690 <LCD_CMD+0x140>)
 80015c4:	f005 f840 	bl	8006648 <HAL_GPIO_WritePin>
 80015c8:	e005      	b.n	80015d6 <LCD_CMD+0x86>
 80015ca:	2200      	movs	r2, #0
 80015cc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80015d0:	482f      	ldr	r0, [pc, #188]	@ (8001690 <LCD_CMD+0x140>)
 80015d2:	f005 f839 	bl	8006648 <HAL_GPIO_WritePin>
 80015d6:	79fb      	ldrb	r3, [r7, #7]
 80015d8:	f003 0308 	and.w	r3, r3, #8
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d005      	beq.n	80015ec <LCD_CMD+0x9c>
 80015e0:	2201      	movs	r2, #1
 80015e2:	2108      	movs	r1, #8
 80015e4:	482c      	ldr	r0, [pc, #176]	@ (8001698 <LCD_CMD+0x148>)
 80015e6:	f005 f82f 	bl	8006648 <HAL_GPIO_WritePin>
 80015ea:	e004      	b.n	80015f6 <LCD_CMD+0xa6>
 80015ec:	2200      	movs	r2, #0
 80015ee:	2108      	movs	r1, #8
 80015f0:	4829      	ldr	r0, [pc, #164]	@ (8001698 <LCD_CMD+0x148>)
 80015f2:	f005 f829 	bl	8006648 <HAL_GPIO_WritePin>
 80015f6:	79fb      	ldrb	r3, [r7, #7]
 80015f8:	f003 0310 	and.w	r3, r3, #16
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d005      	beq.n	800160c <LCD_CMD+0xbc>
 8001600:	2201      	movs	r2, #1
 8001602:	2120      	movs	r1, #32
 8001604:	4824      	ldr	r0, [pc, #144]	@ (8001698 <LCD_CMD+0x148>)
 8001606:	f005 f81f 	bl	8006648 <HAL_GPIO_WritePin>
 800160a:	e004      	b.n	8001616 <LCD_CMD+0xc6>
 800160c:	2200      	movs	r2, #0
 800160e:	2120      	movs	r1, #32
 8001610:	4821      	ldr	r0, [pc, #132]	@ (8001698 <LCD_CMD+0x148>)
 8001612:	f005 f819 	bl	8006648 <HAL_GPIO_WritePin>
 8001616:	79fb      	ldrb	r3, [r7, #7]
 8001618:	f003 0320 	and.w	r3, r3, #32
 800161c:	2b00      	cmp	r3, #0
 800161e:	d005      	beq.n	800162c <LCD_CMD+0xdc>
 8001620:	2201      	movs	r2, #1
 8001622:	2110      	movs	r1, #16
 8001624:	481c      	ldr	r0, [pc, #112]	@ (8001698 <LCD_CMD+0x148>)
 8001626:	f005 f80f 	bl	8006648 <HAL_GPIO_WritePin>
 800162a:	e004      	b.n	8001636 <LCD_CMD+0xe6>
 800162c:	2200      	movs	r2, #0
 800162e:	2110      	movs	r1, #16
 8001630:	4819      	ldr	r0, [pc, #100]	@ (8001698 <LCD_CMD+0x148>)
 8001632:	f005 f809 	bl	8006648 <HAL_GPIO_WritePin>
 8001636:	79fb      	ldrb	r3, [r7, #7]
 8001638:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800163c:	2b00      	cmp	r3, #0
 800163e:	d006      	beq.n	800164e <LCD_CMD+0xfe>
 8001640:	2201      	movs	r2, #1
 8001642:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001646:	4814      	ldr	r0, [pc, #80]	@ (8001698 <LCD_CMD+0x148>)
 8001648:	f004 fffe 	bl	8006648 <HAL_GPIO_WritePin>
 800164c:	e005      	b.n	800165a <LCD_CMD+0x10a>
 800164e:	2200      	movs	r2, #0
 8001650:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001654:	4810      	ldr	r0, [pc, #64]	@ (8001698 <LCD_CMD+0x148>)
 8001656:	f004 fff7 	bl	8006648 <HAL_GPIO_WritePin>
 800165a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800165e:	2b00      	cmp	r3, #0
 8001660:	da06      	bge.n	8001670 <LCD_CMD+0x120>
 8001662:	2201      	movs	r2, #1
 8001664:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001668:	4809      	ldr	r0, [pc, #36]	@ (8001690 <LCD_CMD+0x140>)
 800166a:	f004 ffed 	bl	8006648 <HAL_GPIO_WritePin>
 800166e:	e005      	b.n	800167c <LCD_CMD+0x12c>
 8001670:	2200      	movs	r2, #0
 8001672:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001676:	4806      	ldr	r0, [pc, #24]	@ (8001690 <LCD_CMD+0x140>)
 8001678:	f004 ffe6 	bl	8006648 <HAL_GPIO_WritePin>
 800167c:	2201      	movs	r2, #1
 800167e:	2102      	movs	r1, #2
 8001680:	4803      	ldr	r0, [pc, #12]	@ (8001690 <LCD_CMD+0x140>)
 8001682:	f004 ffe1 	bl	8006648 <HAL_GPIO_WritePin>
 8001686:	bf00      	nop
 8001688:	3708      	adds	r7, #8
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}
 800168e:	bf00      	nop
 8001690:	40020000 	.word	0x40020000
 8001694:	40020800 	.word	0x40020800
 8001698:	40020400 	.word	0x40020400

0800169c <LCD_DATA>:
 800169c:	b580      	push	{r7, lr}
 800169e:	b082      	sub	sp, #8
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	4603      	mov	r3, r0
 80016a4:	71fb      	strb	r3, [r7, #7]
 80016a6:	2201      	movs	r2, #1
 80016a8:	2110      	movs	r1, #16
 80016aa:	484c      	ldr	r0, [pc, #304]	@ (80017dc <LCD_DATA+0x140>)
 80016ac:	f004 ffcc 	bl	8006648 <HAL_GPIO_WritePin>
 80016b0:	2200      	movs	r2, #0
 80016b2:	2102      	movs	r1, #2
 80016b4:	4849      	ldr	r0, [pc, #292]	@ (80017dc <LCD_DATA+0x140>)
 80016b6:	f004 ffc7 	bl	8006648 <HAL_GPIO_WritePin>
 80016ba:	79fb      	ldrb	r3, [r7, #7]
 80016bc:	f003 0301 	and.w	r3, r3, #1
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d006      	beq.n	80016d2 <LCD_DATA+0x36>
 80016c4:	2201      	movs	r2, #1
 80016c6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016ca:	4844      	ldr	r0, [pc, #272]	@ (80017dc <LCD_DATA+0x140>)
 80016cc:	f004 ffbc 	bl	8006648 <HAL_GPIO_WritePin>
 80016d0:	e005      	b.n	80016de <LCD_DATA+0x42>
 80016d2:	2200      	movs	r2, #0
 80016d4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016d8:	4840      	ldr	r0, [pc, #256]	@ (80017dc <LCD_DATA+0x140>)
 80016da:	f004 ffb5 	bl	8006648 <HAL_GPIO_WritePin>
 80016de:	79fb      	ldrb	r3, [r7, #7]
 80016e0:	f003 0302 	and.w	r3, r3, #2
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d005      	beq.n	80016f4 <LCD_DATA+0x58>
 80016e8:	2201      	movs	r2, #1
 80016ea:	2180      	movs	r1, #128	@ 0x80
 80016ec:	483c      	ldr	r0, [pc, #240]	@ (80017e0 <LCD_DATA+0x144>)
 80016ee:	f004 ffab 	bl	8006648 <HAL_GPIO_WritePin>
 80016f2:	e004      	b.n	80016fe <LCD_DATA+0x62>
 80016f4:	2200      	movs	r2, #0
 80016f6:	2180      	movs	r1, #128	@ 0x80
 80016f8:	4839      	ldr	r0, [pc, #228]	@ (80017e0 <LCD_DATA+0x144>)
 80016fa:	f004 ffa5 	bl	8006648 <HAL_GPIO_WritePin>
 80016fe:	79fb      	ldrb	r3, [r7, #7]
 8001700:	f003 0304 	and.w	r3, r3, #4
 8001704:	2b00      	cmp	r3, #0
 8001706:	d006      	beq.n	8001716 <LCD_DATA+0x7a>
 8001708:	2201      	movs	r2, #1
 800170a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800170e:	4833      	ldr	r0, [pc, #204]	@ (80017dc <LCD_DATA+0x140>)
 8001710:	f004 ff9a 	bl	8006648 <HAL_GPIO_WritePin>
 8001714:	e005      	b.n	8001722 <LCD_DATA+0x86>
 8001716:	2200      	movs	r2, #0
 8001718:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800171c:	482f      	ldr	r0, [pc, #188]	@ (80017dc <LCD_DATA+0x140>)
 800171e:	f004 ff93 	bl	8006648 <HAL_GPIO_WritePin>
 8001722:	79fb      	ldrb	r3, [r7, #7]
 8001724:	f003 0308 	and.w	r3, r3, #8
 8001728:	2b00      	cmp	r3, #0
 800172a:	d005      	beq.n	8001738 <LCD_DATA+0x9c>
 800172c:	2201      	movs	r2, #1
 800172e:	2108      	movs	r1, #8
 8001730:	482c      	ldr	r0, [pc, #176]	@ (80017e4 <LCD_DATA+0x148>)
 8001732:	f004 ff89 	bl	8006648 <HAL_GPIO_WritePin>
 8001736:	e004      	b.n	8001742 <LCD_DATA+0xa6>
 8001738:	2200      	movs	r2, #0
 800173a:	2108      	movs	r1, #8
 800173c:	4829      	ldr	r0, [pc, #164]	@ (80017e4 <LCD_DATA+0x148>)
 800173e:	f004 ff83 	bl	8006648 <HAL_GPIO_WritePin>
 8001742:	79fb      	ldrb	r3, [r7, #7]
 8001744:	f003 0310 	and.w	r3, r3, #16
 8001748:	2b00      	cmp	r3, #0
 800174a:	d005      	beq.n	8001758 <LCD_DATA+0xbc>
 800174c:	2201      	movs	r2, #1
 800174e:	2120      	movs	r1, #32
 8001750:	4824      	ldr	r0, [pc, #144]	@ (80017e4 <LCD_DATA+0x148>)
 8001752:	f004 ff79 	bl	8006648 <HAL_GPIO_WritePin>
 8001756:	e004      	b.n	8001762 <LCD_DATA+0xc6>
 8001758:	2200      	movs	r2, #0
 800175a:	2120      	movs	r1, #32
 800175c:	4821      	ldr	r0, [pc, #132]	@ (80017e4 <LCD_DATA+0x148>)
 800175e:	f004 ff73 	bl	8006648 <HAL_GPIO_WritePin>
 8001762:	79fb      	ldrb	r3, [r7, #7]
 8001764:	f003 0320 	and.w	r3, r3, #32
 8001768:	2b00      	cmp	r3, #0
 800176a:	d005      	beq.n	8001778 <LCD_DATA+0xdc>
 800176c:	2201      	movs	r2, #1
 800176e:	2110      	movs	r1, #16
 8001770:	481c      	ldr	r0, [pc, #112]	@ (80017e4 <LCD_DATA+0x148>)
 8001772:	f004 ff69 	bl	8006648 <HAL_GPIO_WritePin>
 8001776:	e004      	b.n	8001782 <LCD_DATA+0xe6>
 8001778:	2200      	movs	r2, #0
 800177a:	2110      	movs	r1, #16
 800177c:	4819      	ldr	r0, [pc, #100]	@ (80017e4 <LCD_DATA+0x148>)
 800177e:	f004 ff63 	bl	8006648 <HAL_GPIO_WritePin>
 8001782:	79fb      	ldrb	r3, [r7, #7]
 8001784:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001788:	2b00      	cmp	r3, #0
 800178a:	d006      	beq.n	800179a <LCD_DATA+0xfe>
 800178c:	2201      	movs	r2, #1
 800178e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001792:	4814      	ldr	r0, [pc, #80]	@ (80017e4 <LCD_DATA+0x148>)
 8001794:	f004 ff58 	bl	8006648 <HAL_GPIO_WritePin>
 8001798:	e005      	b.n	80017a6 <LCD_DATA+0x10a>
 800179a:	2200      	movs	r2, #0
 800179c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80017a0:	4810      	ldr	r0, [pc, #64]	@ (80017e4 <LCD_DATA+0x148>)
 80017a2:	f004 ff51 	bl	8006648 <HAL_GPIO_WritePin>
 80017a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017aa:	2b00      	cmp	r3, #0
 80017ac:	da06      	bge.n	80017bc <LCD_DATA+0x120>
 80017ae:	2201      	movs	r2, #1
 80017b0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80017b4:	4809      	ldr	r0, [pc, #36]	@ (80017dc <LCD_DATA+0x140>)
 80017b6:	f004 ff47 	bl	8006648 <HAL_GPIO_WritePin>
 80017ba:	e005      	b.n	80017c8 <LCD_DATA+0x12c>
 80017bc:	2200      	movs	r2, #0
 80017be:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80017c2:	4806      	ldr	r0, [pc, #24]	@ (80017dc <LCD_DATA+0x140>)
 80017c4:	f004 ff40 	bl	8006648 <HAL_GPIO_WritePin>
 80017c8:	2201      	movs	r2, #1
 80017ca:	2102      	movs	r1, #2
 80017cc:	4803      	ldr	r0, [pc, #12]	@ (80017dc <LCD_DATA+0x140>)
 80017ce:	f004 ff3b 	bl	8006648 <HAL_GPIO_WritePin>
 80017d2:	bf00      	nop
 80017d4:	3708      	adds	r7, #8
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}
 80017da:	bf00      	nop
 80017dc:	40020000 	.word	0x40020000
 80017e0:	40020800 	.word	0x40020800
 80017e4:	40020400 	.word	0x40020400

080017e8 <SetWindows>:
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b084      	sub	sp, #16
 80017ec:	af00      	add	r7, sp, #0
 80017ee:	60f8      	str	r0, [r7, #12]
 80017f0:	60b9      	str	r1, [r7, #8]
 80017f2:	607a      	str	r2, [r7, #4]
 80017f4:	603b      	str	r3, [r7, #0]
 80017f6:	202a      	movs	r0, #42	@ 0x2a
 80017f8:	f7ff feaa 	bl	8001550 <LCD_CMD>
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	0a1b      	lsrs	r3, r3, #8
 8001800:	b2db      	uxtb	r3, r3
 8001802:	4618      	mov	r0, r3
 8001804:	f7ff ff4a 	bl	800169c <LCD_DATA>
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	b2db      	uxtb	r3, r3
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff ff45 	bl	800169c <LCD_DATA>
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	0a1b      	lsrs	r3, r3, #8
 8001816:	b2db      	uxtb	r3, r3
 8001818:	4618      	mov	r0, r3
 800181a:	f7ff ff3f 	bl	800169c <LCD_DATA>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	b2db      	uxtb	r3, r3
 8001822:	4618      	mov	r0, r3
 8001824:	f7ff ff3a 	bl	800169c <LCD_DATA>
 8001828:	202b      	movs	r0, #43	@ 0x2b
 800182a:	f7ff fe91 	bl	8001550 <LCD_CMD>
 800182e:	68bb      	ldr	r3, [r7, #8]
 8001830:	0a1b      	lsrs	r3, r3, #8
 8001832:	b2db      	uxtb	r3, r3
 8001834:	4618      	mov	r0, r3
 8001836:	f7ff ff31 	bl	800169c <LCD_DATA>
 800183a:	68bb      	ldr	r3, [r7, #8]
 800183c:	b2db      	uxtb	r3, r3
 800183e:	4618      	mov	r0, r3
 8001840:	f7ff ff2c 	bl	800169c <LCD_DATA>
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	0a1b      	lsrs	r3, r3, #8
 8001848:	b2db      	uxtb	r3, r3
 800184a:	4618      	mov	r0, r3
 800184c:	f7ff ff26 	bl	800169c <LCD_DATA>
 8001850:	683b      	ldr	r3, [r7, #0]
 8001852:	b2db      	uxtb	r3, r3
 8001854:	4618      	mov	r0, r3
 8001856:	f7ff ff21 	bl	800169c <LCD_DATA>
 800185a:	202c      	movs	r0, #44	@ 0x2c
 800185c:	f7ff fe78 	bl	8001550 <LCD_CMD>
 8001860:	bf00      	nop
 8001862:	3710      	adds	r7, #16
 8001864:	46bd      	mov	sp, r7
 8001866:	bd80      	pop	{r7, pc}

08001868 <H_line>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af00      	add	r7, sp, #0
 800186e:	60f8      	str	r0, [r7, #12]
 8001870:	60b9      	str	r1, [r7, #8]
 8001872:	607a      	str	r2, [r7, #4]
 8001874:	603b      	str	r3, [r7, #0]
 8001876:	202c      	movs	r0, #44	@ 0x2c
 8001878:	f7ff fe6a 	bl	8001550 <LCD_CMD>
 800187c:	2201      	movs	r2, #1
 800187e:	2110      	movs	r1, #16
 8001880:	4817      	ldr	r0, [pc, #92]	@ (80018e0 <H_line+0x78>)
 8001882:	f004 fee1 	bl	8006648 <HAL_GPIO_WritePin>
 8001886:	2200      	movs	r2, #0
 8001888:	2101      	movs	r1, #1
 800188a:	4816      	ldr	r0, [pc, #88]	@ (80018e4 <H_line+0x7c>)
 800188c:	f004 fedc 	bl	8006648 <HAL_GPIO_WritePin>
 8001890:	687a      	ldr	r2, [r7, #4]
 8001892:	68fb      	ldr	r3, [r7, #12]
 8001894:	4413      	add	r3, r2
 8001896:	607b      	str	r3, [r7, #4]
 8001898:	68bb      	ldr	r3, [r7, #8]
 800189a:	687a      	ldr	r2, [r7, #4]
 800189c:	68b9      	ldr	r1, [r7, #8]
 800189e:	68f8      	ldr	r0, [r7, #12]
 80018a0:	f7ff ffa2 	bl	80017e8 <SetWindows>
 80018a4:	2300      	movs	r3, #0
 80018a6:	617b      	str	r3, [r7, #20]
 80018a8:	e00d      	b.n	80018c6 <H_line+0x5e>
 80018aa:	683b      	ldr	r3, [r7, #0]
 80018ac:	0a1b      	lsrs	r3, r3, #8
 80018ae:	b2db      	uxtb	r3, r3
 80018b0:	4618      	mov	r0, r3
 80018b2:	f7ff fef3 	bl	800169c <LCD_DATA>
 80018b6:	683b      	ldr	r3, [r7, #0]
 80018b8:	b2db      	uxtb	r3, r3
 80018ba:	4618      	mov	r0, r3
 80018bc:	f7ff feee 	bl	800169c <LCD_DATA>
 80018c0:	697b      	ldr	r3, [r7, #20]
 80018c2:	3301      	adds	r3, #1
 80018c4:	617b      	str	r3, [r7, #20]
 80018c6:	697a      	ldr	r2, [r7, #20]
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	429a      	cmp	r2, r3
 80018cc:	d3ed      	bcc.n	80018aa <H_line+0x42>
 80018ce:	2201      	movs	r2, #1
 80018d0:	2101      	movs	r1, #1
 80018d2:	4804      	ldr	r0, [pc, #16]	@ (80018e4 <H_line+0x7c>)
 80018d4:	f004 feb8 	bl	8006648 <HAL_GPIO_WritePin>
 80018d8:	bf00      	nop
 80018da:	3718      	adds	r7, #24
 80018dc:	46bd      	mov	sp, r7
 80018de:	bd80      	pop	{r7, pc}
 80018e0:	40020000 	.word	0x40020000
 80018e4:	40020400 	.word	0x40020400

080018e8 <V_line>:
 80018e8:	b580      	push	{r7, lr}
 80018ea:	b086      	sub	sp, #24
 80018ec:	af00      	add	r7, sp, #0
 80018ee:	60f8      	str	r0, [r7, #12]
 80018f0:	60b9      	str	r1, [r7, #8]
 80018f2:	607a      	str	r2, [r7, #4]
 80018f4:	603b      	str	r3, [r7, #0]
 80018f6:	202c      	movs	r0, #44	@ 0x2c
 80018f8:	f7ff fe2a 	bl	8001550 <LCD_CMD>
 80018fc:	2201      	movs	r2, #1
 80018fe:	2110      	movs	r1, #16
 8001900:	4817      	ldr	r0, [pc, #92]	@ (8001960 <V_line+0x78>)
 8001902:	f004 fea1 	bl	8006648 <HAL_GPIO_WritePin>
 8001906:	2200      	movs	r2, #0
 8001908:	2101      	movs	r1, #1
 800190a:	4816      	ldr	r0, [pc, #88]	@ (8001964 <V_line+0x7c>)
 800190c:	f004 fe9c 	bl	8006648 <HAL_GPIO_WritePin>
 8001910:	687a      	ldr	r2, [r7, #4]
 8001912:	68bb      	ldr	r3, [r7, #8]
 8001914:	4413      	add	r3, r2
 8001916:	607b      	str	r3, [r7, #4]
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	68fa      	ldr	r2, [r7, #12]
 800191c:	68b9      	ldr	r1, [r7, #8]
 800191e:	68f8      	ldr	r0, [r7, #12]
 8001920:	f7ff ff62 	bl	80017e8 <SetWindows>
 8001924:	2301      	movs	r3, #1
 8001926:	617b      	str	r3, [r7, #20]
 8001928:	e00d      	b.n	8001946 <V_line+0x5e>
 800192a:	683b      	ldr	r3, [r7, #0]
 800192c:	0a1b      	lsrs	r3, r3, #8
 800192e:	b2db      	uxtb	r3, r3
 8001930:	4618      	mov	r0, r3
 8001932:	f7ff feb3 	bl	800169c <LCD_DATA>
 8001936:	683b      	ldr	r3, [r7, #0]
 8001938:	b2db      	uxtb	r3, r3
 800193a:	4618      	mov	r0, r3
 800193c:	f7ff feae 	bl	800169c <LCD_DATA>
 8001940:	697b      	ldr	r3, [r7, #20]
 8001942:	3301      	adds	r3, #1
 8001944:	617b      	str	r3, [r7, #20]
 8001946:	697a      	ldr	r2, [r7, #20]
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	429a      	cmp	r2, r3
 800194c:	d9ed      	bls.n	800192a <V_line+0x42>
 800194e:	2201      	movs	r2, #1
 8001950:	2101      	movs	r1, #1
 8001952:	4804      	ldr	r0, [pc, #16]	@ (8001964 <V_line+0x7c>)
 8001954:	f004 fe78 	bl	8006648 <HAL_GPIO_WritePin>
 8001958:	bf00      	nop
 800195a:	3718      	adds	r7, #24
 800195c:	46bd      	mov	sp, r7
 800195e:	bd80      	pop	{r7, pc}
 8001960:	40020000 	.word	0x40020000
 8001964:	40020400 	.word	0x40020400

08001968 <Rect>:
 8001968:	b580      	push	{r7, lr}
 800196a:	b084      	sub	sp, #16
 800196c:	af00      	add	r7, sp, #0
 800196e:	60f8      	str	r0, [r7, #12]
 8001970:	60b9      	str	r1, [r7, #8]
 8001972:	607a      	str	r2, [r7, #4]
 8001974:	603b      	str	r3, [r7, #0]
 8001976:	69bb      	ldr	r3, [r7, #24]
 8001978:	687a      	ldr	r2, [r7, #4]
 800197a:	68b9      	ldr	r1, [r7, #8]
 800197c:	68f8      	ldr	r0, [r7, #12]
 800197e:	f7ff ff73 	bl	8001868 <H_line>
 8001982:	68ba      	ldr	r2, [r7, #8]
 8001984:	683b      	ldr	r3, [r7, #0]
 8001986:	18d1      	adds	r1, r2, r3
 8001988:	69bb      	ldr	r3, [r7, #24]
 800198a:	687a      	ldr	r2, [r7, #4]
 800198c:	68f8      	ldr	r0, [r7, #12]
 800198e:	f7ff ff6b 	bl	8001868 <H_line>
 8001992:	69bb      	ldr	r3, [r7, #24]
 8001994:	683a      	ldr	r2, [r7, #0]
 8001996:	68b9      	ldr	r1, [r7, #8]
 8001998:	68f8      	ldr	r0, [r7, #12]
 800199a:	f7ff ffa5 	bl	80018e8 <V_line>
 800199e:	68fa      	ldr	r2, [r7, #12]
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	18d0      	adds	r0, r2, r3
 80019a4:	69bb      	ldr	r3, [r7, #24]
 80019a6:	683a      	ldr	r2, [r7, #0]
 80019a8:	68b9      	ldr	r1, [r7, #8]
 80019aa:	f7ff ff9d 	bl	80018e8 <V_line>
 80019ae:	bf00      	nop
 80019b0:	3710      	adds	r7, #16
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bd80      	pop	{r7, pc}
	...

080019b8 <FillRect>:
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b08a      	sub	sp, #40	@ 0x28
 80019bc:	af00      	add	r7, sp, #0
 80019be:	60f8      	str	r0, [r7, #12]
 80019c0:	60b9      	str	r1, [r7, #8]
 80019c2:	607a      	str	r2, [r7, #4]
 80019c4:	603b      	str	r3, [r7, #0]
 80019c6:	202c      	movs	r0, #44	@ 0x2c
 80019c8:	f7ff fdc2 	bl	8001550 <LCD_CMD>
 80019cc:	2201      	movs	r2, #1
 80019ce:	2110      	movs	r1, #16
 80019d0:	4824      	ldr	r0, [pc, #144]	@ (8001a64 <FillRect+0xac>)
 80019d2:	f004 fe39 	bl	8006648 <HAL_GPIO_WritePin>
 80019d6:	2200      	movs	r2, #0
 80019d8:	2101      	movs	r1, #1
 80019da:	4823      	ldr	r0, [pc, #140]	@ (8001a68 <FillRect+0xb0>)
 80019dc:	f004 fe34 	bl	8006648 <HAL_GPIO_WritePin>
 80019e0:	68fa      	ldr	r2, [r7, #12]
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	4413      	add	r3, r2
 80019e6:	61bb      	str	r3, [r7, #24]
 80019e8:	68ba      	ldr	r2, [r7, #8]
 80019ea:	683b      	ldr	r3, [r7, #0]
 80019ec:	4413      	add	r3, r2
 80019ee:	617b      	str	r3, [r7, #20]
 80019f0:	69bb      	ldr	r3, [r7, #24]
 80019f2:	1e5a      	subs	r2, r3, #1
 80019f4:	697b      	ldr	r3, [r7, #20]
 80019f6:	3b01      	subs	r3, #1
 80019f8:	68b9      	ldr	r1, [r7, #8]
 80019fa:	68f8      	ldr	r0, [r7, #12]
 80019fc:	f7ff fef4 	bl	80017e8 <SetWindows>
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	683a      	ldr	r2, [r7, #0]
 8001a04:	fb02 f303 	mul.w	r3, r2, r3
 8001a08:	005b      	lsls	r3, r3, #1
 8001a0a:	3b01      	subs	r3, #1
 8001a0c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a0e:	2300      	movs	r3, #0
 8001a10:	623b      	str	r3, [r7, #32]
 8001a12:	e01a      	b.n	8001a4a <FillRect+0x92>
 8001a14:	2300      	movs	r3, #0
 8001a16:	61fb      	str	r3, [r7, #28]
 8001a18:	e010      	b.n	8001a3c <FillRect+0x84>
 8001a1a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001a1c:	0a1b      	lsrs	r3, r3, #8
 8001a1e:	b2db      	uxtb	r3, r3
 8001a20:	4618      	mov	r0, r3
 8001a22:	f7ff fe3b 	bl	800169c <LCD_DATA>
 8001a26:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001a28:	b2db      	uxtb	r3, r3
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	f7ff fe36 	bl	800169c <LCD_DATA>
 8001a30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a32:	3b02      	subs	r3, #2
 8001a34:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a36:	69fb      	ldr	r3, [r7, #28]
 8001a38:	3301      	adds	r3, #1
 8001a3a:	61fb      	str	r3, [r7, #28]
 8001a3c:	69fb      	ldr	r3, [r7, #28]
 8001a3e:	683a      	ldr	r2, [r7, #0]
 8001a40:	429a      	cmp	r2, r3
 8001a42:	d8ea      	bhi.n	8001a1a <FillRect+0x62>
 8001a44:	6a3b      	ldr	r3, [r7, #32]
 8001a46:	3301      	adds	r3, #1
 8001a48:	623b      	str	r3, [r7, #32]
 8001a4a:	6a3b      	ldr	r3, [r7, #32]
 8001a4c:	687a      	ldr	r2, [r7, #4]
 8001a4e:	429a      	cmp	r2, r3
 8001a50:	d8e0      	bhi.n	8001a14 <FillRect+0x5c>
 8001a52:	2201      	movs	r2, #1
 8001a54:	2101      	movs	r1, #1
 8001a56:	4804      	ldr	r0, [pc, #16]	@ (8001a68 <FillRect+0xb0>)
 8001a58:	f004 fdf6 	bl	8006648 <HAL_GPIO_WritePin>
 8001a5c:	bf00      	nop
 8001a5e:	3728      	adds	r7, #40	@ 0x28
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bd80      	pop	{r7, pc}
 8001a64:	40020000 	.word	0x40020000
 8001a68:	40020400 	.word	0x40020400

08001a6c <LCD_Bitmap>:
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b088      	sub	sp, #32
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	60f8      	str	r0, [r7, #12]
 8001a74:	60b9      	str	r1, [r7, #8]
 8001a76:	607a      	str	r2, [r7, #4]
 8001a78:	603b      	str	r3, [r7, #0]
 8001a7a:	202c      	movs	r0, #44	@ 0x2c
 8001a7c:	f7ff fd68 	bl	8001550 <LCD_CMD>
 8001a80:	2201      	movs	r2, #1
 8001a82:	2110      	movs	r1, #16
 8001a84:	4822      	ldr	r0, [pc, #136]	@ (8001b10 <LCD_Bitmap+0xa4>)
 8001a86:	f004 fddf 	bl	8006648 <HAL_GPIO_WritePin>
 8001a8a:	2200      	movs	r2, #0
 8001a8c:	2101      	movs	r1, #1
 8001a8e:	4821      	ldr	r0, [pc, #132]	@ (8001b14 <LCD_Bitmap+0xa8>)
 8001a90:	f004 fdda 	bl	8006648 <HAL_GPIO_WritePin>
 8001a94:	2300      	movs	r3, #0
 8001a96:	61fb      	str	r3, [r7, #28]
 8001a98:	68fa      	ldr	r2, [r7, #12]
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	4413      	add	r3, r2
 8001a9e:	1e59      	subs	r1, r3, #1
 8001aa0:	68ba      	ldr	r2, [r7, #8]
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	4413      	add	r3, r2
 8001aa6:	3b01      	subs	r3, #1
 8001aa8:	460a      	mov	r2, r1
 8001aaa:	68b9      	ldr	r1, [r7, #8]
 8001aac:	68f8      	ldr	r0, [r7, #12]
 8001aae:	f7ff fe9b 	bl	80017e8 <SetWindows>
 8001ab2:	2300      	movs	r3, #0
 8001ab4:	61bb      	str	r3, [r7, #24]
 8001ab6:	e01e      	b.n	8001af6 <LCD_Bitmap+0x8a>
 8001ab8:	2300      	movs	r3, #0
 8001aba:	617b      	str	r3, [r7, #20]
 8001abc:	e014      	b.n	8001ae8 <LCD_Bitmap+0x7c>
 8001abe:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001ac0:	69fb      	ldr	r3, [r7, #28]
 8001ac2:	4413      	add	r3, r2
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	f7ff fde8 	bl	800169c <LCD_DATA>
 8001acc:	69fb      	ldr	r3, [r7, #28]
 8001ace:	3301      	adds	r3, #1
 8001ad0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001ad2:	4413      	add	r3, r2
 8001ad4:	781b      	ldrb	r3, [r3, #0]
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	f7ff fde0 	bl	800169c <LCD_DATA>
 8001adc:	69fb      	ldr	r3, [r7, #28]
 8001ade:	3302      	adds	r3, #2
 8001ae0:	61fb      	str	r3, [r7, #28]
 8001ae2:	697b      	ldr	r3, [r7, #20]
 8001ae4:	3301      	adds	r3, #1
 8001ae6:	617b      	str	r3, [r7, #20]
 8001ae8:	697b      	ldr	r3, [r7, #20]
 8001aea:	687a      	ldr	r2, [r7, #4]
 8001aec:	429a      	cmp	r2, r3
 8001aee:	d8e6      	bhi.n	8001abe <LCD_Bitmap+0x52>
 8001af0:	69bb      	ldr	r3, [r7, #24]
 8001af2:	3301      	adds	r3, #1
 8001af4:	61bb      	str	r3, [r7, #24]
 8001af6:	69bb      	ldr	r3, [r7, #24]
 8001af8:	683a      	ldr	r2, [r7, #0]
 8001afa:	429a      	cmp	r2, r3
 8001afc:	d8dc      	bhi.n	8001ab8 <LCD_Bitmap+0x4c>
 8001afe:	2201      	movs	r2, #1
 8001b00:	2101      	movs	r1, #1
 8001b02:	4804      	ldr	r0, [pc, #16]	@ (8001b14 <LCD_Bitmap+0xa8>)
 8001b04:	f004 fda0 	bl	8006648 <HAL_GPIO_WritePin>
 8001b08:	bf00      	nop
 8001b0a:	3720      	adds	r7, #32
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bd80      	pop	{r7, pc}
 8001b10:	40020000 	.word	0x40020000
 8001b14:	40020400 	.word	0x40020400

08001b18 <LCD_Sprite>:
 8001b18:	b580      	push	{r7, lr}
 8001b1a:	b08c      	sub	sp, #48	@ 0x30
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	60f8      	str	r0, [r7, #12]
 8001b20:	60b9      	str	r1, [r7, #8]
 8001b22:	607a      	str	r2, [r7, #4]
 8001b24:	603b      	str	r3, [r7, #0]
 8001b26:	202c      	movs	r0, #44	@ 0x2c
 8001b28:	f7ff fd12 	bl	8001550 <LCD_CMD>
 8001b2c:	2201      	movs	r2, #1
 8001b2e:	2110      	movs	r1, #16
 8001b30:	484d      	ldr	r0, [pc, #308]	@ (8001c68 <LCD_Sprite+0x150>)
 8001b32:	f004 fd89 	bl	8006648 <HAL_GPIO_WritePin>
 8001b36:	2200      	movs	r2, #0
 8001b38:	2101      	movs	r1, #1
 8001b3a:	484c      	ldr	r0, [pc, #304]	@ (8001c6c <LCD_Sprite+0x154>)
 8001b3c:	f004 fd84 	bl	8006648 <HAL_GPIO_WritePin>
 8001b40:	68fa      	ldr	r2, [r7, #12]
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	4413      	add	r3, r2
 8001b46:	61bb      	str	r3, [r7, #24]
 8001b48:	68ba      	ldr	r2, [r7, #8]
 8001b4a:	683b      	ldr	r3, [r7, #0]
 8001b4c:	4413      	add	r3, r2
 8001b4e:	617b      	str	r3, [r7, #20]
 8001b50:	68f8      	ldr	r0, [r7, #12]
 8001b52:	68b9      	ldr	r1, [r7, #8]
 8001b54:	69bb      	ldr	r3, [r7, #24]
 8001b56:	1e5a      	subs	r2, r3, #1
 8001b58:	697b      	ldr	r3, [r7, #20]
 8001b5a:	3b01      	subs	r3, #1
 8001b5c:	f7ff fe44 	bl	80017e8 <SetWindows>
 8001b60:	2300      	movs	r3, #0
 8001b62:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001b68:	fb02 f303 	mul.w	r3, r2, r3
 8001b6c:	613b      	str	r3, [r7, #16]
 8001b6e:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	d03a      	beq.n	8001bec <LCD_Sprite+0xd4>
 8001b76:	2300      	movs	r3, #0
 8001b78:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001b7a:	e032      	b.n	8001be2 <LCD_Sprite+0xca>
 8001b7c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001b7e:	693a      	ldr	r2, [r7, #16]
 8001b80:	fb03 f202 	mul.w	r2, r3, r2
 8001b84:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001b86:	6879      	ldr	r1, [r7, #4]
 8001b88:	fb01 f303 	mul.w	r3, r1, r3
 8001b8c:	4413      	add	r3, r2
 8001b8e:	1e5a      	subs	r2, r3, #1
 8001b90:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001b94:	1ad3      	subs	r3, r2, r3
 8001b96:	005b      	lsls	r3, r3, #1
 8001b98:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	005b      	lsls	r3, r3, #1
 8001b9e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001ba0:	4413      	add	r3, r2
 8001ba2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	627b      	str	r3, [r7, #36]	@ 0x24
 8001ba8:	e014      	b.n	8001bd4 <LCD_Sprite+0xbc>
 8001baa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001bac:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001bae:	4413      	add	r3, r2
 8001bb0:	781b      	ldrb	r3, [r3, #0]
 8001bb2:	4618      	mov	r0, r3
 8001bb4:	f7ff fd72 	bl	800169c <LCD_DATA>
 8001bb8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001bba:	3301      	adds	r3, #1
 8001bbc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001bbe:	4413      	add	r3, r2
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	4618      	mov	r0, r3
 8001bc4:	f7ff fd6a 	bl	800169c <LCD_DATA>
 8001bc8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001bca:	3b02      	subs	r3, #2
 8001bcc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001bce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bd0:	3301      	adds	r3, #1
 8001bd2:	627b      	str	r3, [r7, #36]	@ 0x24
 8001bd4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	429a      	cmp	r2, r3
 8001bda:	dbe6      	blt.n	8001baa <LCD_Sprite+0x92>
 8001bdc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001bde:	3301      	adds	r3, #1
 8001be0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001be2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001be4:	683b      	ldr	r3, [r7, #0]
 8001be6:	429a      	cmp	r2, r3
 8001be8:	dbc8      	blt.n	8001b7c <LCD_Sprite+0x64>
 8001bea:	e034      	b.n	8001c56 <LCD_Sprite+0x13e>
 8001bec:	2300      	movs	r3, #0
 8001bee:	623b      	str	r3, [r7, #32]
 8001bf0:	e02d      	b.n	8001c4e <LCD_Sprite+0x136>
 8001bf2:	6a3b      	ldr	r3, [r7, #32]
 8001bf4:	693a      	ldr	r2, [r7, #16]
 8001bf6:	fb03 f202 	mul.w	r2, r3, r2
 8001bfa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001bfc:	6879      	ldr	r1, [r7, #4]
 8001bfe:	fb01 f303 	mul.w	r3, r1, r3
 8001c02:	4413      	add	r3, r2
 8001c04:	1c5a      	adds	r2, r3, #1
 8001c06:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8001c0a:	4413      	add	r3, r2
 8001c0c:	005b      	lsls	r3, r3, #1
 8001c0e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001c10:	2300      	movs	r3, #0
 8001c12:	61fb      	str	r3, [r7, #28]
 8001c14:	e014      	b.n	8001c40 <LCD_Sprite+0x128>
 8001c16:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001c18:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001c1a:	4413      	add	r3, r2
 8001c1c:	781b      	ldrb	r3, [r3, #0]
 8001c1e:	4618      	mov	r0, r3
 8001c20:	f7ff fd3c 	bl	800169c <LCD_DATA>
 8001c24:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001c26:	3301      	adds	r3, #1
 8001c28:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001c2a:	4413      	add	r3, r2
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	4618      	mov	r0, r3
 8001c30:	f7ff fd34 	bl	800169c <LCD_DATA>
 8001c34:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001c36:	3302      	adds	r3, #2
 8001c38:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001c3a:	69fb      	ldr	r3, [r7, #28]
 8001c3c:	3301      	adds	r3, #1
 8001c3e:	61fb      	str	r3, [r7, #28]
 8001c40:	69fa      	ldr	r2, [r7, #28]
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	429a      	cmp	r2, r3
 8001c46:	dbe6      	blt.n	8001c16 <LCD_Sprite+0xfe>
 8001c48:	6a3b      	ldr	r3, [r7, #32]
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	623b      	str	r3, [r7, #32]
 8001c4e:	6a3a      	ldr	r2, [r7, #32]
 8001c50:	683b      	ldr	r3, [r7, #0]
 8001c52:	429a      	cmp	r2, r3
 8001c54:	dbcd      	blt.n	8001bf2 <LCD_Sprite+0xda>
 8001c56:	2201      	movs	r2, #1
 8001c58:	2101      	movs	r1, #1
 8001c5a:	4804      	ldr	r0, [pc, #16]	@ (8001c6c <LCD_Sprite+0x154>)
 8001c5c:	f004 fcf4 	bl	8006648 <HAL_GPIO_WritePin>
 8001c60:	bf00      	nop
 8001c62:	3730      	adds	r7, #48	@ 0x30
 8001c64:	46bd      	mov	sp, r7
 8001c66:	bd80      	pop	{r7, pc}
 8001c68:	40020000 	.word	0x40020000
 8001c6c:	40020400 	.word	0x40020400

08001c70 <transmit_uart>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void transmit_uart(char *string){
 8001c70:	b580      	push	{r7, lr}
 8001c72:	b084      	sub	sp, #16
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	6078      	str	r0, [r7, #4]
  uint8_t len=strlen(string);
 8001c78:	6878      	ldr	r0, [r7, #4]
 8001c7a:	f7fe fac9 	bl	8000210 <strlen>
 8001c7e:	4603      	mov	r3, r0
 8001c80:	73fb      	strb	r3, [r7, #15]
  HAL_UART_Transmit(&huart2, (uint8_t*)string, len, 200);
 8001c82:	7bfb      	ldrb	r3, [r7, #15]
 8001c84:	b29a      	uxth	r2, r3
 8001c86:	23c8      	movs	r3, #200	@ 0xc8
 8001c88:	6879      	ldr	r1, [r7, #4]
 8001c8a:	4803      	ldr	r0, [pc, #12]	@ (8001c98 <transmit_uart+0x28>)
 8001c8c:	f006 fbd8 	bl	8008440 <HAL_UART_Transmit>
}
 8001c90:	bf00      	nop
 8001c92:	3710      	adds	r7, #16
 8001c94:	46bd      	mov	sp, r7
 8001c96:	bd80      	pop	{r7, pc}
 8001c98:	20017c30 	.word	0x20017c30

08001c9c <CargarBitmaps_SD>:

// Función para leer una imagen desde la SD
int CargarBitmaps_SD(const char* filename) {
 8001c9c:	b580      	push	{r7, lr}
 8001c9e:	f5ad 5d82 	sub.w	sp, sp, #4160	@ 0x1040
 8001ca2:	af00      	add	r7, sp, #0
 8001ca4:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001ca8:	f843 0c3c 	str.w	r0, [r3, #-60]
    FIL fil;
    UINT bytes_read;
    FRESULT fres;
    // Montar SD
    fres = f_mount(&fs, "/", 0);
 8001cac:	2200      	movs	r2, #0
 8001cae:	4936      	ldr	r1, [pc, #216]	@ (8001d88 <CargarBitmaps_SD+0xec>)
 8001cb0:	4836      	ldr	r0, [pc, #216]	@ (8001d8c <CargarBitmaps_SD+0xf0>)
 8001cb2:	f009 fe13 	bl	800b8dc <f_mount>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	f507 5281 	add.w	r2, r7, #4128	@ 0x1020
 8001cbc:	f102 021f 	add.w	r2, r2, #31
 8001cc0:	7013      	strb	r3, [r2, #0]
    if (fres == FR_OK){
 8001cc2:	f507 5381 	add.w	r3, r7, #4128	@ 0x1020
 8001cc6:	f103 031f 	add.w	r3, r3, #31
 8001cca:	781b      	ldrb	r3, [r3, #0]
 8001ccc:	2b00      	cmp	r3, #0
 8001cce:	d102      	bne.n	8001cd6 <CargarBitmaps_SD+0x3a>
    	transmit_uart("SD MONTADA\n");
 8001cd0:	482f      	ldr	r0, [pc, #188]	@ (8001d90 <CargarBitmaps_SD+0xf4>)
 8001cd2:	f7ff ffcd 	bl	8001c70 <transmit_uart>
    }

    // Abrir el archivo desde la SD
    fres = f_open(&fil, filename, FA_READ);
 8001cd6:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001cda:	4619      	mov	r1, r3
 8001cdc:	f107 0320 	add.w	r3, r7, #32
 8001ce0:	3b14      	subs	r3, #20
 8001ce2:	2201      	movs	r2, #1
 8001ce4:	f851 1c3c 	ldr.w	r1, [r1, #-60]
 8001ce8:	4618      	mov	r0, r3
 8001cea:	f009 fe3d 	bl	800b968 <f_open>
 8001cee:	4603      	mov	r3, r0
 8001cf0:	f507 5281 	add.w	r2, r7, #4128	@ 0x1020
 8001cf4:	f102 021f 	add.w	r2, r2, #31
 8001cf8:	7013      	strb	r3, [r2, #0]
    if (fres != FR_OK) {
 8001cfa:	f507 5381 	add.w	r3, r7, #4128	@ 0x1020
 8001cfe:	f103 031f 	add.w	r3, r3, #31
 8001d02:	781b      	ldrb	r3, [r3, #0]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d004      	beq.n	8001d12 <CargarBitmaps_SD+0x76>
       transmit_uart("Error al abrir el archivo en la SD\n");
 8001d08:	4822      	ldr	r0, [pc, #136]	@ (8001d94 <CargarBitmaps_SD+0xf8>)
 8001d0a:	f7ff ffb1 	bl	8001c70 <transmit_uart>
        return 0;  // Error al abrir el archivo
 8001d0e:	2300      	movs	r3, #0
 8001d10:	e035      	b.n	8001d7e <CargarBitmaps_SD+0xe2>
    }
    transmit_uart("Se abrio el archivo\n");
 8001d12:	4821      	ldr	r0, [pc, #132]	@ (8001d98 <CargarBitmaps_SD+0xfc>)
 8001d14:	f7ff ffac 	bl	8001c70 <transmit_uart>
    // Leer los datos del archivo y almacenarlos en la variable play
    fres = f_read(&fil, fragmento_imagen, 19200, &bytes_read);
 8001d18:	f107 0320 	add.w	r3, r7, #32
 8001d1c:	3b18      	subs	r3, #24
 8001d1e:	f107 0020 	add.w	r0, r7, #32
 8001d22:	3814      	subs	r0, #20
 8001d24:	f44f 4296 	mov.w	r2, #19200	@ 0x4b00
 8001d28:	491c      	ldr	r1, [pc, #112]	@ (8001d9c <CargarBitmaps_SD+0x100>)
 8001d2a:	f009 ffe5 	bl	800bcf8 <f_read>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	f507 5281 	add.w	r2, r7, #4128	@ 0x1020
 8001d34:	f102 021f 	add.w	r2, r2, #31
 8001d38:	7013      	strb	r3, [r2, #0]
    if (fres != FR_OK || bytes_read == 0) {
 8001d3a:	f507 5381 	add.w	r3, r7, #4128	@ 0x1020
 8001d3e:	f103 031f 	add.w	r3, r3, #31
 8001d42:	781b      	ldrb	r3, [r3, #0]
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	d105      	bne.n	8001d54 <CargarBitmaps_SD+0xb8>
 8001d48:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001d4c:	f853 3c38 	ldr.w	r3, [r3, #-56]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d10a      	bne.n	8001d6a <CargarBitmaps_SD+0xce>
       transmit_uart("Error al leer la imagen desde la SD\n");
 8001d54:	4812      	ldr	r0, [pc, #72]	@ (8001da0 <CargarBitmaps_SD+0x104>)
 8001d56:	f7ff ff8b 	bl	8001c70 <transmit_uart>
        f_close(&fil);
 8001d5a:	f107 0320 	add.w	r3, r7, #32
 8001d5e:	3b14      	subs	r3, #20
 8001d60:	4618      	mov	r0, r3
 8001d62:	f00a f9a6 	bl	800c0b2 <f_close>
        return 0;  // Error al leer el archivo
 8001d66:	2300      	movs	r3, #0
 8001d68:	e009      	b.n	8001d7e <CargarBitmaps_SD+0xe2>
    }

    // Cerrar el archivo
    f_close(&fil);
 8001d6a:	f107 0320 	add.w	r3, r7, #32
 8001d6e:	3b14      	subs	r3, #20
 8001d70:	4618      	mov	r0, r3
 8001d72:	f00a f99e 	bl	800c0b2 <f_close>
    transmit_uart("TERMINO DE CARGAR IMAGEN\n");
 8001d76:	480b      	ldr	r0, [pc, #44]	@ (8001da4 <CargarBitmaps_SD+0x108>)
 8001d78:	f7ff ff7a 	bl	8001c70 <transmit_uart>
   // transmit_uart("Imagen cargada correctamente desde la SD a la variable play\n");
    return 1;  // Éxito
 8001d7c:	2301      	movs	r3, #1
}
 8001d7e:	4618      	mov	r0, r3
 8001d80:	f507 5782 	add.w	r7, r7, #4160	@ 0x1040
 8001d84:	46bd      	mov	sp, r7
 8001d86:	bd80      	pop	{r7, pc}
 8001d88:	0800cca4 	.word	0x0800cca4
 8001d8c:	20016b68 	.word	0x20016b68
 8001d90:	0800cca8 	.word	0x0800cca8
 8001d94:	0800ccb4 	.word	0x0800ccb4
 8001d98:	0800ccd8 	.word	0x0800ccd8
 8001d9c:	20017c78 	.word	0x20017c78
 8001da0:	0800ccf0 	.word	0x0800ccf0
 8001da4:	0800cd18 	.word	0x0800cd18

08001da8 <animation_e1_control>:


/* Funciones Enemigo tipo 1 ---------------------------------------------------*/
void animation_e1_control(enemy_type1* enemy){
 8001da8:	b580      	push	{r7, lr}
 8001daa:	b084      	sub	sp, #16
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	6078      	str	r0, [r7, #4]
	int variableAnimationDV = enemy->animationDV;
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001db6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001dba:	ee17 3a90 	vmov	r3, s15
 8001dbe:	60fb      	str	r3, [r7, #12]
	int variableAnimationV= enemy->animationV;
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001dc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001dca:	ee17 3a90 	vmov	r3, s15
 8001dce:	60bb      	str	r3, [r7, #8]
	if (enemy->isAlive==1){
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	695b      	ldr	r3, [r3, #20]
 8001dd4:	2b01      	cmp	r3, #1
 8001dd6:	d131      	bne.n	8001e3c <animation_e1_control+0x94>
		if (variableAnimationDV>4){
 8001dd8:	68fb      	ldr	r3, [r7, #12]
 8001dda:	2b04      	cmp	r3, #4
 8001ddc:	dd1b      	ble.n	8001e16 <animation_e1_control+0x6e>
			if (variableAnimationV<16){
 8001dde:	68bb      	ldr	r3, [r7, #8]
 8001de0:	2b0f      	cmp	r3, #15
 8001de2:	dc13      	bgt.n	8001e0c <animation_e1_control+0x64>
				enemy->animationV+=0.1;
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001de8:	4618      	mov	r0, r3
 8001dea:	f7fe fbcd 	bl	8000588 <__aeabi_f2d>
 8001dee:	a316      	add	r3, pc, #88	@ (adr r3, 8001e48 <animation_e1_control+0xa0>)
 8001df0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001df4:	f7fe fa6a 	bl	80002cc <__adddf3>
 8001df8:	4602      	mov	r2, r0
 8001dfa:	460b      	mov	r3, r1
 8001dfc:	4610      	mov	r0, r2
 8001dfe:	4619      	mov	r1, r3
 8001e00:	f7fe fc1a 	bl	8000638 <__aeabi_d2f>
 8001e04:	4602      	mov	r2, r0
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	629a      	str	r2, [r3, #40]	@ 0x28
			}
		} else{
			enemy->animationDV+=0.1;
		}
	}
}
 8001e0a:	e017      	b.n	8001e3c <animation_e1_control+0x94>
				enemy->animationV=0;
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	f04f 0200 	mov.w	r2, #0
 8001e12:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8001e14:	e012      	b.n	8001e3c <animation_e1_control+0x94>
			enemy->animationDV+=0.1;
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	f7fe fbb4 	bl	8000588 <__aeabi_f2d>
 8001e20:	a309      	add	r3, pc, #36	@ (adr r3, 8001e48 <animation_e1_control+0xa0>)
 8001e22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e26:	f7fe fa51 	bl	80002cc <__adddf3>
 8001e2a:	4602      	mov	r2, r0
 8001e2c:	460b      	mov	r3, r1
 8001e2e:	4610      	mov	r0, r2
 8001e30:	4619      	mov	r1, r3
 8001e32:	f7fe fc01 	bl	8000638 <__aeabi_d2f>
 8001e36:	4602      	mov	r2, r0
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8001e3c:	bf00      	nop
 8001e3e:	3710      	adds	r7, #16
 8001e40:	46bd      	mov	sp, r7
 8001e42:	bd80      	pop	{r7, pc}
 8001e44:	f3af 8000 	nop.w
 8001e48:	9999999a 	.word	0x9999999a
 8001e4c:	3fb99999 	.word	0x3fb99999

08001e50 <animation_e1>:

void animation_e1(enemy_type1* enemy){
 8001e50:	b590      	push	{r4, r7, lr}
 8001e52:	b08b      	sub	sp, #44	@ 0x2c
 8001e54:	af06      	add	r7, sp, #24
 8001e56:	6078      	str	r0, [r7, #4]
	int variableAnimationV=enemy->animationV;
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8001e5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001e62:	ee17 3a90 	vmov	r3, s15
 8001e66:	60fb      	str	r3, [r7, #12]
	int variableAnimationDV = enemy->animationDV;
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 8001e6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001e72:	ee17 3a90 	vmov	r3, s15
 8001e76:	60bb      	str	r3, [r7, #8]
	if (enemy->isAlive==1){
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	695b      	ldr	r3, [r3, #20]
 8001e7c:	2b01      	cmp	r3, #1
 8001e7e:	f040 80a6 	bne.w	8001fce <animation_e1+0x17e>
		if (variableAnimationDV>4){
 8001e82:	68bb      	ldr	r3, [r7, #8]
 8001e84:	2b04      	cmp	r3, #4
 8001e86:	f340 80a2 	ble.w	8001fce <animation_e1+0x17e>
			LCD_Sprite(enemy->x - (16 / 2)+2, enemy->y - (19 / 2), 16, 19, E1_Ide256x19_16, 16, variableAnimationV, 0, 0);
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	3b06      	subs	r3, #6
 8001e90:	4618      	mov	r0, r3
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	685b      	ldr	r3, [r3, #4]
 8001e96:	3b09      	subs	r3, #9
 8001e98:	4619      	mov	r1, r3
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	9304      	str	r3, [sp, #16]
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	9303      	str	r3, [sp, #12]
 8001ea2:	68fb      	ldr	r3, [r7, #12]
 8001ea4:	9302      	str	r3, [sp, #8]
 8001ea6:	2310      	movs	r3, #16
 8001ea8:	9301      	str	r3, [sp, #4]
 8001eaa:	4b4b      	ldr	r3, [pc, #300]	@ (8001fd8 <animation_e1+0x188>)
 8001eac:	9300      	str	r3, [sp, #0]
 8001eae:	2313      	movs	r3, #19
 8001eb0:	2210      	movs	r2, #16
 8001eb2:	f7ff fe31 	bl	8001b18 <LCD_Sprite>
		    if (DrawHitbox==1){
 8001eb6:	4b49      	ldr	r3, [pc, #292]	@ (8001fdc <animation_e1+0x18c>)
 8001eb8:	781b      	ldrb	r3, [r3, #0]
 8001eba:	2b01      	cmp	r3, #1
 8001ebc:	d113      	bne.n	8001ee6 <animation_e1+0x96>
		    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	681a      	ldr	r2, [r3, #0]
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	689b      	ldr	r3, [r3, #8]
 8001ec6:	085b      	lsrs	r3, r3, #1
 8001ec8:	1ad0      	subs	r0, r2, r3
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	685a      	ldr	r2, [r3, #4]
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	68db      	ldr	r3, [r3, #12]
 8001ed2:	085b      	lsrs	r3, r3, #1
 8001ed4:	1ad1      	subs	r1, r2, r3
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	689a      	ldr	r2, [r3, #8]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	68db      	ldr	r3, [r3, #12]
 8001ede:	2400      	movs	r4, #0
 8001ee0:	9400      	str	r4, [sp, #0]
 8001ee2:	f7ff fd41 	bl	8001968 <Rect>
		    }
		    if (DrawHitbox==2){
 8001ee6:	4b3d      	ldr	r3, [pc, #244]	@ (8001fdc <animation_e1+0x18c>)
 8001ee8:	781b      	ldrb	r3, [r3, #0]
 8001eea:	2b02      	cmp	r3, #2
 8001eec:	d12b      	bne.n	8001f46 <animation_e1+0xf6>
		    	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	6998      	ldr	r0, [r3, #24]
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	6859      	ldr	r1, [r3, #4]
 8001ef6:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001efa:	9300      	str	r3, [sp, #0]
 8001efc:	2301      	movs	r3, #1
 8001efe:	2201      	movs	r2, #1
 8001f00:	f7ff fd5a 	bl	80019b8 <FillRect>
		    	FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	69d8      	ldr	r0, [r3, #28]
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	6859      	ldr	r1, [r3, #4]
 8001f0c:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001f10:	9300      	str	r3, [sp, #0]
 8001f12:	2301      	movs	r3, #1
 8001f14:	2201      	movs	r2, #1
 8001f16:	f7ff fd4f 	bl	80019b8 <FillRect>
		    	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	6818      	ldr	r0, [r3, #0]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	6a19      	ldr	r1, [r3, #32]
 8001f22:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001f26:	9300      	str	r3, [sp, #0]
 8001f28:	2301      	movs	r3, #1
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	f7ff fd44 	bl	80019b8 <FillRect>
		    	FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	6818      	ldr	r0, [r3, #0]
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8001f38:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001f3c:	9300      	str	r3, [sp, #0]
 8001f3e:	2301      	movs	r3, #1
 8001f40:	2201      	movs	r2, #1
 8001f42:	f7ff fd39 	bl	80019b8 <FillRect>
		    }
		    if (DrawHitbox==3){
 8001f46:	4b25      	ldr	r3, [pc, #148]	@ (8001fdc <animation_e1+0x18c>)
 8001f48:	781b      	ldrb	r3, [r3, #0]
 8001f4a:	2b03      	cmp	r3, #3
 8001f4c:	d13f      	bne.n	8001fce <animation_e1+0x17e>
		    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	681a      	ldr	r2, [r3, #0]
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	689b      	ldr	r3, [r3, #8]
 8001f56:	085b      	lsrs	r3, r3, #1
 8001f58:	1ad0      	subs	r0, r2, r3
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	685a      	ldr	r2, [r3, #4]
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	68db      	ldr	r3, [r3, #12]
 8001f62:	085b      	lsrs	r3, r3, #1
 8001f64:	1ad1      	subs	r1, r2, r3
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	689a      	ldr	r2, [r3, #8]
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	68db      	ldr	r3, [r3, #12]
 8001f6e:	2400      	movs	r4, #0
 8001f70:	9400      	str	r4, [sp, #0]
 8001f72:	f7ff fcf9 	bl	8001968 <Rect>
				FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	6998      	ldr	r0, [r3, #24]
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	6859      	ldr	r1, [r3, #4]
 8001f7e:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001f82:	9300      	str	r3, [sp, #0]
 8001f84:	2301      	movs	r3, #1
 8001f86:	2201      	movs	r2, #1
 8001f88:	f7ff fd16 	bl	80019b8 <FillRect>
				FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	69d8      	ldr	r0, [r3, #28]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	6859      	ldr	r1, [r3, #4]
 8001f94:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001f98:	9300      	str	r3, [sp, #0]
 8001f9a:	2301      	movs	r3, #1
 8001f9c:	2201      	movs	r2, #1
 8001f9e:	f7ff fd0b 	bl	80019b8 <FillRect>
				FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	6818      	ldr	r0, [r3, #0]
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	6a19      	ldr	r1, [r3, #32]
 8001faa:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001fae:	9300      	str	r3, [sp, #0]
 8001fb0:	2301      	movs	r3, #1
 8001fb2:	2201      	movs	r2, #1
 8001fb4:	f7ff fd00 	bl	80019b8 <FillRect>
				FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	6818      	ldr	r0, [r3, #0]
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8001fc0:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8001fc4:	9300      	str	r3, [sp, #0]
 8001fc6:	2301      	movs	r3, #1
 8001fc8:	2201      	movs	r2, #1
 8001fca:	f7ff fcf5 	bl	80019b8 <FillRect>
		        }
			//FillRect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0xFF0000);  // Color rojo
		}
	}
}
 8001fce:	bf00      	nop
 8001fd0:	3714      	adds	r7, #20
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bd90      	pop	{r4, r7, pc}
 8001fd6:	bf00      	nop
 8001fd8:	2000b88c 	.word	0x2000b88c
 8001fdc:	2001cadf 	.word	0x2001cadf

08001fe0 <animation_e1_die>:

void animation_e1_die(enemy_type1* enemy){
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b08a      	sub	sp, #40	@ 0x28
 8001fe4:	af06      	add	r7, sp, #24
 8001fe6:	6078      	str	r0, [r7, #4]
	int variableAnimationDie=enemy->animationDie;
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8001fee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001ff2:	ee17 3a90 	vmov	r3, s15
 8001ff6:	60fb      	str	r3, [r7, #12]
		if (enemy->isAlive==0){
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	695b      	ldr	r3, [r3, #20]
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d134      	bne.n	800206a <animation_e1_die+0x8a>
			if (variableAnimationDie<11){
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	2b0a      	cmp	r3, #10
 8002004:	dc29      	bgt.n	800205a <animation_e1_die+0x7a>
				LCD_Sprite(enemy->x - (14 / 2)+1, enemy->y - (25 / 2), 14,25, E1_Die14x25_11, 11, variableAnimationDie, 0, 0);
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	3b06      	subs	r3, #6
 800200c:	4618      	mov	r0, r3
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	685b      	ldr	r3, [r3, #4]
 8002012:	3b0c      	subs	r3, #12
 8002014:	4619      	mov	r1, r3
 8002016:	2300      	movs	r3, #0
 8002018:	9304      	str	r3, [sp, #16]
 800201a:	2300      	movs	r3, #0
 800201c:	9303      	str	r3, [sp, #12]
 800201e:	68fb      	ldr	r3, [r7, #12]
 8002020:	9302      	str	r3, [sp, #8]
 8002022:	230b      	movs	r3, #11
 8002024:	9301      	str	r3, [sp, #4]
 8002026:	4b16      	ldr	r3, [pc, #88]	@ (8002080 <animation_e1_die+0xa0>)
 8002028:	9300      	str	r3, [sp, #0]
 800202a:	2319      	movs	r3, #25
 800202c:	220e      	movs	r2, #14
 800202e:	f7ff fd73 	bl	8001b18 <LCD_Sprite>
				enemy->animationDie+=0.2;
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002036:	4618      	mov	r0, r3
 8002038:	f7fe faa6 	bl	8000588 <__aeabi_f2d>
 800203c:	a30e      	add	r3, pc, #56	@ (adr r3, 8002078 <animation_e1_die+0x98>)
 800203e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002042:	f7fe f943 	bl	80002cc <__adddf3>
 8002046:	4602      	mov	r2, r0
 8002048:	460b      	mov	r3, r1
 800204a:	4610      	mov	r0, r2
 800204c:	4619      	mov	r1, r3
 800204e:	f7fe faf3 	bl	8000638 <__aeabi_d2f>
 8002052:	4602      	mov	r2, r0
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	631a      	str	r2, [r3, #48]	@ 0x30
				}else{
					enemy->x=5000;
					enemy->y=5000;
				}
			}
}
 8002058:	e007      	b.n	800206a <animation_e1_die+0x8a>
					enemy->x=5000;
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002060:	601a      	str	r2, [r3, #0]
					enemy->y=5000;
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002068:	605a      	str	r2, [r3, #4]
}
 800206a:	bf00      	nop
 800206c:	3710      	adds	r7, #16
 800206e:	46bd      	mov	sp, r7
 8002070:	bd80      	pop	{r7, pc}
 8002072:	bf00      	nop
 8002074:	f3af 8000 	nop.w
 8002078:	9999999a 	.word	0x9999999a
 800207c:	3fc99999 	.word	0x3fc99999
 8002080:	2000de8c 	.word	0x2000de8c

08002084 <initEnemy1>:

void initEnemy1(enemy_type1* enemy, unsigned int startX, unsigned int startY, unsigned int width, unsigned int height, int health) {
 8002084:	b590      	push	{r4, r7, lr}
 8002086:	b08b      	sub	sp, #44	@ 0x2c
 8002088:	af06      	add	r7, sp, #24
 800208a:	60f8      	str	r0, [r7, #12]
 800208c:	60b9      	str	r1, [r7, #8]
 800208e:	607a      	str	r2, [r7, #4]
 8002090:	603b      	str	r3, [r7, #0]
    // Inicializar las coordenadas y dimensiones
    enemy->x = startX;
 8002092:	68fb      	ldr	r3, [r7, #12]
 8002094:	68ba      	ldr	r2, [r7, #8]
 8002096:	601a      	str	r2, [r3, #0]
    enemy->y = startY;
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	687a      	ldr	r2, [r7, #4]
 800209c:	605a      	str	r2, [r3, #4]
    enemy->width = width;
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	683a      	ldr	r2, [r7, #0]
 80020a2:	609a      	str	r2, [r3, #8]
    enemy->height = height;
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	6a3a      	ldr	r2, [r7, #32]
 80020a8:	60da      	str	r2, [r3, #12]

    // Inicializar la vida y el estado
    enemy->health = health;
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80020ae:	611a      	str	r2, [r3, #16]
    enemy->isAlive = 1;  // El enemigo comienza vivo
 80020b0:	68fb      	ldr	r3, [r7, #12]
 80020b2:	2201      	movs	r2, #1
 80020b4:	615a      	str	r2, [r3, #20]

    //Animación
    enemy->animationV = 0;
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	f04f 0200 	mov.w	r2, #0
 80020bc:	629a      	str	r2, [r3, #40]	@ 0x28
    enemy->animationDV = 5;
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	4a65      	ldr	r2, [pc, #404]	@ (8002258 <initEnemy1+0x1d4>)
 80020c2:	62da      	str	r2, [r3, #44]	@ 0x2c
    enemy->animationDie=12;
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	4a65      	ldr	r2, [pc, #404]	@ (800225c <initEnemy1+0x1d8>)
 80020c8:	631a      	str	r2, [r3, #48]	@ 0x30

    //HITBOX DEBUG
	enemy->e1Left = enemy->x - (enemy->width / 2);
 80020ca:	68fb      	ldr	r3, [r7, #12]
 80020cc:	681a      	ldr	r2, [r3, #0]
 80020ce:	68fb      	ldr	r3, [r7, #12]
 80020d0:	689b      	ldr	r3, [r3, #8]
 80020d2:	085b      	lsrs	r3, r3, #1
 80020d4:	1ad2      	subs	r2, r2, r3
 80020d6:	68fb      	ldr	r3, [r7, #12]
 80020d8:	619a      	str	r2, [r3, #24]
	enemy->e1Right = (enemy->x + enemy->width / 2); //+1
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	681a      	ldr	r2, [r3, #0]
 80020de:	68fb      	ldr	r3, [r7, #12]
 80020e0:	689b      	ldr	r3, [r3, #8]
 80020e2:	085b      	lsrs	r3, r3, #1
 80020e4:	441a      	add	r2, r3
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	61da      	str	r2, [r3, #28]
	enemy->e1Up = enemy->y - (enemy->height / 2);
 80020ea:	68fb      	ldr	r3, [r7, #12]
 80020ec:	685a      	ldr	r2, [r3, #4]
 80020ee:	68fb      	ldr	r3, [r7, #12]
 80020f0:	68db      	ldr	r3, [r3, #12]
 80020f2:	085b      	lsrs	r3, r3, #1
 80020f4:	1ad2      	subs	r2, r2, r3
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	621a      	str	r2, [r3, #32]
	enemy->e1Down= (enemy->y + enemy->height / 2); //+1
 80020fa:	68fb      	ldr	r3, [r7, #12]
 80020fc:	685a      	ldr	r2, [r3, #4]
 80020fe:	68fb      	ldr	r3, [r7, #12]
 8002100:	68db      	ldr	r3, [r3, #12]
 8002102:	085b      	lsrs	r3, r3, #1
 8002104:	441a      	add	r2, r3
 8002106:	68fb      	ldr	r3, [r7, #12]
 8002108:	625a      	str	r2, [r3, #36]	@ 0x24

    // Dibujar el enemigo en pantalla
    LCD_Sprite(enemy->x - (16 / 2), enemy->y - (19 / 2), 16, 19, E1_Ide256x19_16, 16, 0, 0, 0);
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	3b08      	subs	r3, #8
 8002110:	4618      	mov	r0, r3
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	685b      	ldr	r3, [r3, #4]
 8002116:	3b09      	subs	r3, #9
 8002118:	4619      	mov	r1, r3
 800211a:	2300      	movs	r3, #0
 800211c:	9304      	str	r3, [sp, #16]
 800211e:	2300      	movs	r3, #0
 8002120:	9303      	str	r3, [sp, #12]
 8002122:	2300      	movs	r3, #0
 8002124:	9302      	str	r3, [sp, #8]
 8002126:	2310      	movs	r3, #16
 8002128:	9301      	str	r3, [sp, #4]
 800212a:	4b4d      	ldr	r3, [pc, #308]	@ (8002260 <initEnemy1+0x1dc>)
 800212c:	9300      	str	r3, [sp, #0]
 800212e:	2313      	movs	r3, #19
 8002130:	2210      	movs	r2, #16
 8002132:	f7ff fcf1 	bl	8001b18 <LCD_Sprite>

    if (DrawHitbox==1){
 8002136:	4b4b      	ldr	r3, [pc, #300]	@ (8002264 <initEnemy1+0x1e0>)
 8002138:	781b      	ldrb	r3, [r3, #0]
 800213a:	2b01      	cmp	r3, #1
 800213c:	d113      	bne.n	8002166 <initEnemy1+0xe2>
    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 800213e:	68fb      	ldr	r3, [r7, #12]
 8002140:	681a      	ldr	r2, [r3, #0]
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	689b      	ldr	r3, [r3, #8]
 8002146:	085b      	lsrs	r3, r3, #1
 8002148:	1ad0      	subs	r0, r2, r3
 800214a:	68fb      	ldr	r3, [r7, #12]
 800214c:	685a      	ldr	r2, [r3, #4]
 800214e:	68fb      	ldr	r3, [r7, #12]
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	085b      	lsrs	r3, r3, #1
 8002154:	1ad1      	subs	r1, r2, r3
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	689a      	ldr	r2, [r3, #8]
 800215a:	68fb      	ldr	r3, [r7, #12]
 800215c:	68db      	ldr	r3, [r3, #12]
 800215e:	2400      	movs	r4, #0
 8002160:	9400      	str	r4, [sp, #0]
 8002162:	f7ff fc01 	bl	8001968 <Rect>
    }
    if (DrawHitbox==2){
 8002166:	4b3f      	ldr	r3, [pc, #252]	@ (8002264 <initEnemy1+0x1e0>)
 8002168:	781b      	ldrb	r3, [r3, #0]
 800216a:	2b02      	cmp	r3, #2
 800216c:	d12b      	bne.n	80021c6 <initEnemy1+0x142>
    	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	6998      	ldr	r0, [r3, #24]
 8002172:	68fb      	ldr	r3, [r7, #12]
 8002174:	6859      	ldr	r1, [r3, #4]
 8002176:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800217a:	9300      	str	r3, [sp, #0]
 800217c:	2301      	movs	r3, #1
 800217e:	2201      	movs	r2, #1
 8002180:	f7ff fc1a 	bl	80019b8 <FillRect>
    	FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 8002184:	68fb      	ldr	r3, [r7, #12]
 8002186:	69d8      	ldr	r0, [r3, #28]
 8002188:	68fb      	ldr	r3, [r7, #12]
 800218a:	6859      	ldr	r1, [r3, #4]
 800218c:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002190:	9300      	str	r3, [sp, #0]
 8002192:	2301      	movs	r3, #1
 8002194:	2201      	movs	r2, #1
 8002196:	f7ff fc0f 	bl	80019b8 <FillRect>
    	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 800219a:	68fb      	ldr	r3, [r7, #12]
 800219c:	6818      	ldr	r0, [r3, #0]
 800219e:	68fb      	ldr	r3, [r7, #12]
 80021a0:	6a19      	ldr	r1, [r3, #32]
 80021a2:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80021a6:	9300      	str	r3, [sp, #0]
 80021a8:	2301      	movs	r3, #1
 80021aa:	2201      	movs	r2, #1
 80021ac:	f7ff fc04 	bl	80019b8 <FillRect>
    	FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 80021b0:	68fb      	ldr	r3, [r7, #12]
 80021b2:	6818      	ldr	r0, [r3, #0]
 80021b4:	68fb      	ldr	r3, [r7, #12]
 80021b6:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80021b8:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80021bc:	9300      	str	r3, [sp, #0]
 80021be:	2301      	movs	r3, #1
 80021c0:	2201      	movs	r2, #1
 80021c2:	f7ff fbf9 	bl	80019b8 <FillRect>
    }
    if (DrawHitbox==3){
 80021c6:	4b27      	ldr	r3, [pc, #156]	@ (8002264 <initEnemy1+0x1e0>)
 80021c8:	781b      	ldrb	r3, [r3, #0]
 80021ca:	2b03      	cmp	r3, #3
 80021cc:	d13f      	bne.n	800224e <initEnemy1+0x1ca>
    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 80021ce:	68fb      	ldr	r3, [r7, #12]
 80021d0:	681a      	ldr	r2, [r3, #0]
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	689b      	ldr	r3, [r3, #8]
 80021d6:	085b      	lsrs	r3, r3, #1
 80021d8:	1ad0      	subs	r0, r2, r3
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	685a      	ldr	r2, [r3, #4]
 80021de:	68fb      	ldr	r3, [r7, #12]
 80021e0:	68db      	ldr	r3, [r3, #12]
 80021e2:	085b      	lsrs	r3, r3, #1
 80021e4:	1ad1      	subs	r1, r2, r3
 80021e6:	68fb      	ldr	r3, [r7, #12]
 80021e8:	689a      	ldr	r2, [r3, #8]
 80021ea:	68fb      	ldr	r3, [r7, #12]
 80021ec:	68db      	ldr	r3, [r3, #12]
 80021ee:	2400      	movs	r4, #0
 80021f0:	9400      	str	r4, [sp, #0]
 80021f2:	f7ff fbb9 	bl	8001968 <Rect>
		FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 80021f6:	68fb      	ldr	r3, [r7, #12]
 80021f8:	6998      	ldr	r0, [r3, #24]
 80021fa:	68fb      	ldr	r3, [r7, #12]
 80021fc:	6859      	ldr	r1, [r3, #4]
 80021fe:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002202:	9300      	str	r3, [sp, #0]
 8002204:	2301      	movs	r3, #1
 8002206:	2201      	movs	r2, #1
 8002208:	f7ff fbd6 	bl	80019b8 <FillRect>
		FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 800220c:	68fb      	ldr	r3, [r7, #12]
 800220e:	69d8      	ldr	r0, [r3, #28]
 8002210:	68fb      	ldr	r3, [r7, #12]
 8002212:	6859      	ldr	r1, [r3, #4]
 8002214:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002218:	9300      	str	r3, [sp, #0]
 800221a:	2301      	movs	r3, #1
 800221c:	2201      	movs	r2, #1
 800221e:	f7ff fbcb 	bl	80019b8 <FillRect>
		FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	6818      	ldr	r0, [r3, #0]
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	6a19      	ldr	r1, [r3, #32]
 800222a:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800222e:	9300      	str	r3, [sp, #0]
 8002230:	2301      	movs	r3, #1
 8002232:	2201      	movs	r2, #1
 8002234:	f7ff fbc0 	bl	80019b8 <FillRect>
		FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 8002238:	68fb      	ldr	r3, [r7, #12]
 800223a:	6818      	ldr	r0, [r3, #0]
 800223c:	68fb      	ldr	r3, [r7, #12]
 800223e:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8002240:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002244:	9300      	str	r3, [sp, #0]
 8002246:	2301      	movs	r3, #1
 8002248:	2201      	movs	r2, #1
 800224a:	f7ff fbb5 	bl	80019b8 <FillRect>
        }
}
 800224e:	bf00      	nop
 8002250:	3714      	adds	r7, #20
 8002252:	46bd      	mov	sp, r7
 8002254:	bd90      	pop	{r4, r7, pc}
 8002256:	bf00      	nop
 8002258:	40a00000 	.word	0x40a00000
 800225c:	41400000 	.word	0x41400000
 8002260:	2000b88c 	.word	0x2000b88c
 8002264:	2001cadf 	.word	0x2001cadf

08002268 <ColisionPlayer_e1>:

int ColisionPlayer_e1(enemy_type1* enemy, player* player,int direction, int x, int y){
 8002268:	b480      	push	{r7}
 800226a:	b089      	sub	sp, #36	@ 0x24
 800226c:	af00      	add	r7, sp, #0
 800226e:	60f8      	str	r0, [r7, #12]
 8002270:	60b9      	str	r1, [r7, #8]
 8002272:	607a      	str	r2, [r7, #4]
 8002274:	603b      	str	r3, [r7, #0]
	// Verificar colisión con el enemigo basado en la dirección de movimiento
	// Dirección de movimiento (0: arriba, 1: derecha, 2: abajo, 3: izquierda)
	if (enemy->isAlive==1){
 8002276:	68fb      	ldr	r3, [r7, #12]
 8002278:	695b      	ldr	r3, [r3, #20]
 800227a:	2b01      	cmp	r3, #1
 800227c:	f040 8251 	bne.w	8002722 <ColisionPlayer_e1+0x4ba>
		switch (player->direction) {
 8002280:	68bb      	ldr	r3, [r7, #8]
 8002282:	6a1b      	ldr	r3, [r3, #32]
 8002284:	2b03      	cmp	r3, #3
 8002286:	f200 824c 	bhi.w	8002722 <ColisionPlayer_e1+0x4ba>
 800228a:	a201      	add	r2, pc, #4	@ (adr r2, 8002290 <ColisionPlayer_e1+0x28>)
 800228c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002290:	080022a1 	.word	0x080022a1
 8002294:	080023bf 	.word	0x080023bf
 8002298:	080024dd 	.word	0x080024dd
 800229c:	080025fb 	.word	0x080025fb
				case 0: // Movimiento hacia arriba
					int y_u= y-12;
 80022a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80022a2:	3b0c      	subs	r3, #12
 80022a4:	613b      	str	r3, [r7, #16]
					if (y_u<=enemy->e1Down && y_u>=enemy->e1Up){
 80022a6:	68fb      	ldr	r3, [r7, #12]
 80022a8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80022aa:	693b      	ldr	r3, [r7, #16]
 80022ac:	429a      	cmp	r2, r3
 80022ae:	f0c0 8231 	bcc.w	8002714 <ColisionPlayer_e1+0x4ac>
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	6a1a      	ldr	r2, [r3, #32]
 80022b6:	693b      	ldr	r3, [r7, #16]
 80022b8:	429a      	cmp	r2, r3
 80022ba:	f200 822b 	bhi.w	8002714 <ColisionPlayer_e1+0x4ac>
						if(player->playerLeft>=enemy->e1Left && player->playerLeft<=enemy->e1Right){
 80022be:	68bb      	ldr	r3, [r7, #8]
 80022c0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80022c2:	68fb      	ldr	r3, [r7, #12]
 80022c4:	699b      	ldr	r3, [r3, #24]
 80022c6:	429a      	cmp	r2, r3
 80022c8:	d323      	bcc.n	8002312 <ColisionPlayer_e1+0xaa>
 80022ca:	68bb      	ldr	r3, [r7, #8]
 80022cc:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80022ce:	68fb      	ldr	r3, [r7, #12]
 80022d0:	69db      	ldr	r3, [r3, #28]
 80022d2:	429a      	cmp	r2, r3
 80022d4:	d81d      	bhi.n	8002312 <ColisionPlayer_e1+0xaa>
							player->y=player->y+5;
 80022d6:	68bb      	ldr	r3, [r7, #8]
 80022d8:	685b      	ldr	r3, [r3, #4]
 80022da:	1d5a      	adds	r2, r3, #5
 80022dc:	68bb      	ldr	r3, [r7, #8]
 80022de:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 80022e0:	68bb      	ldr	r3, [r7, #8]
 80022e2:	2201      	movs	r2, #1
 80022e4:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 80022e6:	68bb      	ldr	r3, [r7, #8]
 80022e8:	f04f 0200 	mov.w	r2, #0
 80022ec:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 80022ee:	68bb      	ldr	r3, [r7, #8]
 80022f0:	695b      	ldr	r3, [r3, #20]
 80022f2:	1e5a      	subs	r2, r3, #1
 80022f4:	68bb      	ldr	r3, [r7, #8]
 80022f6:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80022f8:	68bb      	ldr	r3, [r7, #8]
 80022fa:	695b      	ldr	r3, [r3, #20]
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d106      	bne.n	800230e <ColisionPlayer_e1+0xa6>
								player->isAlive=0;
 8002300:	68bb      	ldr	r3, [r7, #8]
 8002302:	2200      	movs	r2, #0
 8002304:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002306:	68bb      	ldr	r3, [r7, #8]
 8002308:	f04f 0200 	mov.w	r2, #0
 800230c:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 800230e:	2300      	movs	r3, #0
 8002310:	e208      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if(player->playerRight>=enemy->e1Left && player->playerRight<=enemy->e1Right){
 8002312:	68bb      	ldr	r3, [r7, #8]
 8002314:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	699b      	ldr	r3, [r3, #24]
 800231a:	429a      	cmp	r2, r3
 800231c:	d323      	bcc.n	8002366 <ColisionPlayer_e1+0xfe>
 800231e:	68bb      	ldr	r3, [r7, #8]
 8002320:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	69db      	ldr	r3, [r3, #28]
 8002326:	429a      	cmp	r2, r3
 8002328:	d81d      	bhi.n	8002366 <ColisionPlayer_e1+0xfe>
							player->y=player->y+5;
 800232a:	68bb      	ldr	r3, [r7, #8]
 800232c:	685b      	ldr	r3, [r3, #4]
 800232e:	1d5a      	adds	r2, r3, #5
 8002330:	68bb      	ldr	r3, [r7, #8]
 8002332:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 8002334:	68bb      	ldr	r3, [r7, #8]
 8002336:	2201      	movs	r2, #1
 8002338:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 800233a:	68bb      	ldr	r3, [r7, #8]
 800233c:	f04f 0200 	mov.w	r2, #0
 8002340:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 8002342:	68bb      	ldr	r3, [r7, #8]
 8002344:	695b      	ldr	r3, [r3, #20]
 8002346:	1e5a      	subs	r2, r3, #1
 8002348:	68bb      	ldr	r3, [r7, #8]
 800234a:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 800234c:	68bb      	ldr	r3, [r7, #8]
 800234e:	695b      	ldr	r3, [r3, #20]
 8002350:	2b00      	cmp	r3, #0
 8002352:	d106      	bne.n	8002362 <ColisionPlayer_e1+0xfa>
								player->isAlive=0;
 8002354:	68bb      	ldr	r3, [r7, #8]
 8002356:	2200      	movs	r2, #0
 8002358:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 800235a:	68bb      	ldr	r3, [r7, #8]
 800235c:	f04f 0200 	mov.w	r2, #0
 8002360:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 8002362:	2300      	movs	r3, #0
 8002364:	e1de      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->x>=enemy->e1Left && player->x<=enemy->e1Right){
 8002366:	68bb      	ldr	r3, [r7, #8]
 8002368:	681a      	ldr	r2, [r3, #0]
 800236a:	68fb      	ldr	r3, [r7, #12]
 800236c:	699b      	ldr	r3, [r3, #24]
 800236e:	429a      	cmp	r2, r3
 8002370:	f0c0 81d0 	bcc.w	8002714 <ColisionPlayer_e1+0x4ac>
 8002374:	68bb      	ldr	r3, [r7, #8]
 8002376:	681a      	ldr	r2, [r3, #0]
 8002378:	68fb      	ldr	r3, [r7, #12]
 800237a:	69db      	ldr	r3, [r3, #28]
 800237c:	429a      	cmp	r2, r3
 800237e:	f200 81c9 	bhi.w	8002714 <ColisionPlayer_e1+0x4ac>
							player->y=player->y+5;
 8002382:	68bb      	ldr	r3, [r7, #8]
 8002384:	685b      	ldr	r3, [r3, #4]
 8002386:	1d5a      	adds	r2, r3, #5
 8002388:	68bb      	ldr	r3, [r7, #8]
 800238a:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 800238c:	68bb      	ldr	r3, [r7, #8]
 800238e:	2201      	movs	r2, #1
 8002390:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002392:	68bb      	ldr	r3, [r7, #8]
 8002394:	f04f 0200 	mov.w	r2, #0
 8002398:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 800239a:	68bb      	ldr	r3, [r7, #8]
 800239c:	695b      	ldr	r3, [r3, #20]
 800239e:	1e5a      	subs	r2, r3, #1
 80023a0:	68bb      	ldr	r3, [r7, #8]
 80023a2:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80023a4:	68bb      	ldr	r3, [r7, #8]
 80023a6:	695b      	ldr	r3, [r3, #20]
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d106      	bne.n	80023ba <ColisionPlayer_e1+0x152>
								player->isAlive=0;
 80023ac:	68bb      	ldr	r3, [r7, #8]
 80023ae:	2200      	movs	r2, #0
 80023b0:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 80023b2:	68bb      	ldr	r3, [r7, #8]
 80023b4:	f04f 0200 	mov.w	r2, #0
 80023b8:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 80023ba:	2300      	movs	r3, #0
 80023bc:	e1b2      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
					}
					break;
				case 1: //Movimiento hacia derecha
					int x_r=x+12;
 80023be:	683b      	ldr	r3, [r7, #0]
 80023c0:	330c      	adds	r3, #12
 80023c2:	617b      	str	r3, [r7, #20]
					if (x_r>=enemy->e1Left && x_r<=enemy->e1Right){
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	699a      	ldr	r2, [r3, #24]
 80023c8:	697b      	ldr	r3, [r7, #20]
 80023ca:	429a      	cmp	r2, r3
 80023cc:	f200 81a4 	bhi.w	8002718 <ColisionPlayer_e1+0x4b0>
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	69da      	ldr	r2, [r3, #28]
 80023d4:	697b      	ldr	r3, [r7, #20]
 80023d6:	429a      	cmp	r2, r3
 80023d8:	f0c0 819e 	bcc.w	8002718 <ColisionPlayer_e1+0x4b0>
						if (player->playerUp>=enemy->e1Up && player->playerUp<=enemy->e1Down){
 80023dc:	68bb      	ldr	r3, [r7, #8]
 80023de:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80023e0:	68fb      	ldr	r3, [r7, #12]
 80023e2:	6a1b      	ldr	r3, [r3, #32]
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d323      	bcc.n	8002430 <ColisionPlayer_e1+0x1c8>
 80023e8:	68bb      	ldr	r3, [r7, #8]
 80023ea:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80023ec:	68fb      	ldr	r3, [r7, #12]
 80023ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023f0:	429a      	cmp	r2, r3
 80023f2:	d81d      	bhi.n	8002430 <ColisionPlayer_e1+0x1c8>
							player->x=player->x-5;
 80023f4:	68bb      	ldr	r3, [r7, #8]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	1f5a      	subs	r2, r3, #5
 80023fa:	68bb      	ldr	r3, [r7, #8]
 80023fc:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 80023fe:	68bb      	ldr	r3, [r7, #8]
 8002400:	2201      	movs	r2, #1
 8002402:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002404:	68bb      	ldr	r3, [r7, #8]
 8002406:	f04f 0200 	mov.w	r2, #0
 800240a:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 800240c:	68bb      	ldr	r3, [r7, #8]
 800240e:	695b      	ldr	r3, [r3, #20]
 8002410:	1e5a      	subs	r2, r3, #1
 8002412:	68bb      	ldr	r3, [r7, #8]
 8002414:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 8002416:	68bb      	ldr	r3, [r7, #8]
 8002418:	695b      	ldr	r3, [r3, #20]
 800241a:	2b00      	cmp	r3, #0
 800241c:	d106      	bne.n	800242c <ColisionPlayer_e1+0x1c4>
								player->isAlive=0;
 800241e:	68bb      	ldr	r3, [r7, #8]
 8002420:	2200      	movs	r2, #0
 8002422:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002424:	68bb      	ldr	r3, [r7, #8]
 8002426:	f04f 0200 	mov.w	r2, #0
 800242a:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 800242c:	2300      	movs	r3, #0
 800242e:	e179      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->playerDown>=enemy->e1Up && player->playerUp<=enemy->e1Down){
 8002430:	68bb      	ldr	r3, [r7, #8]
 8002432:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002434:	68fb      	ldr	r3, [r7, #12]
 8002436:	6a1b      	ldr	r3, [r3, #32]
 8002438:	429a      	cmp	r2, r3
 800243a:	d323      	bcc.n	8002484 <ColisionPlayer_e1+0x21c>
 800243c:	68bb      	ldr	r3, [r7, #8]
 800243e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002444:	429a      	cmp	r2, r3
 8002446:	d81d      	bhi.n	8002484 <ColisionPlayer_e1+0x21c>
							player->x=player->x-5;
 8002448:	68bb      	ldr	r3, [r7, #8]
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	1f5a      	subs	r2, r3, #5
 800244e:	68bb      	ldr	r3, [r7, #8]
 8002450:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 8002452:	68bb      	ldr	r3, [r7, #8]
 8002454:	2201      	movs	r2, #1
 8002456:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002458:	68bb      	ldr	r3, [r7, #8]
 800245a:	f04f 0200 	mov.w	r2, #0
 800245e:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 8002460:	68bb      	ldr	r3, [r7, #8]
 8002462:	695b      	ldr	r3, [r3, #20]
 8002464:	1e5a      	subs	r2, r3, #1
 8002466:	68bb      	ldr	r3, [r7, #8]
 8002468:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 800246a:	68bb      	ldr	r3, [r7, #8]
 800246c:	695b      	ldr	r3, [r3, #20]
 800246e:	2b00      	cmp	r3, #0
 8002470:	d106      	bne.n	8002480 <ColisionPlayer_e1+0x218>
								player->isAlive=0;
 8002472:	68bb      	ldr	r3, [r7, #8]
 8002474:	2200      	movs	r2, #0
 8002476:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002478:	68bb      	ldr	r3, [r7, #8]
 800247a:	f04f 0200 	mov.w	r2, #0
 800247e:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 8002480:	2300      	movs	r3, #0
 8002482:	e14f      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->y>=enemy->e1Up && player->y<=enemy->e1Down){
 8002484:	68bb      	ldr	r3, [r7, #8]
 8002486:	685a      	ldr	r2, [r3, #4]
 8002488:	68fb      	ldr	r3, [r7, #12]
 800248a:	6a1b      	ldr	r3, [r3, #32]
 800248c:	429a      	cmp	r2, r3
 800248e:	f0c0 8143 	bcc.w	8002718 <ColisionPlayer_e1+0x4b0>
 8002492:	68bb      	ldr	r3, [r7, #8]
 8002494:	685a      	ldr	r2, [r3, #4]
 8002496:	68fb      	ldr	r3, [r7, #12]
 8002498:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800249a:	429a      	cmp	r2, r3
 800249c:	f200 813c 	bhi.w	8002718 <ColisionPlayer_e1+0x4b0>
							player->x=player->x-5;
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	1f5a      	subs	r2, r3, #5
 80024a6:	68bb      	ldr	r3, [r7, #8]
 80024a8:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 80024aa:	68bb      	ldr	r3, [r7, #8]
 80024ac:	2201      	movs	r2, #1
 80024ae:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 80024b0:	68bb      	ldr	r3, [r7, #8]
 80024b2:	f04f 0200 	mov.w	r2, #0
 80024b6:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 80024b8:	68bb      	ldr	r3, [r7, #8]
 80024ba:	695b      	ldr	r3, [r3, #20]
 80024bc:	1e5a      	subs	r2, r3, #1
 80024be:	68bb      	ldr	r3, [r7, #8]
 80024c0:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80024c2:	68bb      	ldr	r3, [r7, #8]
 80024c4:	695b      	ldr	r3, [r3, #20]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d106      	bne.n	80024d8 <ColisionPlayer_e1+0x270>
								player->isAlive=0;
 80024ca:	68bb      	ldr	r3, [r7, #8]
 80024cc:	2200      	movs	r2, #0
 80024ce:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 80024d0:	68bb      	ldr	r3, [r7, #8]
 80024d2:	f04f 0200 	mov.w	r2, #0
 80024d6:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 80024d8:	2300      	movs	r3, #0
 80024da:	e123      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
					}

					break;
				case 2: //Movimiento hacia abajo
					int y_d= y+12;
 80024dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80024de:	330c      	adds	r3, #12
 80024e0:	61bb      	str	r3, [r7, #24]
					if (y_d>=enemy->e1Up && y_d<=enemy->e1Down){
 80024e2:	68fb      	ldr	r3, [r7, #12]
 80024e4:	6a1a      	ldr	r2, [r3, #32]
 80024e6:	69bb      	ldr	r3, [r7, #24]
 80024e8:	429a      	cmp	r2, r3
 80024ea:	f200 8117 	bhi.w	800271c <ColisionPlayer_e1+0x4b4>
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80024f2:	69bb      	ldr	r3, [r7, #24]
 80024f4:	429a      	cmp	r2, r3
 80024f6:	f0c0 8111 	bcc.w	800271c <ColisionPlayer_e1+0x4b4>
						if(player->playerLeft>=enemy->e1Left && player->playerLeft<=enemy->e1Right){
 80024fa:	68bb      	ldr	r3, [r7, #8]
 80024fc:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80024fe:	68fb      	ldr	r3, [r7, #12]
 8002500:	699b      	ldr	r3, [r3, #24]
 8002502:	429a      	cmp	r2, r3
 8002504:	d323      	bcc.n	800254e <ColisionPlayer_e1+0x2e6>
 8002506:	68bb      	ldr	r3, [r7, #8]
 8002508:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	69db      	ldr	r3, [r3, #28]
 800250e:	429a      	cmp	r2, r3
 8002510:	d81d      	bhi.n	800254e <ColisionPlayer_e1+0x2e6>
							player->y=player->y-5;
 8002512:	68bb      	ldr	r3, [r7, #8]
 8002514:	685b      	ldr	r3, [r3, #4]
 8002516:	1f5a      	subs	r2, r3, #5
 8002518:	68bb      	ldr	r3, [r7, #8]
 800251a:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 800251c:	68bb      	ldr	r3, [r7, #8]
 800251e:	2201      	movs	r2, #1
 8002520:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002522:	68bb      	ldr	r3, [r7, #8]
 8002524:	f04f 0200 	mov.w	r2, #0
 8002528:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 800252a:	68bb      	ldr	r3, [r7, #8]
 800252c:	695b      	ldr	r3, [r3, #20]
 800252e:	1e5a      	subs	r2, r3, #1
 8002530:	68bb      	ldr	r3, [r7, #8]
 8002532:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 8002534:	68bb      	ldr	r3, [r7, #8]
 8002536:	695b      	ldr	r3, [r3, #20]
 8002538:	2b00      	cmp	r3, #0
 800253a:	d106      	bne.n	800254a <ColisionPlayer_e1+0x2e2>
								player->isAlive=0;
 800253c:	68bb      	ldr	r3, [r7, #8]
 800253e:	2200      	movs	r2, #0
 8002540:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002542:	68bb      	ldr	r3, [r7, #8]
 8002544:	f04f 0200 	mov.w	r2, #0
 8002548:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 800254a:	2300      	movs	r3, #0
 800254c:	e0ea      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if(player->playerRight>=enemy->e1Left && player->playerRight<=enemy->e1Right){
 800254e:	68bb      	ldr	r3, [r7, #8]
 8002550:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	699b      	ldr	r3, [r3, #24]
 8002556:	429a      	cmp	r2, r3
 8002558:	d323      	bcc.n	80025a2 <ColisionPlayer_e1+0x33a>
 800255a:	68bb      	ldr	r3, [r7, #8]
 800255c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800255e:	68fb      	ldr	r3, [r7, #12]
 8002560:	69db      	ldr	r3, [r3, #28]
 8002562:	429a      	cmp	r2, r3
 8002564:	d81d      	bhi.n	80025a2 <ColisionPlayer_e1+0x33a>
							player->y=player->y-5;
 8002566:	68bb      	ldr	r3, [r7, #8]
 8002568:	685b      	ldr	r3, [r3, #4]
 800256a:	1f5a      	subs	r2, r3, #5
 800256c:	68bb      	ldr	r3, [r7, #8]
 800256e:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 8002570:	68bb      	ldr	r3, [r7, #8]
 8002572:	2201      	movs	r2, #1
 8002574:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002576:	68bb      	ldr	r3, [r7, #8]
 8002578:	f04f 0200 	mov.w	r2, #0
 800257c:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 800257e:	68bb      	ldr	r3, [r7, #8]
 8002580:	695b      	ldr	r3, [r3, #20]
 8002582:	1e5a      	subs	r2, r3, #1
 8002584:	68bb      	ldr	r3, [r7, #8]
 8002586:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 8002588:	68bb      	ldr	r3, [r7, #8]
 800258a:	695b      	ldr	r3, [r3, #20]
 800258c:	2b00      	cmp	r3, #0
 800258e:	d106      	bne.n	800259e <ColisionPlayer_e1+0x336>
								player->isAlive=0;
 8002590:	68bb      	ldr	r3, [r7, #8]
 8002592:	2200      	movs	r2, #0
 8002594:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002596:	68bb      	ldr	r3, [r7, #8]
 8002598:	f04f 0200 	mov.w	r2, #0
 800259c:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 800259e:	2300      	movs	r3, #0
 80025a0:	e0c0      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->x>=enemy->e1Left && player->x<=enemy->e1Right){
 80025a2:	68bb      	ldr	r3, [r7, #8]
 80025a4:	681a      	ldr	r2, [r3, #0]
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	699b      	ldr	r3, [r3, #24]
 80025aa:	429a      	cmp	r2, r3
 80025ac:	f0c0 80b6 	bcc.w	800271c <ColisionPlayer_e1+0x4b4>
 80025b0:	68bb      	ldr	r3, [r7, #8]
 80025b2:	681a      	ldr	r2, [r3, #0]
 80025b4:	68fb      	ldr	r3, [r7, #12]
 80025b6:	69db      	ldr	r3, [r3, #28]
 80025b8:	429a      	cmp	r2, r3
 80025ba:	f200 80af 	bhi.w	800271c <ColisionPlayer_e1+0x4b4>
							player->y=player->y-5;
 80025be:	68bb      	ldr	r3, [r7, #8]
 80025c0:	685b      	ldr	r3, [r3, #4]
 80025c2:	1f5a      	subs	r2, r3, #5
 80025c4:	68bb      	ldr	r3, [r7, #8]
 80025c6:	605a      	str	r2, [r3, #4]
							player->IsDamage=1;
 80025c8:	68bb      	ldr	r3, [r7, #8]
 80025ca:	2201      	movs	r2, #1
 80025cc:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 80025ce:	68bb      	ldr	r3, [r7, #8]
 80025d0:	f04f 0200 	mov.w	r2, #0
 80025d4:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 80025d6:	68bb      	ldr	r3, [r7, #8]
 80025d8:	695b      	ldr	r3, [r3, #20]
 80025da:	1e5a      	subs	r2, r3, #1
 80025dc:	68bb      	ldr	r3, [r7, #8]
 80025de:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80025e0:	68bb      	ldr	r3, [r7, #8]
 80025e2:	695b      	ldr	r3, [r3, #20]
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	d106      	bne.n	80025f6 <ColisionPlayer_e1+0x38e>
								player->isAlive=0;
 80025e8:	68bb      	ldr	r3, [r7, #8]
 80025ea:	2200      	movs	r2, #0
 80025ec:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 80025ee:	68bb      	ldr	r3, [r7, #8]
 80025f0:	f04f 0200 	mov.w	r2, #0
 80025f4:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 80025f6:	2300      	movs	r3, #0
 80025f8:	e094      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
					 }
					break;
				case 3: //Movimiento hacia izquierda
					int x_l=x-12;
 80025fa:	683b      	ldr	r3, [r7, #0]
 80025fc:	3b0c      	subs	r3, #12
 80025fe:	61fb      	str	r3, [r7, #28]
					if (x_l<=enemy->e1Right && x_l>=enemy->e1Left){
 8002600:	68fb      	ldr	r3, [r7, #12]
 8002602:	69da      	ldr	r2, [r3, #28]
 8002604:	69fb      	ldr	r3, [r7, #28]
 8002606:	429a      	cmp	r2, r3
 8002608:	f0c0 808a 	bcc.w	8002720 <ColisionPlayer_e1+0x4b8>
 800260c:	68fb      	ldr	r3, [r7, #12]
 800260e:	699a      	ldr	r2, [r3, #24]
 8002610:	69fb      	ldr	r3, [r7, #28]
 8002612:	429a      	cmp	r2, r3
 8002614:	f200 8084 	bhi.w	8002720 <ColisionPlayer_e1+0x4b8>
						if (player->playerUp>=enemy->e1Up && player->playerUp<=enemy->e1Down){
 8002618:	68bb      	ldr	r3, [r7, #8]
 800261a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800261c:	68fb      	ldr	r3, [r7, #12]
 800261e:	6a1b      	ldr	r3, [r3, #32]
 8002620:	429a      	cmp	r2, r3
 8002622:	d323      	bcc.n	800266c <ColisionPlayer_e1+0x404>
 8002624:	68bb      	ldr	r3, [r7, #8]
 8002626:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002628:	68fb      	ldr	r3, [r7, #12]
 800262a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800262c:	429a      	cmp	r2, r3
 800262e:	d81d      	bhi.n	800266c <ColisionPlayer_e1+0x404>
							player->x=player->x+5;
 8002630:	68bb      	ldr	r3, [r7, #8]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	1d5a      	adds	r2, r3, #5
 8002636:	68bb      	ldr	r3, [r7, #8]
 8002638:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 800263a:	68bb      	ldr	r3, [r7, #8]
 800263c:	2201      	movs	r2, #1
 800263e:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002640:	68bb      	ldr	r3, [r7, #8]
 8002642:	f04f 0200 	mov.w	r2, #0
 8002646:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 8002648:	68bb      	ldr	r3, [r7, #8]
 800264a:	695b      	ldr	r3, [r3, #20]
 800264c:	1e5a      	subs	r2, r3, #1
 800264e:	68bb      	ldr	r3, [r7, #8]
 8002650:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 8002652:	68bb      	ldr	r3, [r7, #8]
 8002654:	695b      	ldr	r3, [r3, #20]
 8002656:	2b00      	cmp	r3, #0
 8002658:	d106      	bne.n	8002668 <ColisionPlayer_e1+0x400>
								player->isAlive=0;
 800265a:	68bb      	ldr	r3, [r7, #8]
 800265c:	2200      	movs	r2, #0
 800265e:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002660:	68bb      	ldr	r3, [r7, #8]
 8002662:	f04f 0200 	mov.w	r2, #0
 8002666:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 8002668:	2300      	movs	r3, #0
 800266a:	e05b      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->playerDown>=enemy->e1Up && player->playerUp<=enemy->e1Down){
 800266c:	68bb      	ldr	r3, [r7, #8]
 800266e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002670:	68fb      	ldr	r3, [r7, #12]
 8002672:	6a1b      	ldr	r3, [r3, #32]
 8002674:	429a      	cmp	r2, r3
 8002676:	d323      	bcc.n	80026c0 <ColisionPlayer_e1+0x458>
 8002678:	68bb      	ldr	r3, [r7, #8]
 800267a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002680:	429a      	cmp	r2, r3
 8002682:	d81d      	bhi.n	80026c0 <ColisionPlayer_e1+0x458>
							player->x=player->x+5;
 8002684:	68bb      	ldr	r3, [r7, #8]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	1d5a      	adds	r2, r3, #5
 800268a:	68bb      	ldr	r3, [r7, #8]
 800268c:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 800268e:	68bb      	ldr	r3, [r7, #8]
 8002690:	2201      	movs	r2, #1
 8002692:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 8002694:	68bb      	ldr	r3, [r7, #8]
 8002696:	f04f 0200 	mov.w	r2, #0
 800269a:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 800269c:	68bb      	ldr	r3, [r7, #8]
 800269e:	695b      	ldr	r3, [r3, #20]
 80026a0:	1e5a      	subs	r2, r3, #1
 80026a2:	68bb      	ldr	r3, [r7, #8]
 80026a4:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80026a6:	68bb      	ldr	r3, [r7, #8]
 80026a8:	695b      	ldr	r3, [r3, #20]
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d106      	bne.n	80026bc <ColisionPlayer_e1+0x454>
								player->isAlive=0;
 80026ae:	68bb      	ldr	r3, [r7, #8]
 80026b0:	2200      	movs	r2, #0
 80026b2:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 80026b4:	68bb      	ldr	r3, [r7, #8]
 80026b6:	f04f 0200 	mov.w	r2, #0
 80026ba:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 80026bc:	2300      	movs	r3, #0
 80026be:	e031      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
						}
						if (player->y>=enemy->e1Up && player->y<=enemy->e1Down){
 80026c0:	68bb      	ldr	r3, [r7, #8]
 80026c2:	685a      	ldr	r2, [r3, #4]
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	6a1b      	ldr	r3, [r3, #32]
 80026c8:	429a      	cmp	r2, r3
 80026ca:	d329      	bcc.n	8002720 <ColisionPlayer_e1+0x4b8>
 80026cc:	68bb      	ldr	r3, [r7, #8]
 80026ce:	685a      	ldr	r2, [r3, #4]
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026d4:	429a      	cmp	r2, r3
 80026d6:	d823      	bhi.n	8002720 <ColisionPlayer_e1+0x4b8>
							player->x=player->x+5;
 80026d8:	68bb      	ldr	r3, [r7, #8]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	1d5a      	adds	r2, r3, #5
 80026de:	68bb      	ldr	r3, [r7, #8]
 80026e0:	601a      	str	r2, [r3, #0]
							player->IsDamage=1;
 80026e2:	68bb      	ldr	r3, [r7, #8]
 80026e4:	2201      	movs	r2, #1
 80026e6:	65da      	str	r2, [r3, #92]	@ 0x5c
							player->animationDamage=0;
 80026e8:	68bb      	ldr	r3, [r7, #8]
 80026ea:	f04f 0200 	mov.w	r2, #0
 80026ee:	661a      	str	r2, [r3, #96]	@ 0x60
							player->life-=1;
 80026f0:	68bb      	ldr	r3, [r7, #8]
 80026f2:	695b      	ldr	r3, [r3, #20]
 80026f4:	1e5a      	subs	r2, r3, #1
 80026f6:	68bb      	ldr	r3, [r7, #8]
 80026f8:	615a      	str	r2, [r3, #20]
							if (player->life==0){
 80026fa:	68bb      	ldr	r3, [r7, #8]
 80026fc:	695b      	ldr	r3, [r3, #20]
 80026fe:	2b00      	cmp	r3, #0
 8002700:	d106      	bne.n	8002710 <ColisionPlayer_e1+0x4a8>
								player->isAlive=0;
 8002702:	68bb      	ldr	r3, [r7, #8]
 8002704:	2200      	movs	r2, #0
 8002706:	61da      	str	r2, [r3, #28]
								player->animationDie=0;
 8002708:	68bb      	ldr	r3, [r7, #8]
 800270a:	f04f 0200 	mov.w	r2, #0
 800270e:	669a      	str	r2, [r3, #104]	@ 0x68
							}
							return 0;
 8002710:	2300      	movs	r3, #0
 8002712:	e007      	b.n	8002724 <ColisionPlayer_e1+0x4bc>
					break;
 8002714:	bf00      	nop
 8002716:	e004      	b.n	8002722 <ColisionPlayer_e1+0x4ba>
					break;
 8002718:	bf00      	nop
 800271a:	e002      	b.n	8002722 <ColisionPlayer_e1+0x4ba>
					break;
 800271c:	bf00      	nop
 800271e:	e000      	b.n	8002722 <ColisionPlayer_e1+0x4ba>
						}
					}
					break;
 8002720:	bf00      	nop
			return 1;
			}
	}
	return 1;
 8002722:	2301      	movs	r3, #1
}
 8002724:	4618      	mov	r0, r3
 8002726:	3724      	adds	r7, #36	@ 0x24
 8002728:	46bd      	mov	sp, r7
 800272a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800272e:	4770      	bx	lr

08002730 <Hitbox_e2>:

/* Funciones Enemigo tipo 2 -------------------------------------------*/

void Hitbox_e2(enemy_type2* enemy){
 8002730:	b590      	push	{r4, r7, lr}
 8002732:	b089      	sub	sp, #36	@ 0x24
 8002734:	af06      	add	r7, sp, #24
 8002736:	6078      	str	r0, [r7, #4]
    //HITBOX DEBUG
	enemy->e1Left = enemy->x - (enemy->width / 2);
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	681a      	ldr	r2, [r3, #0]
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	689b      	ldr	r3, [r3, #8]
 8002740:	085b      	lsrs	r3, r3, #1
 8002742:	1ad2      	subs	r2, r2, r3
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	619a      	str	r2, [r3, #24]
	enemy->e1Right = (enemy->x + enemy->width / 2);
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681a      	ldr	r2, [r3, #0]
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	689b      	ldr	r3, [r3, #8]
 8002750:	085b      	lsrs	r3, r3, #1
 8002752:	441a      	add	r2, r3
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	61da      	str	r2, [r3, #28]
	enemy->e1Up = enemy->y - (enemy->height / 2);
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	685a      	ldr	r2, [r3, #4]
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	68db      	ldr	r3, [r3, #12]
 8002760:	085b      	lsrs	r3, r3, #1
 8002762:	1ad2      	subs	r2, r2, r3
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	621a      	str	r2, [r3, #32]
	enemy->e1Down= (enemy->y + enemy->height / 2);
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	685a      	ldr	r2, [r3, #4]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	68db      	ldr	r3, [r3, #12]
 8002770:	085b      	lsrs	r3, r3, #1
 8002772:	441a      	add	r2, r3
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	625a      	str	r2, [r3, #36]	@ 0x24

    // Dibujar el enemigo en pantalla
    LCD_Sprite(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20, E2_Ide16x20_5, 5, 4, 0, 0);
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	3b08      	subs	r3, #8
 800277e:	4618      	mov	r0, r3
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	3b0a      	subs	r3, #10
 8002786:	4619      	mov	r1, r3
 8002788:	2300      	movs	r3, #0
 800278a:	9304      	str	r3, [sp, #16]
 800278c:	2300      	movs	r3, #0
 800278e:	9303      	str	r3, [sp, #12]
 8002790:	2304      	movs	r3, #4
 8002792:	9302      	str	r3, [sp, #8]
 8002794:	2305      	movs	r3, #5
 8002796:	9301      	str	r3, [sp, #4]
 8002798:	4b4a      	ldr	r3, [pc, #296]	@ (80028c4 <Hitbox_e2+0x194>)
 800279a:	9300      	str	r3, [sp, #0]
 800279c:	2314      	movs	r3, #20
 800279e:	2210      	movs	r2, #16
 80027a0:	f7ff f9ba 	bl	8001b18 <LCD_Sprite>

    if (DrawHitbox==1){
 80027a4:	4b48      	ldr	r3, [pc, #288]	@ (80028c8 <Hitbox_e2+0x198>)
 80027a6:	781b      	ldrb	r3, [r3, #0]
 80027a8:	2b01      	cmp	r3, #1
 80027aa:	d113      	bne.n	80027d4 <Hitbox_e2+0xa4>
    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681a      	ldr	r2, [r3, #0]
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	689b      	ldr	r3, [r3, #8]
 80027b4:	085b      	lsrs	r3, r3, #1
 80027b6:	1ad0      	subs	r0, r2, r3
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	685a      	ldr	r2, [r3, #4]
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	68db      	ldr	r3, [r3, #12]
 80027c0:	085b      	lsrs	r3, r3, #1
 80027c2:	1ad1      	subs	r1, r2, r3
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	689a      	ldr	r2, [r3, #8]
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	68db      	ldr	r3, [r3, #12]
 80027cc:	2400      	movs	r4, #0
 80027ce:	9400      	str	r4, [sp, #0]
 80027d0:	f7ff f8ca 	bl	8001968 <Rect>
    }
    if (DrawHitbox==2){
 80027d4:	4b3c      	ldr	r3, [pc, #240]	@ (80028c8 <Hitbox_e2+0x198>)
 80027d6:	781b      	ldrb	r3, [r3, #0]
 80027d8:	2b02      	cmp	r3, #2
 80027da:	d12b      	bne.n	8002834 <Hitbox_e2+0x104>
    	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	6998      	ldr	r0, [r3, #24]
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	6859      	ldr	r1, [r3, #4]
 80027e4:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80027e8:	9300      	str	r3, [sp, #0]
 80027ea:	2301      	movs	r3, #1
 80027ec:	2201      	movs	r2, #1
 80027ee:	f7ff f8e3 	bl	80019b8 <FillRect>
    	FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	69d8      	ldr	r0, [r3, #28]
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	6859      	ldr	r1, [r3, #4]
 80027fa:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80027fe:	9300      	str	r3, [sp, #0]
 8002800:	2301      	movs	r3, #1
 8002802:	2201      	movs	r2, #1
 8002804:	f7ff f8d8 	bl	80019b8 <FillRect>
    	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6818      	ldr	r0, [r3, #0]
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	6a19      	ldr	r1, [r3, #32]
 8002810:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002814:	9300      	str	r3, [sp, #0]
 8002816:	2301      	movs	r3, #1
 8002818:	2201      	movs	r2, #1
 800281a:	f7ff f8cd 	bl	80019b8 <FillRect>
    	FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	6818      	ldr	r0, [r3, #0]
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8002826:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800282a:	9300      	str	r3, [sp, #0]
 800282c:	2301      	movs	r3, #1
 800282e:	2201      	movs	r2, #1
 8002830:	f7ff f8c2 	bl	80019b8 <FillRect>
    }
    if (DrawHitbox==3){
 8002834:	4b24      	ldr	r3, [pc, #144]	@ (80028c8 <Hitbox_e2+0x198>)
 8002836:	781b      	ldrb	r3, [r3, #0]
 8002838:	2b03      	cmp	r3, #3
 800283a:	d13f      	bne.n	80028bc <Hitbox_e2+0x18c>
    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681a      	ldr	r2, [r3, #0]
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	689b      	ldr	r3, [r3, #8]
 8002844:	085b      	lsrs	r3, r3, #1
 8002846:	1ad0      	subs	r0, r2, r3
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	685a      	ldr	r2, [r3, #4]
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	68db      	ldr	r3, [r3, #12]
 8002850:	085b      	lsrs	r3, r3, #1
 8002852:	1ad1      	subs	r1, r2, r3
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	689a      	ldr	r2, [r3, #8]
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	68db      	ldr	r3, [r3, #12]
 800285c:	2400      	movs	r4, #0
 800285e:	9400      	str	r4, [sp, #0]
 8002860:	f7ff f882 	bl	8001968 <Rect>
		FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	6998      	ldr	r0, [r3, #24]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	6859      	ldr	r1, [r3, #4]
 800286c:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002870:	9300      	str	r3, [sp, #0]
 8002872:	2301      	movs	r3, #1
 8002874:	2201      	movs	r2, #1
 8002876:	f7ff f89f 	bl	80019b8 <FillRect>
		FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	69d8      	ldr	r0, [r3, #28]
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	6859      	ldr	r1, [r3, #4]
 8002882:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8002886:	9300      	str	r3, [sp, #0]
 8002888:	2301      	movs	r3, #1
 800288a:	2201      	movs	r2, #1
 800288c:	f7ff f894 	bl	80019b8 <FillRect>
		FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	6818      	ldr	r0, [r3, #0]
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	6a19      	ldr	r1, [r3, #32]
 8002898:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800289c:	9300      	str	r3, [sp, #0]
 800289e:	2301      	movs	r3, #1
 80028a0:	2201      	movs	r2, #1
 80028a2:	f7ff f889 	bl	80019b8 <FillRect>
		FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	6818      	ldr	r0, [r3, #0]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80028ae:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80028b2:	9300      	str	r3, [sp, #0]
 80028b4:	2301      	movs	r3, #1
 80028b6:	2201      	movs	r2, #1
 80028b8:	f7ff f87e 	bl	80019b8 <FillRect>
        }
}
 80028bc:	bf00      	nop
 80028be:	370c      	adds	r7, #12
 80028c0:	46bd      	mov	sp, r7
 80028c2:	bd90      	pop	{r4, r7, pc}
 80028c4:	200016e4 	.word	0x200016e4
 80028c8:	2001cadf 	.word	0x2001cadf

080028cc <initEnemy2>:

void initEnemy2(enemy_type2* enemy, unsigned int startX, unsigned int startY, unsigned int width, unsigned int height, int health) {
 80028cc:	b480      	push	{r7}
 80028ce:	b085      	sub	sp, #20
 80028d0:	af00      	add	r7, sp, #0
 80028d2:	60f8      	str	r0, [r7, #12]
 80028d4:	60b9      	str	r1, [r7, #8]
 80028d6:	607a      	str	r2, [r7, #4]
 80028d8:	603b      	str	r3, [r7, #0]
    // Inicializar las coordenadas y dimensiones
    enemy->x = startX;
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	68ba      	ldr	r2, [r7, #8]
 80028de:	601a      	str	r2, [r3, #0]
    enemy->y = startY;
 80028e0:	68fb      	ldr	r3, [r7, #12]
 80028e2:	687a      	ldr	r2, [r7, #4]
 80028e4:	605a      	str	r2, [r3, #4]
    enemy->width = width;
 80028e6:	68fb      	ldr	r3, [r7, #12]
 80028e8:	683a      	ldr	r2, [r7, #0]
 80028ea:	609a      	str	r2, [r3, #8]
    enemy->height = height;
 80028ec:	68fb      	ldr	r3, [r7, #12]
 80028ee:	69ba      	ldr	r2, [r7, #24]
 80028f0:	60da      	str	r2, [r3, #12]

    // Inicializar la vida y el estado
    enemy->health = health;
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	69fa      	ldr	r2, [r7, #28]
 80028f6:	611a      	str	r2, [r3, #16]
    enemy->isAlive = 1;  // El enemigo comienza vivo
 80028f8:	68fb      	ldr	r3, [r7, #12]
 80028fa:	2201      	movs	r2, #1
 80028fc:	615a      	str	r2, [r3, #20]
    enemy->move=0;
 80028fe:	68fb      	ldr	r3, [r7, #12]
 8002900:	2200      	movs	r2, #0
 8002902:	63da      	str	r2, [r3, #60]	@ 0x3c

    //Animación
    enemy->animationV = 0;
 8002904:	68fb      	ldr	r3, [r7, #12]
 8002906:	f04f 0200 	mov.w	r2, #0
 800290a:	629a      	str	r2, [r3, #40]	@ 0x28
    enemy->animationDV = 3;
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	4a0a      	ldr	r2, [pc, #40]	@ (8002938 <initEnemy2+0x6c>)
 8002910:	631a      	str	r2, [r3, #48]	@ 0x30
    enemy->animationDie=6;
 8002912:	68fb      	ldr	r3, [r7, #12]
 8002914:	4a09      	ldr	r2, [pc, #36]	@ (800293c <initEnemy2+0x70>)
 8002916:	635a      	str	r2, [r3, #52]	@ 0x34

    //Movimiento
    enemy->IsMove=0;
 8002918:	68fb      	ldr	r3, [r7, #12]
 800291a:	2200      	movs	r2, #0
 800291c:	639a      	str	r2, [r3, #56]	@ 0x38
    enemy->move=0;
 800291e:	68fb      	ldr	r3, [r7, #12]
 8002920:	2200      	movs	r2, #0
 8002922:	63da      	str	r2, [r3, #60]	@ 0x3c
    enemy->delay=0;
 8002924:	68fb      	ldr	r3, [r7, #12]
 8002926:	f04f 0200 	mov.w	r2, #0
 800292a:	641a      	str	r2, [r3, #64]	@ 0x40


}
 800292c:	bf00      	nop
 800292e:	3714      	adds	r7, #20
 8002930:	46bd      	mov	sp, r7
 8002932:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002936:	4770      	bx	lr
 8002938:	40400000 	.word	0x40400000
 800293c:	40c00000 	.word	0x40c00000

08002940 <moveE2>:

void moveE2(enemy_type2* enemy, player* player){
 8002940:	b580      	push	{r7, lr}
 8002942:	b08a      	sub	sp, #40	@ 0x28
 8002944:	af02      	add	r7, sp, #8
 8002946:	6078      	str	r0, [r7, #4]
 8002948:	6039      	str	r1, [r7, #0]
	if (enemy->isHurt==0){
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800294e:	2b00      	cmp	r3, #0
 8002950:	f040 8105 	bne.w	8002b5e <moveE2+0x21e>
		int delay_s=enemy->delay;
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 800295a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800295e:	ee17 3a90 	vmov	r3, s15
 8002962:	61fb      	str	r3, [r7, #28]
		if (delay_s==100000){ //
 8002964:	69fb      	ldr	r3, [r7, #28]
 8002966:	4a80      	ldr	r2, [pc, #512]	@ (8002b68 <moveE2+0x228>)
 8002968:	4293      	cmp	r3, r2
 800296a:	f040 80ef 	bne.w	8002b4c <moveE2+0x20c>
			switch(enemy->move){
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002972:	2b03      	cmp	r3, #3
 8002974:	f200 80f3 	bhi.w	8002b5e <moveE2+0x21e>
 8002978:	a201      	add	r2, pc, #4	@ (adr r2, 8002980 <moveE2+0x40>)
 800297a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800297e:	bf00      	nop
 8002980:	08002991 	.word	0x08002991
 8002984:	08002a01 	.word	0x08002a01
 8002988:	08002a71 	.word	0x08002a71
 800298c:	08002ae1 	.word	0x08002ae1
			case 0: //Derecha
				int futureX_D=player->x+50;
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	3332      	adds	r3, #50	@ 0x32
 8002996:	60fb      	str	r3, [r7, #12]
				if (futureX_D>player->limitWidth-20){
 8002998:	683b      	ldr	r3, [r7, #0]
 800299a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800299c:	f1a3 0214 	sub.w	r2, r3, #20
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	429a      	cmp	r2, r3
 80029a4:	d209      	bcs.n	80029ba <moveE2+0x7a>
					enemy->move+=1;
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80029aa:	1c5a      	adds	r2, r3, #1
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	63da      	str	r2, [r3, #60]	@ 0x3c
					moveE2(enemy,player);
 80029b0:	6839      	ldr	r1, [r7, #0]
 80029b2:	6878      	ldr	r0, [r7, #4]
 80029b4:	f7ff ffc4 	bl	8002940 <moveE2>
					enemy->y=player->y;
					enemy->animationV=0;
					enemy->move+=1;
					Hitbox_e2(enemy);
				}
				break;
 80029b8:	e0d1      	b.n	8002b5e <moveE2+0x21e>
					FillRect(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20,0xFE8B);
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	f1a3 0008 	sub.w	r0, r3, #8
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	685b      	ldr	r3, [r3, #4]
 80029c6:	f1a3 010a 	sub.w	r1, r3, #10
 80029ca:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 80029ce:	9300      	str	r3, [sp, #0]
 80029d0:	2314      	movs	r3, #20
 80029d2:	2210      	movs	r2, #16
 80029d4:	f7fe fff0 	bl	80019b8 <FillRect>
					enemy->x=futureX_D;
 80029d8:	68fa      	ldr	r2, [r7, #12]
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	601a      	str	r2, [r3, #0]
					enemy->y=player->y;
 80029de:	683b      	ldr	r3, [r7, #0]
 80029e0:	685a      	ldr	r2, [r3, #4]
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	605a      	str	r2, [r3, #4]
					enemy->animationV=0;
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	f04f 0200 	mov.w	r2, #0
 80029ec:	629a      	str	r2, [r3, #40]	@ 0x28
					enemy->move+=1;
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80029f2:	1c5a      	adds	r2, r3, #1
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	63da      	str	r2, [r3, #60]	@ 0x3c
					Hitbox_e2(enemy);
 80029f8:	6878      	ldr	r0, [r7, #4]
 80029fa:	f7ff fe99 	bl	8002730 <Hitbox_e2>
				break;
 80029fe:	e0ae      	b.n	8002b5e <moveE2+0x21e>
			case 1: //Abajo
				int futureY_A=player->y+50;
 8002a00:	683b      	ldr	r3, [r7, #0]
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	3332      	adds	r3, #50	@ 0x32
 8002a06:	613b      	str	r3, [r7, #16]
				if (futureY_A>player->limitHeight-20){
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002a0c:	f1a3 0214 	sub.w	r2, r3, #20
 8002a10:	693b      	ldr	r3, [r7, #16]
 8002a12:	429a      	cmp	r2, r3
 8002a14:	d209      	bcs.n	8002a2a <moveE2+0xea>
					enemy->move+=1;
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002a1a:	1c5a      	adds	r2, r3, #1
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	63da      	str	r2, [r3, #60]	@ 0x3c
					moveE2(enemy,player);
 8002a20:	6839      	ldr	r1, [r7, #0]
 8002a22:	6878      	ldr	r0, [r7, #4]
 8002a24:	f7ff ff8c 	bl	8002940 <moveE2>
					enemy->x=player->x;
					enemy->animationV=0;
					enemy->move+=1;
					Hitbox_e2(enemy);
				}
				break;
 8002a28:	e099      	b.n	8002b5e <moveE2+0x21e>
					FillRect(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20,0xFE8B);
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	f1a3 0008 	sub.w	r0, r3, #8
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	685b      	ldr	r3, [r3, #4]
 8002a36:	f1a3 010a 	sub.w	r1, r3, #10
 8002a3a:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8002a3e:	9300      	str	r3, [sp, #0]
 8002a40:	2314      	movs	r3, #20
 8002a42:	2210      	movs	r2, #16
 8002a44:	f7fe ffb8 	bl	80019b8 <FillRect>
					enemy->y=futureY_A;
 8002a48:	693a      	ldr	r2, [r7, #16]
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	605a      	str	r2, [r3, #4]
					enemy->x=player->x;
 8002a4e:	683b      	ldr	r3, [r7, #0]
 8002a50:	681a      	ldr	r2, [r3, #0]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	601a      	str	r2, [r3, #0]
					enemy->animationV=0;
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	f04f 0200 	mov.w	r2, #0
 8002a5c:	629a      	str	r2, [r3, #40]	@ 0x28
					enemy->move+=1;
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002a62:	1c5a      	adds	r2, r3, #1
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	63da      	str	r2, [r3, #60]	@ 0x3c
					Hitbox_e2(enemy);
 8002a68:	6878      	ldr	r0, [r7, #4]
 8002a6a:	f7ff fe61 	bl	8002730 <Hitbox_e2>
				break;
 8002a6e:	e076      	b.n	8002b5e <moveE2+0x21e>
			case 2: //Izquierda
				int futureX_I=player->x-50;
 8002a70:	683b      	ldr	r3, [r7, #0]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	3b32      	subs	r3, #50	@ 0x32
 8002a76:	617b      	str	r3, [r7, #20]
				if (futureX_I<player->limitWidth_i+20){
 8002a78:	683b      	ldr	r3, [r7, #0]
 8002a7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002a7c:	f103 0214 	add.w	r2, r3, #20
 8002a80:	697b      	ldr	r3, [r7, #20]
 8002a82:	429a      	cmp	r2, r3
 8002a84:	d909      	bls.n	8002a9a <moveE2+0x15a>
						enemy->move+=1;
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002a8a:	1c5a      	adds	r2, r3, #1
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	63da      	str	r2, [r3, #60]	@ 0x3c
						moveE2(enemy,player);
 8002a90:	6839      	ldr	r1, [r7, #0]
 8002a92:	6878      	ldr	r0, [r7, #4]
 8002a94:	f7ff ff54 	bl	8002940 <moveE2>
					enemy->y=player->y;
					enemy->animationV=0;
					enemy->move+=1;
					Hitbox_e2(enemy);
				}
				break;
 8002a98:	e061      	b.n	8002b5e <moveE2+0x21e>
					FillRect(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20,0xFE8B);
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	f1a3 0008 	sub.w	r0, r3, #8
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	685b      	ldr	r3, [r3, #4]
 8002aa6:	f1a3 010a 	sub.w	r1, r3, #10
 8002aaa:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8002aae:	9300      	str	r3, [sp, #0]
 8002ab0:	2314      	movs	r3, #20
 8002ab2:	2210      	movs	r2, #16
 8002ab4:	f7fe ff80 	bl	80019b8 <FillRect>
					enemy->x=futureX_I;
 8002ab8:	697a      	ldr	r2, [r7, #20]
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	601a      	str	r2, [r3, #0]
					enemy->y=player->y;
 8002abe:	683b      	ldr	r3, [r7, #0]
 8002ac0:	685a      	ldr	r2, [r3, #4]
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	605a      	str	r2, [r3, #4]
					enemy->animationV=0;
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	f04f 0200 	mov.w	r2, #0
 8002acc:	629a      	str	r2, [r3, #40]	@ 0x28
					enemy->move+=1;
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002ad2:	1c5a      	adds	r2, r3, #1
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	63da      	str	r2, [r3, #60]	@ 0x3c
					Hitbox_e2(enemy);
 8002ad8:	6878      	ldr	r0, [r7, #4]
 8002ada:	f7ff fe29 	bl	8002730 <Hitbox_e2>
				break;
 8002ade:	e03e      	b.n	8002b5e <moveE2+0x21e>
			case 3: //Arriba
				int futureY_U=player->y-50;
 8002ae0:	683b      	ldr	r3, [r7, #0]
 8002ae2:	685b      	ldr	r3, [r3, #4]
 8002ae4:	3b32      	subs	r3, #50	@ 0x32
 8002ae6:	61bb      	str	r3, [r7, #24]
				if (futureY_U>player->limitHeight+20){
 8002ae8:	683b      	ldr	r3, [r7, #0]
 8002aea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002aec:	f103 0214 	add.w	r2, r3, #20
 8002af0:	69bb      	ldr	r3, [r7, #24]
 8002af2:	429a      	cmp	r2, r3
 8002af4:	d209      	bcs.n	8002b0a <moveE2+0x1ca>
					enemy->move+=1;
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002afa:	1c5a      	adds	r2, r3, #1
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	63da      	str	r2, [r3, #60]	@ 0x3c
					moveE2(enemy,player);
 8002b00:	6839      	ldr	r1, [r7, #0]
 8002b02:	6878      	ldr	r0, [r7, #4]
 8002b04:	f7ff ff1c 	bl	8002940 <moveE2>
					enemy->x=player->x;
					enemy->animationV=0;
					enemy->move=0;
					Hitbox_e2(enemy);
				}
				break;
 8002b08:	e029      	b.n	8002b5e <moveE2+0x21e>
					FillRect(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20,0xFE8B);
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	f1a3 0008 	sub.w	r0, r3, #8
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	685b      	ldr	r3, [r3, #4]
 8002b16:	f1a3 010a 	sub.w	r1, r3, #10
 8002b1a:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8002b1e:	9300      	str	r3, [sp, #0]
 8002b20:	2314      	movs	r3, #20
 8002b22:	2210      	movs	r2, #16
 8002b24:	f7fe ff48 	bl	80019b8 <FillRect>
					enemy->y=futureY_U;
 8002b28:	69ba      	ldr	r2, [r7, #24]
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	605a      	str	r2, [r3, #4]
					enemy->x=player->x;
 8002b2e:	683b      	ldr	r3, [r7, #0]
 8002b30:	681a      	ldr	r2, [r3, #0]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	601a      	str	r2, [r3, #0]
					enemy->animationV=0;
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	f04f 0200 	mov.w	r2, #0
 8002b3c:	629a      	str	r2, [r3, #40]	@ 0x28
					enemy->move=0;
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	2200      	movs	r2, #0
 8002b42:	63da      	str	r2, [r3, #60]	@ 0x3c
					Hitbox_e2(enemy);
 8002b44:	6878      	ldr	r0, [r7, #4]
 8002b46:	f7ff fdf3 	bl	8002730 <Hitbox_e2>
				break;
 8002b4a:	e008      	b.n	8002b5e <moveE2+0x21e>
			}
		}else{
			if (delay_s==200000){ //
 8002b4c:	69fb      	ldr	r3, [r7, #28]
 8002b4e:	4a07      	ldr	r2, [pc, #28]	@ (8002b6c <moveE2+0x22c>)
 8002b50:	4293      	cmp	r3, r2
 8002b52:	d104      	bne.n	8002b5e <moveE2+0x21e>
				enemy->delay=0;
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	f04f 0200 	mov.w	r2, #0
 8002b5a:	641a      	str	r2, [r3, #64]	@ 0x40
			}
		}
	}
}
 8002b5c:	e7ff      	b.n	8002b5e <moveE2+0x21e>
 8002b5e:	bf00      	nop
 8002b60:	3720      	adds	r7, #32
 8002b62:	46bd      	mov	sp, r7
 8002b64:	bd80      	pop	{r7, pc}
 8002b66:	bf00      	nop
 8002b68:	000186a0 	.word	0x000186a0
 8002b6c:	00030d40 	.word	0x00030d40

08002b70 <E2_Appear>:
			}
		}
	}
}

void E2_Appear(enemy_type2* enemy){
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b08a      	sub	sp, #40	@ 0x28
 8002b74:	af06      	add	r7, sp, #24
 8002b76:	6078      	str	r0, [r7, #4]
	int variableAnimationAppear=enemy->animationV;
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8002b7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002b82:	ee17 3a90 	vmov	r3, s15
 8002b86:	60fb      	str	r3, [r7, #12]
	if (enemy->isAlive==1){
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	695b      	ldr	r3, [r3, #20]
 8002b8c:	2b01      	cmp	r3, #1
 8002b8e:	d12b      	bne.n	8002be8 <E2_Appear+0x78>
		if (variableAnimationAppear<5){
 8002b90:	68fb      	ldr	r3, [r7, #12]
 8002b92:	2b04      	cmp	r3, #4
 8002b94:	dc28      	bgt.n	8002be8 <E2_Appear+0x78>
			LCD_Sprite(enemy->x - (16 / 2), enemy->y - (20/ 2), 16, 20, E2_Ide16x20_5, 5, variableAnimationAppear, 0, 0);
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	3b08      	subs	r3, #8
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	685b      	ldr	r3, [r3, #4]
 8002ba2:	3b0a      	subs	r3, #10
 8002ba4:	4619      	mov	r1, r3
 8002ba6:	2300      	movs	r3, #0
 8002ba8:	9304      	str	r3, [sp, #16]
 8002baa:	2300      	movs	r3, #0
 8002bac:	9303      	str	r3, [sp, #12]
 8002bae:	68fb      	ldr	r3, [r7, #12]
 8002bb0:	9302      	str	r3, [sp, #8]
 8002bb2:	2305      	movs	r3, #5
 8002bb4:	9301      	str	r3, [sp, #4]
 8002bb6:	4b10      	ldr	r3, [pc, #64]	@ (8002bf8 <E2_Appear+0x88>)
 8002bb8:	9300      	str	r3, [sp, #0]
 8002bba:	2314      	movs	r3, #20
 8002bbc:	2210      	movs	r2, #16
 8002bbe:	f7fe ffab 	bl	8001b18 <LCD_Sprite>
			enemy->animationV+=0.05;
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	f7fd fcde 	bl	8000588 <__aeabi_f2d>
 8002bcc:	a308      	add	r3, pc, #32	@ (adr r3, 8002bf0 <E2_Appear+0x80>)
 8002bce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bd2:	f7fd fb7b 	bl	80002cc <__adddf3>
 8002bd6:	4602      	mov	r2, r0
 8002bd8:	460b      	mov	r3, r1
 8002bda:	4610      	mov	r0, r2
 8002bdc:	4619      	mov	r1, r3
 8002bde:	f7fd fd2b 	bl	8000638 <__aeabi_d2f>
 8002be2:	4602      	mov	r2, r0
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	629a      	str	r2, [r3, #40]	@ 0x28
			}
		}
}
 8002be8:	bf00      	nop
 8002bea:	3710      	adds	r7, #16
 8002bec:	46bd      	mov	sp, r7
 8002bee:	bd80      	pop	{r7, pc}
 8002bf0:	9999999a 	.word	0x9999999a
 8002bf4:	3fa99999 	.word	0x3fa99999
 8002bf8:	200016e4 	.word	0x200016e4
 8002bfc:	00000000 	.word	0x00000000

08002c00 <E2_Hurt>:

void E2_Hurt(enemy_type2* enemy){
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b08a      	sub	sp, #40	@ 0x28
 8002c04:	af06      	add	r7, sp, #24
 8002c06:	6078      	str	r0, [r7, #4]
	if (enemy->isHurt==1){
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002c0c:	2b01      	cmp	r3, #1
 8002c0e:	d13b      	bne.n	8002c88 <E2_Hurt+0x88>
		int variableAnimationHurt=enemy->animationDV;
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8002c16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002c1a:	ee17 3a90 	vmov	r3, s15
 8002c1e:	60fb      	str	r3, [r7, #12]
		if (enemy->isAlive==1){
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	695b      	ldr	r3, [r3, #20]
 8002c24:	2b01      	cmp	r3, #1
 8002c26:	d12f      	bne.n	8002c88 <E2_Hurt+0x88>
			if (variableAnimationHurt<3){
 8002c28:	68fb      	ldr	r3, [r7, #12]
 8002c2a:	2b02      	cmp	r3, #2
 8002c2c:	dc29      	bgt.n	8002c82 <E2_Hurt+0x82>
				LCD_Sprite(enemy->x - (28 / 2), enemy->y - (25/ 2), 28, 25, E2_Damage28x25, 3, variableAnimationHurt, 0, 0);
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	3b0e      	subs	r3, #14
 8002c34:	4618      	mov	r0, r3
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	3b0c      	subs	r3, #12
 8002c3c:	4619      	mov	r1, r3
 8002c3e:	2300      	movs	r3, #0
 8002c40:	9304      	str	r3, [sp, #16]
 8002c42:	2300      	movs	r3, #0
 8002c44:	9303      	str	r3, [sp, #12]
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	9302      	str	r3, [sp, #8]
 8002c4a:	2303      	movs	r3, #3
 8002c4c:	9301      	str	r3, [sp, #4]
 8002c4e:	4b12      	ldr	r3, [pc, #72]	@ (8002c98 <E2_Hurt+0x98>)
 8002c50:	9300      	str	r3, [sp, #0]
 8002c52:	2319      	movs	r3, #25
 8002c54:	221c      	movs	r2, #28
 8002c56:	f7fe ff5f 	bl	8001b18 <LCD_Sprite>
				enemy->animationDV+=0.05;
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c5e:	4618      	mov	r0, r3
 8002c60:	f7fd fc92 	bl	8000588 <__aeabi_f2d>
 8002c64:	a30a      	add	r3, pc, #40	@ (adr r3, 8002c90 <E2_Hurt+0x90>)
 8002c66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c6a:	f7fd fb2f 	bl	80002cc <__adddf3>
 8002c6e:	4602      	mov	r2, r0
 8002c70:	460b      	mov	r3, r1
 8002c72:	4610      	mov	r0, r2
 8002c74:	4619      	mov	r1, r3
 8002c76:	f7fd fcdf 	bl	8000638 <__aeabi_d2f>
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	631a      	str	r2, [r3, #48]	@ 0x30
				} else{
					enemy->isHurt=0;
				}
			}
	}
}
 8002c80:	e002      	b.n	8002c88 <E2_Hurt+0x88>
					enemy->isHurt=0;
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	2200      	movs	r2, #0
 8002c86:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8002c88:	bf00      	nop
 8002c8a:	3710      	adds	r7, #16
 8002c8c:	46bd      	mov	sp, r7
 8002c8e:	bd80      	pop	{r7, pc}
 8002c90:	9999999a 	.word	0x9999999a
 8002c94:	3fa99999 	.word	0x3fa99999
 8002c98:	20002364 	.word	0x20002364
 8002c9c:	00000000 	.word	0x00000000

08002ca0 <E2_Die>:

void E2_Die(enemy_type2* enemy){
 8002ca0:	b580      	push	{r7, lr}
 8002ca2:	b08a      	sub	sp, #40	@ 0x28
 8002ca4:	af06      	add	r7, sp, #24
 8002ca6:	6078      	str	r0, [r7, #4]
	int variableAnimationDie=enemy->animationDie;
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8002cae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002cb2:	ee17 3a90 	vmov	r3, s15
 8002cb6:	60fb      	str	r3, [r7, #12]
			if (enemy->isAlive==0){
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	695b      	ldr	r3, [r3, #20]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d143      	bne.n	8002d48 <E2_Die+0xa8>
				if (variableAnimationDie<6){
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	2b05      	cmp	r3, #5
 8002cc4:	dc29      	bgt.n	8002d1a <E2_Die+0x7a>
					LCD_Sprite(enemy->x - (26 / 2)+1, enemy->y - (23 / 2), 26,23, E2_Die26x23, 6, variableAnimationDie, 0, 0);
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	3b0c      	subs	r3, #12
 8002ccc:	4618      	mov	r0, r3
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	685b      	ldr	r3, [r3, #4]
 8002cd2:	3b0b      	subs	r3, #11
 8002cd4:	4619      	mov	r1, r3
 8002cd6:	2300      	movs	r3, #0
 8002cd8:	9304      	str	r3, [sp, #16]
 8002cda:	2300      	movs	r3, #0
 8002cdc:	9303      	str	r3, [sp, #12]
 8002cde:	68fb      	ldr	r3, [r7, #12]
 8002ce0:	9302      	str	r3, [sp, #8]
 8002ce2:	2306      	movs	r3, #6
 8002ce4:	9301      	str	r3, [sp, #4]
 8002ce6:	4b1c      	ldr	r3, [pc, #112]	@ (8002d58 <E2_Die+0xb8>)
 8002ce8:	9300      	str	r3, [sp, #0]
 8002cea:	2317      	movs	r3, #23
 8002cec:	221a      	movs	r2, #26
 8002cee:	f7fe ff13 	bl	8001b18 <LCD_Sprite>
					enemy->animationDie+=0.2;
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002cf6:	4618      	mov	r0, r3
 8002cf8:	f7fd fc46 	bl	8000588 <__aeabi_f2d>
 8002cfc:	a314      	add	r3, pc, #80	@ (adr r3, 8002d50 <E2_Die+0xb0>)
 8002cfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d02:	f7fd fae3 	bl	80002cc <__adddf3>
 8002d06:	4602      	mov	r2, r0
 8002d08:	460b      	mov	r3, r1
 8002d0a:	4610      	mov	r0, r2
 8002d0c:	4619      	mov	r1, r3
 8002d0e:	f7fd fc93 	bl	8000638 <__aeabi_d2f>
 8002d12:	4602      	mov	r2, r0
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	635a      	str	r2, [r3, #52]	@ 0x34
						FillRect(enemy->x - (26 / 2)+1, enemy->y - (23 / 2), 26,23, 0xFE8B);
						enemy->x=5000;
						enemy->y=5000;
					}
				}
}
 8002d18:	e016      	b.n	8002d48 <E2_Die+0xa8>
						FillRect(enemy->x - (26 / 2)+1, enemy->y - (23 / 2), 26,23, 0xFE8B);
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	f1a3 000c 	sub.w	r0, r3, #12
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	685b      	ldr	r3, [r3, #4]
 8002d26:	f1a3 010b 	sub.w	r1, r3, #11
 8002d2a:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8002d2e:	9300      	str	r3, [sp, #0]
 8002d30:	2317      	movs	r3, #23
 8002d32:	221a      	movs	r2, #26
 8002d34:	f7fe fe40 	bl	80019b8 <FillRect>
						enemy->x=5000;
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d3e:	601a      	str	r2, [r3, #0]
						enemy->y=5000;
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002d46:	605a      	str	r2, [r3, #4]
}
 8002d48:	bf00      	nop
 8002d4a:	3710      	adds	r7, #16
 8002d4c:	46bd      	mov	sp, r7
 8002d4e:	bd80      	pop	{r7, pc}
 8002d50:	9999999a 	.word	0x9999999a
 8002d54:	3fc99999 	.word	0x3fc99999
 8002d58:	200033cc 	.word	0x200033cc

08002d5c <PlayerHit_E2>:

void PlayerHit_E2(player* player, enemy_type2* enemy){
 8002d5c:	b480      	push	{r7}
 8002d5e:	b087      	sub	sp, #28
 8002d60:	af00      	add	r7, sp, #0
 8002d62:	6078      	str	r0, [r7, #4]
 8002d64:	6039      	str	r1, [r7, #0]
	if (enemy->isAlive == 1){
 8002d66:	683b      	ldr	r3, [r7, #0]
 8002d68:	695b      	ldr	r3, [r3, #20]
 8002d6a:	2b01      	cmp	r3, #1
 8002d6c:	f040 80f0 	bne.w	8002f50 <PlayerHit_E2+0x1f4>
		// Verificar si le pego a un enemigo del tipo 1
		// Dirección de movimiento (0: arriba, 1: derecha, 2: abajo, 3: izquierda)
		switch (player->direction){
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	6a1b      	ldr	r3, [r3, #32]
 8002d74:	2b03      	cmp	r3, #3
 8002d76:	f200 80eb 	bhi.w	8002f50 <PlayerHit_E2+0x1f4>
 8002d7a:	a201      	add	r2, pc, #4	@ (adr r2, 8002d80 <PlayerHit_E2+0x24>)
 8002d7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d80:	08002d91 	.word	0x08002d91
 8002d84:	08002e73 	.word	0x08002e73
 8002d88:	08002e03 	.word	0x08002e03
 8002d8c:	08002edb 	.word	0x08002edb
			case 0: { // Golpe hacia arriba
				int rangoY = player->y - 15;
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	685b      	ldr	r3, [r3, #4]
 8002d94:	3b0f      	subs	r3, #15
 8002d96:	60bb      	str	r3, [r7, #8]
				if (rangoY<=enemy->e1Down && rangoY>=enemy->e1Up){
 8002d98:	683b      	ldr	r3, [r7, #0]
 8002d9a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d9c:	68bb      	ldr	r3, [r7, #8]
 8002d9e:	429a      	cmp	r2, r3
 8002da0:	f0c0 80cf 	bcc.w	8002f42 <PlayerHit_E2+0x1e6>
 8002da4:	683b      	ldr	r3, [r7, #0]
 8002da6:	6a1a      	ldr	r2, [r3, #32]
 8002da8:	68bb      	ldr	r3, [r7, #8]
 8002daa:	429a      	cmp	r2, r3
 8002dac:	f200 80c9 	bhi.w	8002f42 <PlayerHit_E2+0x1e6>
					if (player->x>=(enemy->e1Left-5) && player->x<=(enemy->e1Right+5)){
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681a      	ldr	r2, [r3, #0]
 8002db4:	683b      	ldr	r3, [r7, #0]
 8002db6:	699b      	ldr	r3, [r3, #24]
 8002db8:	3b05      	subs	r3, #5
 8002dba:	429a      	cmp	r2, r3
 8002dbc:	f0c0 80c1 	bcc.w	8002f42 <PlayerHit_E2+0x1e6>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681a      	ldr	r2, [r3, #0]
 8002dc4:	683b      	ldr	r3, [r7, #0]
 8002dc6:	69db      	ldr	r3, [r3, #28]
 8002dc8:	3305      	adds	r3, #5
 8002dca:	429a      	cmp	r2, r3
 8002dcc:	f200 80b9 	bhi.w	8002f42 <PlayerHit_E2+0x1e6>
						enemy->health -= 1;
 8002dd0:	683b      	ldr	r3, [r7, #0]
 8002dd2:	691b      	ldr	r3, [r3, #16]
 8002dd4:	1e5a      	subs	r2, r3, #1
 8002dd6:	683b      	ldr	r3, [r7, #0]
 8002dd8:	611a      	str	r2, [r3, #16]
						enemy->isHurt=1;
 8002dda:	683b      	ldr	r3, [r7, #0]
 8002ddc:	2201      	movs	r2, #1
 8002dde:	62da      	str	r2, [r3, #44]	@ 0x2c
						enemy->animationDV=0;
 8002de0:	683b      	ldr	r3, [r7, #0]
 8002de2:	f04f 0200 	mov.w	r2, #0
 8002de6:	631a      	str	r2, [r3, #48]	@ 0x30
						if(enemy->health==0){
 8002de8:	683b      	ldr	r3, [r7, #0]
 8002dea:	691b      	ldr	r3, [r3, #16]
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	f040 80a8 	bne.w	8002f42 <PlayerHit_E2+0x1e6>
							enemy->isAlive=0;
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	2200      	movs	r2, #0
 8002df6:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8002df8:	683b      	ldr	r3, [r7, #0]
 8002dfa:	f04f 0200 	mov.w	r2, #0
 8002dfe:	635a      	str	r2, [r3, #52]	@ 0x34
						}
					}
				}
			break;
 8002e00:	e09f      	b.n	8002f42 <PlayerHit_E2+0x1e6>
			}
			case 2:{ //Golpe hacia abajo
				int rangoY_d= player->y + 15;
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	685b      	ldr	r3, [r3, #4]
 8002e06:	330f      	adds	r3, #15
 8002e08:	613b      	str	r3, [r7, #16]
				if (rangoY_d<=enemy->e1Down && rangoY_d>=enemy->e1Up){
 8002e0a:	683b      	ldr	r3, [r7, #0]
 8002e0c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002e0e:	693b      	ldr	r3, [r7, #16]
 8002e10:	429a      	cmp	r2, r3
 8002e12:	f0c0 8098 	bcc.w	8002f46 <PlayerHit_E2+0x1ea>
 8002e16:	683b      	ldr	r3, [r7, #0]
 8002e18:	6a1a      	ldr	r2, [r3, #32]
 8002e1a:	693b      	ldr	r3, [r7, #16]
 8002e1c:	429a      	cmp	r2, r3
 8002e1e:	f200 8092 	bhi.w	8002f46 <PlayerHit_E2+0x1ea>
					if (player->x>=(enemy->e1Left-5) && player->x<=(enemy->e1Right+5)){
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	681a      	ldr	r2, [r3, #0]
 8002e26:	683b      	ldr	r3, [r7, #0]
 8002e28:	699b      	ldr	r3, [r3, #24]
 8002e2a:	3b05      	subs	r3, #5
 8002e2c:	429a      	cmp	r2, r3
 8002e2e:	f0c0 808a 	bcc.w	8002f46 <PlayerHit_E2+0x1ea>
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	681a      	ldr	r2, [r3, #0]
 8002e36:	683b      	ldr	r3, [r7, #0]
 8002e38:	69db      	ldr	r3, [r3, #28]
 8002e3a:	3305      	adds	r3, #5
 8002e3c:	429a      	cmp	r2, r3
 8002e3e:	f200 8082 	bhi.w	8002f46 <PlayerHit_E2+0x1ea>
						enemy->health -= 1;
 8002e42:	683b      	ldr	r3, [r7, #0]
 8002e44:	691b      	ldr	r3, [r3, #16]
 8002e46:	1e5a      	subs	r2, r3, #1
 8002e48:	683b      	ldr	r3, [r7, #0]
 8002e4a:	611a      	str	r2, [r3, #16]
						enemy->isHurt=1;
 8002e4c:	683b      	ldr	r3, [r7, #0]
 8002e4e:	2201      	movs	r2, #1
 8002e50:	62da      	str	r2, [r3, #44]	@ 0x2c
						enemy->animationDV=0;
 8002e52:	683b      	ldr	r3, [r7, #0]
 8002e54:	f04f 0200 	mov.w	r2, #0
 8002e58:	631a      	str	r2, [r3, #48]	@ 0x30
						if(enemy->health==0){
 8002e5a:	683b      	ldr	r3, [r7, #0]
 8002e5c:	691b      	ldr	r3, [r3, #16]
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d171      	bne.n	8002f46 <PlayerHit_E2+0x1ea>
							enemy->isAlive=0;
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	2200      	movs	r2, #0
 8002e66:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	f04f 0200 	mov.w	r2, #0
 8002e6e:	635a      	str	r2, [r3, #52]	@ 0x34
						}
					}
				}
				break;
 8002e70:	e069      	b.n	8002f46 <PlayerHit_E2+0x1ea>
			}
			case 1:{ //Golpe hacia derecha
				int rangoX= player->x + 20;
 8002e72:	687b      	ldr	r3, [r7, #4]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	3314      	adds	r3, #20
 8002e78:	60fb      	str	r3, [r7, #12]
				if (rangoX<=enemy->e1Right && rangoX>=enemy->e1Left){
 8002e7a:	683b      	ldr	r3, [r7, #0]
 8002e7c:	69da      	ldr	r2, [r3, #28]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	429a      	cmp	r2, r3
 8002e82:	d362      	bcc.n	8002f4a <PlayerHit_E2+0x1ee>
 8002e84:	683b      	ldr	r3, [r7, #0]
 8002e86:	699a      	ldr	r2, [r3, #24]
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	429a      	cmp	r2, r3
 8002e8c:	d85d      	bhi.n	8002f4a <PlayerHit_E2+0x1ee>
					if (player->y>=(enemy->e1Down-15) && player->y<=(enemy->e1Up+20)){
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	685a      	ldr	r2, [r3, #4]
 8002e92:	683b      	ldr	r3, [r7, #0]
 8002e94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e96:	3b0f      	subs	r3, #15
 8002e98:	429a      	cmp	r2, r3
 8002e9a:	d356      	bcc.n	8002f4a <PlayerHit_E2+0x1ee>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	685a      	ldr	r2, [r3, #4]
 8002ea0:	683b      	ldr	r3, [r7, #0]
 8002ea2:	6a1b      	ldr	r3, [r3, #32]
 8002ea4:	3314      	adds	r3, #20
 8002ea6:	429a      	cmp	r2, r3
 8002ea8:	d84f      	bhi.n	8002f4a <PlayerHit_E2+0x1ee>
						enemy->health -= 1;
 8002eaa:	683b      	ldr	r3, [r7, #0]
 8002eac:	691b      	ldr	r3, [r3, #16]
 8002eae:	1e5a      	subs	r2, r3, #1
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	611a      	str	r2, [r3, #16]
						enemy->isHurt=1;
 8002eb4:	683b      	ldr	r3, [r7, #0]
 8002eb6:	2201      	movs	r2, #1
 8002eb8:	62da      	str	r2, [r3, #44]	@ 0x2c
						enemy->animationDV=0;
 8002eba:	683b      	ldr	r3, [r7, #0]
 8002ebc:	f04f 0200 	mov.w	r2, #0
 8002ec0:	631a      	str	r2, [r3, #48]	@ 0x30
						if(enemy->health==0){
 8002ec2:	683b      	ldr	r3, [r7, #0]
 8002ec4:	691b      	ldr	r3, [r3, #16]
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	d13f      	bne.n	8002f4a <PlayerHit_E2+0x1ee>
							enemy->isAlive=0;
 8002eca:	683b      	ldr	r3, [r7, #0]
 8002ecc:	2200      	movs	r2, #0
 8002ece:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	f04f 0200 	mov.w	r2, #0
 8002ed6:	635a      	str	r2, [r3, #52]	@ 0x34
						}
					}
				}
				break;
 8002ed8:	e037      	b.n	8002f4a <PlayerHit_E2+0x1ee>
			}
			case 3:{ //Golpe hacia izquierda
							int rangoX= player->x - 20;
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	3b14      	subs	r3, #20
 8002ee0:	617b      	str	r3, [r7, #20]
							if (rangoX<=enemy->e1Right && rangoX>=enemy->e1Left){
 8002ee2:	683b      	ldr	r3, [r7, #0]
 8002ee4:	69da      	ldr	r2, [r3, #28]
 8002ee6:	697b      	ldr	r3, [r7, #20]
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	d330      	bcc.n	8002f4e <PlayerHit_E2+0x1f2>
 8002eec:	683b      	ldr	r3, [r7, #0]
 8002eee:	699a      	ldr	r2, [r3, #24]
 8002ef0:	697b      	ldr	r3, [r7, #20]
 8002ef2:	429a      	cmp	r2, r3
 8002ef4:	d82b      	bhi.n	8002f4e <PlayerHit_E2+0x1f2>
								if (player->y>=(enemy->e1Down-15) && player->y<=(enemy->e1Up+20)){
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	685a      	ldr	r2, [r3, #4]
 8002efa:	683b      	ldr	r3, [r7, #0]
 8002efc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002efe:	3b0f      	subs	r3, #15
 8002f00:	429a      	cmp	r2, r3
 8002f02:	d324      	bcc.n	8002f4e <PlayerHit_E2+0x1f2>
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	685a      	ldr	r2, [r3, #4]
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	6a1b      	ldr	r3, [r3, #32]
 8002f0c:	3314      	adds	r3, #20
 8002f0e:	429a      	cmp	r2, r3
 8002f10:	d81d      	bhi.n	8002f4e <PlayerHit_E2+0x1f2>
									enemy->health -= 1;
 8002f12:	683b      	ldr	r3, [r7, #0]
 8002f14:	691b      	ldr	r3, [r3, #16]
 8002f16:	1e5a      	subs	r2, r3, #1
 8002f18:	683b      	ldr	r3, [r7, #0]
 8002f1a:	611a      	str	r2, [r3, #16]
									enemy->isHurt=1;
 8002f1c:	683b      	ldr	r3, [r7, #0]
 8002f1e:	2201      	movs	r2, #1
 8002f20:	62da      	str	r2, [r3, #44]	@ 0x2c
									enemy->animationDV=0;
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	f04f 0200 	mov.w	r2, #0
 8002f28:	631a      	str	r2, [r3, #48]	@ 0x30
									if(enemy->health==0){
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	691b      	ldr	r3, [r3, #16]
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	d10d      	bne.n	8002f4e <PlayerHit_E2+0x1f2>
										enemy->isAlive=0;
 8002f32:	683b      	ldr	r3, [r7, #0]
 8002f34:	2200      	movs	r2, #0
 8002f36:	615a      	str	r2, [r3, #20]
										enemy->animationDie=0;
 8002f38:	683b      	ldr	r3, [r7, #0]
 8002f3a:	f04f 0200 	mov.w	r2, #0
 8002f3e:	635a      	str	r2, [r3, #52]	@ 0x34
									}
								}
							}
							break;
 8002f40:	e005      	b.n	8002f4e <PlayerHit_E2+0x1f2>
			break;
 8002f42:	bf00      	nop
 8002f44:	e004      	b.n	8002f50 <PlayerHit_E2+0x1f4>
				break;
 8002f46:	bf00      	nop
 8002f48:	e002      	b.n	8002f50 <PlayerHit_E2+0x1f4>
				break;
 8002f4a:	bf00      	nop
 8002f4c:	e000      	b.n	8002f50 <PlayerHit_E2+0x1f4>
							break;
 8002f4e:	bf00      	nop
						}
		}
	}
}
 8002f50:	bf00      	nop
 8002f52:	371c      	adds	r7, #28
 8002f54:	46bd      	mov	sp, r7
 8002f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f5a:	4770      	bx	lr

08002f5c <initEnemy3>:

/* Funciones Enemigo 3 -------------------------------------------------*/
void initEnemy3(enemy_type3* enemy, unsigned int startX, unsigned int startY, unsigned int width, unsigned int height, int health, player* player) {
 8002f5c:	b480      	push	{r7}
 8002f5e:	b085      	sub	sp, #20
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	60f8      	str	r0, [r7, #12]
 8002f64:	60b9      	str	r1, [r7, #8]
 8002f66:	607a      	str	r2, [r7, #4]
 8002f68:	603b      	str	r3, [r7, #0]
    // Inicializar las coordenadas y dimensiones
    enemy->x = startX;
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	68ba      	ldr	r2, [r7, #8]
 8002f6e:	601a      	str	r2, [r3, #0]
    enemy->y_eye=startY;
 8002f70:	68fb      	ldr	r3, [r7, #12]
 8002f72:	687a      	ldr	r2, [r7, #4]
 8002f74:	609a      	str	r2, [r3, #8]
    enemy->y = startY+20;
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	f103 0214 	add.w	r2, r3, #20
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	605a      	str	r2, [r3, #4]
    enemy->width = width;
 8002f80:	68fb      	ldr	r3, [r7, #12]
 8002f82:	683a      	ldr	r2, [r7, #0]
 8002f84:	60da      	str	r2, [r3, #12]
    enemy->height = height;
 8002f86:	68fb      	ldr	r3, [r7, #12]
 8002f88:	69ba      	ldr	r2, [r7, #24]
 8002f8a:	611a      	str	r2, [r3, #16]
    enemy->speed=5;
 8002f8c:	68fb      	ldr	r3, [r7, #12]
 8002f8e:	2205      	movs	r2, #5
 8002f90:	631a      	str	r2, [r3, #48]	@ 0x30
    enemy->Place=0;
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	2200      	movs	r2, #0
 8002f96:	64da      	str	r2, [r3, #76]	@ 0x4c
    enemy->delay=0;
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	2200      	movs	r2, #0
 8002f9c:	651a      	str	r2, [r3, #80]	@ 0x50
    enemy->delay_init=0;
 8002f9e:	68fb      	ldr	r3, [r7, #12]
 8002fa0:	2200      	movs	r2, #0
 8002fa2:	655a      	str	r2, [r3, #84]	@ 0x54

    // Inicializar la vida y el estado
    enemy->health = health;
 8002fa4:	68fb      	ldr	r3, [r7, #12]
 8002fa6:	69fa      	ldr	r2, [r7, #28]
 8002fa8:	645a      	str	r2, [r3, #68]	@ 0x44
    enemy->isAlive = 0;  // El enemigo comienza vivo
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	2200      	movs	r2, #0
 8002fae:	615a      	str	r2, [r3, #20]

    //Animación
    enemy->animationFire=0;
 8002fb0:	68fb      	ldr	r3, [r7, #12]
 8002fb2:	f04f 0200 	mov.w	r2, #0
 8002fb6:	629a      	str	r2, [r3, #40]	@ 0x28
    enemy->animationEye=0;
 8002fb8:	68fb      	ldr	r3, [r7, #12]
 8002fba:	f04f 0200 	mov.w	r2, #0
 8002fbe:	62da      	str	r2, [r3, #44]	@ 0x2c
    enemy->isMove=0;
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	2200      	movs	r2, #0
 8002fc4:	649a      	str	r2, [r3, #72]	@ 0x48

    //Limites
    enemy->limitwidth=player->limitWidth;
 8002fc6:	6a3b      	ldr	r3, [r7, #32]
 8002fc8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002fca:	68fb      	ldr	r3, [r7, #12]
 8002fcc:	635a      	str	r2, [r3, #52]	@ 0x34
    enemy->limitwidth_i=player->limitWidth_i;
 8002fce:	6a3b      	ldr	r3, [r7, #32]
 8002fd0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	639a      	str	r2, [r3, #56]	@ 0x38
    enemy->limitheight_i=18;
 8002fd6:	68fb      	ldr	r3, [r7, #12]
 8002fd8:	2212      	movs	r2, #18
 8002fda:	641a      	str	r2, [r3, #64]	@ 0x40
    enemy->limitheight=220;
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	22dc      	movs	r2, #220	@ 0xdc
 8002fe0:	63da      	str	r2, [r3, #60]	@ 0x3c
}
 8002fe2:	bf00      	nop
 8002fe4:	3714      	adds	r7, #20
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fec:	4770      	bx	lr
	...

08002ff0 <E3_Eye>:

void E3_Eye(enemy_type3* enemy){
 8002ff0:	b580      	push	{r7, lr}
 8002ff2:	b08a      	sub	sp, #40	@ 0x28
 8002ff4:	af06      	add	r7, sp, #24
 8002ff6:	6078      	str	r0, [r7, #4]
	if (enemy->health>0){
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	dd55      	ble.n	80030ac <E3_Eye+0xbc>
		if (enemy->isMove==0){
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003004:	2b00      	cmp	r3, #0
 8003006:	d160      	bne.n	80030ca <E3_Eye+0xda>
			enemy->y=enemy->y_eye+20;
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	689b      	ldr	r3, [r3, #8]
 800300c:	f103 0214 	add.w	r2, r3, #20
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	605a      	str	r2, [r3, #4]
			int variableEye=enemy->animationEye;
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	edd3 7a0b 	vldr	s15, [r3, #44]	@ 0x2c
 800301a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800301e:	ee17 3a90 	vmov	r3, s15
 8003022:	60fb      	str	r3, [r7, #12]
			if (variableEye<7){
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	2b06      	cmp	r3, #6
 8003028:	dc29      	bgt.n	800307e <E3_Eye+0x8e>
				LCD_Sprite(enemy->x - (16 / 2), enemy->y_eye - (17 / 2), 16, 17, E3_Eye16x17_7, 7, variableEye, 0, 0);
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	3b08      	subs	r3, #8
 8003030:	4618      	mov	r0, r3
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	689b      	ldr	r3, [r3, #8]
 8003036:	3b08      	subs	r3, #8
 8003038:	4619      	mov	r1, r3
 800303a:	2300      	movs	r3, #0
 800303c:	9304      	str	r3, [sp, #16]
 800303e:	2300      	movs	r3, #0
 8003040:	9303      	str	r3, [sp, #12]
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	9302      	str	r3, [sp, #8]
 8003046:	2307      	movs	r3, #7
 8003048:	9301      	str	r3, [sp, #4]
 800304a:	4b25      	ldr	r3, [pc, #148]	@ (80030e0 <E3_Eye+0xf0>)
 800304c:	9300      	str	r3, [sp, #0]
 800304e:	2311      	movs	r3, #17
 8003050:	2210      	movs	r2, #16
 8003052:	f7fe fd61 	bl	8001b18 <LCD_Sprite>
				enemy->animationEye+=0.1;
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800305a:	4618      	mov	r0, r3
 800305c:	f7fd fa94 	bl	8000588 <__aeabi_f2d>
 8003060:	a31d      	add	r3, pc, #116	@ (adr r3, 80030d8 <E3_Eye+0xe8>)
 8003062:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003066:	f7fd f931 	bl	80002cc <__adddf3>
 800306a:	4602      	mov	r2, r0
 800306c:	460b      	mov	r3, r1
 800306e:	4610      	mov	r0, r2
 8003070:	4619      	mov	r1, r3
 8003072:	f7fd fae1 	bl	8000638 <__aeabi_d2f>
 8003076:	4602      	mov	r2, r0
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	62da      	str	r2, [r3, #44]	@ 0x2c
			}
		}
	} else{
		FillRect(enemy->x - (16 / 2), enemy->y_eye - (17 / 2), 16, 17, 0xFE8B);
	}
}
 800307c:	e025      	b.n	80030ca <E3_Eye+0xda>
				FillRect(enemy->x - (16 / 2), enemy->y_eye - (17 / 2), 16, 17, 0xFE8B);
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	f1a3 0008 	sub.w	r0, r3, #8
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	689b      	ldr	r3, [r3, #8]
 800308a:	f1a3 0108 	sub.w	r1, r3, #8
 800308e:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8003092:	9300      	str	r3, [sp, #0]
 8003094:	2311      	movs	r3, #17
 8003096:	2210      	movs	r2, #16
 8003098:	f7fe fc8e 	bl	80019b8 <FillRect>
				enemy->isMove=1;
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	2201      	movs	r2, #1
 80030a0:	649a      	str	r2, [r3, #72]	@ 0x48
				enemy->animationFire=0;
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	f04f 0200 	mov.w	r2, #0
 80030a8:	629a      	str	r2, [r3, #40]	@ 0x28
}
 80030aa:	e00e      	b.n	80030ca <E3_Eye+0xda>
		FillRect(enemy->x - (16 / 2), enemy->y_eye - (17 / 2), 16, 17, 0xFE8B);
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	f1a3 0008 	sub.w	r0, r3, #8
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	689b      	ldr	r3, [r3, #8]
 80030b8:	f1a3 0108 	sub.w	r1, r3, #8
 80030bc:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 80030c0:	9300      	str	r3, [sp, #0]
 80030c2:	2311      	movs	r3, #17
 80030c4:	2210      	movs	r2, #16
 80030c6:	f7fe fc77 	bl	80019b8 <FillRect>
}
 80030ca:	bf00      	nop
 80030cc:	3710      	adds	r7, #16
 80030ce:	46bd      	mov	sp, r7
 80030d0:	bd80      	pop	{r7, pc}
 80030d2:	bf00      	nop
 80030d4:	f3af 8000 	nop.w
 80030d8:	9999999a 	.word	0x9999999a
 80030dc:	3fb99999 	.word	0x3fb99999
 80030e0:	20000804 	.word	0x20000804

080030e4 <E3_FireMove>:

void E3_FireMove(enemy_type3* enemy,player* player){
 80030e4:	b590      	push	{r4, r7, lr}
 80030e6:	b08b      	sub	sp, #44	@ 0x2c
 80030e8:	af06      	add	r7, sp, #24
 80030ea:	6078      	str	r0, [r7, #4]
 80030ec:	6039      	str	r1, [r7, #0]
	if (enemy->health>0){
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	f340 80e5 	ble.w	80032c2 <E3_FireMove+0x1de>
		if (enemy->isMove==1){
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80030fc:	2b01      	cmp	r3, #1
 80030fe:	f040 80e0 	bne.w	80032c2 <E3_FireMove+0x1de>
			int FutureY=enemy->y+enemy->speed;
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	685a      	ldr	r2, [r3, #4]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800310a:	4413      	add	r3, r2
 800310c:	60fb      	str	r3, [r7, #12]
			if (FutureY>=220){
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	2bdb      	cmp	r3, #219	@ 0xdb
 8003112:	dd23      	ble.n	800315c <E3_FireMove+0x78>
				enemy->isMove=0;
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	2200      	movs	r2, #0
 8003118:	649a      	str	r2, [r3, #72]	@ 0x48
				enemy->animationEye=0;
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	f04f 0200 	mov.w	r2, #0
 8003120:	62da      	str	r2, [r3, #44]	@ 0x2c
				enemy->health-=1;
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003126:	1e5a      	subs	r2, r3, #1
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	645a      	str	r2, [r3, #68]	@ 0x44
				enemy->Place+=1;
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003130:	1c5a      	adds	r2, r3, #1
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	64da      	str	r2, [r3, #76]	@ 0x4c
				enemy->delay=0;
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2200      	movs	r2, #0
 800313a:	651a      	str	r2, [r3, #80]	@ 0x50
				FillRect(enemy->x - (16 / 2), enemy->y - (16 / 2), 16, 16, 0xFE8B); //Se puede eliminar
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	f1a3 0008 	sub.w	r0, r3, #8
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	685b      	ldr	r3, [r3, #4]
 8003148:	f1a3 0108 	sub.w	r1, r3, #8
 800314c:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8003150:	9300      	str	r3, [sp, #0]
 8003152:	2310      	movs	r3, #16
 8003154:	2210      	movs	r2, #16
 8003156:	f7fe fc2f 	bl	80019b8 <FillRect>
				}
			}
		}

	}
}
 800315a:	e0b2      	b.n	80032c2 <E3_FireMove+0x1de>
				FillRect(enemy->x - (16 / 2), enemy->y - (16 / 2), 16, 16, 0xFE8B);
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f1a3 0008 	sub.w	r0, r3, #8
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	685b      	ldr	r3, [r3, #4]
 8003168:	f1a3 0108 	sub.w	r1, r3, #8
 800316c:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 8003170:	9300      	str	r3, [sp, #0]
 8003172:	2310      	movs	r3, #16
 8003174:	2210      	movs	r2, #16
 8003176:	f7fe fc1f 	bl	80019b8 <FillRect>
				int animationFire=enemy->animationFire;
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8003180:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003184:	ee17 3a90 	vmov	r3, s15
 8003188:	60bb      	str	r3, [r7, #8]
				enemy->y=FutureY;
 800318a:	68fa      	ldr	r2, [r7, #12]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	605a      	str	r2, [r3, #4]
				LCD_Sprite(enemy->x - (16 / 2), enemy->y - (16 / 2), 16, 16, E3_Fire16x16_4, 4, animationFire, 0, 0);
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	3b08      	subs	r3, #8
 8003196:	4618      	mov	r0, r3
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	685b      	ldr	r3, [r3, #4]
 800319c:	3b08      	subs	r3, #8
 800319e:	4619      	mov	r1, r3
 80031a0:	2300      	movs	r3, #0
 80031a2:	9304      	str	r3, [sp, #16]
 80031a4:	2300      	movs	r3, #0
 80031a6:	9303      	str	r3, [sp, #12]
 80031a8:	68bb      	ldr	r3, [r7, #8]
 80031aa:	9302      	str	r3, [sp, #8]
 80031ac:	2304      	movs	r3, #4
 80031ae:	9301      	str	r3, [sp, #4]
 80031b0:	4b46      	ldr	r3, [pc, #280]	@ (80032cc <E3_FireMove+0x1e8>)
 80031b2:	9300      	str	r3, [sp, #0]
 80031b4:	2310      	movs	r3, #16
 80031b6:	2210      	movs	r2, #16
 80031b8:	f7fe fcae 	bl	8001b18 <LCD_Sprite>
				if (player->playerUp<=enemy->e1Down){ //player->playerUp>=enemy->e1Up &&
 80031bc:	683b      	ldr	r3, [r7, #0]
 80031be:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031c4:	429a      	cmp	r2, r3
 80031c6:	d87c      	bhi.n	80032c2 <E3_FireMove+0x1de>
					if(enemy->e1Left >= player->playerLeft-8 && enemy->e1Right <= player->playerRight+8){
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	699a      	ldr	r2, [r3, #24]
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80031d0:	3b08      	subs	r3, #8
 80031d2:	429a      	cmp	r2, r3
 80031d4:	d375      	bcc.n	80032c2 <E3_FireMove+0x1de>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	69da      	ldr	r2, [r3, #28]
 80031da:	683b      	ldr	r3, [r7, #0]
 80031dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031de:	3308      	adds	r3, #8
 80031e0:	429a      	cmp	r2, r3
 80031e2:	d86e      	bhi.n	80032c2 <E3_FireMove+0x1de>
						player->y=player->y+5;
 80031e4:	683b      	ldr	r3, [r7, #0]
 80031e6:	685b      	ldr	r3, [r3, #4]
 80031e8:	1d5a      	adds	r2, r3, #5
 80031ea:	683b      	ldr	r3, [r7, #0]
 80031ec:	605a      	str	r2, [r3, #4]
						player->direction=0;
 80031ee:	683b      	ldr	r3, [r7, #0]
 80031f0:	2200      	movs	r2, #0
 80031f2:	621a      	str	r2, [r3, #32]
						player->IsDamage=1;
 80031f4:	683b      	ldr	r3, [r7, #0]
 80031f6:	2201      	movs	r2, #1
 80031f8:	65da      	str	r2, [r3, #92]	@ 0x5c
						player->animationDamage=0;
 80031fa:	683b      	ldr	r3, [r7, #0]
 80031fc:	f04f 0200 	mov.w	r2, #0
 8003200:	661a      	str	r2, [r3, #96]	@ 0x60
						player->life-=1;
 8003202:	683b      	ldr	r3, [r7, #0]
 8003204:	695b      	ldr	r3, [r3, #20]
 8003206:	1e5a      	subs	r2, r3, #1
 8003208:	683b      	ldr	r3, [r7, #0]
 800320a:	615a      	str	r2, [r3, #20]
						FillRect(player->x - (player->width / 2)+1, player->y - (player->height / 2)+1, player->width+1, player->height+1, 0xFE8B);
 800320c:	683b      	ldr	r3, [r7, #0]
 800320e:	681a      	ldr	r2, [r3, #0]
 8003210:	683b      	ldr	r3, [r7, #0]
 8003212:	689b      	ldr	r3, [r3, #8]
 8003214:	085b      	lsrs	r3, r3, #1
 8003216:	1ad3      	subs	r3, r2, r3
 8003218:	1c58      	adds	r0, r3, #1
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	685a      	ldr	r2, [r3, #4]
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	68db      	ldr	r3, [r3, #12]
 8003222:	085b      	lsrs	r3, r3, #1
 8003224:	1ad3      	subs	r3, r2, r3
 8003226:	1c59      	adds	r1, r3, #1
 8003228:	683b      	ldr	r3, [r7, #0]
 800322a:	689b      	ldr	r3, [r3, #8]
 800322c:	1c5a      	adds	r2, r3, #1
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	68db      	ldr	r3, [r3, #12]
 8003232:	3301      	adds	r3, #1
 8003234:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8003238:	9400      	str	r4, [sp, #0]
 800323a:	f7fe fbbd 	bl	80019b8 <FillRect>
						if (player->life==0){
 800323e:	683b      	ldr	r3, [r7, #0]
 8003240:	695b      	ldr	r3, [r3, #20]
 8003242:	2b00      	cmp	r3, #0
 8003244:	d11f      	bne.n	8003286 <E3_FireMove+0x1a2>
							player->isAlive=0;
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	2200      	movs	r2, #0
 800324a:	61da      	str	r2, [r3, #28]
							player->animationDie=0;
 800324c:	683b      	ldr	r3, [r7, #0]
 800324e:	f04f 0200 	mov.w	r2, #0
 8003252:	669a      	str	r2, [r3, #104]	@ 0x68
						FillRect(player->x - (player->width / 2)+1, player->y - (player->height / 2)+1, player->width+1, player->height+1, 0xFE8B);
 8003254:	683b      	ldr	r3, [r7, #0]
 8003256:	681a      	ldr	r2, [r3, #0]
 8003258:	683b      	ldr	r3, [r7, #0]
 800325a:	689b      	ldr	r3, [r3, #8]
 800325c:	085b      	lsrs	r3, r3, #1
 800325e:	1ad3      	subs	r3, r2, r3
 8003260:	1c58      	adds	r0, r3, #1
 8003262:	683b      	ldr	r3, [r7, #0]
 8003264:	685a      	ldr	r2, [r3, #4]
 8003266:	683b      	ldr	r3, [r7, #0]
 8003268:	68db      	ldr	r3, [r3, #12]
 800326a:	085b      	lsrs	r3, r3, #1
 800326c:	1ad3      	subs	r3, r2, r3
 800326e:	1c59      	adds	r1, r3, #1
 8003270:	683b      	ldr	r3, [r7, #0]
 8003272:	689b      	ldr	r3, [r3, #8]
 8003274:	1c5a      	adds	r2, r3, #1
 8003276:	683b      	ldr	r3, [r7, #0]
 8003278:	68db      	ldr	r3, [r3, #12]
 800327a:	3301      	adds	r3, #1
 800327c:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8003280:	9400      	str	r4, [sp, #0]
 8003282:	f7fe fb99 	bl	80019b8 <FillRect>
						FillRect(enemy->x - (16 / 2), enemy->y - (16 / 2), 16, 16, 0xFE8B); //Se puede eliminar
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	f1a3 0008 	sub.w	r0, r3, #8
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	685b      	ldr	r3, [r3, #4]
 8003292:	f1a3 0108 	sub.w	r1, r3, #8
 8003296:	f64f 638b 	movw	r3, #65163	@ 0xfe8b
 800329a:	9300      	str	r3, [sp, #0]
 800329c:	2310      	movs	r3, #16
 800329e:	2210      	movs	r2, #16
 80032a0:	f7fe fb8a 	bl	80019b8 <FillRect>
						enemy->isMove=0;
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	2200      	movs	r2, #0
 80032a8:	649a      	str	r2, [r3, #72]	@ 0x48
						enemy->animationEye=0;
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	f04f 0200 	mov.w	r2, #0
 80032b0:	62da      	str	r2, [r3, #44]	@ 0x2c
						enemy->Place+=1;
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80032b6:	1c5a      	adds	r2, r3, #1
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	64da      	str	r2, [r3, #76]	@ 0x4c
						enemy->delay=0;
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	2200      	movs	r2, #0
 80032c0:	651a      	str	r2, [r3, #80]	@ 0x50
}
 80032c2:	bf00      	nop
 80032c4:	3714      	adds	r7, #20
 80032c6:	46bd      	mov	sp, r7
 80032c8:	bd90      	pop	{r4, r7, pc}
 80032ca:	bf00      	nop
 80032cc:	20000004 	.word	0x20000004

080032d0 <E3_FireAnimation>:

void E3_FireAnimation(enemy_type3* enemy){
 80032d0:	b580      	push	{r7, lr}
 80032d2:	b082      	sub	sp, #8
 80032d4:	af00      	add	r7, sp, #0
 80032d6:	6078      	str	r0, [r7, #4]
	if (enemy->health>0 && enemy->isMove){
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80032dc:	2b00      	cmp	r3, #0
 80032de:	dd25      	ble.n	800332c <E3_FireAnimation+0x5c>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d021      	beq.n	800332c <E3_FireAnimation+0x5c>
		enemy->animationFire+=0.2;
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032ec:	4618      	mov	r0, r3
 80032ee:	f7fd f94b 	bl	8000588 <__aeabi_f2d>
 80032f2:	a311      	add	r3, pc, #68	@ (adr r3, 8003338 <E3_FireAnimation+0x68>)
 80032f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032f8:	f7fc ffe8 	bl	80002cc <__adddf3>
 80032fc:	4602      	mov	r2, r0
 80032fe:	460b      	mov	r3, r1
 8003300:	4610      	mov	r0, r2
 8003302:	4619      	mov	r1, r3
 8003304:	f7fd f998 	bl	8000638 <__aeabi_d2f>
 8003308:	4602      	mov	r2, r0
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	629a      	str	r2, [r3, #40]	@ 0x28
		if (enemy->animationFire>=4){
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 8003314:	eeb1 7a00 	vmov.f32	s14, #16	@ 0x40800000  4.0
 8003318:	eef4 7ac7 	vcmpe.f32	s15, s14
 800331c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003320:	da00      	bge.n	8003324 <E3_FireAnimation+0x54>
			enemy->animationFire=0;
		}
	}
}
 8003322:	e003      	b.n	800332c <E3_FireAnimation+0x5c>
			enemy->animationFire=0;
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	f04f 0200 	mov.w	r2, #0
 800332a:	629a      	str	r2, [r3, #40]	@ 0x28
}
 800332c:	bf00      	nop
 800332e:	3708      	adds	r7, #8
 8003330:	46bd      	mov	sp, r7
 8003332:	bd80      	pop	{r7, pc}
 8003334:	f3af 8000 	nop.w
 8003338:	9999999a 	.word	0x9999999a
 800333c:	3fc99999 	.word	0x3fc99999

08003340 <E3_Hitbox>:

void E3_Hitbox(enemy_type3* enemy){
 8003340:	b590      	push	{r4, r7, lr}
 8003342:	b085      	sub	sp, #20
 8003344:	af02      	add	r7, sp, #8
 8003346:	6078      	str	r0, [r7, #4]

    //HITBOX DEBUG
	enemy->e1Left = enemy->x - (enemy->width / 2);
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	681a      	ldr	r2, [r3, #0]
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	68db      	ldr	r3, [r3, #12]
 8003350:	085b      	lsrs	r3, r3, #1
 8003352:	1ad2      	subs	r2, r2, r3
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	619a      	str	r2, [r3, #24]
	enemy->e1Right = (enemy->x + enemy->width / 2); //+1
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681a      	ldr	r2, [r3, #0]
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	68db      	ldr	r3, [r3, #12]
 8003360:	085b      	lsrs	r3, r3, #1
 8003362:	441a      	add	r2, r3
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	61da      	str	r2, [r3, #28]
	enemy->e1Up = enemy->y - (enemy->height / 2);
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	685a      	ldr	r2, [r3, #4]
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	691b      	ldr	r3, [r3, #16]
 8003370:	085b      	lsrs	r3, r3, #1
 8003372:	1ad2      	subs	r2, r2, r3
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	621a      	str	r2, [r3, #32]
	enemy->e1Down= (enemy->y + enemy->height / 2); //+1
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	685a      	ldr	r2, [r3, #4]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	691b      	ldr	r3, [r3, #16]
 8003380:	085b      	lsrs	r3, r3, #1
 8003382:	441a      	add	r2, r3
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	625a      	str	r2, [r3, #36]	@ 0x24

		if (DrawHitbox==1){
 8003388:	4b47      	ldr	r3, [pc, #284]	@ (80034a8 <E3_Hitbox+0x168>)
 800338a:	781b      	ldrb	r3, [r3, #0]
 800338c:	2b01      	cmp	r3, #1
 800338e:	d113      	bne.n	80033b8 <E3_Hitbox+0x78>
	    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	681a      	ldr	r2, [r3, #0]
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	68db      	ldr	r3, [r3, #12]
 8003398:	085b      	lsrs	r3, r3, #1
 800339a:	1ad0      	subs	r0, r2, r3
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	685a      	ldr	r2, [r3, #4]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	691b      	ldr	r3, [r3, #16]
 80033a4:	085b      	lsrs	r3, r3, #1
 80033a6:	1ad1      	subs	r1, r2, r3
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	68da      	ldr	r2, [r3, #12]
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	691b      	ldr	r3, [r3, #16]
 80033b0:	2400      	movs	r4, #0
 80033b2:	9400      	str	r4, [sp, #0]
 80033b4:	f7fe fad8 	bl	8001968 <Rect>
	    }
	    if (DrawHitbox==2){
 80033b8:	4b3b      	ldr	r3, [pc, #236]	@ (80034a8 <E3_Hitbox+0x168>)
 80033ba:	781b      	ldrb	r3, [r3, #0]
 80033bc:	2b02      	cmp	r3, #2
 80033be:	d12b      	bne.n	8003418 <E3_Hitbox+0xd8>
	    	FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	6998      	ldr	r0, [r3, #24]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	6859      	ldr	r1, [r3, #4]
 80033c8:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80033cc:	9300      	str	r3, [sp, #0]
 80033ce:	2301      	movs	r3, #1
 80033d0:	2201      	movs	r2, #1
 80033d2:	f7fe faf1 	bl	80019b8 <FillRect>
	    	FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	69d8      	ldr	r0, [r3, #28]
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	6859      	ldr	r1, [r3, #4]
 80033de:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80033e2:	9300      	str	r3, [sp, #0]
 80033e4:	2301      	movs	r3, #1
 80033e6:	2201      	movs	r2, #1
 80033e8:	f7fe fae6 	bl	80019b8 <FillRect>
	    	FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	6818      	ldr	r0, [r3, #0]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	6a19      	ldr	r1, [r3, #32]
 80033f4:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80033f8:	9300      	str	r3, [sp, #0]
 80033fa:	2301      	movs	r3, #1
 80033fc:	2201      	movs	r2, #1
 80033fe:	f7fe fadb 	bl	80019b8 <FillRect>
	    	FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	6818      	ldr	r0, [r3, #0]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800340a:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800340e:	9300      	str	r3, [sp, #0]
 8003410:	2301      	movs	r3, #1
 8003412:	2201      	movs	r2, #1
 8003414:	f7fe fad0 	bl	80019b8 <FillRect>
	    }
	    if (DrawHitbox==3){
 8003418:	4b23      	ldr	r3, [pc, #140]	@ (80034a8 <E3_Hitbox+0x168>)
 800341a:	781b      	ldrb	r3, [r3, #0]
 800341c:	2b03      	cmp	r3, #3
 800341e:	d13f      	bne.n	80034a0 <E3_Hitbox+0x160>
	    	Rect(enemy->x - (enemy->width / 2), enemy->y - (enemy->height / 2), enemy->width, enemy->height, 0x0000);
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681a      	ldr	r2, [r3, #0]
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	68db      	ldr	r3, [r3, #12]
 8003428:	085b      	lsrs	r3, r3, #1
 800342a:	1ad0      	subs	r0, r2, r3
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	685a      	ldr	r2, [r3, #4]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	691b      	ldr	r3, [r3, #16]
 8003434:	085b      	lsrs	r3, r3, #1
 8003436:	1ad1      	subs	r1, r2, r3
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	68da      	ldr	r2, [r3, #12]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	691b      	ldr	r3, [r3, #16]
 8003440:	2400      	movs	r4, #0
 8003442:	9400      	str	r4, [sp, #0]
 8003444:	f7fe fa90 	bl	8001968 <Rect>
			FillRect(enemy->e1Left , enemy->y, 1, 1, 0xd685); //Izquierda
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6998      	ldr	r0, [r3, #24]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	6859      	ldr	r1, [r3, #4]
 8003450:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003454:	9300      	str	r3, [sp, #0]
 8003456:	2301      	movs	r3, #1
 8003458:	2201      	movs	r2, #1
 800345a:	f7fe faad 	bl	80019b8 <FillRect>
			FillRect(enemy->e1Right , enemy->y, 1, 1, 0xd685); //Derecha
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	69d8      	ldr	r0, [r3, #28]
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	6859      	ldr	r1, [r3, #4]
 8003466:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800346a:	9300      	str	r3, [sp, #0]
 800346c:	2301      	movs	r3, #1
 800346e:	2201      	movs	r2, #1
 8003470:	f7fe faa2 	bl	80019b8 <FillRect>
			FillRect(enemy->x , enemy->e1Up, 1, 1, 0xd685); //Arriba
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	6818      	ldr	r0, [r3, #0]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	6a19      	ldr	r1, [r3, #32]
 800347c:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003480:	9300      	str	r3, [sp, #0]
 8003482:	2301      	movs	r3, #1
 8003484:	2201      	movs	r2, #1
 8003486:	f7fe fa97 	bl	80019b8 <FillRect>
			FillRect(enemy->x , enemy->e1Down, 1, 1, 0xd685); //Abajo
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	6818      	ldr	r0, [r3, #0]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8003492:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003496:	9300      	str	r3, [sp, #0]
 8003498:	2301      	movs	r3, #1
 800349a:	2201      	movs	r2, #1
 800349c:	f7fe fa8c 	bl	80019b8 <FillRect>
	        }
}
 80034a0:	bf00      	nop
 80034a2:	370c      	adds	r7, #12
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bd90      	pop	{r4, r7, pc}
 80034a8:	2001cadf 	.word	0x2001cadf

080034ac <E3_MoveX>:

void E3_MoveX(enemy_type3* enemy){
 80034ac:	b480      	push	{r7}
 80034ae:	b085      	sub	sp, #20
 80034b0:	af00      	add	r7, sp, #0
 80034b2:	6078      	str	r0, [r7, #4]
	if (enemy->delay==0){
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d167      	bne.n	800358c <E3_MoveX+0xe0>
	int FutureX;
	enemy->delay=1;
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	2201      	movs	r2, #1
 80034c0:	651a      	str	r2, [r3, #80]	@ 0x50
	switch (enemy->Place){
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034c6:	2b04      	cmp	r3, #4
 80034c8:	d860      	bhi.n	800358c <E3_MoveX+0xe0>
 80034ca:	a201      	add	r2, pc, #4	@ (adr r2, 80034d0 <E3_MoveX+0x24>)
 80034cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80034d0:	080034e5 	.word	0x080034e5
 80034d4:	0800350d 	.word	0x0800350d
 80034d8:	08003535 	.word	0x08003535
 80034dc:	0800355d 	.word	0x0800355d
 80034e0:	08003585 	.word	0x08003585
		case 0:
			FutureX=enemy->x+40;
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	3328      	adds	r3, #40	@ 0x28
 80034ea:	60fb      	str	r3, [r7, #12]
			if (FutureX>=enemy->limitwidth){
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	429a      	cmp	r2, r3
 80034f4:	d806      	bhi.n	8003504 <E3_MoveX+0x58>
				enemy->x=enemy->limitwidth_i+35;
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034fa:	f103 0223 	add.w	r2, r3, #35	@ 0x23
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	601a      	str	r2, [r3, #0]

			} else{
				enemy->x=FutureX;
			}
			break;
 8003502:	e043      	b.n	800358c <E3_MoveX+0xe0>
				enemy->x=FutureX;
 8003504:	68fa      	ldr	r2, [r7, #12]
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	601a      	str	r2, [r3, #0]
			break;
 800350a:	e03f      	b.n	800358c <E3_MoveX+0xe0>

		case 1:
			FutureX=enemy->x-20;
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	3b14      	subs	r3, #20
 8003512:	60fb      	str	r3, [r7, #12]
			if (FutureX<=enemy->limitwidth_i){
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	429a      	cmp	r2, r3
 800351c:	d306      	bcc.n	800352c <E3_MoveX+0x80>
				enemy->x=enemy->limitwidth-35;
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003522:	f1a3 0223 	sub.w	r2, r3, #35	@ 0x23
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	601a      	str	r2, [r3, #0]

			} else{
				enemy->x=FutureX;
			}
			break;
 800352a:	e02f      	b.n	800358c <E3_MoveX+0xe0>
				enemy->x=FutureX;
 800352c:	68fa      	ldr	r2, [r7, #12]
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	601a      	str	r2, [r3, #0]
			break;
 8003532:	e02b      	b.n	800358c <E3_MoveX+0xe0>
		case 2:
			FutureX=enemy->x+50;
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	3332      	adds	r3, #50	@ 0x32
 800353a:	60fb      	str	r3, [r7, #12]
			if (FutureX>=enemy->limitwidth){
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	429a      	cmp	r2, r3
 8003544:	d806      	bhi.n	8003554 <E3_MoveX+0xa8>
				enemy->x=enemy->limitwidth_i+50;
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800354a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	601a      	str	r2, [r3, #0]

			} else{
				enemy->x=FutureX;
			}
			break;
 8003552:	e01b      	b.n	800358c <E3_MoveX+0xe0>
				enemy->x=FutureX;
 8003554:	68fa      	ldr	r2, [r7, #12]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	601a      	str	r2, [r3, #0]
			break;
 800355a:	e017      	b.n	800358c <E3_MoveX+0xe0>
		case 3:
					FutureX=enemy->x-50;
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	3b32      	subs	r3, #50	@ 0x32
 8003562:	60fb      	str	r3, [r7, #12]
					if (FutureX<=enemy->limitwidth_i){
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003568:	68fb      	ldr	r3, [r7, #12]
 800356a:	429a      	cmp	r2, r3
 800356c:	d306      	bcc.n	800357c <E3_MoveX+0xd0>
						enemy->x=enemy->limitwidth-35;
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003572:	f1a3 0223 	sub.w	r2, r3, #35	@ 0x23
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	601a      	str	r2, [r3, #0]

					} else{
						enemy->x=FutureX;
					}
					break;
 800357a:	e007      	b.n	800358c <E3_MoveX+0xe0>
						enemy->x=FutureX;
 800357c:	68fa      	ldr	r2, [r7, #12]
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	601a      	str	r2, [r3, #0]
					break;
 8003582:	e003      	b.n	800358c <E3_MoveX+0xe0>
		case 4:
			enemy->Place=0;
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2200      	movs	r2, #0
 8003588:	64da      	str	r2, [r3, #76]	@ 0x4c
		}
	}
}
 800358a:	e7ff      	b.n	800358c <E3_MoveX+0xe0>
 800358c:	bf00      	nop
 800358e:	3714      	adds	r7, #20
 8003590:	46bd      	mov	sp, r7
 8003592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003596:	4770      	bx	lr

08003598 <initPlayer>:

/* Funciones Jugador ---------------------------------------------------*/
 void initPlayer(player* player, unsigned int startX, unsigned int startY, unsigned int playerWidth, unsigned int playerHeight, unsigned int speed, unsigned int life, unsigned int limitWidth, unsigned int limitHeight,unsigned int limitWidth_i) {
 8003598:	b580      	push	{r7, lr}
 800359a:	b08a      	sub	sp, #40	@ 0x28
 800359c:	af06      	add	r7, sp, #24
 800359e:	60f8      	str	r0, [r7, #12]
 80035a0:	60b9      	str	r1, [r7, #8]
 80035a2:	607a      	str	r2, [r7, #4]
 80035a4:	603b      	str	r3, [r7, #0]
    // Inicializar las propiedades del jugador
    player->x = startX;
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	68ba      	ldr	r2, [r7, #8]
 80035aa:	601a      	str	r2, [r3, #0]
    player->y = startY;
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	687a      	ldr	r2, [r7, #4]
 80035b0:	605a      	str	r2, [r3, #4]
    player->width = playerWidth;
 80035b2:	68fb      	ldr	r3, [r7, #12]
 80035b4:	683a      	ldr	r2, [r7, #0]
 80035b6:	609a      	str	r2, [r3, #8]
    player->height = playerHeight;
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	69ba      	ldr	r2, [r7, #24]
 80035bc:	60da      	str	r2, [r3, #12]
    player->speed = speed;
 80035be:	68fb      	ldr	r3, [r7, #12]
 80035c0:	69fa      	ldr	r2, [r7, #28]
 80035c2:	611a      	str	r2, [r3, #16]
    player->life = life;
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	6a3a      	ldr	r2, [r7, #32]
 80035c8:	615a      	str	r2, [r3, #20]
    player->score = 0;          // Puntuación inicial en 0
 80035ca:	68fb      	ldr	r3, [r7, #12]
 80035cc:	2200      	movs	r2, #0
 80035ce:	619a      	str	r2, [r3, #24]
    player->isAlive = 1;        // El jugador comienza vivo
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	2201      	movs	r2, #1
 80035d4:	61da      	str	r2, [r3, #28]
    player->direction = 2;      // Dirección inicial (abajo)
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	2202      	movs	r2, #2
 80035da:	621a      	str	r2, [r3, #32]
    player->limitWidth = limitWidth;
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80035e0:	625a      	str	r2, [r3, #36]	@ 0x24
    player->limitWidth_i = limitWidth_i; //
 80035e2:	68fb      	ldr	r3, [r7, #12]
 80035e4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80035e6:	62da      	str	r2, [r3, #44]	@ 0x2c
    player->limitHeight = limitHeight;
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80035ec:	629a      	str	r2, [r3, #40]	@ 0x28
    player->IsAttack = 0;
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	2200      	movs	r2, #0
 80035f2:	655a      	str	r2, [r3, #84]	@ 0x54
    player->animationAttack=7;
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	4a27      	ldr	r2, [pc, #156]	@ (8003694 <initPlayer+0xfc>)
 80035f8:	659a      	str	r2, [r3, #88]	@ 0x58
	player-> IsDamage=0;
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	2200      	movs	r2, #0
 80035fe:	65da      	str	r2, [r3, #92]	@ 0x5c
	player-> animationDamage=3;
 8003600:	68fb      	ldr	r3, [r7, #12]
 8003602:	4a25      	ldr	r2, [pc, #148]	@ (8003698 <initPlayer+0x100>)
 8003604:	661a      	str	r2, [r3, #96]	@ 0x60
	player-> animationDie=4;
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	f04f 4281 	mov.w	r2, #1082130432	@ 0x40800000
 800360c:	669a      	str	r2, [r3, #104]	@ 0x68
	player->  IsDie=0;
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	2200      	movs	r2, #0
 8003612:	665a      	str	r2, [r3, #100]	@ 0x64
	player-> playerLevel=0;
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	2200      	movs	r2, #0
 8003618:	66da      	str	r2, [r3, #108]	@ 0x6c

    // Dibujar el jugador en pantalla
    LCD_Sprite(player->x - (18 / 2)+2, player->y - (23 / 2+4), 18, 23, LinkAttackDown_18x23_6, 6, 5, 0, 0);
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	681b      	ldr	r3, [r3, #0]
 800361e:	3b07      	subs	r3, #7
 8003620:	4618      	mov	r0, r3
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	685b      	ldr	r3, [r3, #4]
 8003626:	3b0f      	subs	r3, #15
 8003628:	4619      	mov	r1, r3
 800362a:	2300      	movs	r3, #0
 800362c:	9304      	str	r3, [sp, #16]
 800362e:	2300      	movs	r3, #0
 8003630:	9303      	str	r3, [sp, #12]
 8003632:	2305      	movs	r3, #5
 8003634:	9302      	str	r3, [sp, #8]
 8003636:	2306      	movs	r3, #6
 8003638:	9301      	str	r3, [sp, #4]
 800363a:	4b18      	ldr	r3, [pc, #96]	@ (800369c <initPlayer+0x104>)
 800363c:	9300      	str	r3, [sp, #0]
 800363e:	2317      	movs	r3, #23
 8003640:	2212      	movs	r2, #18
 8003642:	f7fe fa69 	bl	8001b18 <LCD_Sprite>
    //FillRect(player->x , player->y, 1, 1, 0x000000);

    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	681a      	ldr	r2, [r3, #0]
 800364a:	68fb      	ldr	r3, [r7, #12]
 800364c:	689b      	ldr	r3, [r3, #8]
 800364e:	085b      	lsrs	r3, r3, #1
 8003650:	1ad2      	subs	r2, r2, r3
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	63da      	str	r2, [r3, #60]	@ 0x3c
    player->playerRight=(player->x+(player->width / 2)-1);
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	689b      	ldr	r3, [r3, #8]
 800365e:	085b      	lsrs	r3, r3, #1
 8003660:	4413      	add	r3, r2
 8003662:	1e5a      	subs	r2, r3, #1
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	641a      	str	r2, [r3, #64]	@ 0x40
    player->playerUp=player->y-(player->height / 2);
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	685a      	ldr	r2, [r3, #4]
 800366c:	68fb      	ldr	r3, [r7, #12]
 800366e:	68db      	ldr	r3, [r3, #12]
 8003670:	085b      	lsrs	r3, r3, #1
 8003672:	1ad2      	subs	r2, r2, r3
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)-1);
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	685a      	ldr	r2, [r3, #4]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	68db      	ldr	r3, [r3, #12]
 8003680:	085b      	lsrs	r3, r3, #1
 8003682:	4413      	add	r3, r2
 8003684:	1e5a      	subs	r2, r3, #1
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	635a      	str	r2, [r3, #52]	@ 0x34

}
 800368a:	bf00      	nop
 800368c:	3710      	adds	r7, #16
 800368e:	46bd      	mov	sp, r7
 8003690:	bd80      	pop	{r7, pc}
 8003692:	bf00      	nop
 8003694:	40e00000 	.word	0x40e00000
 8003698:	40400000 	.word	0x40400000
 800369c:	20007df4 	.word	0x20007df4

080036a0 <playerCanMove>:

int playerCanMove(player* player, unsigned int direction) {
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b08a      	sub	sp, #40	@ 0x28
 80036a4:	af02      	add	r7, sp, #8
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	6039      	str	r1, [r7, #0]
	// Dirección de movimiento (0: arriba, 1: derecha, 2: abajo, 3: izquierda)
	switch(player->direction){
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	6a1b      	ldr	r3, [r3, #32]
 80036ae:	2b03      	cmp	r3, #3
 80036b0:	d851      	bhi.n	8003756 <playerCanMove+0xb6>
 80036b2:	a201      	add	r2, pc, #4	@ (adr r2, 80036b8 <playerCanMove+0x18>)
 80036b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80036b8:	080036c9 	.word	0x080036c9
 80036bc:	080036e7 	.word	0x080036e7
 80036c0:	08003709 	.word	0x08003709
 80036c4:	0800372b 	.word	0x0800372b
	case 0: //Colisiones HITBOX Superior
		int FutureplayerUp = (player->y - player->speed)-(player->height / 2);
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	685a      	ldr	r2, [r3, #4]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	691b      	ldr	r3, [r3, #16]
 80036d0:	1ad2      	subs	r2, r2, r3
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	68db      	ldr	r3, [r3, #12]
 80036d6:	085b      	lsrs	r3, r3, #1
 80036d8:	1ad3      	subs	r3, r2, r3
 80036da:	613b      	str	r3, [r7, #16]
		//Borde
		if (FutureplayerUp<=18){
 80036dc:	693b      	ldr	r3, [r7, #16]
 80036de:	2b12      	cmp	r3, #18
 80036e0:	dc34      	bgt.n	800374c <playerCanMove+0xac>
			return 0;
 80036e2:	2300      	movs	r3, #0
 80036e4:	e094      	b.n	8003810 <playerCanMove+0x170>
		}
		break;
	case 1: //Colisiones HITBOX Derecha
		int FutureplayerRight = ((player->x+ player->speed)+(player->width / 2));
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	681a      	ldr	r2, [r3, #0]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	691b      	ldr	r3, [r3, #16]
 80036ee:	441a      	add	r2, r3
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	689b      	ldr	r3, [r3, #8]
 80036f4:	085b      	lsrs	r3, r3, #1
 80036f6:	4413      	add	r3, r2
 80036f8:	617b      	str	r3, [r7, #20]
		//Borde
		if (FutureplayerRight>=player->limitWidth){
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80036fe:	697b      	ldr	r3, [r7, #20]
 8003700:	429a      	cmp	r2, r3
 8003702:	d825      	bhi.n	8003750 <playerCanMove+0xb0>
			return 0;
 8003704:	2300      	movs	r3, #0
 8003706:	e083      	b.n	8003810 <playerCanMove+0x170>
		}
		break;
	case 2: //Colisiones HITBOX Abajo
		int FutureplayerDown=((player->y+ player->speed)+(player->height / 2));
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	685a      	ldr	r2, [r3, #4]
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	691b      	ldr	r3, [r3, #16]
 8003710:	441a      	add	r2, r3
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	68db      	ldr	r3, [r3, #12]
 8003716:	085b      	lsrs	r3, r3, #1
 8003718:	4413      	add	r3, r2
 800371a:	61bb      	str	r3, [r7, #24]
		//Borde
		if (FutureplayerDown>=player->limitHeight){
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003720:	69bb      	ldr	r3, [r7, #24]
 8003722:	429a      	cmp	r2, r3
 8003724:	d816      	bhi.n	8003754 <playerCanMove+0xb4>
			return 0;
 8003726:	2300      	movs	r3, #0
 8003728:	e072      	b.n	8003810 <playerCanMove+0x170>
		}
		break;
	case 3: //Colisiones HITBOX Izquierda (Cambiar a Width_limite inferior)
		int FutureplayerLeft = ((player->x-player->speed)-(player->width / 2));
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	681a      	ldr	r2, [r3, #0]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	691b      	ldr	r3, [r3, #16]
 8003732:	1ad2      	subs	r2, r2, r3
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	689b      	ldr	r3, [r3, #8]
 8003738:	085b      	lsrs	r3, r3, #1
 800373a:	1ad3      	subs	r3, r2, r3
 800373c:	61fb      	str	r3, [r7, #28]
		//Borde
		if (FutureplayerLeft<=player->limitWidth_i){
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003742:	69fb      	ldr	r3, [r7, #28]
 8003744:	429a      	cmp	r2, r3
 8003746:	d306      	bcc.n	8003756 <playerCanMove+0xb6>
			return 0;
 8003748:	2300      	movs	r3, #0
 800374a:	e061      	b.n	8003810 <playerCanMove+0x170>
		break;
 800374c:	bf00      	nop
 800374e:	e002      	b.n	8003756 <playerCanMove+0xb6>
		break;
 8003750:	bf00      	nop
 8003752:	e000      	b.n	8003756 <playerCanMove+0xb6>
		break;
 8003754:	bf00      	nop
		}
	}

    // Variables para calcular la posición futura del jugador según la dirección
    int futureX = player->x;
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	60fb      	str	r3, [r7, #12]
    int futureY = player->y;
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	685b      	ldr	r3, [r3, #4]
 8003760:	60bb      	str	r3, [r7, #8]

    if (player->PlayerNum==1){
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003766:	2b01      	cmp	r3, #1
 8003768:	d126      	bne.n	80037b8 <playerCanMove+0x118>
    //Colision con E1
    if (ColisionPlayer_e1(&e1_1, player, direction,futureX,futureY)==0){
 800376a:	683a      	ldr	r2, [r7, #0]
 800376c:	68bb      	ldr	r3, [r7, #8]
 800376e:	9300      	str	r3, [sp, #0]
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	6879      	ldr	r1, [r7, #4]
 8003774:	4828      	ldr	r0, [pc, #160]	@ (8003818 <playerCanMove+0x178>)
 8003776:	f7fe fd77 	bl	8002268 <ColisionPlayer_e1>
 800377a:	4603      	mov	r3, r0
 800377c:	2b00      	cmp	r3, #0
 800377e:	d101      	bne.n	8003784 <playerCanMove+0xe4>
    	return 0;
 8003780:	2300      	movs	r3, #0
 8003782:	e045      	b.n	8003810 <playerCanMove+0x170>
    }
    if (ColisionPlayer_e1(&e1_2, player, direction,futureX,futureY)==0){
 8003784:	683a      	ldr	r2, [r7, #0]
 8003786:	68bb      	ldr	r3, [r7, #8]
 8003788:	9300      	str	r3, [sp, #0]
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	6879      	ldr	r1, [r7, #4]
 800378e:	4823      	ldr	r0, [pc, #140]	@ (800381c <playerCanMove+0x17c>)
 8003790:	f7fe fd6a 	bl	8002268 <ColisionPlayer_e1>
 8003794:	4603      	mov	r3, r0
 8003796:	2b00      	cmp	r3, #0
 8003798:	d101      	bne.n	800379e <playerCanMove+0xfe>
        	return 0;
 800379a:	2300      	movs	r3, #0
 800379c:	e038      	b.n	8003810 <playerCanMove+0x170>
        }
    if (ColisionPlayer_e1(&e1_3, player, direction,futureX,futureY)==0){
 800379e:	683a      	ldr	r2, [r7, #0]
 80037a0:	68bb      	ldr	r3, [r7, #8]
 80037a2:	9300      	str	r3, [sp, #0]
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	6879      	ldr	r1, [r7, #4]
 80037a8:	481d      	ldr	r0, [pc, #116]	@ (8003820 <playerCanMove+0x180>)
 80037aa:	f7fe fd5d 	bl	8002268 <ColisionPlayer_e1>
 80037ae:	4603      	mov	r3, r0
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d101      	bne.n	80037b8 <playerCanMove+0x118>
        	return 0;
 80037b4:	2300      	movs	r3, #0
 80037b6:	e02b      	b.n	8003810 <playerCanMove+0x170>
        }
    }

    if (player->PlayerNum==2){
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80037bc:	2b02      	cmp	r3, #2
 80037be:	d126      	bne.n	800380e <playerCanMove+0x16e>
       //Colision con E1
       if (ColisionPlayer_e1(&e1_4, player, direction,futureX,futureY)==0){
 80037c0:	683a      	ldr	r2, [r7, #0]
 80037c2:	68bb      	ldr	r3, [r7, #8]
 80037c4:	9300      	str	r3, [sp, #0]
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	6879      	ldr	r1, [r7, #4]
 80037ca:	4816      	ldr	r0, [pc, #88]	@ (8003824 <playerCanMove+0x184>)
 80037cc:	f7fe fd4c 	bl	8002268 <ColisionPlayer_e1>
 80037d0:	4603      	mov	r3, r0
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d101      	bne.n	80037da <playerCanMove+0x13a>
       	return 0;
 80037d6:	2300      	movs	r3, #0
 80037d8:	e01a      	b.n	8003810 <playerCanMove+0x170>
       }
       if (ColisionPlayer_e1(&e1_5, player, direction,futureX,futureY)==0){
 80037da:	683a      	ldr	r2, [r7, #0]
 80037dc:	68bb      	ldr	r3, [r7, #8]
 80037de:	9300      	str	r3, [sp, #0]
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	6879      	ldr	r1, [r7, #4]
 80037e4:	4810      	ldr	r0, [pc, #64]	@ (8003828 <playerCanMove+0x188>)
 80037e6:	f7fe fd3f 	bl	8002268 <ColisionPlayer_e1>
 80037ea:	4603      	mov	r3, r0
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d101      	bne.n	80037f4 <playerCanMove+0x154>
           	return 0;
 80037f0:	2300      	movs	r3, #0
 80037f2:	e00d      	b.n	8003810 <playerCanMove+0x170>
           }
       if (ColisionPlayer_e1(&e1_6, player, direction,futureX,futureY)==0){
 80037f4:	683a      	ldr	r2, [r7, #0]
 80037f6:	68bb      	ldr	r3, [r7, #8]
 80037f8:	9300      	str	r3, [sp, #0]
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	6879      	ldr	r1, [r7, #4]
 80037fe:	480b      	ldr	r0, [pc, #44]	@ (800382c <playerCanMove+0x18c>)
 8003800:	f7fe fd32 	bl	8002268 <ColisionPlayer_e1>
 8003804:	4603      	mov	r3, r0
 8003806:	2b00      	cmp	r3, #0
 8003808:	d101      	bne.n	800380e <playerCanMove+0x16e>
           	return 0;
 800380a:	2300      	movs	r3, #0
 800380c:	e000      	b.n	8003810 <playerCanMove+0x170>
           }
       }
    // No hay colisiones, se puede mover
    return 1;
 800380e:	2301      	movs	r3, #1
}
 8003810:	4618      	mov	r0, r3
 8003812:	3720      	adds	r7, #32
 8003814:	46bd      	mov	sp, r7
 8003816:	bd80      	pop	{r7, pc}
 8003818:	2001c86c 	.word	0x2001c86c
 800381c:	2001c8a0 	.word	0x2001c8a0
 8003820:	2001c8d4 	.word	0x2001c8d4
 8003824:	2001c908 	.word	0x2001c908
 8003828:	2001c93c 	.word	0x2001c93c
 800382c:	2001c970 	.word	0x2001c970

08003830 <HitboxPlayer>:

void HitboxPlayer(player* player){
 8003830:	b590      	push	{r4, r7, lr}
 8003832:	b085      	sub	sp, #20
 8003834:	af02      	add	r7, sp, #8
 8003836:	6078      	str	r0, [r7, #4]

    //HITBOX DEBUG
    player->playerLeft=player->x-(player->width / 2);
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	681a      	ldr	r2, [r3, #0]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	689b      	ldr	r3, [r3, #8]
 8003840:	085b      	lsrs	r3, r3, #1
 8003842:	1ad2      	subs	r2, r2, r3
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	63da      	str	r2, [r3, #60]	@ 0x3c
    player->playerRight=(player->x+(player->width / 2)); //-1
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681a      	ldr	r2, [r3, #0]
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	689b      	ldr	r3, [r3, #8]
 8003850:	085b      	lsrs	r3, r3, #1
 8003852:	441a      	add	r2, r3
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	641a      	str	r2, [r3, #64]	@ 0x40
    player->playerUp=player->y-(player->height / 2);
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	685a      	ldr	r2, [r3, #4]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	68db      	ldr	r3, [r3, #12]
 8003860:	085b      	lsrs	r3, r3, #1
 8003862:	1ad2      	subs	r2, r2, r3
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	639a      	str	r2, [r3, #56]	@ 0x38
    player->playerDown=(player->y+(player->height / 2)); //-1
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	685a      	ldr	r2, [r3, #4]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	68db      	ldr	r3, [r3, #12]
 8003870:	085b      	lsrs	r3, r3, #1
 8003872:	441a      	add	r2, r3
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	635a      	str	r2, [r3, #52]	@ 0x34

    if (DrawHitbox==1){
 8003878:	4b47      	ldr	r3, [pc, #284]	@ (8003998 <HitboxPlayer+0x168>)
 800387a:	781b      	ldrb	r3, [r3, #0]
 800387c:	2b01      	cmp	r3, #1
 800387e:	d113      	bne.n	80038a8 <HitboxPlayer+0x78>
        	Rect(player->x - (player->width / 2), player->y - (player->height / 2), player->width, player->height, 0x0000);
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	681a      	ldr	r2, [r3, #0]
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	689b      	ldr	r3, [r3, #8]
 8003888:	085b      	lsrs	r3, r3, #1
 800388a:	1ad0      	subs	r0, r2, r3
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	685a      	ldr	r2, [r3, #4]
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	68db      	ldr	r3, [r3, #12]
 8003894:	085b      	lsrs	r3, r3, #1
 8003896:	1ad1      	subs	r1, r2, r3
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	689a      	ldr	r2, [r3, #8]
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	68db      	ldr	r3, [r3, #12]
 80038a0:	2400      	movs	r4, #0
 80038a2:	9400      	str	r4, [sp, #0]
 80038a4:	f7fe f860 	bl	8001968 <Rect>
        }
    if (DrawHitbox==2){
 80038a8:	4b3b      	ldr	r3, [pc, #236]	@ (8003998 <HitboxPlayer+0x168>)
 80038aa:	781b      	ldrb	r3, [r3, #0]
 80038ac:	2b02      	cmp	r3, #2
 80038ae:	d12b      	bne.n	8003908 <HitboxPlayer+0xd8>
		FillRect(player->playerLeft , player->y, 1, 1, 0xd685); //Izquierda
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	6859      	ldr	r1, [r3, #4]
 80038b8:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80038bc:	9300      	str	r3, [sp, #0]
 80038be:	2301      	movs	r3, #1
 80038c0:	2201      	movs	r2, #1
 80038c2:	f7fe f879 	bl	80019b8 <FillRect>
		FillRect(player->playerRight , player->y, 1, 1, 0xd685); //Derecha
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	6c18      	ldr	r0, [r3, #64]	@ 0x40
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	6859      	ldr	r1, [r3, #4]
 80038ce:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80038d2:	9300      	str	r3, [sp, #0]
 80038d4:	2301      	movs	r3, #1
 80038d6:	2201      	movs	r2, #1
 80038d8:	f7fe f86e 	bl	80019b8 <FillRect>
		FillRect(player->x , player->playerUp, 1, 1, 0xd685); //Arriba
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	6818      	ldr	r0, [r3, #0]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 80038e4:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80038e8:	9300      	str	r3, [sp, #0]
 80038ea:	2301      	movs	r3, #1
 80038ec:	2201      	movs	r2, #1
 80038ee:	f7fe f863 	bl	80019b8 <FillRect>
		FillRect(player->x , player->playerDown, 1, 1, 0xd685); //Abajo}
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	6818      	ldr	r0, [r3, #0]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80038fa:	f24d 6385 	movw	r3, #54917	@ 0xd685
 80038fe:	9300      	str	r3, [sp, #0]
 8003900:	2301      	movs	r3, #1
 8003902:	2201      	movs	r2, #1
 8003904:	f7fe f858 	bl	80019b8 <FillRect>
    }
    if (DrawHitbox==3){
 8003908:	4b23      	ldr	r3, [pc, #140]	@ (8003998 <HitboxPlayer+0x168>)
 800390a:	781b      	ldrb	r3, [r3, #0]
 800390c:	2b03      	cmp	r3, #3
 800390e:	d13f      	bne.n	8003990 <HitboxPlayer+0x160>
    	 Rect(player->x - (player->width / 2), player->y - (player->height / 2), player->width, player->height, 0x0000);
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681a      	ldr	r2, [r3, #0]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	689b      	ldr	r3, [r3, #8]
 8003918:	085b      	lsrs	r3, r3, #1
 800391a:	1ad0      	subs	r0, r2, r3
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	685a      	ldr	r2, [r3, #4]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	68db      	ldr	r3, [r3, #12]
 8003924:	085b      	lsrs	r3, r3, #1
 8003926:	1ad1      	subs	r1, r2, r3
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	689a      	ldr	r2, [r3, #8]
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	68db      	ldr	r3, [r3, #12]
 8003930:	2400      	movs	r4, #0
 8003932:	9400      	str	r4, [sp, #0]
 8003934:	f7fe f818 	bl	8001968 <Rect>
        FillRect(player->playerLeft , player->y, 1, 1, 0xd685); //Izquierda
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	6bd8      	ldr	r0, [r3, #60]	@ 0x3c
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	6859      	ldr	r1, [r3, #4]
 8003940:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003944:	9300      	str	r3, [sp, #0]
 8003946:	2301      	movs	r3, #1
 8003948:	2201      	movs	r2, #1
 800394a:	f7fe f835 	bl	80019b8 <FillRect>
        FillRect(player->playerRight , player->y, 1, 1, 0xd685); //Derecha
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	6c18      	ldr	r0, [r3, #64]	@ 0x40
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	6859      	ldr	r1, [r3, #4]
 8003956:	f24d 6385 	movw	r3, #54917	@ 0xd685
 800395a:	9300      	str	r3, [sp, #0]
 800395c:	2301      	movs	r3, #1
 800395e:	2201      	movs	r2, #1
 8003960:	f7fe f82a 	bl	80019b8 <FillRect>
        FillRect(player->x , player->playerUp, 1, 1, 0xd685); //Arriba
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	6818      	ldr	r0, [r3, #0]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	6b99      	ldr	r1, [r3, #56]	@ 0x38
 800396c:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003970:	9300      	str	r3, [sp, #0]
 8003972:	2301      	movs	r3, #1
 8003974:	2201      	movs	r2, #1
 8003976:	f7fe f81f 	bl	80019b8 <FillRect>
        FillRect(player->x , player->playerDown, 1, 1, 0xd685); //Abajo}
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	6818      	ldr	r0, [r3, #0]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003982:	f24d 6385 	movw	r3, #54917	@ 0xd685
 8003986:	9300      	str	r3, [sp, #0]
 8003988:	2301      	movs	r3, #1
 800398a:	2201      	movs	r2, #1
 800398c:	f7fe f814 	bl	80019b8 <FillRect>

        }
}
 8003990:	bf00      	nop
 8003992:	370c      	adds	r7, #12
 8003994:	46bd      	mov	sp, r7
 8003996:	bd90      	pop	{r4, r7, pc}
 8003998:	2001cadf 	.word	0x2001cadf

0800399c <PlayerHit>:

void PlayerHit(player* player, enemy_type1* enemy){
 800399c:	b480      	push	{r7}
 800399e:	b087      	sub	sp, #28
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
 80039a4:	6039      	str	r1, [r7, #0]
	if (enemy->isAlive == 1){
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	695b      	ldr	r3, [r3, #20]
 80039aa:	2b01      	cmp	r3, #1
 80039ac:	f040 80d0 	bne.w	8003b50 <PlayerHit+0x1b4>
		// Verificar si le pego a un enemigo del tipo 1
		// Dirección de movimiento (0: arriba, 1: derecha, 2: abajo, 3: izquierda)
		switch (player->direction){
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	6a1b      	ldr	r3, [r3, #32]
 80039b4:	2b03      	cmp	r3, #3
 80039b6:	f200 80cb 	bhi.w	8003b50 <PlayerHit+0x1b4>
 80039ba:	a201      	add	r2, pc, #4	@ (adr r2, 80039c0 <PlayerHit+0x24>)
 80039bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039c0:	080039d1 	.word	0x080039d1
 80039c4:	08003a8f 	.word	0x08003a8f
 80039c8:	08003a35 	.word	0x08003a35
 80039cc:	08003ae9 	.word	0x08003ae9
			case 0: { // Golpe hacia arriba
				int rangoY = player->y - 15;
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	685b      	ldr	r3, [r3, #4]
 80039d4:	3b0f      	subs	r3, #15
 80039d6:	60bb      	str	r3, [r7, #8]
				if (rangoY<=enemy->e1Down && rangoY>=enemy->e1Up){
 80039d8:	683b      	ldr	r3, [r7, #0]
 80039da:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80039dc:	68bb      	ldr	r3, [r7, #8]
 80039de:	429a      	cmp	r2, r3
 80039e0:	f0c0 80af 	bcc.w	8003b42 <PlayerHit+0x1a6>
 80039e4:	683b      	ldr	r3, [r7, #0]
 80039e6:	6a1a      	ldr	r2, [r3, #32]
 80039e8:	68bb      	ldr	r3, [r7, #8]
 80039ea:	429a      	cmp	r2, r3
 80039ec:	f200 80a9 	bhi.w	8003b42 <PlayerHit+0x1a6>
					if (player->x>=(enemy->e1Left-5) && player->x<=(enemy->e1Right+5)){
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681a      	ldr	r2, [r3, #0]
 80039f4:	683b      	ldr	r3, [r7, #0]
 80039f6:	699b      	ldr	r3, [r3, #24]
 80039f8:	3b05      	subs	r3, #5
 80039fa:	429a      	cmp	r2, r3
 80039fc:	f0c0 80a1 	bcc.w	8003b42 <PlayerHit+0x1a6>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681a      	ldr	r2, [r3, #0]
 8003a04:	683b      	ldr	r3, [r7, #0]
 8003a06:	69db      	ldr	r3, [r3, #28]
 8003a08:	3305      	adds	r3, #5
 8003a0a:	429a      	cmp	r2, r3
 8003a0c:	f200 8099 	bhi.w	8003b42 <PlayerHit+0x1a6>
						enemy->health -= 1;
 8003a10:	683b      	ldr	r3, [r7, #0]
 8003a12:	691b      	ldr	r3, [r3, #16]
 8003a14:	1e5a      	subs	r2, r3, #1
 8003a16:	683b      	ldr	r3, [r7, #0]
 8003a18:	611a      	str	r2, [r3, #16]
						if(enemy->health==0){
 8003a1a:	683b      	ldr	r3, [r7, #0]
 8003a1c:	691b      	ldr	r3, [r3, #16]
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	f040 808f 	bne.w	8003b42 <PlayerHit+0x1a6>
							enemy->isAlive=0;
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	2200      	movs	r2, #0
 8003a28:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8003a2a:	683b      	ldr	r3, [r7, #0]
 8003a2c:	f04f 0200 	mov.w	r2, #0
 8003a30:	631a      	str	r2, [r3, #48]	@ 0x30
						}
					}
				}
			break;
 8003a32:	e086      	b.n	8003b42 <PlayerHit+0x1a6>
			}
			case 2:{ //Golpe hacia abajo
				int rangoY_d= player->y + 15;
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	685b      	ldr	r3, [r3, #4]
 8003a38:	330f      	adds	r3, #15
 8003a3a:	613b      	str	r3, [r7, #16]
				if (rangoY_d<=enemy->e1Down && rangoY_d>=enemy->e1Up){
 8003a3c:	683b      	ldr	r3, [r7, #0]
 8003a3e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003a40:	693b      	ldr	r3, [r7, #16]
 8003a42:	429a      	cmp	r2, r3
 8003a44:	d37f      	bcc.n	8003b46 <PlayerHit+0x1aa>
 8003a46:	683b      	ldr	r3, [r7, #0]
 8003a48:	6a1a      	ldr	r2, [r3, #32]
 8003a4a:	693b      	ldr	r3, [r7, #16]
 8003a4c:	429a      	cmp	r2, r3
 8003a4e:	d87a      	bhi.n	8003b46 <PlayerHit+0x1aa>
					if (player->x>=(enemy->e1Left-5) && player->x<=(enemy->e1Right+5)){
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681a      	ldr	r2, [r3, #0]
 8003a54:	683b      	ldr	r3, [r7, #0]
 8003a56:	699b      	ldr	r3, [r3, #24]
 8003a58:	3b05      	subs	r3, #5
 8003a5a:	429a      	cmp	r2, r3
 8003a5c:	d373      	bcc.n	8003b46 <PlayerHit+0x1aa>
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681a      	ldr	r2, [r3, #0]
 8003a62:	683b      	ldr	r3, [r7, #0]
 8003a64:	69db      	ldr	r3, [r3, #28]
 8003a66:	3305      	adds	r3, #5
 8003a68:	429a      	cmp	r2, r3
 8003a6a:	d86c      	bhi.n	8003b46 <PlayerHit+0x1aa>
						enemy->health -= 1;
 8003a6c:	683b      	ldr	r3, [r7, #0]
 8003a6e:	691b      	ldr	r3, [r3, #16]
 8003a70:	1e5a      	subs	r2, r3, #1
 8003a72:	683b      	ldr	r3, [r7, #0]
 8003a74:	611a      	str	r2, [r3, #16]
						if(enemy->health==0){
 8003a76:	683b      	ldr	r3, [r7, #0]
 8003a78:	691b      	ldr	r3, [r3, #16]
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d163      	bne.n	8003b46 <PlayerHit+0x1aa>
							enemy->isAlive=0;
 8003a7e:	683b      	ldr	r3, [r7, #0]
 8003a80:	2200      	movs	r2, #0
 8003a82:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8003a84:	683b      	ldr	r3, [r7, #0]
 8003a86:	f04f 0200 	mov.w	r2, #0
 8003a8a:	631a      	str	r2, [r3, #48]	@ 0x30
						}
					}
				}
				break;
 8003a8c:	e05b      	b.n	8003b46 <PlayerHit+0x1aa>
			}
			case 1:{ //Golpe hacia derecha
				int rangoX= player->x + 20;
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	3314      	adds	r3, #20
 8003a94:	60fb      	str	r3, [r7, #12]
				if (rangoX<=enemy->e1Right && rangoX>=enemy->e1Left){
 8003a96:	683b      	ldr	r3, [r7, #0]
 8003a98:	69da      	ldr	r2, [r3, #28]
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	429a      	cmp	r2, r3
 8003a9e:	d354      	bcc.n	8003b4a <PlayerHit+0x1ae>
 8003aa0:	683b      	ldr	r3, [r7, #0]
 8003aa2:	699a      	ldr	r2, [r3, #24]
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	429a      	cmp	r2, r3
 8003aa8:	d84f      	bhi.n	8003b4a <PlayerHit+0x1ae>
					if (player->y>=(enemy->e1Down-15) && player->y<=(enemy->e1Up+20)){
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	685a      	ldr	r2, [r3, #4]
 8003aae:	683b      	ldr	r3, [r7, #0]
 8003ab0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ab2:	3b0f      	subs	r3, #15
 8003ab4:	429a      	cmp	r2, r3
 8003ab6:	d348      	bcc.n	8003b4a <PlayerHit+0x1ae>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	685a      	ldr	r2, [r3, #4]
 8003abc:	683b      	ldr	r3, [r7, #0]
 8003abe:	6a1b      	ldr	r3, [r3, #32]
 8003ac0:	3314      	adds	r3, #20
 8003ac2:	429a      	cmp	r2, r3
 8003ac4:	d841      	bhi.n	8003b4a <PlayerHit+0x1ae>
						enemy->health -= 1;
 8003ac6:	683b      	ldr	r3, [r7, #0]
 8003ac8:	691b      	ldr	r3, [r3, #16]
 8003aca:	1e5a      	subs	r2, r3, #1
 8003acc:	683b      	ldr	r3, [r7, #0]
 8003ace:	611a      	str	r2, [r3, #16]
						if(enemy->health==0){
 8003ad0:	683b      	ldr	r3, [r7, #0]
 8003ad2:	691b      	ldr	r3, [r3, #16]
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	d138      	bne.n	8003b4a <PlayerHit+0x1ae>
							enemy->isAlive=0;
 8003ad8:	683b      	ldr	r3, [r7, #0]
 8003ada:	2200      	movs	r2, #0
 8003adc:	615a      	str	r2, [r3, #20]
							enemy->animationDie=0;
 8003ade:	683b      	ldr	r3, [r7, #0]
 8003ae0:	f04f 0200 	mov.w	r2, #0
 8003ae4:	631a      	str	r2, [r3, #48]	@ 0x30
						}
					}
				}
				break;
 8003ae6:	e030      	b.n	8003b4a <PlayerHit+0x1ae>
			}
			case 3:{ //Golpe hacia izquierda
							int rangoX= player->x - 20;
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	3b14      	subs	r3, #20
 8003aee:	617b      	str	r3, [r7, #20]
							if (rangoX<=enemy->e1Right && rangoX>=enemy->e1Left){
 8003af0:	683b      	ldr	r3, [r7, #0]
 8003af2:	69da      	ldr	r2, [r3, #28]
 8003af4:	697b      	ldr	r3, [r7, #20]
 8003af6:	429a      	cmp	r2, r3
 8003af8:	d329      	bcc.n	8003b4e <PlayerHit+0x1b2>
 8003afa:	683b      	ldr	r3, [r7, #0]
 8003afc:	699a      	ldr	r2, [r3, #24]
 8003afe:	697b      	ldr	r3, [r7, #20]
 8003b00:	429a      	cmp	r2, r3
 8003b02:	d824      	bhi.n	8003b4e <PlayerHit+0x1b2>
								if (player->y>=(enemy->e1Down-15) && player->y<=(enemy->e1Up+20)){
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	685a      	ldr	r2, [r3, #4]
 8003b08:	683b      	ldr	r3, [r7, #0]
 8003b0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b0c:	3b0f      	subs	r3, #15
 8003b0e:	429a      	cmp	r2, r3
 8003b10:	d31d      	bcc.n	8003b4e <PlayerHit+0x1b2>
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	685a      	ldr	r2, [r3, #4]
 8003b16:	683b      	ldr	r3, [r7, #0]
 8003b18:	6a1b      	ldr	r3, [r3, #32]
 8003b1a:	3314      	adds	r3, #20
 8003b1c:	429a      	cmp	r2, r3
 8003b1e:	d816      	bhi.n	8003b4e <PlayerHit+0x1b2>
									enemy->health -= 1;
 8003b20:	683b      	ldr	r3, [r7, #0]
 8003b22:	691b      	ldr	r3, [r3, #16]
 8003b24:	1e5a      	subs	r2, r3, #1
 8003b26:	683b      	ldr	r3, [r7, #0]
 8003b28:	611a      	str	r2, [r3, #16]
									if(enemy->health==0){
 8003b2a:	683b      	ldr	r3, [r7, #0]
 8003b2c:	691b      	ldr	r3, [r3, #16]
 8003b2e:	2b00      	cmp	r3, #0
 8003b30:	d10d      	bne.n	8003b4e <PlayerHit+0x1b2>
										enemy->isAlive=0;
 8003b32:	683b      	ldr	r3, [r7, #0]
 8003b34:	2200      	movs	r2, #0
 8003b36:	615a      	str	r2, [r3, #20]
										enemy->animationDie=0;
 8003b38:	683b      	ldr	r3, [r7, #0]
 8003b3a:	f04f 0200 	mov.w	r2, #0
 8003b3e:	631a      	str	r2, [r3, #48]	@ 0x30
									}
								}
							}
							break;
 8003b40:	e005      	b.n	8003b4e <PlayerHit+0x1b2>
			break;
 8003b42:	bf00      	nop
 8003b44:	e004      	b.n	8003b50 <PlayerHit+0x1b4>
				break;
 8003b46:	bf00      	nop
 8003b48:	e002      	b.n	8003b50 <PlayerHit+0x1b4>
				break;
 8003b4a:	bf00      	nop
 8003b4c:	e000      	b.n	8003b50 <PlayerHit+0x1b4>
							break;
 8003b4e:	bf00      	nop
						}
		}
	}
}
 8003b50:	bf00      	nop
 8003b52:	371c      	adds	r7, #28
 8003b54:	46bd      	mov	sp, r7
 8003b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b5a:	4770      	bx	lr

08003b5c <PlayerAnimation>:

void PlayerAnimation(player* player){
 8003b5c:	b580      	push	{r7, lr}
 8003b5e:	b088      	sub	sp, #32
 8003b60:	af06      	add	r7, sp, #24
 8003b62:	6078      	str	r0, [r7, #4]
	if (player->isAlive==1){
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	69db      	ldr	r3, [r3, #28]
 8003b68:	2b01      	cmp	r3, #1
 8003b6a:	d16f      	bne.n	8003c4c <PlayerAnimation+0xf0>
		//(0: arriba, 1: derecha, 2: abajo, 3: izquierda)
		if (player->direction==0){
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	6a1b      	ldr	r3, [r3, #32]
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d117      	bne.n	8003ba4 <PlayerAnimation+0x48>
			LCD_Sprite(player->x - (18 / 2)+1, player->y - (26 / 2), 18, 26, LinkUpWalk180x26_10, 10, player->animationWalkUp, 0, 0);
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	3b08      	subs	r3, #8
 8003b7a:	4618      	mov	r0, r3
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	685b      	ldr	r3, [r3, #4]
 8003b80:	3b0d      	subs	r3, #13
 8003b82:	4619      	mov	r1, r3
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003b88:	461a      	mov	r2, r3
 8003b8a:	2300      	movs	r3, #0
 8003b8c:	9304      	str	r3, [sp, #16]
 8003b8e:	2300      	movs	r3, #0
 8003b90:	9303      	str	r3, [sp, #12]
 8003b92:	9202      	str	r2, [sp, #8]
 8003b94:	230a      	movs	r3, #10
 8003b96:	9301      	str	r3, [sp, #4]
 8003b98:	4b2e      	ldr	r3, [pc, #184]	@ (8003c54 <PlayerAnimation+0xf8>)
 8003b9a:	9300      	str	r3, [sp, #0]
 8003b9c:	231a      	movs	r3, #26
 8003b9e:	2212      	movs	r2, #18
 8003ba0:	f7fd ffba 	bl	8001b18 <LCD_Sprite>
		}
		if (player->direction==1){
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	6a1b      	ldr	r3, [r3, #32]
 8003ba8:	2b01      	cmp	r3, #1
 8003baa:	d117      	bne.n	8003bdc <PlayerAnimation+0x80>
			LCD_Sprite(player->x - (22 / 2)+1, player->y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, player->animationWalkRight, 1, 0);
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	3b0a      	subs	r3, #10
 8003bb2:	4618      	mov	r0, r3
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	685b      	ldr	r3, [r3, #4]
 8003bb8:	3b0b      	subs	r3, #11
 8003bba:	4619      	mov	r1, r3
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bc0:	461a      	mov	r2, r3
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	9304      	str	r3, [sp, #16]
 8003bc6:	2301      	movs	r3, #1
 8003bc8:	9303      	str	r3, [sp, #12]
 8003bca:	9202      	str	r2, [sp, #8]
 8003bcc:	230a      	movs	r3, #10
 8003bce:	9301      	str	r3, [sp, #4]
 8003bd0:	4b21      	ldr	r3, [pc, #132]	@ (8003c58 <PlayerAnimation+0xfc>)
 8003bd2:	9300      	str	r3, [sp, #0]
 8003bd4:	2317      	movs	r3, #23
 8003bd6:	2216      	movs	r2, #22
 8003bd8:	f7fd ff9e 	bl	8001b18 <LCD_Sprite>
		}
		if (player->direction==2){
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	6a1b      	ldr	r3, [r3, #32]
 8003be0:	2b02      	cmp	r3, #2
 8003be2:	d117      	bne.n	8003c14 <PlayerAnimation+0xb8>
			LCD_Sprite(player->x - (18 / 2)+1, player->y - (24 / 2)+1, 18, 24, LinkDownWalk180x24_10, 10, player->animationWalkDown, 0, 0);
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	3b08      	subs	r3, #8
 8003bea:	4618      	mov	r0, r3
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	685b      	ldr	r3, [r3, #4]
 8003bf0:	3b0b      	subs	r3, #11
 8003bf2:	4619      	mov	r1, r3
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003bf8:	461a      	mov	r2, r3
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	9304      	str	r3, [sp, #16]
 8003bfe:	2300      	movs	r3, #0
 8003c00:	9303      	str	r3, [sp, #12]
 8003c02:	9202      	str	r2, [sp, #8]
 8003c04:	230a      	movs	r3, #10
 8003c06:	9301      	str	r3, [sp, #4]
 8003c08:	4b14      	ldr	r3, [pc, #80]	@ (8003c5c <PlayerAnimation+0x100>)
 8003c0a:	9300      	str	r3, [sp, #0]
 8003c0c:	2318      	movs	r3, #24
 8003c0e:	2212      	movs	r2, #18
 8003c10:	f7fd ff82 	bl	8001b18 <LCD_Sprite>
			}
		if (player->direction==3){
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	6a1b      	ldr	r3, [r3, #32]
 8003c18:	2b03      	cmp	r3, #3
 8003c1a:	d117      	bne.n	8003c4c <PlayerAnimation+0xf0>

			LCD_Sprite(player->x - (22 / 2)+1, player->y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, player->animationWalkLeft, 0, 0);
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	3b0a      	subs	r3, #10
 8003c22:	4618      	mov	r0, r3
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	685b      	ldr	r3, [r3, #4]
 8003c28:	3b0b      	subs	r3, #11
 8003c2a:	4619      	mov	r1, r3
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003c30:	461a      	mov	r2, r3
 8003c32:	2300      	movs	r3, #0
 8003c34:	9304      	str	r3, [sp, #16]
 8003c36:	2300      	movs	r3, #0
 8003c38:	9303      	str	r3, [sp, #12]
 8003c3a:	9202      	str	r2, [sp, #8]
 8003c3c:	230a      	movs	r3, #10
 8003c3e:	9301      	str	r3, [sp, #4]
 8003c40:	4b05      	ldr	r3, [pc, #20]	@ (8003c58 <PlayerAnimation+0xfc>)
 8003c42:	9300      	str	r3, [sp, #0]
 8003c44:	2317      	movs	r3, #23
 8003c46:	2216      	movs	r2, #22
 8003c48:	f7fd ff66 	bl	8001b18 <LCD_Sprite>
			}
	}
}
 8003c4c:	bf00      	nop
 8003c4e:	3708      	adds	r7, #8
 8003c50:	46bd      	mov	sp, r7
 8003c52:	bd80      	pop	{r7, pc}
 8003c54:	20012428 	.word	0x20012428
 8003c58:	2000fca0 	.word	0x2000fca0
 8003c5c:	200148b8 	.word	0x200148b8

08003c60 <PlayerAttackAnimation>:

void PlayerAttackAnimation(player* player){
 8003c60:	b580      	push	{r7, lr}
 8003c62:	b08a      	sub	sp, #40	@ 0x28
 8003c64:	af06      	add	r7, sp, #24
 8003c66:	6078      	str	r0, [r7, #4]
	int variableAnimationAttack=player->animationAttack;
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 8003c6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c72:	ee17 3a90 	vmov	r3, s15
 8003c76:	60fb      	str	r3, [r7, #12]
	if (player->isAlive==1){
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	69db      	ldr	r3, [r3, #28]
 8003c7c:	2b01      	cmp	r3, #1
 8003c7e:	f040 8082 	bne.w	8003d86 <PlayerAttackAnimation+0x126>
		if (variableAnimationAttack<6){
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	2b05      	cmp	r3, #5
 8003c86:	dc7b      	bgt.n	8003d80 <PlayerAttackAnimation+0x120>
			//(0: arriba, 1: derecha, 2: abajo, 3: izquierda)
			if (player->direction==0){
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	6a1b      	ldr	r3, [r3, #32]
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d115      	bne.n	8003cbc <PlayerAttackAnimation+0x5c>

				LCD_Sprite(player->x - (18 / 2)+1, player->y - (22 / 2), 18, 22, LinkAttackUp_18x22_6, 6, variableAnimationAttack, 0, 0);
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	3b08      	subs	r3, #8
 8003c96:	4618      	mov	r0, r3
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	685b      	ldr	r3, [r3, #4]
 8003c9c:	3b0b      	subs	r3, #11
 8003c9e:	4619      	mov	r1, r3
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	9304      	str	r3, [sp, #16]
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	9303      	str	r3, [sp, #12]
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	9302      	str	r3, [sp, #8]
 8003cac:	2306      	movs	r3, #6
 8003cae:	9301      	str	r3, [sp, #4]
 8003cb0:	4b39      	ldr	r3, [pc, #228]	@ (8003d98 <PlayerAttackAnimation+0x138>)
 8003cb2:	9300      	str	r3, [sp, #0]
 8003cb4:	2316      	movs	r3, #22
 8003cb6:	2212      	movs	r2, #18
 8003cb8:	f7fd ff2e 	bl	8001b18 <LCD_Sprite>
			}
			if (player->direction==1){
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	6a1b      	ldr	r3, [r3, #32]
 8003cc0:	2b01      	cmp	r3, #1
 8003cc2:	d115      	bne.n	8003cf0 <PlayerAttackAnimation+0x90>

				LCD_Sprite(player->x - (20 / 2)+1, player->y - (22 / 2), 20, 22, LinkAttackSide_20x22_6, 6, variableAnimationAttack, 1, 0);
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	3b09      	subs	r3, #9
 8003cca:	4618      	mov	r0, r3
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	685b      	ldr	r3, [r3, #4]
 8003cd0:	3b0b      	subs	r3, #11
 8003cd2:	4619      	mov	r1, r3
 8003cd4:	2300      	movs	r3, #0
 8003cd6:	9304      	str	r3, [sp, #16]
 8003cd8:	2301      	movs	r3, #1
 8003cda:	9303      	str	r3, [sp, #12]
 8003cdc:	68fb      	ldr	r3, [r7, #12]
 8003cde:	9302      	str	r3, [sp, #8]
 8003ce0:	2306      	movs	r3, #6
 8003ce2:	9301      	str	r3, [sp, #4]
 8003ce4:	4b2d      	ldr	r3, [pc, #180]	@ (8003d9c <PlayerAttackAnimation+0x13c>)
 8003ce6:	9300      	str	r3, [sp, #0]
 8003ce8:	2316      	movs	r3, #22
 8003cea:	2214      	movs	r2, #20
 8003cec:	f7fd ff14 	bl	8001b18 <LCD_Sprite>
			}
			if (player->direction==2){
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	6a1b      	ldr	r3, [r3, #32]
 8003cf4:	2b02      	cmp	r3, #2
 8003cf6:	d115      	bne.n	8003d24 <PlayerAttackAnimation+0xc4>

				LCD_Sprite(player->x - (18 / 2)+1,player->y - (23 / 2), 18, 23, LinkAttackDown_18x23_6, 6, variableAnimationAttack, 0, 0);
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	3b08      	subs	r3, #8
 8003cfe:	4618      	mov	r0, r3
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	685b      	ldr	r3, [r3, #4]
 8003d04:	3b0b      	subs	r3, #11
 8003d06:	4619      	mov	r1, r3
 8003d08:	2300      	movs	r3, #0
 8003d0a:	9304      	str	r3, [sp, #16]
 8003d0c:	2300      	movs	r3, #0
 8003d0e:	9303      	str	r3, [sp, #12]
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	9302      	str	r3, [sp, #8]
 8003d14:	2306      	movs	r3, #6
 8003d16:	9301      	str	r3, [sp, #4]
 8003d18:	4b21      	ldr	r3, [pc, #132]	@ (8003da0 <PlayerAttackAnimation+0x140>)
 8003d1a:	9300      	str	r3, [sp, #0]
 8003d1c:	2317      	movs	r3, #23
 8003d1e:	2212      	movs	r2, #18
 8003d20:	f7fd fefa 	bl	8001b18 <LCD_Sprite>
					}
			if (player->direction==3){
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	6a1b      	ldr	r3, [r3, #32]
 8003d28:	2b03      	cmp	r3, #3
 8003d2a:	d115      	bne.n	8003d58 <PlayerAttackAnimation+0xf8>

				LCD_Sprite(player->x - (20 / 2)+1, player->y - (22 / 2), 20, 22, LinkAttackSide_20x22_6, 6, variableAnimationAttack, 0, 0);
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	3b09      	subs	r3, #9
 8003d32:	4618      	mov	r0, r3
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	685b      	ldr	r3, [r3, #4]
 8003d38:	3b0b      	subs	r3, #11
 8003d3a:	4619      	mov	r1, r3
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	9304      	str	r3, [sp, #16]
 8003d40:	2300      	movs	r3, #0
 8003d42:	9303      	str	r3, [sp, #12]
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	9302      	str	r3, [sp, #8]
 8003d48:	2306      	movs	r3, #6
 8003d4a:	9301      	str	r3, [sp, #4]
 8003d4c:	4b13      	ldr	r3, [pc, #76]	@ (8003d9c <PlayerAttackAnimation+0x13c>)
 8003d4e:	9300      	str	r3, [sp, #0]
 8003d50:	2316      	movs	r3, #22
 8003d52:	2214      	movs	r2, #20
 8003d54:	f7fd fee0 	bl	8001b18 <LCD_Sprite>
					}
			player->animationAttack+=0.2;
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	f7fc fc13 	bl	8000588 <__aeabi_f2d>
 8003d62:	a30b      	add	r3, pc, #44	@ (adr r3, 8003d90 <PlayerAttackAnimation+0x130>)
 8003d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d68:	f7fc fab0 	bl	80002cc <__adddf3>
 8003d6c:	4602      	mov	r2, r0
 8003d6e:	460b      	mov	r3, r1
 8003d70:	4610      	mov	r0, r2
 8003d72:	4619      	mov	r1, r3
 8003d74:	f7fc fc60 	bl	8000638 <__aeabi_d2f>
 8003d78:	4602      	mov	r2, r0
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	659a      	str	r2, [r3, #88]	@ 0x58
			}else{
				player->IsAttack=0;
			}
		}
}
 8003d7e:	e002      	b.n	8003d86 <PlayerAttackAnimation+0x126>
				player->IsAttack=0;
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	2200      	movs	r2, #0
 8003d84:	655a      	str	r2, [r3, #84]	@ 0x54
}
 8003d86:	bf00      	nop
 8003d88:	3710      	adds	r7, #16
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	bd80      	pop	{r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	9999999a 	.word	0x9999999a
 8003d94:	3fc99999 	.word	0x3fc99999
 8003d98:	2000a5fc 	.word	0x2000a5fc
 8003d9c:	2000915c 	.word	0x2000915c
 8003da0:	20007df4 	.word	0x20007df4
 8003da4:	00000000 	.word	0x00000000

08003da8 <PlayerDamageAnimation>:

void PlayerDamageAnimation(player* player){
 8003da8:	b580      	push	{r7, lr}
 8003daa:	b08a      	sub	sp, #40	@ 0x28
 8003dac:	af06      	add	r7, sp, #24
 8003dae:	6078      	str	r0, [r7, #4]
	int variableAnimationDamage=player->animationDamage;
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	edd3 7a18 	vldr	s15, [r3, #96]	@ 0x60
 8003db6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003dba:	ee17 3a90 	vmov	r3, s15
 8003dbe:	60fb      	str	r3, [r7, #12]
	if (player->isAlive==1){
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	69db      	ldr	r3, [r3, #28]
 8003dc4:	2b01      	cmp	r3, #1
 8003dc6:	f040 8082 	bne.w	8003ece <PlayerDamageAnimation+0x126>
		if (variableAnimationDamage<3){
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2b02      	cmp	r3, #2
 8003dce:	dc7b      	bgt.n	8003ec8 <PlayerDamageAnimation+0x120>
			//(0: arriba, 1: derecha, 2: abajo, 3: izquierda)
			if (player->direction==0){
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	6a1b      	ldr	r3, [r3, #32]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d115      	bne.n	8003e04 <PlayerDamageAnimation+0x5c>

				LCD_Sprite(player->x - (18 / 2)+1, player->y - (20 / 2), 18, 20, LinkDamageUp_18x20_3, 3, variableAnimationDamage, 0, 0);
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	3b08      	subs	r3, #8
 8003dde:	4618      	mov	r0, r3
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	685b      	ldr	r3, [r3, #4]
 8003de4:	3b0a      	subs	r3, #10
 8003de6:	4619      	mov	r1, r3
 8003de8:	2300      	movs	r3, #0
 8003dea:	9304      	str	r3, [sp, #16]
 8003dec:	2300      	movs	r3, #0
 8003dee:	9303      	str	r3, [sp, #12]
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	9302      	str	r3, [sp, #8]
 8003df4:	2303      	movs	r3, #3
 8003df6:	9301      	str	r3, [sp, #4]
 8003df8:	4b39      	ldr	r3, [pc, #228]	@ (8003ee0 <PlayerDamageAnimation+0x138>)
 8003dfa:	9300      	str	r3, [sp, #0]
 8003dfc:	2314      	movs	r3, #20
 8003dfe:	2212      	movs	r2, #18
 8003e00:	f7fd fe8a 	bl	8001b18 <LCD_Sprite>
			}
			if (player->direction==1){
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	6a1b      	ldr	r3, [r3, #32]
 8003e08:	2b01      	cmp	r3, #1
 8003e0a:	d115      	bne.n	8003e38 <PlayerDamageAnimation+0x90>

				LCD_Sprite(player->x - (20 / 2)+1, player->y - (21 / 2), 20, 21, LinkDamageSide_20x21_3, 3, variableAnimationDamage, 1, 0);
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	3b09      	subs	r3, #9
 8003e12:	4618      	mov	r0, r3
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	685b      	ldr	r3, [r3, #4]
 8003e18:	3b0a      	subs	r3, #10
 8003e1a:	4619      	mov	r1, r3
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	9304      	str	r3, [sp, #16]
 8003e20:	2301      	movs	r3, #1
 8003e22:	9303      	str	r3, [sp, #12]
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	9302      	str	r3, [sp, #8]
 8003e28:	2303      	movs	r3, #3
 8003e2a:	9301      	str	r3, [sp, #4]
 8003e2c:	4b2d      	ldr	r3, [pc, #180]	@ (8003ee4 <PlayerDamageAnimation+0x13c>)
 8003e2e:	9300      	str	r3, [sp, #0]
 8003e30:	2315      	movs	r3, #21
 8003e32:	2214      	movs	r2, #20
 8003e34:	f7fd fe70 	bl	8001b18 <LCD_Sprite>
			}
			if (player->direction==2){
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	6a1b      	ldr	r3, [r3, #32]
 8003e3c:	2b02      	cmp	r3, #2
 8003e3e:	d115      	bne.n	8003e6c <PlayerDamageAnimation+0xc4>

				LCD_Sprite(player->x - (20 / 2)+1, player->y - (21 / 2), 20, 21, LinkDamageDown_20x21_3, 3, variableAnimationDamage, 0, 0);
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	3b09      	subs	r3, #9
 8003e46:	4618      	mov	r0, r3
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	685b      	ldr	r3, [r3, #4]
 8003e4c:	3b0a      	subs	r3, #10
 8003e4e:	4619      	mov	r1, r3
 8003e50:	2300      	movs	r3, #0
 8003e52:	9304      	str	r3, [sp, #16]
 8003e54:	2300      	movs	r3, #0
 8003e56:	9303      	str	r3, [sp, #12]
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	9302      	str	r3, [sp, #8]
 8003e5c:	2303      	movs	r3, #3
 8003e5e:	9301      	str	r3, [sp, #4]
 8003e60:	4b21      	ldr	r3, [pc, #132]	@ (8003ee8 <PlayerDamageAnimation+0x140>)
 8003e62:	9300      	str	r3, [sp, #0]
 8003e64:	2315      	movs	r3, #21
 8003e66:	2214      	movs	r2, #20
 8003e68:	f7fd fe56 	bl	8001b18 <LCD_Sprite>
					}
			if (player->direction==3){
 8003e6c:	687b      	ldr	r3, [r7, #4]
 8003e6e:	6a1b      	ldr	r3, [r3, #32]
 8003e70:	2b03      	cmp	r3, #3
 8003e72:	d115      	bne.n	8003ea0 <PlayerDamageAnimation+0xf8>

				LCD_Sprite(player->x - (20 / 2)+1, player->y - (21 / 2), 20, 21, LinkDamageSide_20x21_3, 3, variableAnimationDamage, 0, 0);
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	3b09      	subs	r3, #9
 8003e7a:	4618      	mov	r0, r3
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	685b      	ldr	r3, [r3, #4]
 8003e80:	3b0a      	subs	r3, #10
 8003e82:	4619      	mov	r1, r3
 8003e84:	2300      	movs	r3, #0
 8003e86:	9304      	str	r3, [sp, #16]
 8003e88:	2300      	movs	r3, #0
 8003e8a:	9303      	str	r3, [sp, #12]
 8003e8c:	68fb      	ldr	r3, [r7, #12]
 8003e8e:	9302      	str	r3, [sp, #8]
 8003e90:	2303      	movs	r3, #3
 8003e92:	9301      	str	r3, [sp, #4]
 8003e94:	4b13      	ldr	r3, [pc, #76]	@ (8003ee4 <PlayerDamageAnimation+0x13c>)
 8003e96:	9300      	str	r3, [sp, #0]
 8003e98:	2315      	movs	r3, #21
 8003e9a:	2214      	movs	r2, #20
 8003e9c:	f7fd fe3c 	bl	8001b18 <LCD_Sprite>
					}
			player->animationDamage+=0.2;
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ea4:	4618      	mov	r0, r3
 8003ea6:	f7fc fb6f 	bl	8000588 <__aeabi_f2d>
 8003eaa:	a30b      	add	r3, pc, #44	@ (adr r3, 8003ed8 <PlayerDamageAnimation+0x130>)
 8003eac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003eb0:	f7fc fa0c 	bl	80002cc <__adddf3>
 8003eb4:	4602      	mov	r2, r0
 8003eb6:	460b      	mov	r3, r1
 8003eb8:	4610      	mov	r0, r2
 8003eba:	4619      	mov	r1, r3
 8003ebc:	f7fc fbbc 	bl	8000638 <__aeabi_d2f>
 8003ec0:	4602      	mov	r2, r0
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	661a      	str	r2, [r3, #96]	@ 0x60
			}else{
				player->IsDamage=0;
			}
		}
}
 8003ec6:	e002      	b.n	8003ece <PlayerDamageAnimation+0x126>
				player->IsDamage=0;
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	2200      	movs	r2, #0
 8003ecc:	65da      	str	r2, [r3, #92]	@ 0x5c
}
 8003ece:	bf00      	nop
 8003ed0:	3710      	adds	r7, #16
 8003ed2:	46bd      	mov	sp, r7
 8003ed4:	bd80      	pop	{r7, pc}
 8003ed6:	bf00      	nop
 8003ed8:	9999999a 	.word	0x9999999a
 8003edc:	3fc99999 	.word	0x3fc99999
 8003ee0:	20004fd4 	.word	0x20004fd4
 8003ee4:	20005844 	.word	0x20005844
 8003ee8:	2000621c 	.word	0x2000621c
 8003eec:	00000000 	.word	0x00000000

08003ef0 <PlayerDieAnimation>:

void PlayerDieAnimation(player* player){
 8003ef0:	b590      	push	{r4, r7, lr}
 8003ef2:	b08b      	sub	sp, #44	@ 0x2c
 8003ef4:	af06      	add	r7, sp, #24
 8003ef6:	6078      	str	r0, [r7, #4]
	int variableAnimationDie=player->animationDie;
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	edd3 7a1a 	vldr	s15, [r3, #104]	@ 0x68
 8003efe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003f02:	ee17 3a90 	vmov	r3, s15
 8003f06:	60fb      	str	r3, [r7, #12]
	if (player->isAlive==0){
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	69db      	ldr	r3, [r3, #28]
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d143      	bne.n	8003f98 <PlayerDieAnimation+0xa8>
		if (variableAnimationDie<4){
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	2b03      	cmp	r3, #3
 8003f14:	dc40      	bgt.n	8003f98 <PlayerDieAnimation+0xa8>
			FillRect(player->x - (player->width / 2)+1, player->y - (player->height / 2), player->width+1, player->height+1, 0xFE8B);
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	681a      	ldr	r2, [r3, #0]
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	689b      	ldr	r3, [r3, #8]
 8003f1e:	085b      	lsrs	r3, r3, #1
 8003f20:	1ad3      	subs	r3, r2, r3
 8003f22:	1c58      	adds	r0, r3, #1
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	685a      	ldr	r2, [r3, #4]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	68db      	ldr	r3, [r3, #12]
 8003f2c:	085b      	lsrs	r3, r3, #1
 8003f2e:	1ad1      	subs	r1, r2, r3
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	689b      	ldr	r3, [r3, #8]
 8003f34:	1c5a      	adds	r2, r3, #1
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	68db      	ldr	r3, [r3, #12]
 8003f3a:	3301      	adds	r3, #1
 8003f3c:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8003f40:	9400      	str	r4, [sp, #0]
 8003f42:	f7fd fd39 	bl	80019b8 <FillRect>
			LCD_Sprite(player->x - (24 / 2)+1, player->y - (24 / 2), 24,24, LinkDie_24x24_4, 4, variableAnimationDie, 0, 0);
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	3b0b      	subs	r3, #11
 8003f4c:	4618      	mov	r0, r3
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	685b      	ldr	r3, [r3, #4]
 8003f52:	3b0c      	subs	r3, #12
 8003f54:	4619      	mov	r1, r3
 8003f56:	2300      	movs	r3, #0
 8003f58:	9304      	str	r3, [sp, #16]
 8003f5a:	2300      	movs	r3, #0
 8003f5c:	9303      	str	r3, [sp, #12]
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	9302      	str	r3, [sp, #8]
 8003f62:	2304      	movs	r3, #4
 8003f64:	9301      	str	r3, [sp, #4]
 8003f66:	4b10      	ldr	r3, [pc, #64]	@ (8003fa8 <PlayerDieAnimation+0xb8>)
 8003f68:	9300      	str	r3, [sp, #0]
 8003f6a:	2318      	movs	r3, #24
 8003f6c:	2218      	movs	r2, #24
 8003f6e:	f7fd fdd3 	bl	8001b18 <LCD_Sprite>
			player->animationDie+=0.2;
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003f76:	4618      	mov	r0, r3
 8003f78:	f7fc fb06 	bl	8000588 <__aeabi_f2d>
 8003f7c:	a308      	add	r3, pc, #32	@ (adr r3, 8003fa0 <PlayerDieAnimation+0xb0>)
 8003f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f82:	f7fc f9a3 	bl	80002cc <__adddf3>
 8003f86:	4602      	mov	r2, r0
 8003f88:	460b      	mov	r3, r1
 8003f8a:	4610      	mov	r0, r2
 8003f8c:	4619      	mov	r1, r3
 8003f8e:	f7fc fb53 	bl	8000638 <__aeabi_d2f>
 8003f92:	4602      	mov	r2, r0
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	669a      	str	r2, [r3, #104]	@ 0x68
			}
		}
}
 8003f98:	bf00      	nop
 8003f9a:	3714      	adds	r7, #20
 8003f9c:	46bd      	mov	sp, r7
 8003f9e:	bd90      	pop	{r4, r7, pc}
 8003fa0:	9999999a 	.word	0x9999999a
 8003fa4:	3fc99999 	.word	0x3fc99999
 8003fa8:	20006bf4 	.word	0x20006bf4

08003fac <initLevelSolo>:

void initLevelSolo(void){
 8003fac:	b590      	push	{r4, r7, lr}
 8003fae:	b087      	sub	sp, #28
 8003fb0:	af06      	add	r7, sp, #24
	FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 8003fb2:	4b4d      	ldr	r3, [pc, #308]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fb4:	681a      	ldr	r2, [r3, #0]
 8003fb6:	4b4c      	ldr	r3, [pc, #304]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fb8:	689b      	ldr	r3, [r3, #8]
 8003fba:	085b      	lsrs	r3, r3, #1
 8003fbc:	1ad3      	subs	r3, r2, r3
 8003fbe:	1c58      	adds	r0, r3, #1
 8003fc0:	4b49      	ldr	r3, [pc, #292]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fc2:	685a      	ldr	r2, [r3, #4]
 8003fc4:	4b48      	ldr	r3, [pc, #288]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fc6:	68db      	ldr	r3, [r3, #12]
 8003fc8:	085b      	lsrs	r3, r3, #1
 8003fca:	1ad3      	subs	r3, r2, r3
 8003fcc:	1c59      	adds	r1, r3, #1
 8003fce:	4b46      	ldr	r3, [pc, #280]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fd0:	689b      	ldr	r3, [r3, #8]
 8003fd2:	1c5a      	adds	r2, r3, #1
 8003fd4:	4b44      	ldr	r3, [pc, #272]	@ (80040e8 <initLevelSolo+0x13c>)
 8003fd6:	68db      	ldr	r3, [r3, #12]
 8003fd8:	3301      	adds	r3, #1
 8003fda:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8003fde:	9400      	str	r4, [sp, #0]
 8003fe0:	f7fd fcea 	bl	80019b8 <FillRect>
	if (IniciarLevel==1){
 8003fe4:	4b41      	ldr	r3, [pc, #260]	@ (80040ec <initLevelSolo+0x140>)
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	2b01      	cmp	r3, #1
 8003fea:	d178      	bne.n	80040de <initLevelSolo+0x132>
		//Inicializar Jugador 1
		initPlayer(&p1, 160, 200, 22, 30, 5, 3, 300, 220,18);
 8003fec:	2312      	movs	r3, #18
 8003fee:	9305      	str	r3, [sp, #20]
 8003ff0:	23dc      	movs	r3, #220	@ 0xdc
 8003ff2:	9304      	str	r3, [sp, #16]
 8003ff4:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 8003ff8:	9303      	str	r3, [sp, #12]
 8003ffa:	2303      	movs	r3, #3
 8003ffc:	9302      	str	r3, [sp, #8]
 8003ffe:	2305      	movs	r3, #5
 8004000:	9301      	str	r3, [sp, #4]
 8004002:	231e      	movs	r3, #30
 8004004:	9300      	str	r3, [sp, #0]
 8004006:	2316      	movs	r3, #22
 8004008:	22c8      	movs	r2, #200	@ 0xc8
 800400a:	21a0      	movs	r1, #160	@ 0xa0
 800400c:	4836      	ldr	r0, [pc, #216]	@ (80040e8 <initLevelSolo+0x13c>)
 800400e:	f7ff fac3 	bl	8003598 <initPlayer>
		initPlayer(&p2, 160, 200, 22, 30, 5, 3, 300, 220,18);
 8004012:	2312      	movs	r3, #18
 8004014:	9305      	str	r3, [sp, #20]
 8004016:	23dc      	movs	r3, #220	@ 0xdc
 8004018:	9304      	str	r3, [sp, #16]
 800401a:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 800401e:	9303      	str	r3, [sp, #12]
 8004020:	2303      	movs	r3, #3
 8004022:	9302      	str	r3, [sp, #8]
 8004024:	2305      	movs	r3, #5
 8004026:	9301      	str	r3, [sp, #4]
 8004028:	231e      	movs	r3, #30
 800402a:	9300      	str	r3, [sp, #0]
 800402c:	2316      	movs	r3, #22
 800402e:	22c8      	movs	r2, #200	@ 0xc8
 8004030:	21a0      	movs	r1, #160	@ 0xa0
 8004032:	482f      	ldr	r0, [pc, #188]	@ (80040f0 <initLevelSolo+0x144>)
 8004034:	f7ff fab0 	bl	8003598 <initPlayer>
		p1.PlayerNum=1;
 8004038:	4b2b      	ldr	r3, [pc, #172]	@ (80040e8 <initLevelSolo+0x13c>)
 800403a:	2201      	movs	r2, #1
 800403c:	671a      	str	r2, [r3, #112]	@ 0x70
		p2.PlayerNum=2;
 800403e:	4b2c      	ldr	r3, [pc, #176]	@ (80040f0 <initLevelSolo+0x144>)
 8004040:	2202      	movs	r2, #2
 8004042:	671a      	str	r2, [r3, #112]	@ 0x70
		p2.isAlive=0;
 8004044:	4b2a      	ldr	r3, [pc, #168]	@ (80040f0 <initLevelSolo+0x144>)
 8004046:	2200      	movs	r2, #0
 8004048:	61da      	str	r2, [r3, #28]

		if (nivelActual1==NIVEL1){
 800404a:	4b2a      	ldr	r3, [pc, #168]	@ (80040f4 <initLevelSolo+0x148>)
 800404c:	781b      	ldrb	r3, [r3, #0]
 800404e:	b2db      	uxtb	r3, r3
 8004050:	2b00      	cmp	r3, #0
 8004052:	d11e      	bne.n	8004092 <initLevelSolo+0xe6>
			//Inicializar enemigo 1
			initEnemy1(&e1_1, 40, 80, 16, 19, 3);
 8004054:	2303      	movs	r3, #3
 8004056:	9301      	str	r3, [sp, #4]
 8004058:	2313      	movs	r3, #19
 800405a:	9300      	str	r3, [sp, #0]
 800405c:	2310      	movs	r3, #16
 800405e:	2250      	movs	r2, #80	@ 0x50
 8004060:	2128      	movs	r1, #40	@ 0x28
 8004062:	4825      	ldr	r0, [pc, #148]	@ (80040f8 <initLevelSolo+0x14c>)
 8004064:	f7fe f80e 	bl	8002084 <initEnemy1>
			//Inicializar enemigo 2
			initEnemy1(&e1_2, 160, 80, 16, 19, 3);
 8004068:	2303      	movs	r3, #3
 800406a:	9301      	str	r3, [sp, #4]
 800406c:	2313      	movs	r3, #19
 800406e:	9300      	str	r3, [sp, #0]
 8004070:	2310      	movs	r3, #16
 8004072:	2250      	movs	r2, #80	@ 0x50
 8004074:	21a0      	movs	r1, #160	@ 0xa0
 8004076:	4821      	ldr	r0, [pc, #132]	@ (80040fc <initLevelSolo+0x150>)
 8004078:	f7fe f804 	bl	8002084 <initEnemy1>
			//Inicializar enemigo 3
			initEnemy1(&e1_3, 280, 80, 16, 19, 3);}
 800407c:	2303      	movs	r3, #3
 800407e:	9301      	str	r3, [sp, #4]
 8004080:	2313      	movs	r3, #19
 8004082:	9300      	str	r3, [sp, #0]
 8004084:	2310      	movs	r3, #16
 8004086:	2250      	movs	r2, #80	@ 0x50
 8004088:	f44f 718c 	mov.w	r1, #280	@ 0x118
 800408c:	481c      	ldr	r0, [pc, #112]	@ (8004100 <initLevelSolo+0x154>)
 800408e:	f7fd fff9 	bl	8002084 <initEnemy1>

		  if (nivelActual1==NIVEL2){
 8004092:	4b18      	ldr	r3, [pc, #96]	@ (80040f4 <initLevelSolo+0x148>)
 8004094:	781b      	ldrb	r3, [r3, #0]
 8004096:	b2db      	uxtb	r3, r3
 8004098:	2b01      	cmp	r3, #1
 800409a:	d10c      	bne.n	80040b6 <initLevelSolo+0x10a>
			  initEnemy2(&e2_1, 160, 80, 16, 20, 3);
 800409c:	2303      	movs	r3, #3
 800409e:	9301      	str	r3, [sp, #4]
 80040a0:	2314      	movs	r3, #20
 80040a2:	9300      	str	r3, [sp, #0]
 80040a4:	2310      	movs	r3, #16
 80040a6:	2250      	movs	r2, #80	@ 0x50
 80040a8:	21a0      	movs	r1, #160	@ 0xa0
 80040aa:	4816      	ldr	r0, [pc, #88]	@ (8004104 <initLevelSolo+0x158>)
 80040ac:	f7fe fc0e 	bl	80028cc <initEnemy2>
			  IniciarLevel=0;
 80040b0:	4b0e      	ldr	r3, [pc, #56]	@ (80040ec <initLevelSolo+0x140>)
 80040b2:	2200      	movs	r2, #0
 80040b4:	601a      	str	r2, [r3, #0]
			  }

		  if (nivelActual1==NIVEL3){
 80040b6:	4b0f      	ldr	r3, [pc, #60]	@ (80040f4 <initLevelSolo+0x148>)
 80040b8:	781b      	ldrb	r3, [r3, #0]
 80040ba:	b2db      	uxtb	r3, r3
 80040bc:	2b02      	cmp	r3, #2
 80040be:	d10e      	bne.n	80040de <initLevelSolo+0x132>
			  initEnemy3(&e3_1, 80, 30, 15, 15, 15, &p1);
 80040c0:	4b09      	ldr	r3, [pc, #36]	@ (80040e8 <initLevelSolo+0x13c>)
 80040c2:	9302      	str	r3, [sp, #8]
 80040c4:	230f      	movs	r3, #15
 80040c6:	9301      	str	r3, [sp, #4]
 80040c8:	230f      	movs	r3, #15
 80040ca:	9300      	str	r3, [sp, #0]
 80040cc:	230f      	movs	r3, #15
 80040ce:	221e      	movs	r2, #30
 80040d0:	2150      	movs	r1, #80	@ 0x50
 80040d2:	480d      	ldr	r0, [pc, #52]	@ (8004108 <initLevelSolo+0x15c>)
 80040d4:	f7fe ff42 	bl	8002f5c <initEnemy3>
			  IniciarLevel=0;
 80040d8:	4b04      	ldr	r3, [pc, #16]	@ (80040ec <initLevelSolo+0x140>)
 80040da:	2200      	movs	r2, #0
 80040dc:	601a      	str	r2, [r3, #0]
		  	  }
		  }
}
 80040de:	bf00      	nop
 80040e0:	3704      	adds	r7, #4
 80040e2:	46bd      	mov	sp, r7
 80040e4:	bd90      	pop	{r4, r7, pc}
 80040e6:	bf00      	nop
 80040e8:	2001c784 	.word	0x2001c784
 80040ec:	2001cae4 	.word	0x2001cae4
 80040f0:	2001c7f8 	.word	0x2001c7f8
 80040f4:	2001cae1 	.word	0x2001cae1
 80040f8:	2001c86c 	.word	0x2001c86c
 80040fc:	2001c8a0 	.word	0x2001c8a0
 8004100:	2001c8d4 	.word	0x2001c8d4
 8004104:	2001c9a4 	.word	0x2001c9a4
 8004108:	2001ca2c 	.word	0x2001ca2c

0800410c <initLevelP1>:

void initLevelP1(void){
 800410c:	b590      	push	{r4, r7, lr}
 800410e:	b087      	sub	sp, #28
 8004110:	af06      	add	r7, sp, #24
	FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 8004112:	4b3b      	ldr	r3, [pc, #236]	@ (8004200 <initLevelP1+0xf4>)
 8004114:	681a      	ldr	r2, [r3, #0]
 8004116:	4b3a      	ldr	r3, [pc, #232]	@ (8004200 <initLevelP1+0xf4>)
 8004118:	689b      	ldr	r3, [r3, #8]
 800411a:	085b      	lsrs	r3, r3, #1
 800411c:	1ad3      	subs	r3, r2, r3
 800411e:	1c58      	adds	r0, r3, #1
 8004120:	4b37      	ldr	r3, [pc, #220]	@ (8004200 <initLevelP1+0xf4>)
 8004122:	685a      	ldr	r2, [r3, #4]
 8004124:	4b36      	ldr	r3, [pc, #216]	@ (8004200 <initLevelP1+0xf4>)
 8004126:	68db      	ldr	r3, [r3, #12]
 8004128:	085b      	lsrs	r3, r3, #1
 800412a:	1ad3      	subs	r3, r2, r3
 800412c:	1c59      	adds	r1, r3, #1
 800412e:	4b34      	ldr	r3, [pc, #208]	@ (8004200 <initLevelP1+0xf4>)
 8004130:	689b      	ldr	r3, [r3, #8]
 8004132:	1c5a      	adds	r2, r3, #1
 8004134:	4b32      	ldr	r3, [pc, #200]	@ (8004200 <initLevelP1+0xf4>)
 8004136:	68db      	ldr	r3, [r3, #12]
 8004138:	3301      	adds	r3, #1
 800413a:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 800413e:	9400      	str	r4, [sp, #0]
 8004140:	f7fd fc3a 	bl	80019b8 <FillRect>
	if (IniciarLevel==1){
 8004144:	4b2f      	ldr	r3, [pc, #188]	@ (8004204 <initLevelP1+0xf8>)
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	2b01      	cmp	r3, #1
 800414a:	d155      	bne.n	80041f8 <initLevelP1+0xec>
		//Linea de en medio
		V_line(160, 0, 240, 0x0000);
 800414c:	2300      	movs	r3, #0
 800414e:	22f0      	movs	r2, #240	@ 0xf0
 8004150:	2100      	movs	r1, #0
 8004152:	20a0      	movs	r0, #160	@ 0xa0
 8004154:	f7fd fbc8 	bl	80018e8 <V_line>
		initPlayer(&p1, 80, 200, 22, 30, 5, 3, 160, 220,18);
 8004158:	2312      	movs	r3, #18
 800415a:	9305      	str	r3, [sp, #20]
 800415c:	23dc      	movs	r3, #220	@ 0xdc
 800415e:	9304      	str	r3, [sp, #16]
 8004160:	23a0      	movs	r3, #160	@ 0xa0
 8004162:	9303      	str	r3, [sp, #12]
 8004164:	2303      	movs	r3, #3
 8004166:	9302      	str	r3, [sp, #8]
 8004168:	2305      	movs	r3, #5
 800416a:	9301      	str	r3, [sp, #4]
 800416c:	231e      	movs	r3, #30
 800416e:	9300      	str	r3, [sp, #0]
 8004170:	2316      	movs	r3, #22
 8004172:	22c8      	movs	r2, #200	@ 0xc8
 8004174:	2150      	movs	r1, #80	@ 0x50
 8004176:	4822      	ldr	r0, [pc, #136]	@ (8004200 <initLevelP1+0xf4>)
 8004178:	f7ff fa0e 	bl	8003598 <initPlayer>
		p1.PlayerNum=1;
 800417c:	4b20      	ldr	r3, [pc, #128]	@ (8004200 <initLevelP1+0xf4>)
 800417e:	2201      	movs	r2, #1
 8004180:	671a      	str	r2, [r3, #112]	@ 0x70
		p2.PlayerNum=2;
 8004182:	4b21      	ldr	r3, [pc, #132]	@ (8004208 <initLevelP1+0xfc>)
 8004184:	2202      	movs	r2, #2
 8004186:	671a      	str	r2, [r3, #112]	@ 0x70

		if (nivelActual1==NIVEL1){
 8004188:	4b20      	ldr	r3, [pc, #128]	@ (800420c <initLevelP1+0x100>)
 800418a:	781b      	ldrb	r3, [r3, #0]
 800418c:	b2db      	uxtb	r3, r3
 800418e:	2b00      	cmp	r3, #0
 8004190:	d10c      	bne.n	80041ac <initLevelP1+0xa0>
			//Inicializar enemigo 1
			initEnemy1(&e1_1, 30, 80, 16, 19, 3);
 8004192:	2303      	movs	r3, #3
 8004194:	9301      	str	r3, [sp, #4]
 8004196:	2313      	movs	r3, #19
 8004198:	9300      	str	r3, [sp, #0]
 800419a:	2310      	movs	r3, #16
 800419c:	2250      	movs	r2, #80	@ 0x50
 800419e:	211e      	movs	r1, #30
 80041a0:	481b      	ldr	r0, [pc, #108]	@ (8004210 <initLevelP1+0x104>)
 80041a2:	f7fd ff6f 	bl	8002084 <initEnemy1>
			IniciarLevel=0;}
 80041a6:	4b17      	ldr	r3, [pc, #92]	@ (8004204 <initLevelP1+0xf8>)
 80041a8:	2200      	movs	r2, #0
 80041aa:	601a      	str	r2, [r3, #0]

		  if (nivelActual1==NIVEL2){
 80041ac:	4b17      	ldr	r3, [pc, #92]	@ (800420c <initLevelP1+0x100>)
 80041ae:	781b      	ldrb	r3, [r3, #0]
 80041b0:	b2db      	uxtb	r3, r3
 80041b2:	2b01      	cmp	r3, #1
 80041b4:	d10c      	bne.n	80041d0 <initLevelP1+0xc4>
			  initEnemy2(&e2_1, 90, 80, 16, 20, 3);
 80041b6:	2303      	movs	r3, #3
 80041b8:	9301      	str	r3, [sp, #4]
 80041ba:	2314      	movs	r3, #20
 80041bc:	9300      	str	r3, [sp, #0]
 80041be:	2310      	movs	r3, #16
 80041c0:	2250      	movs	r2, #80	@ 0x50
 80041c2:	215a      	movs	r1, #90	@ 0x5a
 80041c4:	4813      	ldr	r0, [pc, #76]	@ (8004214 <initLevelP1+0x108>)
 80041c6:	f7fe fb81 	bl	80028cc <initEnemy2>
			  IniciarLevel=0;
 80041ca:	4b0e      	ldr	r3, [pc, #56]	@ (8004204 <initLevelP1+0xf8>)
 80041cc:	2200      	movs	r2, #0
 80041ce:	601a      	str	r2, [r3, #0]
			  }

		  if (nivelActual1==NIVEL3){
 80041d0:	4b0e      	ldr	r3, [pc, #56]	@ (800420c <initLevelP1+0x100>)
 80041d2:	781b      	ldrb	r3, [r3, #0]
 80041d4:	b2db      	uxtb	r3, r3
 80041d6:	2b02      	cmp	r3, #2
 80041d8:	d10e      	bne.n	80041f8 <initLevelP1+0xec>
			  initEnemy3(&e3_1, 80, 30, 15, 15, 15, &p1);
 80041da:	4b09      	ldr	r3, [pc, #36]	@ (8004200 <initLevelP1+0xf4>)
 80041dc:	9302      	str	r3, [sp, #8]
 80041de:	230f      	movs	r3, #15
 80041e0:	9301      	str	r3, [sp, #4]
 80041e2:	230f      	movs	r3, #15
 80041e4:	9300      	str	r3, [sp, #0]
 80041e6:	230f      	movs	r3, #15
 80041e8:	221e      	movs	r2, #30
 80041ea:	2150      	movs	r1, #80	@ 0x50
 80041ec:	480a      	ldr	r0, [pc, #40]	@ (8004218 <initLevelP1+0x10c>)
 80041ee:	f7fe feb5 	bl	8002f5c <initEnemy3>
			  IniciarLevel=0;
 80041f2:	4b04      	ldr	r3, [pc, #16]	@ (8004204 <initLevelP1+0xf8>)
 80041f4:	2200      	movs	r2, #0
 80041f6:	601a      	str	r2, [r3, #0]
		  	  }
		  }

}
 80041f8:	bf00      	nop
 80041fa:	3704      	adds	r7, #4
 80041fc:	46bd      	mov	sp, r7
 80041fe:	bd90      	pop	{r4, r7, pc}
 8004200:	2001c784 	.word	0x2001c784
 8004204:	2001cae4 	.word	0x2001cae4
 8004208:	2001c7f8 	.word	0x2001c7f8
 800420c:	2001cae1 	.word	0x2001cae1
 8004210:	2001c86c 	.word	0x2001c86c
 8004214:	2001c9a4 	.word	0x2001c9a4
 8004218:	2001ca2c 	.word	0x2001ca2c

0800421c <initLevelP2>:

void initLevelP2(void){
 800421c:	b590      	push	{r4, r7, lr}
 800421e:	b087      	sub	sp, #28
 8004220:	af06      	add	r7, sp, #24
	FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 8004222:	4b3c      	ldr	r3, [pc, #240]	@ (8004314 <initLevelP2+0xf8>)
 8004224:	681a      	ldr	r2, [r3, #0]
 8004226:	4b3b      	ldr	r3, [pc, #236]	@ (8004314 <initLevelP2+0xf8>)
 8004228:	689b      	ldr	r3, [r3, #8]
 800422a:	085b      	lsrs	r3, r3, #1
 800422c:	1ad3      	subs	r3, r2, r3
 800422e:	1c58      	adds	r0, r3, #1
 8004230:	4b38      	ldr	r3, [pc, #224]	@ (8004314 <initLevelP2+0xf8>)
 8004232:	685a      	ldr	r2, [r3, #4]
 8004234:	4b37      	ldr	r3, [pc, #220]	@ (8004314 <initLevelP2+0xf8>)
 8004236:	68db      	ldr	r3, [r3, #12]
 8004238:	085b      	lsrs	r3, r3, #1
 800423a:	1ad3      	subs	r3, r2, r3
 800423c:	1c59      	adds	r1, r3, #1
 800423e:	4b35      	ldr	r3, [pc, #212]	@ (8004314 <initLevelP2+0xf8>)
 8004240:	689b      	ldr	r3, [r3, #8]
 8004242:	1c5a      	adds	r2, r3, #1
 8004244:	4b33      	ldr	r3, [pc, #204]	@ (8004314 <initLevelP2+0xf8>)
 8004246:	68db      	ldr	r3, [r3, #12]
 8004248:	3301      	adds	r3, #1
 800424a:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 800424e:	9400      	str	r4, [sp, #0]
 8004250:	f7fd fbb2 	bl	80019b8 <FillRect>
	if (IniciarLevel2==1){
 8004254:	4b30      	ldr	r3, [pc, #192]	@ (8004318 <initLevelP2+0xfc>)
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	2b01      	cmp	r3, #1
 800425a:	d156      	bne.n	800430a <initLevelP2+0xee>
		//Inicializar Jugador 1
		//Linea de en medio
		V_line(160, 0, 240, 0x0000);
 800425c:	2300      	movs	r3, #0
 800425e:	22f0      	movs	r2, #240	@ 0xf0
 8004260:	2100      	movs	r1, #0
 8004262:	20a0      	movs	r0, #160	@ 0xa0
 8004264:	f7fd fb40 	bl	80018e8 <V_line>
		initPlayer(&p2, 240, 200, 22, 30, 5, 3, 300, 220,160);
 8004268:	23a0      	movs	r3, #160	@ 0xa0
 800426a:	9305      	str	r3, [sp, #20]
 800426c:	23dc      	movs	r3, #220	@ 0xdc
 800426e:	9304      	str	r3, [sp, #16]
 8004270:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 8004274:	9303      	str	r3, [sp, #12]
 8004276:	2303      	movs	r3, #3
 8004278:	9302      	str	r3, [sp, #8]
 800427a:	2305      	movs	r3, #5
 800427c:	9301      	str	r3, [sp, #4]
 800427e:	231e      	movs	r3, #30
 8004280:	9300      	str	r3, [sp, #0]
 8004282:	2316      	movs	r3, #22
 8004284:	22c8      	movs	r2, #200	@ 0xc8
 8004286:	21f0      	movs	r1, #240	@ 0xf0
 8004288:	4822      	ldr	r0, [pc, #136]	@ (8004314 <initLevelP2+0xf8>)
 800428a:	f7ff f985 	bl	8003598 <initPlayer>
		p1.PlayerNum=1;
 800428e:	4b23      	ldr	r3, [pc, #140]	@ (800431c <initLevelP2+0x100>)
 8004290:	2201      	movs	r2, #1
 8004292:	671a      	str	r2, [r3, #112]	@ 0x70
		p2.PlayerNum=2;
 8004294:	4b1f      	ldr	r3, [pc, #124]	@ (8004314 <initLevelP2+0xf8>)
 8004296:	2202      	movs	r2, #2
 8004298:	671a      	str	r2, [r3, #112]	@ 0x70

		 if (nivelActual2==NIVEL1){
 800429a:	4b21      	ldr	r3, [pc, #132]	@ (8004320 <initLevelP2+0x104>)
 800429c:	781b      	ldrb	r3, [r3, #0]
 800429e:	b2db      	uxtb	r3, r3
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d10c      	bne.n	80042be <initLevelP2+0xa2>
			//Inicializar enemigo 1
			initEnemy1(&e1_4, 170, 120, 16, 19, 3);
 80042a4:	2303      	movs	r3, #3
 80042a6:	9301      	str	r3, [sp, #4]
 80042a8:	2313      	movs	r3, #19
 80042aa:	9300      	str	r3, [sp, #0]
 80042ac:	2310      	movs	r3, #16
 80042ae:	2278      	movs	r2, #120	@ 0x78
 80042b0:	21aa      	movs	r1, #170	@ 0xaa
 80042b2:	481c      	ldr	r0, [pc, #112]	@ (8004324 <initLevelP2+0x108>)
 80042b4:	f7fd fee6 	bl	8002084 <initEnemy1>
			IniciarLevel2=0;
 80042b8:	4b17      	ldr	r3, [pc, #92]	@ (8004318 <initLevelP2+0xfc>)
 80042ba:	2200      	movs	r2, #0
 80042bc:	601a      	str	r2, [r3, #0]
			}

	     if (nivelActual2==NIVEL2){
 80042be:	4b18      	ldr	r3, [pc, #96]	@ (8004320 <initLevelP2+0x104>)
 80042c0:	781b      	ldrb	r3, [r3, #0]
 80042c2:	b2db      	uxtb	r3, r3
 80042c4:	2b01      	cmp	r3, #1
 80042c6:	d10c      	bne.n	80042e2 <initLevelP2+0xc6>
			  initEnemy2(&e2_2, 230, 80, 16, 20, 3);
 80042c8:	2303      	movs	r3, #3
 80042ca:	9301      	str	r3, [sp, #4]
 80042cc:	2314      	movs	r3, #20
 80042ce:	9300      	str	r3, [sp, #0]
 80042d0:	2310      	movs	r3, #16
 80042d2:	2250      	movs	r2, #80	@ 0x50
 80042d4:	21e6      	movs	r1, #230	@ 0xe6
 80042d6:	4814      	ldr	r0, [pc, #80]	@ (8004328 <initLevelP2+0x10c>)
 80042d8:	f7fe faf8 	bl	80028cc <initEnemy2>
			IniciarLevel2=0;
 80042dc:	4b0e      	ldr	r3, [pc, #56]	@ (8004318 <initLevelP2+0xfc>)
 80042de:	2200      	movs	r2, #0
 80042e0:	601a      	str	r2, [r3, #0]
		  }

	     if (nivelActual2==NIVEL3){
 80042e2:	4b0f      	ldr	r3, [pc, #60]	@ (8004320 <initLevelP2+0x104>)
 80042e4:	781b      	ldrb	r3, [r3, #0]
 80042e6:	b2db      	uxtb	r3, r3
 80042e8:	2b02      	cmp	r3, #2
 80042ea:	d10e      	bne.n	800430a <initLevelP2+0xee>
		  initEnemy3(&e3_2, 240, 30, 15, 15, 15, &p2);
 80042ec:	4b09      	ldr	r3, [pc, #36]	@ (8004314 <initLevelP2+0xf8>)
 80042ee:	9302      	str	r3, [sp, #8]
 80042f0:	230f      	movs	r3, #15
 80042f2:	9301      	str	r3, [sp, #4]
 80042f4:	230f      	movs	r3, #15
 80042f6:	9300      	str	r3, [sp, #0]
 80042f8:	230f      	movs	r3, #15
 80042fa:	221e      	movs	r2, #30
 80042fc:	21f0      	movs	r1, #240	@ 0xf0
 80042fe:	480b      	ldr	r0, [pc, #44]	@ (800432c <initLevelP2+0x110>)
 8004300:	f7fe fe2c 	bl	8002f5c <initEnemy3>
		  IniciarLevel=0;
 8004304:	4b0a      	ldr	r3, [pc, #40]	@ (8004330 <initLevelP2+0x114>)
 8004306:	2200      	movs	r2, #0
 8004308:	601a      	str	r2, [r3, #0]
		  }
	  }

}
 800430a:	bf00      	nop
 800430c:	3704      	adds	r7, #4
 800430e:	46bd      	mov	sp, r7
 8004310:	bd90      	pop	{r4, r7, pc}
 8004312:	bf00      	nop
 8004314:	2001c7f8 	.word	0x2001c7f8
 8004318:	2001cae8 	.word	0x2001cae8
 800431c:	2001c784 	.word	0x2001c784
 8004320:	2001cae2 	.word	0x2001cae2
 8004324:	2001c908 	.word	0x2001c908
 8004328:	2001c9e8 	.word	0x2001c9e8
 800432c:	2001ca84 	.word	0x2001ca84
 8004330:	2001cae4 	.word	0x2001cae4

08004334 <CargarMultiplesBitmaps>:

void CargarMultiplesBitmaps(char *baseName) {
 8004334:	b580      	push	{r7, lr}
 8004336:	b08c      	sub	sp, #48	@ 0x30
 8004338:	af02      	add	r7, sp, #8
 800433a:	6078      	str	r0, [r7, #4]
    char fileName[20];
    int y_offset = 0;
 800433c:	2300      	movs	r3, #0
 800433e:	627b      	str	r3, [r7, #36]	@ 0x24

    for (int i = 1; i <= 8; i++) {
 8004340:	2301      	movs	r3, #1
 8004342:	623b      	str	r3, [r7, #32]
 8004344:	e01d      	b.n	8004382 <CargarMultiplesBitmaps+0x4e>
        // Formateamos el nombre del archivo, agregando el número y "_h.bin"
        sprintf(fileName, "%s%d_h.bin", baseName, i);
 8004346:	f107 000c 	add.w	r0, r7, #12
 800434a:	6a3b      	ldr	r3, [r7, #32]
 800434c:	687a      	ldr	r2, [r7, #4]
 800434e:	4911      	ldr	r1, [pc, #68]	@ (8004394 <CargarMultiplesBitmaps+0x60>)
 8004350:	f007 fffc 	bl	800c34c <siprintf>

        // Intentamos cargar el bitmap desde la tarjeta SD
        if (CargarBitmaps_SD(fileName)) {
 8004354:	f107 030c 	add.w	r3, r7, #12
 8004358:	4618      	mov	r0, r3
 800435a:	f7fd fc9f 	bl	8001c9c <CargarBitmaps_SD>
 800435e:	4603      	mov	r3, r0
 8004360:	2b00      	cmp	r3, #0
 8004362:	d008      	beq.n	8004376 <CargarMultiplesBitmaps+0x42>
            // Mostramos el bitmap en la posición correspondiente
            LCD_Bitmap(0, y_offset, 320, 30, fragmento_imagen);
 8004364:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004366:	4b0c      	ldr	r3, [pc, #48]	@ (8004398 <CargarMultiplesBitmaps+0x64>)
 8004368:	9300      	str	r3, [sp, #0]
 800436a:	231e      	movs	r3, #30
 800436c:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8004370:	2000      	movs	r0, #0
 8004372:	f7fd fb7b 	bl	8001a6c <LCD_Bitmap>
        }

        // Aumentamos el desplazamiento vertical para el siguiente bitmap
        y_offset += 30;
 8004376:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004378:	331e      	adds	r3, #30
 800437a:	627b      	str	r3, [r7, #36]	@ 0x24
    for (int i = 1; i <= 8; i++) {
 800437c:	6a3b      	ldr	r3, [r7, #32]
 800437e:	3301      	adds	r3, #1
 8004380:	623b      	str	r3, [r7, #32]
 8004382:	6a3b      	ldr	r3, [r7, #32]
 8004384:	2b08      	cmp	r3, #8
 8004386:	ddde      	ble.n	8004346 <CargarMultiplesBitmaps+0x12>
    }
}
 8004388:	bf00      	nop
 800438a:	bf00      	nop
 800438c:	3728      	adds	r7, #40	@ 0x28
 800438e:	46bd      	mov	sp, r7
 8004390:	bd80      	pop	{r7, pc}
 8004392:	bf00      	nop
 8004394:	0800cd34 	.word	0x0800cd34
 8004398:	20017c78 	.word	0x20017c78

0800439c <set_PWM_frequency>:

/*---------Sonido---------------------*/

// Función para ajustar la frecuencia del PWM
void set_PWM_frequency(TIM_HandleTypeDef *htim, uint32_t channel, uint32_t frequency) {
 800439c:	b580      	push	{r7, lr}
 800439e:	b086      	sub	sp, #24
 80043a0:	af00      	add	r7, sp, #0
 80043a2:	60f8      	str	r0, [r7, #12]
 80043a4:	60b9      	str	r1, [r7, #8]
 80043a6:	607a      	str	r2, [r7, #4]
    // Obtener el reloj del timer (ejemplo: 80 MHz)
    uint32_t clock_freq = HAL_RCC_GetPCLK1Freq();
 80043a8:	f002 fa5a 	bl	8006860 <HAL_RCC_GetPCLK1Freq>
 80043ac:	6178      	str	r0, [r7, #20]
    uint32_t period = 0;
 80043ae:	2300      	movs	r3, #0
 80043b0:	613b      	str	r3, [r7, #16]

    // Calcular el periodo para la frecuencia deseada
    period = (clock_freq / frequency) - 1;
 80043b2:	697a      	ldr	r2, [r7, #20]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80043ba:	3b01      	subs	r3, #1
 80043bc:	613b      	str	r3, [r7, #16]

    // Ajustar el periodo del PWM
    __HAL_TIM_SET_AUTORELOAD(htim,period);
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	693a      	ldr	r2, [r7, #16]
 80043c4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80043c6:	68fb      	ldr	r3, [r7, #12]
 80043c8:	693a      	ldr	r2, [r7, #16]
 80043ca:	60da      	str	r2, [r3, #12]

}
 80043cc:	bf00      	nop
 80043ce:	3718      	adds	r7, #24
 80043d0:	46bd      	mov	sp, r7
 80043d2:	bd80      	pop	{r7, pc}

080043d4 <set_PWM_duty_cycle>:

void set_PWM_duty_cycle(TIM_HandleTypeDef *htim, uint32_t channel, uint32_t dutyCycle) {
 80043d4:	b480      	push	{r7}
 80043d6:	b085      	sub	sp, #20
 80043d8:	af00      	add	r7, sp, #0
 80043da:	60f8      	str	r0, [r7, #12]
 80043dc:	60b9      	str	r1, [r7, #8]
 80043de:	607a      	str	r2, [r7, #4]
    __HAL_TIM_SET_COMPARE(htim, channel, dutyCycle);
 80043e0:	68bb      	ldr	r3, [r7, #8]
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d104      	bne.n	80043f0 <set_PWM_duty_cycle+0x1c>
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	687a      	ldr	r2, [r7, #4]
 80043ec:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80043ee:	e013      	b.n	8004418 <set_PWM_duty_cycle+0x44>
    __HAL_TIM_SET_COMPARE(htim, channel, dutyCycle);
 80043f0:	68bb      	ldr	r3, [r7, #8]
 80043f2:	2b04      	cmp	r3, #4
 80043f4:	d104      	bne.n	8004400 <set_PWM_duty_cycle+0x2c>
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	681a      	ldr	r2, [r3, #0]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	6393      	str	r3, [r2, #56]	@ 0x38
}
 80043fe:	e00b      	b.n	8004418 <set_PWM_duty_cycle+0x44>
    __HAL_TIM_SET_COMPARE(htim, channel, dutyCycle);
 8004400:	68bb      	ldr	r3, [r7, #8]
 8004402:	2b08      	cmp	r3, #8
 8004404:	d104      	bne.n	8004410 <set_PWM_duty_cycle+0x3c>
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	681a      	ldr	r2, [r3, #0]
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	63d3      	str	r3, [r2, #60]	@ 0x3c
}
 800440e:	e003      	b.n	8004418 <set_PWM_duty_cycle+0x44>
    __HAL_TIM_SET_COMPARE(htim, channel, dutyCycle);
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	681a      	ldr	r2, [r3, #0]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8004418:	bf00      	nop
 800441a:	3714      	adds	r7, #20
 800441c:	46bd      	mov	sp, r7
 800441e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004422:	4770      	bx	lr

08004424 <SonidoPlayerAttack>:

void SonidoPlayerAttack(TIM_HandleTypeDef *htim, uint32_t channel, player* player) {
 8004424:	b580      	push	{r7, lr}
 8004426:	b086      	sub	sp, #24
 8004428:	af00      	add	r7, sp, #0
 800442a:	60f8      	str	r0, [r7, #12]
 800442c:	60b9      	str	r1, [r7, #8]
 800442e:	607a      	str	r2, [r7, #4]
	 HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 8004430:	210c      	movs	r1, #12
 8004432:	4835      	ldr	r0, [pc, #212]	@ (8004508 <SonidoPlayerAttack+0xe4>)
 8004434:	f003 fb2c 	bl	8007a90 <HAL_TIM_PWM_Start>
    int variableAnimationAttackS = player->animationAttack;
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	edd3 7a16 	vldr	s15, [r3, #88]	@ 0x58
 800443e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004442:	ee17 3a90 	vmov	r3, s15
 8004446:	617b      	str	r3, [r7, #20]
    if (player->isAlive == 1) {
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	69db      	ldr	r3, [r3, #28]
 800444c:	2b01      	cmp	r3, #1
 800444e:	d157      	bne.n	8004500 <SonidoPlayerAttack+0xdc>
        if (variableAnimationAttackS < 6) {
 8004450:	697b      	ldr	r3, [r7, #20]
 8004452:	2b05      	cmp	r3, #5
 8004454:	dc54      	bgt.n	8004500 <SonidoPlayerAttack+0xdc>
            switch (variableAnimationAttackS) {
 8004456:	697b      	ldr	r3, [r7, #20]
 8004458:	2b05      	cmp	r3, #5
 800445a:	d851      	bhi.n	8004500 <SonidoPlayerAttack+0xdc>
 800445c:	a201      	add	r2, pc, #4	@ (adr r2, 8004464 <SonidoPlayerAttack+0x40>)
 800445e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004462:	bf00      	nop
 8004464:	0800447d 	.word	0x0800447d
 8004468:	08004495 	.word	0x08004495
 800446c:	080044ad 	.word	0x080044ad
 8004470:	080044c5 	.word	0x080044c5
 8004474:	080044dd 	.word	0x080044dd
 8004478:	080044f5 	.word	0x080044f5
                case 0:
                    set_PWM_frequency(htim, channel, 262);  // Do
 800447c:	f44f 7283 	mov.w	r2, #262	@ 0x106
 8004480:	68b9      	ldr	r1, [r7, #8]
 8004482:	68f8      	ldr	r0, [r7, #12]
 8004484:	f7ff ff8a 	bl	800439c <set_PWM_frequency>
                    set_PWM_duty_cycle(htim, channel, 50);  // 50% de duty cycle
 8004488:	2232      	movs	r2, #50	@ 0x32
 800448a:	68b9      	ldr	r1, [r7, #8]
 800448c:	68f8      	ldr	r0, [r7, #12]
 800448e:	f7ff ffa1 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 8004492:	e035      	b.n	8004500 <SonidoPlayerAttack+0xdc>
                case 1:
                    set_PWM_frequency(htim, channel, 294);  // Re
 8004494:	f44f 7293 	mov.w	r2, #294	@ 0x126
 8004498:	68b9      	ldr	r1, [r7, #8]
 800449a:	68f8      	ldr	r0, [r7, #12]
 800449c:	f7ff ff7e 	bl	800439c <set_PWM_frequency>
                    set_PWM_duty_cycle(htim, channel, 50);  // 50%
 80044a0:	2232      	movs	r2, #50	@ 0x32
 80044a2:	68b9      	ldr	r1, [r7, #8]
 80044a4:	68f8      	ldr	r0, [r7, #12]
 80044a6:	f7ff ff95 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 80044aa:	e029      	b.n	8004500 <SonidoPlayerAttack+0xdc>
                case 2:
                    set_PWM_frequency(htim, channel, 330);  // Mi
 80044ac:	f44f 72a5 	mov.w	r2, #330	@ 0x14a
 80044b0:	68b9      	ldr	r1, [r7, #8]
 80044b2:	68f8      	ldr	r0, [r7, #12]
 80044b4:	f7ff ff72 	bl	800439c <set_PWM_frequency>
                    set_PWM_duty_cycle(htim, channel, 50);  // 50%
 80044b8:	2232      	movs	r2, #50	@ 0x32
 80044ba:	68b9      	ldr	r1, [r7, #8]
 80044bc:	68f8      	ldr	r0, [r7, #12]
 80044be:	f7ff ff89 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 80044c2:	e01d      	b.n	8004500 <SonidoPlayerAttack+0xdc>
                case 3:
                    set_PWM_frequency(htim, channel, 349);  // Fa
 80044c4:	f240 125d 	movw	r2, #349	@ 0x15d
 80044c8:	68b9      	ldr	r1, [r7, #8]
 80044ca:	68f8      	ldr	r0, [r7, #12]
 80044cc:	f7ff ff66 	bl	800439c <set_PWM_frequency>
                    set_PWM_duty_cycle(htim, channel, 50);  // 50%
 80044d0:	2232      	movs	r2, #50	@ 0x32
 80044d2:	68b9      	ldr	r1, [r7, #8]
 80044d4:	68f8      	ldr	r0, [r7, #12]
 80044d6:	f7ff ff7d 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 80044da:	e011      	b.n	8004500 <SonidoPlayerAttack+0xdc>
                case 4:
                    set_PWM_frequency(htim, channel, 392);  // Sol
 80044dc:	f44f 72c4 	mov.w	r2, #392	@ 0x188
 80044e0:	68b9      	ldr	r1, [r7, #8]
 80044e2:	68f8      	ldr	r0, [r7, #12]
 80044e4:	f7ff ff5a 	bl	800439c <set_PWM_frequency>
                    set_PWM_duty_cycle(htim, channel, 50);  // 50%
 80044e8:	2232      	movs	r2, #50	@ 0x32
 80044ea:	68b9      	ldr	r1, [r7, #8]
 80044ec:	68f8      	ldr	r0, [r7, #12]
 80044ee:	f7ff ff71 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 80044f2:	e005      	b.n	8004500 <SonidoPlayerAttack+0xdc>
                case 5:
                    set_PWM_duty_cycle(htim, channel, 0);  // Silenciar (0% duty cycle)
 80044f4:	2200      	movs	r2, #0
 80044f6:	68b9      	ldr	r1, [r7, #8]
 80044f8:	68f8      	ldr	r0, [r7, #12]
 80044fa:	f7ff ff6b 	bl	80043d4 <set_PWM_duty_cycle>
                    break;
 80044fe:	bf00      	nop
            }
        }
    }
}
 8004500:	bf00      	nop
 8004502:	3718      	adds	r7, #24
 8004504:	46bd      	mov	sp, r7
 8004506:	bd80      	pop	{r7, pc}
 8004508:	20017ba0 	.word	0x20017ba0

0800450c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800450c:	b580      	push	{r7, lr}
 800450e:	b086      	sub	sp, #24
 8004510:	af06      	add	r7, sp, #24
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8004512:	f001 fcbf 	bl	8005e94 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004516:	f000 fbcf 	bl	8004cb8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800451a:	f000 fd1b 	bl	8004f54 <MX_GPIO_Init>
  MX_SPI1_Init();
 800451e:	f000 fc37 	bl	8004d90 <MX_SPI1_Init>
  MX_USART2_UART_Init();
 8004522:	f000 fced 	bl	8004f00 <MX_USART2_UART_Init>
  MX_UART5_Init();
 8004526:	f000 fcc1 	bl	8004eac <MX_UART5_Init>
  MX_FATFS_Init();
 800452a:	f004 ff8f 	bl	800944c <MX_FATFS_Init>
  MX_TIM2_Init();
 800452e:	f000 fc65 	bl	8004dfc <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

	LCD_Init();
 8004532:	f7fc ff11 	bl	8001358 <LCD_Init>
	//LCD_Clear(0x00);

	//Cargar el fondo en 8 fragmentaciones
	CargarMultiplesBitmaps("mp");
 8004536:	48aa      	ldr	r0, [pc, #680]	@ (80047e0 <main+0x2d4>)
 8004538:	f7ff fefc 	bl	8004334 <CargarMultiplesBitmaps>
	//LCD_Bitmap(0, 0, 320, 240, fondo);

	//LCD_Print("Hola Mundo", 20, 100, 1, 0x001F, 0xCAB9);

	// Activar bandera interrupcion
	HAL_UART_Receive_IT(&huart2, buffer, 1);
 800453c:	2201      	movs	r2, #1
 800453e:	49a9      	ldr	r1, [pc, #676]	@ (80047e4 <main+0x2d8>)
 8004540:	48a9      	ldr	r0, [pc, #676]	@ (80047e8 <main+0x2dc>)
 8004542:	f004 f808 	bl	8008556 <HAL_UART_Receive_IT>

	//EstadoJuego estadoActual = SOLO;
	//LevelPlaying nivelActual1 = NIVEL3;
	//LevelPlaying nivelActual2 = NIVEL2;
	estadoActual = MENU;
 8004546:	4ba9      	ldr	r3, [pc, #676]	@ (80047ec <main+0x2e0>)
 8004548:	2200      	movs	r2, #0
 800454a:	701a      	strb	r2, [r3, #0]
	nivelActual1 = NIVEL1;
 800454c:	4ba8      	ldr	r3, [pc, #672]	@ (80047f0 <main+0x2e4>)
 800454e:	2200      	movs	r2, #0
 8004550:	701a      	strb	r2, [r3, #0]
	nivelActual2 = NIVEL1;
 8004552:	4ba8      	ldr	r3, [pc, #672]	@ (80047f4 <main+0x2e8>)
 8004554:	2200      	movs	r2, #0
 8004556:	701a      	strb	r2, [r3, #0]
	modo = 0;
 8004558:	4ba7      	ldr	r3, [pc, #668]	@ (80047f8 <main+0x2ec>)
 800455a:	2200      	movs	r2, #0
 800455c:	701a      	strb	r2, [r3, #0]
    fase_p1=1;
 800455e:	4ba7      	ldr	r3, [pc, #668]	@ (80047fc <main+0x2f0>)
 8004560:	2201      	movs	r2, #1
 8004562:	701a      	strb	r2, [r3, #0]
    fase_p2=1;
 8004564:	4ba6      	ldr	r3, [pc, #664]	@ (8004800 <main+0x2f4>)
 8004566:	2201      	movs	r2, #1
 8004568:	701a      	strb	r2, [r3, #0]


  	if (estadoActual == SOLO){
 800456a:	4ba0      	ldr	r3, [pc, #640]	@ (80047ec <main+0x2e0>)
 800456c:	781b      	ldrb	r3, [r3, #0]
 800456e:	b2db      	uxtb	r3, r3
 8004570:	2b01      	cmp	r3, #1
 8004572:	d172      	bne.n	800465a <main+0x14e>
	//Inicializar Jugador 1
	initPlayer(&p1, 160, 200, 22, 30, 5, 3, 300, 220,18);
 8004574:	2312      	movs	r3, #18
 8004576:	9305      	str	r3, [sp, #20]
 8004578:	23dc      	movs	r3, #220	@ 0xdc
 800457a:	9304      	str	r3, [sp, #16]
 800457c:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 8004580:	9303      	str	r3, [sp, #12]
 8004582:	2303      	movs	r3, #3
 8004584:	9302      	str	r3, [sp, #8]
 8004586:	2305      	movs	r3, #5
 8004588:	9301      	str	r3, [sp, #4]
 800458a:	231e      	movs	r3, #30
 800458c:	9300      	str	r3, [sp, #0]
 800458e:	2316      	movs	r3, #22
 8004590:	22c8      	movs	r2, #200	@ 0xc8
 8004592:	21a0      	movs	r1, #160	@ 0xa0
 8004594:	489b      	ldr	r0, [pc, #620]	@ (8004804 <main+0x2f8>)
 8004596:	f7fe ffff 	bl	8003598 <initPlayer>
	initPlayer(&p2, 160, 200, 22, 30, 5, 3, 300, 220,18);
 800459a:	2312      	movs	r3, #18
 800459c:	9305      	str	r3, [sp, #20]
 800459e:	23dc      	movs	r3, #220	@ 0xdc
 80045a0:	9304      	str	r3, [sp, #16]
 80045a2:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 80045a6:	9303      	str	r3, [sp, #12]
 80045a8:	2303      	movs	r3, #3
 80045aa:	9302      	str	r3, [sp, #8]
 80045ac:	2305      	movs	r3, #5
 80045ae:	9301      	str	r3, [sp, #4]
 80045b0:	231e      	movs	r3, #30
 80045b2:	9300      	str	r3, [sp, #0]
 80045b4:	2316      	movs	r3, #22
 80045b6:	22c8      	movs	r2, #200	@ 0xc8
 80045b8:	21a0      	movs	r1, #160	@ 0xa0
 80045ba:	4893      	ldr	r0, [pc, #588]	@ (8004808 <main+0x2fc>)
 80045bc:	f7fe ffec 	bl	8003598 <initPlayer>
	p1.PlayerNum=1;
 80045c0:	4b90      	ldr	r3, [pc, #576]	@ (8004804 <main+0x2f8>)
 80045c2:	2201      	movs	r2, #1
 80045c4:	671a      	str	r2, [r3, #112]	@ 0x70
	p2.PlayerNum=2;
 80045c6:	4b90      	ldr	r3, [pc, #576]	@ (8004808 <main+0x2fc>)
 80045c8:	2202      	movs	r2, #2
 80045ca:	671a      	str	r2, [r3, #112]	@ 0x70
	p2.isAlive=0;
 80045cc:	4b8e      	ldr	r3, [pc, #568]	@ (8004808 <main+0x2fc>)
 80045ce:	2200      	movs	r2, #0
 80045d0:	61da      	str	r2, [r3, #28]

	if (nivelActual1==NIVEL1){
 80045d2:	4b87      	ldr	r3, [pc, #540]	@ (80047f0 <main+0x2e4>)
 80045d4:	781b      	ldrb	r3, [r3, #0]
 80045d6:	b2db      	uxtb	r3, r3
 80045d8:	2b00      	cmp	r3, #0
 80045da:	d11e      	bne.n	800461a <main+0x10e>
		//Inicializar enemigo 1
		initEnemy1(&e1_1, 40, 80, 16, 19, 3);
 80045dc:	2303      	movs	r3, #3
 80045de:	9301      	str	r3, [sp, #4]
 80045e0:	2313      	movs	r3, #19
 80045e2:	9300      	str	r3, [sp, #0]
 80045e4:	2310      	movs	r3, #16
 80045e6:	2250      	movs	r2, #80	@ 0x50
 80045e8:	2128      	movs	r1, #40	@ 0x28
 80045ea:	4888      	ldr	r0, [pc, #544]	@ (800480c <main+0x300>)
 80045ec:	f7fd fd4a 	bl	8002084 <initEnemy1>
		//Inicializar enemigo 2
		initEnemy1(&e1_2, 160, 80, 16, 19, 3);
 80045f0:	2303      	movs	r3, #3
 80045f2:	9301      	str	r3, [sp, #4]
 80045f4:	2313      	movs	r3, #19
 80045f6:	9300      	str	r3, [sp, #0]
 80045f8:	2310      	movs	r3, #16
 80045fa:	2250      	movs	r2, #80	@ 0x50
 80045fc:	21a0      	movs	r1, #160	@ 0xa0
 80045fe:	4884      	ldr	r0, [pc, #528]	@ (8004810 <main+0x304>)
 8004600:	f7fd fd40 	bl	8002084 <initEnemy1>
		//Inicializar enemigo 3
		initEnemy1(&e1_3, 280, 80, 16, 19, 3);}
 8004604:	2303      	movs	r3, #3
 8004606:	9301      	str	r3, [sp, #4]
 8004608:	2313      	movs	r3, #19
 800460a:	9300      	str	r3, [sp, #0]
 800460c:	2310      	movs	r3, #16
 800460e:	2250      	movs	r2, #80	@ 0x50
 8004610:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8004614:	487f      	ldr	r0, [pc, #508]	@ (8004814 <main+0x308>)
 8004616:	f7fd fd35 	bl	8002084 <initEnemy1>

	  if (nivelActual1==NIVEL2){
 800461a:	4b75      	ldr	r3, [pc, #468]	@ (80047f0 <main+0x2e4>)
 800461c:	781b      	ldrb	r3, [r3, #0]
 800461e:	b2db      	uxtb	r3, r3
 8004620:	2b01      	cmp	r3, #1
 8004622:	d109      	bne.n	8004638 <main+0x12c>
		  initEnemy2(&e2_1, 160, 80, 16, 20, 3);
 8004624:	2303      	movs	r3, #3
 8004626:	9301      	str	r3, [sp, #4]
 8004628:	2314      	movs	r3, #20
 800462a:	9300      	str	r3, [sp, #0]
 800462c:	2310      	movs	r3, #16
 800462e:	2250      	movs	r2, #80	@ 0x50
 8004630:	21a0      	movs	r1, #160	@ 0xa0
 8004632:	4879      	ldr	r0, [pc, #484]	@ (8004818 <main+0x30c>)
 8004634:	f7fe f94a 	bl	80028cc <initEnemy2>
		  }

	  if (nivelActual1==NIVEL3){
 8004638:	4b6d      	ldr	r3, [pc, #436]	@ (80047f0 <main+0x2e4>)
 800463a:	781b      	ldrb	r3, [r3, #0]
 800463c:	b2db      	uxtb	r3, r3
 800463e:	2b02      	cmp	r3, #2
 8004640:	d10b      	bne.n	800465a <main+0x14e>
		  initEnemy3(&e3_1, 80, 30, 15, 15, 15, &p1);
 8004642:	4b70      	ldr	r3, [pc, #448]	@ (8004804 <main+0x2f8>)
 8004644:	9302      	str	r3, [sp, #8]
 8004646:	230f      	movs	r3, #15
 8004648:	9301      	str	r3, [sp, #4]
 800464a:	230f      	movs	r3, #15
 800464c:	9300      	str	r3, [sp, #0]
 800464e:	230f      	movs	r3, #15
 8004650:	221e      	movs	r2, #30
 8004652:	2150      	movs	r1, #80	@ 0x50
 8004654:	4871      	ldr	r0, [pc, #452]	@ (800481c <main+0x310>)
 8004656:	f7fe fc81 	bl	8002f5c <initEnemy3>
	  	  }
}
  if (estadoActual==DUO){
 800465a:	4b64      	ldr	r3, [pc, #400]	@ (80047ec <main+0x2e0>)
 800465c:	781b      	ldrb	r3, [r3, #0]
 800465e:	b2db      	uxtb	r3, r3
 8004660:	2b02      	cmp	r3, #2
 8004662:	f040 8095 	bne.w	8004790 <main+0x284>
	//Linea de en medio
	V_line(160, 0, 240, 0x0000);
 8004666:	2300      	movs	r3, #0
 8004668:	22f0      	movs	r2, #240	@ 0xf0
 800466a:	2100      	movs	r1, #0
 800466c:	20a0      	movs	r0, #160	@ 0xa0
 800466e:	f7fd f93b 	bl	80018e8 <V_line>
	initPlayer(&p1, 80, 200, 22, 30, 5, 3, 160, 220,18); //80
 8004672:	2312      	movs	r3, #18
 8004674:	9305      	str	r3, [sp, #20]
 8004676:	23dc      	movs	r3, #220	@ 0xdc
 8004678:	9304      	str	r3, [sp, #16]
 800467a:	23a0      	movs	r3, #160	@ 0xa0
 800467c:	9303      	str	r3, [sp, #12]
 800467e:	2303      	movs	r3, #3
 8004680:	9302      	str	r3, [sp, #8]
 8004682:	2305      	movs	r3, #5
 8004684:	9301      	str	r3, [sp, #4]
 8004686:	231e      	movs	r3, #30
 8004688:	9300      	str	r3, [sp, #0]
 800468a:	2316      	movs	r3, #22
 800468c:	22c8      	movs	r2, #200	@ 0xc8
 800468e:	2150      	movs	r1, #80	@ 0x50
 8004690:	485c      	ldr	r0, [pc, #368]	@ (8004804 <main+0x2f8>)
 8004692:	f7fe ff81 	bl	8003598 <initPlayer>
	initPlayer(&p2, 240, 200, 22, 30, 5, 3, 300, 220,160); //240
 8004696:	23a0      	movs	r3, #160	@ 0xa0
 8004698:	9305      	str	r3, [sp, #20]
 800469a:	23dc      	movs	r3, #220	@ 0xdc
 800469c:	9304      	str	r3, [sp, #16]
 800469e:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 80046a2:	9303      	str	r3, [sp, #12]
 80046a4:	2303      	movs	r3, #3
 80046a6:	9302      	str	r3, [sp, #8]
 80046a8:	2305      	movs	r3, #5
 80046aa:	9301      	str	r3, [sp, #4]
 80046ac:	231e      	movs	r3, #30
 80046ae:	9300      	str	r3, [sp, #0]
 80046b0:	2316      	movs	r3, #22
 80046b2:	22c8      	movs	r2, #200	@ 0xc8
 80046b4:	21f0      	movs	r1, #240	@ 0xf0
 80046b6:	4854      	ldr	r0, [pc, #336]	@ (8004808 <main+0x2fc>)
 80046b8:	f7fe ff6e 	bl	8003598 <initPlayer>
	p1.PlayerNum=1;
 80046bc:	4b51      	ldr	r3, [pc, #324]	@ (8004804 <main+0x2f8>)
 80046be:	2201      	movs	r2, #1
 80046c0:	671a      	str	r2, [r3, #112]	@ 0x70
	p2.PlayerNum=2;
 80046c2:	4b51      	ldr	r3, [pc, #324]	@ (8004808 <main+0x2fc>)
 80046c4:	2202      	movs	r2, #2
 80046c6:	671a      	str	r2, [r3, #112]	@ 0x70

	if (nivelActual1==NIVEL1){
 80046c8:	4b49      	ldr	r3, [pc, #292]	@ (80047f0 <main+0x2e4>)
 80046ca:	781b      	ldrb	r3, [r3, #0]
 80046cc:	b2db      	uxtb	r3, r3
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	d109      	bne.n	80046e6 <main+0x1da>
		//Inicializar enemigo 1
		initEnemy1(&e1_1, 80, 80, 16, 19, 3);}
 80046d2:	2303      	movs	r3, #3
 80046d4:	9301      	str	r3, [sp, #4]
 80046d6:	2313      	movs	r3, #19
 80046d8:	9300      	str	r3, [sp, #0]
 80046da:	2310      	movs	r3, #16
 80046dc:	2250      	movs	r2, #80	@ 0x50
 80046de:	2150      	movs	r1, #80	@ 0x50
 80046e0:	484a      	ldr	r0, [pc, #296]	@ (800480c <main+0x300>)
 80046e2:	f7fd fccf 	bl	8002084 <initEnemy1>
	 if (nivelActual1==NIVEL2){
 80046e6:	4b42      	ldr	r3, [pc, #264]	@ (80047f0 <main+0x2e4>)
 80046e8:	781b      	ldrb	r3, [r3, #0]
 80046ea:	b2db      	uxtb	r3, r3
 80046ec:	2b01      	cmp	r3, #1
 80046ee:	d109      	bne.n	8004704 <main+0x1f8>
		  initEnemy2(&e2_1, 90, 80, 16, 20, 3);
 80046f0:	2303      	movs	r3, #3
 80046f2:	9301      	str	r3, [sp, #4]
 80046f4:	2314      	movs	r3, #20
 80046f6:	9300      	str	r3, [sp, #0]
 80046f8:	2310      	movs	r3, #16
 80046fa:	2250      	movs	r2, #80	@ 0x50
 80046fc:	215a      	movs	r1, #90	@ 0x5a
 80046fe:	4846      	ldr	r0, [pc, #280]	@ (8004818 <main+0x30c>)
 8004700:	f7fe f8e4 	bl	80028cc <initEnemy2>
		  }
	  if (nivelActual1==NIVEL3){
 8004704:	4b3a      	ldr	r3, [pc, #232]	@ (80047f0 <main+0x2e4>)
 8004706:	781b      	ldrb	r3, [r3, #0]
 8004708:	b2db      	uxtb	r3, r3
 800470a:	2b02      	cmp	r3, #2
 800470c:	d10b      	bne.n	8004726 <main+0x21a>
		  initEnemy3(&e3_1, 80, 30, 15, 15, 15, &p1);}
 800470e:	4b3d      	ldr	r3, [pc, #244]	@ (8004804 <main+0x2f8>)
 8004710:	9302      	str	r3, [sp, #8]
 8004712:	230f      	movs	r3, #15
 8004714:	9301      	str	r3, [sp, #4]
 8004716:	230f      	movs	r3, #15
 8004718:	9300      	str	r3, [sp, #0]
 800471a:	230f      	movs	r3, #15
 800471c:	221e      	movs	r2, #30
 800471e:	2150      	movs	r1, #80	@ 0x50
 8004720:	483e      	ldr	r0, [pc, #248]	@ (800481c <main+0x310>)
 8004722:	f7fe fc1b 	bl	8002f5c <initEnemy3>
	  if (nivelActual2==NIVEL1){
 8004726:	4b33      	ldr	r3, [pc, #204]	@ (80047f4 <main+0x2e8>)
 8004728:	781b      	ldrb	r3, [r3, #0]
 800472a:	b2db      	uxtb	r3, r3
 800472c:	2b00      	cmp	r3, #0
 800472e:	d109      	bne.n	8004744 <main+0x238>
		//Inicializar enemigo 1
		initEnemy1(&e1_4, 240, 120, 16, 19, 3);
 8004730:	2303      	movs	r3, #3
 8004732:	9301      	str	r3, [sp, #4]
 8004734:	2313      	movs	r3, #19
 8004736:	9300      	str	r3, [sp, #0]
 8004738:	2310      	movs	r3, #16
 800473a:	2278      	movs	r2, #120	@ 0x78
 800473c:	21f0      	movs	r1, #240	@ 0xf0
 800473e:	4838      	ldr	r0, [pc, #224]	@ (8004820 <main+0x314>)
 8004740:	f7fd fca0 	bl	8002084 <initEnemy1>
	    }
	  if (nivelActual2==NIVEL2){
 8004744:	4b2b      	ldr	r3, [pc, #172]	@ (80047f4 <main+0x2e8>)
 8004746:	781b      	ldrb	r3, [r3, #0]
 8004748:	b2db      	uxtb	r3, r3
 800474a:	2b01      	cmp	r3, #1
 800474c:	d109      	bne.n	8004762 <main+0x256>
	  	  initEnemy2(&e2_2, 230, 80, 16, 20, 3);
 800474e:	2303      	movs	r3, #3
 8004750:	9301      	str	r3, [sp, #4]
 8004752:	2314      	movs	r3, #20
 8004754:	9300      	str	r3, [sp, #0]
 8004756:	2310      	movs	r3, #16
 8004758:	2250      	movs	r2, #80	@ 0x50
 800475a:	21e6      	movs	r1, #230	@ 0xe6
 800475c:	4831      	ldr	r0, [pc, #196]	@ (8004824 <main+0x318>)
 800475e:	f7fe f8b5 	bl	80028cc <initEnemy2>
	  }
	  if (nivelActual2==NIVEL3){
 8004762:	4b24      	ldr	r3, [pc, #144]	@ (80047f4 <main+0x2e8>)
 8004764:	781b      	ldrb	r3, [r3, #0]
 8004766:	b2db      	uxtb	r3, r3
 8004768:	2b02      	cmp	r3, #2
 800476a:	d10b      	bne.n	8004784 <main+0x278>
		  initEnemy3(&e3_2, 240, 30, 15, 15, 15, &p2);}
 800476c:	4b26      	ldr	r3, [pc, #152]	@ (8004808 <main+0x2fc>)
 800476e:	9302      	str	r3, [sp, #8]
 8004770:	230f      	movs	r3, #15
 8004772:	9301      	str	r3, [sp, #4]
 8004774:	230f      	movs	r3, #15
 8004776:	9300      	str	r3, [sp, #0]
 8004778:	230f      	movs	r3, #15
 800477a:	221e      	movs	r2, #30
 800477c:	21f0      	movs	r1, #240	@ 0xf0
 800477e:	482a      	ldr	r0, [pc, #168]	@ (8004828 <main+0x31c>)
 8004780:	f7fe fbec 	bl	8002f5c <initEnemy3>
	  HitboxPlayer(&p1);
 8004784:	481f      	ldr	r0, [pc, #124]	@ (8004804 <main+0x2f8>)
 8004786:	f7ff f853 	bl	8003830 <HitboxPlayer>
	  HitboxPlayer(&p2);
 800478a:	481f      	ldr	r0, [pc, #124]	@ (8004808 <main+0x2fc>)
 800478c:	f7ff f850 	bl	8003830 <HitboxPlayer>
	}

  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 8004790:	210c      	movs	r1, #12
 8004792:	4826      	ldr	r0, [pc, #152]	@ (800482c <main+0x320>)
 8004794:	f003 f97c 	bl	8007a90 <HAL_TIM_PWM_Start>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {
		if (repintarFondo) {
 8004798:	4b25      	ldr	r3, [pc, #148]	@ (8004830 <main+0x324>)
 800479a:	781b      	ldrb	r3, [r3, #0]
 800479c:	2b00      	cmp	r3, #0
 800479e:	d052      	beq.n	8004846 <main+0x33a>
			switch (estadoActual) {
 80047a0:	4b12      	ldr	r3, [pc, #72]	@ (80047ec <main+0x2e0>)
 80047a2:	781b      	ldrb	r3, [r3, #0]
 80047a4:	b2db      	uxtb	r3, r3
 80047a6:	2b05      	cmp	r3, #5
 80047a8:	d84a      	bhi.n	8004840 <main+0x334>
 80047aa:	a201      	add	r2, pc, #4	@ (adr r2, 80047b0 <main+0x2a4>)
 80047ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047b0:	080047c9 	.word	0x080047c9
 80047b4:	080047d1 	.word	0x080047d1
 80047b8:	080047d9 	.word	0x080047d9
 80047bc:	08004839 	.word	0x08004839
 80047c0:	08004841 	.word	0x08004841
 80047c4:	08004841 	.word	0x08004841
				case MENU:
					CargarMultiplesBitmaps("mp");
 80047c8:	4805      	ldr	r0, [pc, #20]	@ (80047e0 <main+0x2d4>)
 80047ca:	f7ff fdb3 	bl	8004334 <CargarMultiplesBitmaps>
					break;
 80047ce:	e037      	b.n	8004840 <main+0x334>
				case SOLO:
					CargarMultiplesBitmaps("fb");
 80047d0:	4818      	ldr	r0, [pc, #96]	@ (8004834 <main+0x328>)
 80047d2:	f7ff fdaf 	bl	8004334 <CargarMultiplesBitmaps>
					break;
 80047d6:	e033      	b.n	8004840 <main+0x334>
				case DUO:
					CargarMultiplesBitmaps("fb");
 80047d8:	4816      	ldr	r0, [pc, #88]	@ (8004834 <main+0x328>)
 80047da:	f7ff fdab 	bl	8004334 <CargarMultiplesBitmaps>
					break;
 80047de:	e02f      	b.n	8004840 <main+0x334>
 80047e0:	0800cd40 	.word	0x0800cd40
 80047e4:	2001c778 	.word	0x2001c778
 80047e8:	20017c30 	.word	0x20017c30
 80047ec:	20016a78 	.word	0x20016a78
 80047f0:	2001cae1 	.word	0x2001cae1
 80047f4:	2001cae2 	.word	0x2001cae2
 80047f8:	2001cadc 	.word	0x2001cadc
 80047fc:	2001cadd 	.word	0x2001cadd
 8004800:	2001cade 	.word	0x2001cade
 8004804:	2001c784 	.word	0x2001c784
 8004808:	2001c7f8 	.word	0x2001c7f8
 800480c:	2001c86c 	.word	0x2001c86c
 8004810:	2001c8a0 	.word	0x2001c8a0
 8004814:	2001c8d4 	.word	0x2001c8d4
 8004818:	2001c9a4 	.word	0x2001c9a4
 800481c:	2001ca2c 	.word	0x2001ca2c
 8004820:	2001c908 	.word	0x2001c908
 8004824:	2001c9e8 	.word	0x2001c9e8
 8004828:	2001ca84 	.word	0x2001ca84
 800482c:	20017ba0 	.word	0x20017ba0
 8004830:	2001caec 	.word	0x2001caec
 8004834:	0800cd44 	.word	0x0800cd44
				case PAUSA:
					CargarMultiplesBitmaps("pausa");
 8004838:	4891      	ldr	r0, [pc, #580]	@ (8004a80 <main+0x574>)
 800483a:	f7ff fd7b 	bl	8004334 <CargarMultiplesBitmaps>
					break;
 800483e:	bf00      	nop
					break;
				case WIN2:
					break;
				// Agrega más casos según tus estados.
			}
			repintarFondo = 0; // Fondo pintado, no es necesario repintar.
 8004840:	4b90      	ldr	r3, [pc, #576]	@ (8004a84 <main+0x578>)
 8004842:	2200      	movs	r2, #0
 8004844:	701a      	strb	r2, [r3, #0]
		}
		switch(estadoActual){
 8004846:	4b90      	ldr	r3, [pc, #576]	@ (8004a88 <main+0x57c>)
 8004848:	781b      	ldrb	r3, [r3, #0]
 800484a:	b2db      	uxtb	r3, r3
 800484c:	2b05      	cmp	r3, #5
 800484e:	f200 8213 	bhi.w	8004c78 <main+0x76c>
 8004852:	a201      	add	r2, pc, #4	@ (adr r2, 8004858 <main+0x34c>)
 8004854:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004858:	08004871 	.word	0x08004871
 800485c:	08004887 	.word	0x08004887
 8004860:	080049f7 	.word	0x080049f7
 8004864:	08004c61 	.word	0x08004c61
 8004868:	08004c69 	.word	0x08004c69
 800486c:	08004c71 	.word	0x08004c71
		case MENU:
			FillRect(0, 0, 319, 239, 0xFF00);
 8004870:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8004874:	9300      	str	r3, [sp, #0]
 8004876:	23ef      	movs	r3, #239	@ 0xef
 8004878:	f240 123f 	movw	r2, #319	@ 0x13f
 800487c:	2100      	movs	r1, #0
 800487e:	2000      	movs	r0, #0
 8004880:	f7fd f89a 	bl	80019b8 <FillRect>
			break;
 8004884:	e1f9      	b.n	8004c7a <main+0x76e>
		case SOLO:{
			if (nivelActual1==NIVEL1){
 8004886:	4b81      	ldr	r3, [pc, #516]	@ (8004a8c <main+0x580>)
 8004888:	781b      	ldrb	r3, [r3, #0]
 800488a:	b2db      	uxtb	r3, r3
 800488c:	2b00      	cmp	r3, #0
 800488e:	d158      	bne.n	8004942 <main+0x436>
					if(e1_1.isAlive==1){
 8004890:	4b7f      	ldr	r3, [pc, #508]	@ (8004a90 <main+0x584>)
 8004892:	695b      	ldr	r3, [r3, #20]
 8004894:	2b01      	cmp	r3, #1
 8004896:	d105      	bne.n	80048a4 <main+0x398>
						animation_e1(&e1_1);
 8004898:	487d      	ldr	r0, [pc, #500]	@ (8004a90 <main+0x584>)
 800489a:	f7fd fad9 	bl	8001e50 <animation_e1>
						animation_e1_control(&e1_1);}
 800489e:	487c      	ldr	r0, [pc, #496]	@ (8004a90 <main+0x584>)
 80048a0:	f7fd fa82 	bl	8001da8 <animation_e1_control>

					if(e1_2.isAlive==1){
 80048a4:	4b7b      	ldr	r3, [pc, #492]	@ (8004a94 <main+0x588>)
 80048a6:	695b      	ldr	r3, [r3, #20]
 80048a8:	2b01      	cmp	r3, #1
 80048aa:	d105      	bne.n	80048b8 <main+0x3ac>
						animation_e1(&e1_2);
 80048ac:	4879      	ldr	r0, [pc, #484]	@ (8004a94 <main+0x588>)
 80048ae:	f7fd facf 	bl	8001e50 <animation_e1>
						animation_e1_control(&e1_2);}
 80048b2:	4878      	ldr	r0, [pc, #480]	@ (8004a94 <main+0x588>)
 80048b4:	f7fd fa78 	bl	8001da8 <animation_e1_control>

					if(e1_3.isAlive==1){
 80048b8:	4b77      	ldr	r3, [pc, #476]	@ (8004a98 <main+0x58c>)
 80048ba:	695b      	ldr	r3, [r3, #20]
 80048bc:	2b01      	cmp	r3, #1
 80048be:	d105      	bne.n	80048cc <main+0x3c0>
						animation_e1(&e1_3);
 80048c0:	4875      	ldr	r0, [pc, #468]	@ (8004a98 <main+0x58c>)
 80048c2:	f7fd fac5 	bl	8001e50 <animation_e1>
						animation_e1_control(&e1_3);}
 80048c6:	4874      	ldr	r0, [pc, #464]	@ (8004a98 <main+0x58c>)
 80048c8:	f7fd fa6e 	bl	8001da8 <animation_e1_control>

					animation_e1_die(&e1_1);
 80048cc:	4870      	ldr	r0, [pc, #448]	@ (8004a90 <main+0x584>)
 80048ce:	f7fd fb87 	bl	8001fe0 <animation_e1_die>
					animation_e1_die(&e1_2);
 80048d2:	4870      	ldr	r0, [pc, #448]	@ (8004a94 <main+0x588>)
 80048d4:	f7fd fb84 	bl	8001fe0 <animation_e1_die>
					animation_e1_die(&e1_3);
 80048d8:	486f      	ldr	r0, [pc, #444]	@ (8004a98 <main+0x58c>)
 80048da:	f7fd fb81 	bl	8001fe0 <animation_e1_die>
					if (e1_1.isAlive==0&&e1_2.isAlive==0&&e1_3.isAlive==0 && e1_1.animationDie>=11 && e1_2.animationDie>=11 && e1_3.animationDie>=11){
 80048de:	4b6c      	ldr	r3, [pc, #432]	@ (8004a90 <main+0x584>)
 80048e0:	695b      	ldr	r3, [r3, #20]
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d12d      	bne.n	8004942 <main+0x436>
 80048e6:	4b6b      	ldr	r3, [pc, #428]	@ (8004a94 <main+0x588>)
 80048e8:	695b      	ldr	r3, [r3, #20]
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d129      	bne.n	8004942 <main+0x436>
 80048ee:	4b6a      	ldr	r3, [pc, #424]	@ (8004a98 <main+0x58c>)
 80048f0:	695b      	ldr	r3, [r3, #20]
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d125      	bne.n	8004942 <main+0x436>
 80048f6:	4b66      	ldr	r3, [pc, #408]	@ (8004a90 <main+0x584>)
 80048f8:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 80048fc:	eeb2 7a06 	vmov.f32	s14, #38	@ 0x41300000  11.0
 8004900:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004908:	db1b      	blt.n	8004942 <main+0x436>
 800490a:	4b62      	ldr	r3, [pc, #392]	@ (8004a94 <main+0x588>)
 800490c:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8004910:	eeb2 7a06 	vmov.f32	s14, #38	@ 0x41300000  11.0
 8004914:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800491c:	db11      	blt.n	8004942 <main+0x436>
 800491e:	4b5e      	ldr	r3, [pc, #376]	@ (8004a98 <main+0x58c>)
 8004920:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8004924:	eeb2 7a06 	vmov.f32	s14, #38	@ 0x41300000  11.0
 8004928:	eef4 7ac7 	vcmpe.f32	s15, s14
 800492c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004930:	db07      	blt.n	8004942 <main+0x436>
						nivelActual1=NIVEL2;
 8004932:	4b56      	ldr	r3, [pc, #344]	@ (8004a8c <main+0x580>)
 8004934:	2201      	movs	r2, #1
 8004936:	701a      	strb	r2, [r3, #0]
						IniciarLevel=1;
 8004938:	4b58      	ldr	r3, [pc, #352]	@ (8004a9c <main+0x590>)
 800493a:	2201      	movs	r2, #1
 800493c:	601a      	str	r2, [r3, #0]
						initLevelSolo();
 800493e:	f7ff fb35 	bl	8003fac <initLevelSolo>
					}
				}

			if (nivelActual1==NIVEL2){
 8004942:	4b52      	ldr	r3, [pc, #328]	@ (8004a8c <main+0x580>)
 8004944:	781b      	ldrb	r3, [r3, #0]
 8004946:	b2db      	uxtb	r3, r3
 8004948:	2b01      	cmp	r3, #1
 800494a:	d130      	bne.n	80049ae <main+0x4a2>
				if (e2_1.isAlive==1){
 800494c:	4b54      	ldr	r3, [pc, #336]	@ (8004aa0 <main+0x594>)
 800494e:	695b      	ldr	r3, [r3, #20]
 8004950:	2b01      	cmp	r3, #1
 8004952:	d113      	bne.n	800497c <main+0x470>
					moveE2(&e2_1, &p1);
 8004954:	4953      	ldr	r1, [pc, #332]	@ (8004aa4 <main+0x598>)
 8004956:	4852      	ldr	r0, [pc, #328]	@ (8004aa0 <main+0x594>)
 8004958:	f7fd fff2 	bl	8002940 <moveE2>
					e2_1.delay+=1; //1
 800495c:	4b50      	ldr	r3, [pc, #320]	@ (8004aa0 <main+0x594>)
 800495e:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 8004962:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004966:	ee77 7a87 	vadd.f32	s15, s15, s14
 800496a:	4b4d      	ldr	r3, [pc, #308]	@ (8004aa0 <main+0x594>)
 800496c:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
					E2_Appear(&e2_1);
 8004970:	484b      	ldr	r0, [pc, #300]	@ (8004aa0 <main+0x594>)
 8004972:	f7fe f8fd 	bl	8002b70 <E2_Appear>
					E2_Hurt(&e2_1);
 8004976:	484a      	ldr	r0, [pc, #296]	@ (8004aa0 <main+0x594>)
 8004978:	f7fe f942 	bl	8002c00 <E2_Hurt>

				}
				E2_Die(&e2_1);
 800497c:	4848      	ldr	r0, [pc, #288]	@ (8004aa0 <main+0x594>)
 800497e:	f7fe f98f 	bl	8002ca0 <E2_Die>
				if (e2_1.isAlive==0&&e2_1.animationDie>=6){
 8004982:	4b47      	ldr	r3, [pc, #284]	@ (8004aa0 <main+0x594>)
 8004984:	695b      	ldr	r3, [r3, #20]
 8004986:	2b00      	cmp	r3, #0
 8004988:	d111      	bne.n	80049ae <main+0x4a2>
 800498a:	4b45      	ldr	r3, [pc, #276]	@ (8004aa0 <main+0x594>)
 800498c:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8004990:	eeb1 7a08 	vmov.f32	s14, #24	@ 0x40c00000  6.0
 8004994:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004998:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800499c:	db07      	blt.n	80049ae <main+0x4a2>
					nivelActual1=NIVEL3;
 800499e:	4b3b      	ldr	r3, [pc, #236]	@ (8004a8c <main+0x580>)
 80049a0:	2202      	movs	r2, #2
 80049a2:	701a      	strb	r2, [r3, #0]
					IniciarLevel=1;
 80049a4:	4b3d      	ldr	r3, [pc, #244]	@ (8004a9c <main+0x590>)
 80049a6:	2201      	movs	r2, #1
 80049a8:	601a      	str	r2, [r3, #0]
					initLevelSolo();
 80049aa:	f7ff faff 	bl	8003fac <initLevelSolo>
				}
			}

			if (nivelActual1==NIVEL3){
 80049ae:	4b37      	ldr	r3, [pc, #220]	@ (8004a8c <main+0x580>)
 80049b0:	781b      	ldrb	r3, [r3, #0]
 80049b2:	b2db      	uxtb	r3, r3
 80049b4:	2b02      	cmp	r3, #2
 80049b6:	d10f      	bne.n	80049d8 <main+0x4cc>
				E3_MoveX(&e3_1);
 80049b8:	483b      	ldr	r0, [pc, #236]	@ (8004aa8 <main+0x59c>)
 80049ba:	f7fe fd77 	bl	80034ac <E3_MoveX>
				E3_Eye(&e3_1);
 80049be:	483a      	ldr	r0, [pc, #232]	@ (8004aa8 <main+0x59c>)
 80049c0:	f7fe fb16 	bl	8002ff0 <E3_Eye>
				E3_FireMove(&e3_1,&p1);
 80049c4:	4937      	ldr	r1, [pc, #220]	@ (8004aa4 <main+0x598>)
 80049c6:	4838      	ldr	r0, [pc, #224]	@ (8004aa8 <main+0x59c>)
 80049c8:	f7fe fb8c 	bl	80030e4 <E3_FireMove>
				E3_Hitbox(&e3_1);
 80049cc:	4836      	ldr	r0, [pc, #216]	@ (8004aa8 <main+0x59c>)
 80049ce:	f7fe fcb7 	bl	8003340 <E3_Hitbox>
				E3_FireAnimation(&e3_1);
 80049d2:	4835      	ldr	r0, [pc, #212]	@ (8004aa8 <main+0x59c>)
 80049d4:	f7fe fc7c 	bl	80032d0 <E3_FireAnimation>
			}

			PlayerAttackAnimation(&p1);
 80049d8:	4832      	ldr	r0, [pc, #200]	@ (8004aa4 <main+0x598>)
 80049da:	f7ff f941 	bl	8003c60 <PlayerAttackAnimation>
			SonidoPlayerAttack(&htim2, TIM_CHANNEL_4,&p1);
 80049de:	4a31      	ldr	r2, [pc, #196]	@ (8004aa4 <main+0x598>)
 80049e0:	210c      	movs	r1, #12
 80049e2:	4832      	ldr	r0, [pc, #200]	@ (8004aac <main+0x5a0>)
 80049e4:	f7ff fd1e 	bl	8004424 <SonidoPlayerAttack>
			PlayerDamageAnimation(&p1);
 80049e8:	482e      	ldr	r0, [pc, #184]	@ (8004aa4 <main+0x598>)
 80049ea:	f7ff f9dd 	bl	8003da8 <PlayerDamageAnimation>
			PlayerDieAnimation(&p1);
 80049ee:	482d      	ldr	r0, [pc, #180]	@ (8004aa4 <main+0x598>)
 80049f0:	f7ff fa7e 	bl	8003ef0 <PlayerDieAnimation>
			break;}
 80049f4:	e141      	b.n	8004c7a <main+0x76e>


		case DUO:{
			if (nivelActual1==NIVEL1){
 80049f6:	4b25      	ldr	r3, [pc, #148]	@ (8004a8c <main+0x580>)
 80049f8:	781b      	ldrb	r3, [r3, #0]
 80049fa:	b2db      	uxtb	r3, r3
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d122      	bne.n	8004a46 <main+0x53a>
				if(e1_1.isAlive==1){
 8004a00:	4b23      	ldr	r3, [pc, #140]	@ (8004a90 <main+0x584>)
 8004a02:	695b      	ldr	r3, [r3, #20]
 8004a04:	2b01      	cmp	r3, #1
 8004a06:	d105      	bne.n	8004a14 <main+0x508>
					animation_e1(&e1_1);
 8004a08:	4821      	ldr	r0, [pc, #132]	@ (8004a90 <main+0x584>)
 8004a0a:	f7fd fa21 	bl	8001e50 <animation_e1>
					animation_e1_control(&e1_1);}
 8004a0e:	4820      	ldr	r0, [pc, #128]	@ (8004a90 <main+0x584>)
 8004a10:	f7fd f9ca 	bl	8001da8 <animation_e1_control>
				animation_e1_die(&e1_1);
 8004a14:	481e      	ldr	r0, [pc, #120]	@ (8004a90 <main+0x584>)
 8004a16:	f7fd fae3 	bl	8001fe0 <animation_e1_die>

				if ( e1_1.isAlive==0&& e1_1.animationDie>=11 ){
 8004a1a:	4b1d      	ldr	r3, [pc, #116]	@ (8004a90 <main+0x584>)
 8004a1c:	695b      	ldr	r3, [r3, #20]
 8004a1e:	2b00      	cmp	r3, #0
 8004a20:	d111      	bne.n	8004a46 <main+0x53a>
 8004a22:	4b1b      	ldr	r3, [pc, #108]	@ (8004a90 <main+0x584>)
 8004a24:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8004a28:	eeb2 7a06 	vmov.f32	s14, #38	@ 0x41300000  11.0
 8004a2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a34:	db07      	blt.n	8004a46 <main+0x53a>
					nivelActual1=NIVEL2;
 8004a36:	4b15      	ldr	r3, [pc, #84]	@ (8004a8c <main+0x580>)
 8004a38:	2201      	movs	r2, #1
 8004a3a:	701a      	strb	r2, [r3, #0]
					IniciarLevel=1;
 8004a3c:	4b17      	ldr	r3, [pc, #92]	@ (8004a9c <main+0x590>)
 8004a3e:	2201      	movs	r2, #1
 8004a40:	601a      	str	r2, [r3, #0]
					initLevelP1();
 8004a42:	f7ff fb63 	bl	800410c <initLevelP1>
				}
			}

			if (nivelActual1==NIVEL2){
 8004a46:	4b11      	ldr	r3, [pc, #68]	@ (8004a8c <main+0x580>)
 8004a48:	781b      	ldrb	r3, [r3, #0]
 8004a4a:	b2db      	uxtb	r3, r3
 8004a4c:	2b01      	cmp	r3, #1
 8004a4e:	d15c      	bne.n	8004b0a <main+0x5fe>
				if (e2_1.isAlive==1){
 8004a50:	4b13      	ldr	r3, [pc, #76]	@ (8004aa0 <main+0x594>)
 8004a52:	695b      	ldr	r3, [r3, #20]
 8004a54:	2b01      	cmp	r3, #1
 8004a56:	d13f      	bne.n	8004ad8 <main+0x5cc>
					moveE2(&e2_1, &p1);
 8004a58:	4912      	ldr	r1, [pc, #72]	@ (8004aa4 <main+0x598>)
 8004a5a:	4811      	ldr	r0, [pc, #68]	@ (8004aa0 <main+0x594>)
 8004a5c:	f7fd ff70 	bl	8002940 <moveE2>
					if (nivelActual2!=NIVEL2){
 8004a60:	4b13      	ldr	r3, [pc, #76]	@ (8004ab0 <main+0x5a4>)
 8004a62:	781b      	ldrb	r3, [r3, #0]
 8004a64:	b2db      	uxtb	r3, r3
 8004a66:	2b01      	cmp	r3, #1
 8004a68:	d026      	beq.n	8004ab8 <main+0x5ac>
					e2_1.delay+=1000;}//0.5
 8004a6a:	4b0d      	ldr	r3, [pc, #52]	@ (8004aa0 <main+0x594>)
 8004a6c:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 8004a70:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8004ab4 <main+0x5a8>
 8004a74:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a78:	4b09      	ldr	r3, [pc, #36]	@ (8004aa0 <main+0x594>)
 8004a7a:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
 8004a7e:	e025      	b.n	8004acc <main+0x5c0>
 8004a80:	0800cd48 	.word	0x0800cd48
 8004a84:	2001caec 	.word	0x2001caec
 8004a88:	20016a78 	.word	0x20016a78
 8004a8c:	2001cae1 	.word	0x2001cae1
 8004a90:	2001c86c 	.word	0x2001c86c
 8004a94:	2001c8a0 	.word	0x2001c8a0
 8004a98:	2001c8d4 	.word	0x2001c8d4
 8004a9c:	2001cae4 	.word	0x2001cae4
 8004aa0:	2001c9a4 	.word	0x2001c9a4
 8004aa4:	2001c784 	.word	0x2001c784
 8004aa8:	2001ca2c 	.word	0x2001ca2c
 8004aac:	20017ba0 	.word	0x20017ba0
 8004ab0:	2001cae2 	.word	0x2001cae2
 8004ab4:	447a0000 	.word	0x447a0000
					else{
						e2_1.delay+=1;
 8004ab8:	4b70      	ldr	r3, [pc, #448]	@ (8004c7c <main+0x770>)
 8004aba:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 8004abe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004ac2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ac6:	4b6d      	ldr	r3, [pc, #436]	@ (8004c7c <main+0x770>)
 8004ac8:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
					}
					E2_Appear(&e2_1);
 8004acc:	486b      	ldr	r0, [pc, #428]	@ (8004c7c <main+0x770>)
 8004ace:	f7fe f84f 	bl	8002b70 <E2_Appear>
					E2_Hurt(&e2_1);
 8004ad2:	486a      	ldr	r0, [pc, #424]	@ (8004c7c <main+0x770>)
 8004ad4:	f7fe f894 	bl	8002c00 <E2_Hurt>
				}
				E2_Die(&e2_1);
 8004ad8:	4868      	ldr	r0, [pc, #416]	@ (8004c7c <main+0x770>)
 8004ada:	f7fe f8e1 	bl	8002ca0 <E2_Die>
				if (e2_1.isAlive==0&&e2_1.animationDie>=6){
 8004ade:	4b67      	ldr	r3, [pc, #412]	@ (8004c7c <main+0x770>)
 8004ae0:	695b      	ldr	r3, [r3, #20]
 8004ae2:	2b00      	cmp	r3, #0
 8004ae4:	d111      	bne.n	8004b0a <main+0x5fe>
 8004ae6:	4b65      	ldr	r3, [pc, #404]	@ (8004c7c <main+0x770>)
 8004ae8:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8004aec:	eeb1 7a08 	vmov.f32	s14, #24	@ 0x40c00000  6.0
 8004af0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004af4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004af8:	db07      	blt.n	8004b0a <main+0x5fe>
					nivelActual1=NIVEL3;
 8004afa:	4b61      	ldr	r3, [pc, #388]	@ (8004c80 <main+0x774>)
 8004afc:	2202      	movs	r2, #2
 8004afe:	701a      	strb	r2, [r3, #0]
					IniciarLevel=1;
 8004b00:	4b60      	ldr	r3, [pc, #384]	@ (8004c84 <main+0x778>)
 8004b02:	2201      	movs	r2, #1
 8004b04:	601a      	str	r2, [r3, #0]
					initLevelP1();
 8004b06:	f7ff fb01 	bl	800410c <initLevelP1>
				}
			}
			if (nivelActual1==NIVEL3){
 8004b0a:	4b5d      	ldr	r3, [pc, #372]	@ (8004c80 <main+0x774>)
 8004b0c:	781b      	ldrb	r3, [r3, #0]
 8004b0e:	b2db      	uxtb	r3, r3
 8004b10:	2b02      	cmp	r3, #2
 8004b12:	d10f      	bne.n	8004b34 <main+0x628>
				E3_MoveX(&e3_1);
 8004b14:	485c      	ldr	r0, [pc, #368]	@ (8004c88 <main+0x77c>)
 8004b16:	f7fe fcc9 	bl	80034ac <E3_MoveX>
				E3_Eye(&e3_1);
 8004b1a:	485b      	ldr	r0, [pc, #364]	@ (8004c88 <main+0x77c>)
 8004b1c:	f7fe fa68 	bl	8002ff0 <E3_Eye>
				E3_FireMove(&e3_1,&p1);
 8004b20:	495a      	ldr	r1, [pc, #360]	@ (8004c8c <main+0x780>)
 8004b22:	4859      	ldr	r0, [pc, #356]	@ (8004c88 <main+0x77c>)
 8004b24:	f7fe fade 	bl	80030e4 <E3_FireMove>
				E3_Hitbox(&e3_1);
 8004b28:	4857      	ldr	r0, [pc, #348]	@ (8004c88 <main+0x77c>)
 8004b2a:	f7fe fc09 	bl	8003340 <E3_Hitbox>
				E3_FireAnimation(&e3_1);
 8004b2e:	4856      	ldr	r0, [pc, #344]	@ (8004c88 <main+0x77c>)
 8004b30:	f7fe fbce 	bl	80032d0 <E3_FireAnimation>
			}

			if (nivelActual2==NIVEL1){
 8004b34:	4b56      	ldr	r3, [pc, #344]	@ (8004c90 <main+0x784>)
 8004b36:	781b      	ldrb	r3, [r3, #0]
 8004b38:	b2db      	uxtb	r3, r3
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	d122      	bne.n	8004b84 <main+0x678>
				if(e1_4.isAlive==1){
 8004b3e:	4b55      	ldr	r3, [pc, #340]	@ (8004c94 <main+0x788>)
 8004b40:	695b      	ldr	r3, [r3, #20]
 8004b42:	2b01      	cmp	r3, #1
 8004b44:	d105      	bne.n	8004b52 <main+0x646>
					animation_e1(&e1_4);
 8004b46:	4853      	ldr	r0, [pc, #332]	@ (8004c94 <main+0x788>)
 8004b48:	f7fd f982 	bl	8001e50 <animation_e1>
					animation_e1_control(&e1_4);}
 8004b4c:	4851      	ldr	r0, [pc, #324]	@ (8004c94 <main+0x788>)
 8004b4e:	f7fd f92b 	bl	8001da8 <animation_e1_control>
				animation_e1_die(&e1_4);
 8004b52:	4850      	ldr	r0, [pc, #320]	@ (8004c94 <main+0x788>)
 8004b54:	f7fd fa44 	bl	8001fe0 <animation_e1_die>

				if (e1_4.isAlive==0 && e1_4.animationDie>=11){
 8004b58:	4b4e      	ldr	r3, [pc, #312]	@ (8004c94 <main+0x788>)
 8004b5a:	695b      	ldr	r3, [r3, #20]
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d111      	bne.n	8004b84 <main+0x678>
 8004b60:	4b4c      	ldr	r3, [pc, #304]	@ (8004c94 <main+0x788>)
 8004b62:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8004b66:	eeb2 7a06 	vmov.f32	s14, #38	@ 0x41300000  11.0
 8004b6a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b72:	db07      	blt.n	8004b84 <main+0x678>
					nivelActual2=NIVEL2;
 8004b74:	4b46      	ldr	r3, [pc, #280]	@ (8004c90 <main+0x784>)
 8004b76:	2201      	movs	r2, #1
 8004b78:	701a      	strb	r2, [r3, #0]
					IniciarLevel2=1;
 8004b7a:	4b47      	ldr	r3, [pc, #284]	@ (8004c98 <main+0x78c>)
 8004b7c:	2201      	movs	r2, #1
 8004b7e:	601a      	str	r2, [r3, #0]
					initLevelP2();
 8004b80:	f7ff fb4c 	bl	800421c <initLevelP2>
				}
			}

			if (nivelActual2==NIVEL2){
 8004b84:	4b42      	ldr	r3, [pc, #264]	@ (8004c90 <main+0x784>)
 8004b86:	781b      	ldrb	r3, [r3, #0]
 8004b88:	b2db      	uxtb	r3, r3
 8004b8a:	2b01      	cmp	r3, #1
 8004b8c:	d140      	bne.n	8004c10 <main+0x704>
				if (e2_2.isAlive==1){
 8004b8e:	4b43      	ldr	r3, [pc, #268]	@ (8004c9c <main+0x790>)
 8004b90:	695b      	ldr	r3, [r3, #20]
 8004b92:	2b01      	cmp	r3, #1
 8004b94:	d123      	bne.n	8004bde <main+0x6d2>
					moveE2(&e2_2, &p2);
 8004b96:	4942      	ldr	r1, [pc, #264]	@ (8004ca0 <main+0x794>)
 8004b98:	4840      	ldr	r0, [pc, #256]	@ (8004c9c <main+0x790>)
 8004b9a:	f7fd fed1 	bl	8002940 <moveE2>
					if (nivelActual1!=NIVEL2){
 8004b9e:	4b38      	ldr	r3, [pc, #224]	@ (8004c80 <main+0x774>)
 8004ba0:	781b      	ldrb	r3, [r3, #0]
 8004ba2:	b2db      	uxtb	r3, r3
 8004ba4:	2b01      	cmp	r3, #1
 8004ba6:	d00a      	beq.n	8004bbe <main+0x6b2>
						e2_2.delay+=1000;
 8004ba8:	4b3c      	ldr	r3, [pc, #240]	@ (8004c9c <main+0x790>)
 8004baa:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 8004bae:	ed9f 7a3d 	vldr	s14, [pc, #244]	@ 8004ca4 <main+0x798>
 8004bb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bb6:	4b39      	ldr	r3, [pc, #228]	@ (8004c9c <main+0x790>)
 8004bb8:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
 8004bbc:	e009      	b.n	8004bd2 <main+0x6c6>
					}else{
					e2_2.delay+=1;}
 8004bbe:	4b37      	ldr	r3, [pc, #220]	@ (8004c9c <main+0x790>)
 8004bc0:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 8004bc4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8004bc8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bcc:	4b33      	ldr	r3, [pc, #204]	@ (8004c9c <main+0x790>)
 8004bce:	edc3 7a10 	vstr	s15, [r3, #64]	@ 0x40
					E2_Appear(&e2_2);
 8004bd2:	4832      	ldr	r0, [pc, #200]	@ (8004c9c <main+0x790>)
 8004bd4:	f7fd ffcc 	bl	8002b70 <E2_Appear>
					E2_Hurt(&e2_2);
 8004bd8:	4830      	ldr	r0, [pc, #192]	@ (8004c9c <main+0x790>)
 8004bda:	f7fe f811 	bl	8002c00 <E2_Hurt>
				}
				E2_Die(&e2_2);
 8004bde:	482f      	ldr	r0, [pc, #188]	@ (8004c9c <main+0x790>)
 8004be0:	f7fe f85e 	bl	8002ca0 <E2_Die>
				if (e2_2.isAlive==0&&e2_2.animationDie>=6){
 8004be4:	4b2d      	ldr	r3, [pc, #180]	@ (8004c9c <main+0x790>)
 8004be6:	695b      	ldr	r3, [r3, #20]
 8004be8:	2b00      	cmp	r3, #0
 8004bea:	d111      	bne.n	8004c10 <main+0x704>
 8004bec:	4b2b      	ldr	r3, [pc, #172]	@ (8004c9c <main+0x790>)
 8004bee:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8004bf2:	eeb1 7a08 	vmov.f32	s14, #24	@ 0x40c00000  6.0
 8004bf6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bfe:	db07      	blt.n	8004c10 <main+0x704>
					nivelActual2=NIVEL3;
 8004c00:	4b23      	ldr	r3, [pc, #140]	@ (8004c90 <main+0x784>)
 8004c02:	2202      	movs	r2, #2
 8004c04:	701a      	strb	r2, [r3, #0]
					IniciarLevel2=1;
 8004c06:	4b24      	ldr	r3, [pc, #144]	@ (8004c98 <main+0x78c>)
 8004c08:	2201      	movs	r2, #1
 8004c0a:	601a      	str	r2, [r3, #0]
					initLevelP2();
 8004c0c:	f7ff fb06 	bl	800421c <initLevelP2>
				}
			}

			if (nivelActual2==NIVEL3){
 8004c10:	4b1f      	ldr	r3, [pc, #124]	@ (8004c90 <main+0x784>)
 8004c12:	781b      	ldrb	r3, [r3, #0]
 8004c14:	b2db      	uxtb	r3, r3
 8004c16:	2b02      	cmp	r3, #2
 8004c18:	d10f      	bne.n	8004c3a <main+0x72e>
				E3_MoveX(&e3_2);
 8004c1a:	4823      	ldr	r0, [pc, #140]	@ (8004ca8 <main+0x79c>)
 8004c1c:	f7fe fc46 	bl	80034ac <E3_MoveX>
				E3_Eye(&e3_2);
 8004c20:	4821      	ldr	r0, [pc, #132]	@ (8004ca8 <main+0x79c>)
 8004c22:	f7fe f9e5 	bl	8002ff0 <E3_Eye>
				E3_FireMove(&e3_2,&p2);
 8004c26:	491e      	ldr	r1, [pc, #120]	@ (8004ca0 <main+0x794>)
 8004c28:	481f      	ldr	r0, [pc, #124]	@ (8004ca8 <main+0x79c>)
 8004c2a:	f7fe fa5b 	bl	80030e4 <E3_FireMove>
				E3_Hitbox(&e3_2);
 8004c2e:	481e      	ldr	r0, [pc, #120]	@ (8004ca8 <main+0x79c>)
 8004c30:	f7fe fb86 	bl	8003340 <E3_Hitbox>
				E3_FireAnimation(&e3_2);
 8004c34:	481c      	ldr	r0, [pc, #112]	@ (8004ca8 <main+0x79c>)
 8004c36:	f7fe fb4b 	bl	80032d0 <E3_FireAnimation>
			}


			PlayerAttackAnimation(&p1);
 8004c3a:	4814      	ldr	r0, [pc, #80]	@ (8004c8c <main+0x780>)
 8004c3c:	f7ff f810 	bl	8003c60 <PlayerAttackAnimation>
			PlayerDamageAnimation(&p1);
 8004c40:	4812      	ldr	r0, [pc, #72]	@ (8004c8c <main+0x780>)
 8004c42:	f7ff f8b1 	bl	8003da8 <PlayerDamageAnimation>
			PlayerDieAnimation(&p1);
 8004c46:	4811      	ldr	r0, [pc, #68]	@ (8004c8c <main+0x780>)
 8004c48:	f7ff f952 	bl	8003ef0 <PlayerDieAnimation>

			PlayerAttackAnimation(&p2);
 8004c4c:	4814      	ldr	r0, [pc, #80]	@ (8004ca0 <main+0x794>)
 8004c4e:	f7ff f807 	bl	8003c60 <PlayerAttackAnimation>
			PlayerDamageAnimation(&p2);
 8004c52:	4813      	ldr	r0, [pc, #76]	@ (8004ca0 <main+0x794>)
 8004c54:	f7ff f8a8 	bl	8003da8 <PlayerDamageAnimation>
			PlayerDieAnimation(&p2);
 8004c58:	4811      	ldr	r0, [pc, #68]	@ (8004ca0 <main+0x794>)
 8004c5a:	f7ff f949 	bl	8003ef0 <PlayerDieAnimation>
			break;}
 8004c5e:	e00c      	b.n	8004c7a <main+0x76e>
		case PAUSA:
			//LCD_Bitmap(0, 0, 320, 240, pausa_menu);
			CargarMultiplesBitmaps("pausa");
 8004c60:	4812      	ldr	r0, [pc, #72]	@ (8004cac <main+0x7a0>)
 8004c62:	f7ff fb67 	bl	8004334 <CargarMultiplesBitmaps>
			break;
 8004c66:	e008      	b.n	8004c7a <main+0x76e>
		case WIN1:
			CargarMultiplesBitmaps("p1w");
 8004c68:	4811      	ldr	r0, [pc, #68]	@ (8004cb0 <main+0x7a4>)
 8004c6a:	f7ff fb63 	bl	8004334 <CargarMultiplesBitmaps>
			break;
 8004c6e:	e004      	b.n	8004c7a <main+0x76e>
		case WIN2:
			CargarMultiplesBitmaps("p2w");
 8004c70:	4810      	ldr	r0, [pc, #64]	@ (8004cb4 <main+0x7a8>)
 8004c72:	f7ff fb5f 	bl	8004334 <CargarMultiplesBitmaps>
			break;
 8004c76:	e000      	b.n	8004c7a <main+0x76e>
		default:
			break;
 8004c78:	bf00      	nop
		if (repintarFondo) {
 8004c7a:	e58d      	b.n	8004798 <main+0x28c>
 8004c7c:	2001c9a4 	.word	0x2001c9a4
 8004c80:	2001cae1 	.word	0x2001cae1
 8004c84:	2001cae4 	.word	0x2001cae4
 8004c88:	2001ca2c 	.word	0x2001ca2c
 8004c8c:	2001c784 	.word	0x2001c784
 8004c90:	2001cae2 	.word	0x2001cae2
 8004c94:	2001c908 	.word	0x2001c908
 8004c98:	2001cae8 	.word	0x2001cae8
 8004c9c:	2001c9e8 	.word	0x2001c9e8
 8004ca0:	2001c7f8 	.word	0x2001c7f8
 8004ca4:	447a0000 	.word	0x447a0000
 8004ca8:	2001ca84 	.word	0x2001ca84
 8004cac:	0800cd48 	.word	0x0800cd48
 8004cb0:	0800cd50 	.word	0x0800cd50
 8004cb4:	0800cd54 	.word	0x0800cd54

08004cb8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004cb8:	b580      	push	{r7, lr}
 8004cba:	b094      	sub	sp, #80	@ 0x50
 8004cbc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004cbe:	f107 031c 	add.w	r3, r7, #28
 8004cc2:	2234      	movs	r2, #52	@ 0x34
 8004cc4:	2100      	movs	r1, #0
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	f007 fb60 	bl	800c38c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004ccc:	f107 0308 	add.w	r3, r7, #8
 8004cd0:	2200      	movs	r2, #0
 8004cd2:	601a      	str	r2, [r3, #0]
 8004cd4:	605a      	str	r2, [r3, #4]
 8004cd6:	609a      	str	r2, [r3, #8]
 8004cd8:	60da      	str	r2, [r3, #12]
 8004cda:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8004cdc:	2300      	movs	r3, #0
 8004cde:	607b      	str	r3, [r7, #4]
 8004ce0:	4b29      	ldr	r3, [pc, #164]	@ (8004d88 <SystemClock_Config+0xd0>)
 8004ce2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ce4:	4a28      	ldr	r2, [pc, #160]	@ (8004d88 <SystemClock_Config+0xd0>)
 8004ce6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004cea:	6413      	str	r3, [r2, #64]	@ 0x40
 8004cec:	4b26      	ldr	r3, [pc, #152]	@ (8004d88 <SystemClock_Config+0xd0>)
 8004cee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004cf0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004cf4:	607b      	str	r3, [r7, #4]
 8004cf6:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8004cf8:	2300      	movs	r3, #0
 8004cfa:	603b      	str	r3, [r7, #0]
 8004cfc:	4b23      	ldr	r3, [pc, #140]	@ (8004d8c <SystemClock_Config+0xd4>)
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8004d04:	4a21      	ldr	r2, [pc, #132]	@ (8004d8c <SystemClock_Config+0xd4>)
 8004d06:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004d0a:	6013      	str	r3, [r2, #0]
 8004d0c:	4b1f      	ldr	r3, [pc, #124]	@ (8004d8c <SystemClock_Config+0xd4>)
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8004d14:	603b      	str	r3, [r7, #0]
 8004d16:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004d18:	2302      	movs	r3, #2
 8004d1a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8004d1c:	2301      	movs	r3, #1
 8004d1e:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8004d20:	2310      	movs	r3, #16
 8004d22:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8004d24:	2302      	movs	r3, #2
 8004d26:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8004d28:	2300      	movs	r3, #0
 8004d2a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8004d2c:	2308      	movs	r3, #8
 8004d2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 80;
 8004d30:	2350      	movs	r3, #80	@ 0x50
 8004d32:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8004d34:	2302      	movs	r3, #2
 8004d36:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8004d38:	2302      	movs	r3, #2
 8004d3a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8004d3c:	2302      	movs	r3, #2
 8004d3e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8004d40:	f107 031c 	add.w	r3, r7, #28
 8004d44:	4618      	mov	r0, r3
 8004d46:	f001 ff5d 	bl	8006c04 <HAL_RCC_OscConfig>
 8004d4a:	4603      	mov	r3, r0
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d001      	beq.n	8004d54 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8004d50:	f000 fe54 	bl	80059fc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004d54:	230f      	movs	r3, #15
 8004d56:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8004d58:	2302      	movs	r3, #2
 8004d5a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8004d5c:	2300      	movs	r3, #0
 8004d5e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8004d60:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004d64:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8004d66:	2300      	movs	r3, #0
 8004d68:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8004d6a:	f107 0308 	add.w	r3, r7, #8
 8004d6e:	2102      	movs	r1, #2
 8004d70:	4618      	mov	r0, r3
 8004d72:	f001 fc83 	bl	800667c <HAL_RCC_ClockConfig>
 8004d76:	4603      	mov	r3, r0
 8004d78:	2b00      	cmp	r3, #0
 8004d7a:	d001      	beq.n	8004d80 <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8004d7c:	f000 fe3e 	bl	80059fc <Error_Handler>
  }
}
 8004d80:	bf00      	nop
 8004d82:	3750      	adds	r7, #80	@ 0x50
 8004d84:	46bd      	mov	sp, r7
 8004d86:	bd80      	pop	{r7, pc}
 8004d88:	40023800 	.word	0x40023800
 8004d8c:	40007000 	.word	0x40007000

08004d90 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8004d90:	b580      	push	{r7, lr}
 8004d92:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8004d94:	4b17      	ldr	r3, [pc, #92]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004d96:	4a18      	ldr	r2, [pc, #96]	@ (8004df8 <MX_SPI1_Init+0x68>)
 8004d98:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8004d9a:	4b16      	ldr	r3, [pc, #88]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004d9c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004da0:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004da2:	4b14      	ldr	r3, [pc, #80]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004da4:	2200      	movs	r2, #0
 8004da6:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8004da8:	4b12      	ldr	r3, [pc, #72]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004daa:	2200      	movs	r2, #0
 8004dac:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004dae:	4b11      	ldr	r3, [pc, #68]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004db0:	2200      	movs	r2, #0
 8004db2:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8004db4:	4b0f      	ldr	r3, [pc, #60]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004db6:	2200      	movs	r2, #0
 8004db8:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8004dba:	4b0e      	ldr	r3, [pc, #56]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004dbc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004dc0:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8004dc2:	4b0c      	ldr	r3, [pc, #48]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004dc4:	2210      	movs	r2, #16
 8004dc6:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8004dc8:	4b0a      	ldr	r3, [pc, #40]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004dca:	2200      	movs	r2, #0
 8004dcc:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8004dce:	4b09      	ldr	r3, [pc, #36]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004dd0:	2200      	movs	r2, #0
 8004dd2:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004dd4:	4b07      	ldr	r3, [pc, #28]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004dd6:	2200      	movs	r2, #0
 8004dd8:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8004dda:	4b06      	ldr	r3, [pc, #24]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004ddc:	220a      	movs	r2, #10
 8004dde:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8004de0:	4804      	ldr	r0, [pc, #16]	@ (8004df4 <MX_SPI1_Init+0x64>)
 8004de2:	f002 f9ad 	bl	8007140 <HAL_SPI_Init>
 8004de6:	4603      	mov	r3, r0
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	d001      	beq.n	8004df0 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8004dec:	f000 fe06 	bl	80059fc <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8004df0:	bf00      	nop
 8004df2:	bd80      	pop	{r7, pc}
 8004df4:	20016b10 	.word	0x20016b10
 8004df8:	40013000 	.word	0x40013000

08004dfc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8004dfc:	b580      	push	{r7, lr}
 8004dfe:	b08a      	sub	sp, #40	@ 0x28
 8004e00:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004e02:	f107 0320 	add.w	r3, r7, #32
 8004e06:	2200      	movs	r2, #0
 8004e08:	601a      	str	r2, [r3, #0]
 8004e0a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8004e0c:	1d3b      	adds	r3, r7, #4
 8004e0e:	2200      	movs	r2, #0
 8004e10:	601a      	str	r2, [r3, #0]
 8004e12:	605a      	str	r2, [r3, #4]
 8004e14:	609a      	str	r2, [r3, #8]
 8004e16:	60da      	str	r2, [r3, #12]
 8004e18:	611a      	str	r2, [r3, #16]
 8004e1a:	615a      	str	r2, [r3, #20]
 8004e1c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004e1e:	4b22      	ldr	r3, [pc, #136]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e20:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8004e24:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 127;
 8004e26:	4b20      	ldr	r3, [pc, #128]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e28:	227f      	movs	r2, #127	@ 0x7f
 8004e2a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004e2c:	4b1e      	ldr	r3, [pc, #120]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e2e:	2200      	movs	r2, #0
 8004e30:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 20;
 8004e32:	4b1d      	ldr	r3, [pc, #116]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e34:	2214      	movs	r2, #20
 8004e36:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004e38:	4b1b      	ldr	r3, [pc, #108]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004e3e:	4b1a      	ldr	r3, [pc, #104]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e40:	2200      	movs	r2, #0
 8004e42:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8004e44:	4818      	ldr	r0, [pc, #96]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e46:	f002 fdd3 	bl	80079f0 <HAL_TIM_PWM_Init>
 8004e4a:	4603      	mov	r3, r0
 8004e4c:	2b00      	cmp	r3, #0
 8004e4e:	d001      	beq.n	8004e54 <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 8004e50:	f000 fdd4 	bl	80059fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004e54:	2300      	movs	r3, #0
 8004e56:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004e58:	2300      	movs	r3, #0
 8004e5a:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004e5c:	f107 0320 	add.w	r3, r7, #32
 8004e60:	4619      	mov	r1, r3
 8004e62:	4811      	ldr	r0, [pc, #68]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e64:	f003 fa20 	bl	80082a8 <HAL_TIMEx_MasterConfigSynchronization>
 8004e68:	4603      	mov	r3, r0
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d001      	beq.n	8004e72 <MX_TIM2_Init+0x76>
  {
    Error_Handler();
 8004e6e:	f000 fdc5 	bl	80059fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004e72:	2360      	movs	r3, #96	@ 0x60
 8004e74:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8004e76:	2300      	movs	r3, #0
 8004e78:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004e7a:	2300      	movs	r3, #0
 8004e7c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004e7e:	2300      	movs	r3, #0
 8004e80:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8004e82:	1d3b      	adds	r3, r7, #4
 8004e84:	220c      	movs	r2, #12
 8004e86:	4619      	mov	r1, r3
 8004e88:	4807      	ldr	r0, [pc, #28]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e8a:	f002 fec9 	bl	8007c20 <HAL_TIM_PWM_ConfigChannel>
 8004e8e:	4603      	mov	r3, r0
 8004e90:	2b00      	cmp	r3, #0
 8004e92:	d001      	beq.n	8004e98 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8004e94:	f000 fdb2 	bl	80059fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8004e98:	4803      	ldr	r0, [pc, #12]	@ (8004ea8 <MX_TIM2_Init+0xac>)
 8004e9a:	f000 fe45 	bl	8005b28 <HAL_TIM_MspPostInit>

}
 8004e9e:	bf00      	nop
 8004ea0:	3728      	adds	r7, #40	@ 0x28
 8004ea2:	46bd      	mov	sp, r7
 8004ea4:	bd80      	pop	{r7, pc}
 8004ea6:	bf00      	nop
 8004ea8:	20017ba0 	.word	0x20017ba0

08004eac <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 8004eac:	b580      	push	{r7, lr}
 8004eae:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 8004eb0:	4b11      	ldr	r3, [pc, #68]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004eb2:	4a12      	ldr	r2, [pc, #72]	@ (8004efc <MX_UART5_Init+0x50>)
 8004eb4:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 115200;
 8004eb6:	4b10      	ldr	r3, [pc, #64]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004eb8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8004ebc:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 8004ebe:	4b0e      	ldr	r3, [pc, #56]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ec0:	2200      	movs	r2, #0
 8004ec2:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8004ec4:	4b0c      	ldr	r3, [pc, #48]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ec6:	2200      	movs	r2, #0
 8004ec8:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 8004eca:	4b0b      	ldr	r3, [pc, #44]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ecc:	2200      	movs	r2, #0
 8004ece:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8004ed0:	4b09      	ldr	r3, [pc, #36]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ed2:	220c      	movs	r2, #12
 8004ed4:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004ed6:	4b08      	ldr	r3, [pc, #32]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ed8:	2200      	movs	r2, #0
 8004eda:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8004edc:	4b06      	ldr	r3, [pc, #24]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ede:	2200      	movs	r2, #0
 8004ee0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8004ee2:	4805      	ldr	r0, [pc, #20]	@ (8004ef8 <MX_UART5_Init+0x4c>)
 8004ee4:	f003 fa5c 	bl	80083a0 <HAL_UART_Init>
 8004ee8:	4603      	mov	r3, r0
 8004eea:	2b00      	cmp	r3, #0
 8004eec:	d001      	beq.n	8004ef2 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 8004eee:	f000 fd85 	bl	80059fc <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 8004ef2:	bf00      	nop
 8004ef4:	bd80      	pop	{r7, pc}
 8004ef6:	bf00      	nop
 8004ef8:	20017be8 	.word	0x20017be8
 8004efc:	40005000 	.word	0x40005000

08004f00 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8004f00:	b580      	push	{r7, lr}
 8004f02:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8004f04:	4b11      	ldr	r3, [pc, #68]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f06:	4a12      	ldr	r2, [pc, #72]	@ (8004f50 <MX_USART2_UART_Init+0x50>)
 8004f08:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8004f0a:	4b10      	ldr	r3, [pc, #64]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f0c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8004f10:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8004f12:	4b0e      	ldr	r3, [pc, #56]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f14:	2200      	movs	r2, #0
 8004f16:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8004f18:	4b0c      	ldr	r3, [pc, #48]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8004f1e:	4b0b      	ldr	r3, [pc, #44]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f20:	2200      	movs	r2, #0
 8004f22:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004f24:	4b09      	ldr	r3, [pc, #36]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f26:	220c      	movs	r2, #12
 8004f28:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004f2a:	4b08      	ldr	r3, [pc, #32]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f2c:	2200      	movs	r2, #0
 8004f2e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8004f30:	4b06      	ldr	r3, [pc, #24]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f32:	2200      	movs	r2, #0
 8004f34:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004f36:	4805      	ldr	r0, [pc, #20]	@ (8004f4c <MX_USART2_UART_Init+0x4c>)
 8004f38:	f003 fa32 	bl	80083a0 <HAL_UART_Init>
 8004f3c:	4603      	mov	r3, r0
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d001      	beq.n	8004f46 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8004f42:	f000 fd5b 	bl	80059fc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8004f46:	bf00      	nop
 8004f48:	bd80      	pop	{r7, pc}
 8004f4a:	bf00      	nop
 8004f4c:	20017c30 	.word	0x20017c30
 8004f50:	40004400 	.word	0x40004400

08004f54 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004f54:	b580      	push	{r7, lr}
 8004f56:	b08a      	sub	sp, #40	@ 0x28
 8004f58:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004f5a:	f107 0314 	add.w	r3, r7, #20
 8004f5e:	2200      	movs	r2, #0
 8004f60:	601a      	str	r2, [r3, #0]
 8004f62:	605a      	str	r2, [r3, #4]
 8004f64:	609a      	str	r2, [r3, #8]
 8004f66:	60da      	str	r2, [r3, #12]
 8004f68:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8004f6a:	2300      	movs	r3, #0
 8004f6c:	613b      	str	r3, [r7, #16]
 8004f6e:	4b4c      	ldr	r3, [pc, #304]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f72:	4a4b      	ldr	r2, [pc, #300]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f74:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004f78:	6313      	str	r3, [r2, #48]	@ 0x30
 8004f7a:	4b49      	ldr	r3, [pc, #292]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f7e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f82:	613b      	str	r3, [r7, #16]
 8004f84:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8004f86:	2300      	movs	r3, #0
 8004f88:	60fb      	str	r3, [r7, #12]
 8004f8a:	4b45      	ldr	r3, [pc, #276]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f8e:	4a44      	ldr	r2, [pc, #272]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f90:	f043 0304 	orr.w	r3, r3, #4
 8004f94:	6313      	str	r3, [r2, #48]	@ 0x30
 8004f96:	4b42      	ldr	r3, [pc, #264]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004f98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f9a:	f003 0304 	and.w	r3, r3, #4
 8004f9e:	60fb      	str	r3, [r7, #12]
 8004fa0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	60bb      	str	r3, [r7, #8]
 8004fa6:	4b3e      	ldr	r3, [pc, #248]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004faa:	4a3d      	ldr	r2, [pc, #244]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fac:	f043 0301 	orr.w	r3, r3, #1
 8004fb0:	6313      	str	r3, [r2, #48]	@ 0x30
 8004fb2:	4b3b      	ldr	r3, [pc, #236]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fb6:	f003 0301 	and.w	r3, r3, #1
 8004fba:	60bb      	str	r3, [r7, #8]
 8004fbc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	607b      	str	r3, [r7, #4]
 8004fc2:	4b37      	ldr	r3, [pc, #220]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fc6:	4a36      	ldr	r2, [pc, #216]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fc8:	f043 0302 	orr.w	r3, r3, #2
 8004fcc:	6313      	str	r3, [r2, #48]	@ 0x30
 8004fce:	4b34      	ldr	r3, [pc, #208]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fd2:	f003 0302 	and.w	r3, r3, #2
 8004fd6:	607b      	str	r3, [r7, #4]
 8004fd8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004fda:	2300      	movs	r3, #0
 8004fdc:	603b      	str	r3, [r7, #0]
 8004fde:	4b30      	ldr	r3, [pc, #192]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fe0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fe2:	4a2f      	ldr	r2, [pc, #188]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fe4:	f043 0308 	orr.w	r3, r3, #8
 8004fe8:	6313      	str	r3, [r2, #48]	@ 0x30
 8004fea:	4b2d      	ldr	r3, [pc, #180]	@ (80050a0 <MX_GPIO_Init+0x14c>)
 8004fec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fee:	f003 0308 	and.w	r3, r3, #8
 8004ff2:	603b      	str	r3, [r7, #0]
 8004ff4:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin|LCD_D1_Pin, GPIO_PIN_RESET);
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	2182      	movs	r1, #130	@ 0x82
 8004ffa:	482a      	ldr	r0, [pc, #168]	@ (80050a4 <MX_GPIO_Init+0x150>)
 8004ffc:	f001 fb24 	bl	8006648 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 8005000:	2200      	movs	r2, #0
 8005002:	f240 7113 	movw	r1, #1811	@ 0x713
 8005006:	4828      	ldr	r0, [pc, #160]	@ (80050a8 <MX_GPIO_Init+0x154>)
 8005008:	f001 fb1e 	bl	8006648 <HAL_GPIO_WritePin>
                          |LCD_D0_Pin|LCD_D2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 800500c:	2200      	movs	r2, #0
 800500e:	f240 4139 	movw	r1, #1081	@ 0x439
 8005012:	4826      	ldr	r0, [pc, #152]	@ (80050ac <MX_GPIO_Init+0x158>)
 8005014:	f001 fb18 	bl	8006648 <HAL_GPIO_WritePin>
                          |LCD_D4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SD_SS_GPIO_Port, SD_SS_Pin, GPIO_PIN_SET);
 8005018:	2201      	movs	r2, #1
 800501a:	2140      	movs	r1, #64	@ 0x40
 800501c:	4823      	ldr	r0, [pc, #140]	@ (80050ac <MX_GPIO_Init+0x158>)
 800501e:	f001 fb13 	bl	8006648 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_RST_Pin LCD_D1_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin|LCD_D1_Pin;
 8005022:	2382      	movs	r3, #130	@ 0x82
 8005024:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005026:	2301      	movs	r3, #1
 8005028:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800502a:	2300      	movs	r3, #0
 800502c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800502e:	2302      	movs	r3, #2
 8005030:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8005032:	f107 0314 	add.w	r3, r7, #20
 8005036:	4619      	mov	r1, r3
 8005038:	481a      	ldr	r0, [pc, #104]	@ (80050a4 <MX_GPIO_Init+0x150>)
 800503a:	f001 f971 	bl	8006320 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_RD_Pin LCD_WR_Pin LCD_RS_Pin LCD_D7_Pin
                           LCD_D0_Pin LCD_D2_Pin */
  GPIO_InitStruct.Pin = LCD_RD_Pin|LCD_WR_Pin|LCD_RS_Pin|LCD_D7_Pin
 800503e:	f240 7313 	movw	r3, #1811	@ 0x713
 8005042:	617b      	str	r3, [r7, #20]
                          |LCD_D0_Pin|LCD_D2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005044:	2301      	movs	r3, #1
 8005046:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005048:	2300      	movs	r3, #0
 800504a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800504c:	2302      	movs	r3, #2
 800504e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005050:	f107 0314 	add.w	r3, r7, #20
 8005054:	4619      	mov	r1, r3
 8005056:	4814      	ldr	r0, [pc, #80]	@ (80050a8 <MX_GPIO_Init+0x154>)
 8005058:	f001 f962 	bl	8006320 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_CS_Pin LCD_D6_Pin LCD_D3_Pin LCD_D5_Pin
                           LCD_D4_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_D6_Pin|LCD_D3_Pin|LCD_D5_Pin
 800505c:	f240 4339 	movw	r3, #1081	@ 0x439
 8005060:	617b      	str	r3, [r7, #20]
                          |LCD_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005062:	2301      	movs	r3, #1
 8005064:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005066:	2300      	movs	r3, #0
 8005068:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800506a:	2302      	movs	r3, #2
 800506c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800506e:	f107 0314 	add.w	r3, r7, #20
 8005072:	4619      	mov	r1, r3
 8005074:	480d      	ldr	r0, [pc, #52]	@ (80050ac <MX_GPIO_Init+0x158>)
 8005076:	f001 f953 	bl	8006320 <HAL_GPIO_Init>

  /*Configure GPIO pin : SD_SS_Pin */
  GPIO_InitStruct.Pin = SD_SS_Pin;
 800507a:	2340      	movs	r3, #64	@ 0x40
 800507c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800507e:	2301      	movs	r3, #1
 8005080:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005082:	2300      	movs	r3, #0
 8005084:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8005086:	2301      	movs	r3, #1
 8005088:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SD_SS_GPIO_Port, &GPIO_InitStruct);
 800508a:	f107 0314 	add.w	r3, r7, #20
 800508e:	4619      	mov	r1, r3
 8005090:	4806      	ldr	r0, [pc, #24]	@ (80050ac <MX_GPIO_Init+0x158>)
 8005092:	f001 f945 	bl	8006320 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8005096:	bf00      	nop
 8005098:	3728      	adds	r7, #40	@ 0x28
 800509a:	46bd      	mov	sp, r7
 800509c:	bd80      	pop	{r7, pc}
 800509e:	bf00      	nop
 80050a0:	40023800 	.word	0x40023800
 80050a4:	40020800 	.word	0x40020800
 80050a8:	40020000 	.word	0x40020000
 80050ac:	40020400 	.word	0x40020400

080050b0 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80050b0:	b590      	push	{r4, r7, lr}
 80050b2:	b089      	sub	sp, #36	@ 0x24
 80050b4:	af06      	add	r7, sp, #24
 80050b6:	6078      	str	r0, [r7, #4]
	if (modo==1){
 80050b8:	4b97      	ldr	r3, [pc, #604]	@ (8005318 <HAL_UART_RxCpltCallback+0x268>)
 80050ba:	781b      	ldrb	r3, [r3, #0]
 80050bc:	2b01      	cmp	r3, #1
 80050be:	d102      	bne.n	80050c6 <HAL_UART_RxCpltCallback+0x16>
	HitboxPlayer(&p1);}
 80050c0:	4896      	ldr	r0, [pc, #600]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050c2:	f7fe fbb5 	bl	8003830 <HitboxPlayer>
	if (modo==2){
 80050c6:	4b94      	ldr	r3, [pc, #592]	@ (8005318 <HAL_UART_RxCpltCallback+0x268>)
 80050c8:	781b      	ldrb	r3, [r3, #0]
 80050ca:	2b02      	cmp	r3, #2
 80050cc:	d105      	bne.n	80050da <HAL_UART_RxCpltCallback+0x2a>
		HitboxPlayer(&p1);
 80050ce:	4893      	ldr	r0, [pc, #588]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050d0:	f7fe fbae 	bl	8003830 <HitboxPlayer>
		HitboxPlayer(&p2);
 80050d4:	4892      	ldr	r0, [pc, #584]	@ (8005320 <HAL_UART_RxCpltCallback+0x270>)
 80050d6:	f7fe fbab 	bl	8003830 <HitboxPlayer>
	}

	if(buffer[0] == 'd'){
 80050da:	4b92      	ldr	r3, [pc, #584]	@ (8005324 <HAL_UART_RxCpltCallback+0x274>)
 80050dc:	781b      	ldrb	r3, [r3, #0]
 80050de:	2b64      	cmp	r3, #100	@ 0x64
 80050e0:	d175      	bne.n	80051ce <HAL_UART_RxCpltCallback+0x11e>
		if (p1.IsAttack==0 && p1.IsDamage==0 &&p1.isAlive==1){
 80050e2:	4b8e      	ldr	r3, [pc, #568]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d171      	bne.n	80051ce <HAL_UART_RxCpltCallback+0x11e>
 80050ea:	4b8c      	ldr	r3, [pc, #560]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050ec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d16d      	bne.n	80051ce <HAL_UART_RxCpltCallback+0x11e>
 80050f2:	4b8a      	ldr	r3, [pc, #552]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050f4:	69db      	ldr	r3, [r3, #28]
 80050f6:	2b01      	cmp	r3, #1
 80050f8:	d169      	bne.n	80051ce <HAL_UART_RxCpltCallback+0x11e>
			FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 80050fa:	4b88      	ldr	r3, [pc, #544]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80050fc:	681a      	ldr	r2, [r3, #0]
 80050fe:	4b87      	ldr	r3, [pc, #540]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005100:	689b      	ldr	r3, [r3, #8]
 8005102:	085b      	lsrs	r3, r3, #1
 8005104:	1ad3      	subs	r3, r2, r3
 8005106:	1c58      	adds	r0, r3, #1
 8005108:	4b84      	ldr	r3, [pc, #528]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800510a:	685a      	ldr	r2, [r3, #4]
 800510c:	4b83      	ldr	r3, [pc, #524]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800510e:	68db      	ldr	r3, [r3, #12]
 8005110:	085b      	lsrs	r3, r3, #1
 8005112:	1ad3      	subs	r3, r2, r3
 8005114:	1c59      	adds	r1, r3, #1
 8005116:	4b81      	ldr	r3, [pc, #516]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005118:	689b      	ldr	r3, [r3, #8]
 800511a:	1c5a      	adds	r2, r3, #1
 800511c:	4b7f      	ldr	r3, [pc, #508]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800511e:	68db      	ldr	r3, [r3, #12]
 8005120:	3301      	adds	r3, #1
 8005122:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8005126:	9400      	str	r4, [sp, #0]
 8005128:	f7fc fc46 	bl	80019b8 <FillRect>
			p1.direction=2;
 800512c:	4b7b      	ldr	r3, [pc, #492]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800512e:	2202      	movs	r2, #2
 8005130:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p1, 0)) {
 8005132:	2100      	movs	r1, #0
 8005134:	4879      	ldr	r0, [pc, #484]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005136:	f7fe fab3 	bl	80036a0 <playerCanMove>
 800513a:	4603      	mov	r3, r0
 800513c:	2b00      	cmp	r3, #0
 800513e:	d017      	beq.n	8005170 <HAL_UART_RxCpltCallback+0xc0>
		    p1.y=p1.y+p1.speed;
 8005140:	4b76      	ldr	r3, [pc, #472]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005142:	685a      	ldr	r2, [r3, #4]
 8005144:	4b75      	ldr	r3, [pc, #468]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005146:	691b      	ldr	r3, [r3, #16]
 8005148:	4413      	add	r3, r2
 800514a:	4a74      	ldr	r2, [pc, #464]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800514c:	6053      	str	r3, [r2, #4]
		    if (p1.animationWalkDown<10){
 800514e:	4b73      	ldr	r3, [pc, #460]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005150:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005152:	2b09      	cmp	r3, #9
 8005154:	d805      	bhi.n	8005162 <HAL_UART_RxCpltCallback+0xb2>
		    		p1.animationWalkDown+=1;
 8005156:	4b71      	ldr	r3, [pc, #452]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005158:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800515a:	3301      	adds	r3, #1
 800515c:	4a6f      	ldr	r2, [pc, #444]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800515e:	6513      	str	r3, [r2, #80]	@ 0x50
 8005160:	e002      	b.n	8005168 <HAL_UART_RxCpltCallback+0xb8>
		    			} else{
		    				p1.animationWalkDown=0;
 8005162:	4b6e      	ldr	r3, [pc, #440]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005164:	2200      	movs	r2, #0
 8005166:	651a      	str	r2, [r3, #80]	@ 0x50
		    			}
		    PlayerAnimation(&p1);
 8005168:	486c      	ldr	r0, [pc, #432]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800516a:	f7fe fcf7 	bl	8003b5c <PlayerAnimation>
 800516e:	e02e      	b.n	80051ce <HAL_UART_RxCpltCallback+0x11e>
		} else {
			FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1,0xFE8B);
 8005170:	4b6a      	ldr	r3, [pc, #424]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005172:	681a      	ldr	r2, [r3, #0]
 8005174:	4b69      	ldr	r3, [pc, #420]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005176:	689b      	ldr	r3, [r3, #8]
 8005178:	085b      	lsrs	r3, r3, #1
 800517a:	1ad3      	subs	r3, r2, r3
 800517c:	1c58      	adds	r0, r3, #1
 800517e:	4b67      	ldr	r3, [pc, #412]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005180:	685a      	ldr	r2, [r3, #4]
 8005182:	4b66      	ldr	r3, [pc, #408]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005184:	68db      	ldr	r3, [r3, #12]
 8005186:	085b      	lsrs	r3, r3, #1
 8005188:	1ad3      	subs	r3, r2, r3
 800518a:	1c59      	adds	r1, r3, #1
 800518c:	4b63      	ldr	r3, [pc, #396]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800518e:	689b      	ldr	r3, [r3, #8]
 8005190:	1c5a      	adds	r2, r3, #1
 8005192:	4b62      	ldr	r3, [pc, #392]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005194:	68db      	ldr	r3, [r3, #12]
 8005196:	3301      	adds	r3, #1
 8005198:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 800519c:	9400      	str	r4, [sp, #0]
 800519e:	f7fc fc0b 	bl	80019b8 <FillRect>
			LCD_Sprite(p1.x - (18 / 2)+1, p1.y - (26 / 2)+1, 18, 26, LinkDownWalk180x24_10, 10, 0, 0, 0);
 80051a2:	4b5e      	ldr	r3, [pc, #376]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	3b08      	subs	r3, #8
 80051a8:	4618      	mov	r0, r3
 80051aa:	4b5c      	ldr	r3, [pc, #368]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051ac:	685b      	ldr	r3, [r3, #4]
 80051ae:	3b0c      	subs	r3, #12
 80051b0:	4619      	mov	r1, r3
 80051b2:	2300      	movs	r3, #0
 80051b4:	9304      	str	r3, [sp, #16]
 80051b6:	2300      	movs	r3, #0
 80051b8:	9303      	str	r3, [sp, #12]
 80051ba:	2300      	movs	r3, #0
 80051bc:	9302      	str	r3, [sp, #8]
 80051be:	230a      	movs	r3, #10
 80051c0:	9301      	str	r3, [sp, #4]
 80051c2:	4b59      	ldr	r3, [pc, #356]	@ (8005328 <HAL_UART_RxCpltCallback+0x278>)
 80051c4:	9300      	str	r3, [sp, #0]
 80051c6:	231a      	movs	r3, #26
 80051c8:	2212      	movs	r2, #18
 80051ca:	f7fc fca5 	bl	8001b18 <LCD_Sprite>
		}
	}
}
	if(buffer[0] == 'u'){
 80051ce:	4b55      	ldr	r3, [pc, #340]	@ (8005324 <HAL_UART_RxCpltCallback+0x274>)
 80051d0:	781b      	ldrb	r3, [r3, #0]
 80051d2:	2b75      	cmp	r3, #117	@ 0x75
 80051d4:	d15c      	bne.n	8005290 <HAL_UART_RxCpltCallback+0x1e0>
		if (p1.IsAttack==0 && p1.IsDamage==0 &&p1.isAlive==1){
 80051d6:	4b51      	ldr	r3, [pc, #324]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051d8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80051da:	2b00      	cmp	r3, #0
 80051dc:	d158      	bne.n	8005290 <HAL_UART_RxCpltCallback+0x1e0>
 80051de:	4b4f      	ldr	r3, [pc, #316]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	d154      	bne.n	8005290 <HAL_UART_RxCpltCallback+0x1e0>
 80051e6:	4b4d      	ldr	r3, [pc, #308]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051e8:	69db      	ldr	r3, [r3, #28]
 80051ea:	2b01      	cmp	r3, #1
 80051ec:	d150      	bne.n	8005290 <HAL_UART_RxCpltCallback+0x1e0>
			FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 80051ee:	4b4b      	ldr	r3, [pc, #300]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051f0:	681a      	ldr	r2, [r3, #0]
 80051f2:	4b4a      	ldr	r3, [pc, #296]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051f4:	689b      	ldr	r3, [r3, #8]
 80051f6:	085b      	lsrs	r3, r3, #1
 80051f8:	1ad3      	subs	r3, r2, r3
 80051fa:	1c58      	adds	r0, r3, #1
 80051fc:	4b47      	ldr	r3, [pc, #284]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80051fe:	685a      	ldr	r2, [r3, #4]
 8005200:	4b46      	ldr	r3, [pc, #280]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005202:	68db      	ldr	r3, [r3, #12]
 8005204:	085b      	lsrs	r3, r3, #1
 8005206:	1ad3      	subs	r3, r2, r3
 8005208:	1c59      	adds	r1, r3, #1
 800520a:	4b44      	ldr	r3, [pc, #272]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800520c:	689b      	ldr	r3, [r3, #8]
 800520e:	1c5a      	adds	r2, r3, #1
 8005210:	4b42      	ldr	r3, [pc, #264]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005212:	68db      	ldr	r3, [r3, #12]
 8005214:	3301      	adds	r3, #1
 8005216:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 800521a:	9400      	str	r4, [sp, #0]
 800521c:	f7fc fbcc 	bl	80019b8 <FillRect>
			p1.direction=0;
 8005220:	4b3e      	ldr	r3, [pc, #248]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005222:	2200      	movs	r2, #0
 8005224:	621a      	str	r2, [r3, #32]
			if (playerCanMove(&p1, 2)) {
 8005226:	2102      	movs	r1, #2
 8005228:	483c      	ldr	r0, [pc, #240]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800522a:	f7fe fa39 	bl	80036a0 <playerCanMove>
 800522e:	4603      	mov	r3, r0
 8005230:	2b00      	cmp	r3, #0
 8005232:	d017      	beq.n	8005264 <HAL_UART_RxCpltCallback+0x1b4>
				p1.y=p1.y-p1.speed;
 8005234:	4b39      	ldr	r3, [pc, #228]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005236:	685a      	ldr	r2, [r3, #4]
 8005238:	4b38      	ldr	r3, [pc, #224]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800523a:	691b      	ldr	r3, [r3, #16]
 800523c:	1ad3      	subs	r3, r2, r3
 800523e:	4a37      	ldr	r2, [pc, #220]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005240:	6053      	str	r3, [r2, #4]
				if (p1.animationWalkUp<10){
 8005242:	4b36      	ldr	r3, [pc, #216]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005244:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005246:	2b09      	cmp	r3, #9
 8005248:	d805      	bhi.n	8005256 <HAL_UART_RxCpltCallback+0x1a6>
						p1.animationWalkUp+=1;
 800524a:	4b34      	ldr	r3, [pc, #208]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800524c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800524e:	3301      	adds	r3, #1
 8005250:	4a32      	ldr	r2, [pc, #200]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005252:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8005254:	e002      	b.n	800525c <HAL_UART_RxCpltCallback+0x1ac>
						} else{
						  p1.animationWalkUp=0;
 8005256:	4b31      	ldr	r3, [pc, #196]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005258:	2200      	movs	r2, #0
 800525a:	64da      	str	r2, [r3, #76]	@ 0x4c
						  }
			PlayerAnimation(&p1);
 800525c:	482f      	ldr	r0, [pc, #188]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800525e:	f7fe fc7d 	bl	8003b5c <PlayerAnimation>
 8005262:	e015      	b.n	8005290 <HAL_UART_RxCpltCallback+0x1e0>
			} else {
				LCD_Sprite(p1.x - (18 / 2)+1, p1.y - (26 / 2), 18, 26, LinkUpWalk180x26_10, 10, 0, 0, 0);
 8005264:	4b2d      	ldr	r3, [pc, #180]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	3b08      	subs	r3, #8
 800526a:	4618      	mov	r0, r3
 800526c:	4b2b      	ldr	r3, [pc, #172]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800526e:	685b      	ldr	r3, [r3, #4]
 8005270:	3b0d      	subs	r3, #13
 8005272:	4619      	mov	r1, r3
 8005274:	2300      	movs	r3, #0
 8005276:	9304      	str	r3, [sp, #16]
 8005278:	2300      	movs	r3, #0
 800527a:	9303      	str	r3, [sp, #12]
 800527c:	2300      	movs	r3, #0
 800527e:	9302      	str	r3, [sp, #8]
 8005280:	230a      	movs	r3, #10
 8005282:	9301      	str	r3, [sp, #4]
 8005284:	4b29      	ldr	r3, [pc, #164]	@ (800532c <HAL_UART_RxCpltCallback+0x27c>)
 8005286:	9300      	str	r3, [sp, #0]
 8005288:	231a      	movs	r3, #26
 800528a:	2212      	movs	r2, #18
 800528c:	f7fc fc44 	bl	8001b18 <LCD_Sprite>
				//FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
			}
		}
}
	if(buffer[0] == 'r'){
 8005290:	4b24      	ldr	r3, [pc, #144]	@ (8005324 <HAL_UART_RxCpltCallback+0x274>)
 8005292:	781b      	ldrb	r3, [r3, #0]
 8005294:	2b72      	cmp	r3, #114	@ 0x72
 8005296:	d168      	bne.n	800536a <HAL_UART_RxCpltCallback+0x2ba>
		if (p1.IsAttack==0 && p1.IsDamage==0 &&p1.isAlive==1){
 8005298:	4b20      	ldr	r3, [pc, #128]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800529a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800529c:	2b00      	cmp	r3, #0
 800529e:	d164      	bne.n	800536a <HAL_UART_RxCpltCallback+0x2ba>
 80052a0:	4b1e      	ldr	r3, [pc, #120]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052a2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	d160      	bne.n	800536a <HAL_UART_RxCpltCallback+0x2ba>
 80052a8:	4b1c      	ldr	r3, [pc, #112]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052aa:	69db      	ldr	r3, [r3, #28]
 80052ac:	2b01      	cmp	r3, #1
 80052ae:	d15c      	bne.n	800536a <HAL_UART_RxCpltCallback+0x2ba>
			FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 80052b0:	4b1a      	ldr	r3, [pc, #104]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052b2:	681a      	ldr	r2, [r3, #0]
 80052b4:	4b19      	ldr	r3, [pc, #100]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052b6:	689b      	ldr	r3, [r3, #8]
 80052b8:	085b      	lsrs	r3, r3, #1
 80052ba:	1ad3      	subs	r3, r2, r3
 80052bc:	1c58      	adds	r0, r3, #1
 80052be:	4b17      	ldr	r3, [pc, #92]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052c0:	685a      	ldr	r2, [r3, #4]
 80052c2:	4b16      	ldr	r3, [pc, #88]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052c4:	68db      	ldr	r3, [r3, #12]
 80052c6:	085b      	lsrs	r3, r3, #1
 80052c8:	1ad3      	subs	r3, r2, r3
 80052ca:	1c59      	adds	r1, r3, #1
 80052cc:	4b13      	ldr	r3, [pc, #76]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052ce:	689b      	ldr	r3, [r3, #8]
 80052d0:	1c5a      	adds	r2, r3, #1
 80052d2:	4b12      	ldr	r3, [pc, #72]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052d4:	68db      	ldr	r3, [r3, #12]
 80052d6:	3301      	adds	r3, #1
 80052d8:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 80052dc:	9400      	str	r4, [sp, #0]
 80052de:	f7fc fb6b 	bl	80019b8 <FillRect>
			p1.direction=1;
 80052e2:	4b0e      	ldr	r3, [pc, #56]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052e4:	2201      	movs	r2, #1
 80052e6:	621a      	str	r2, [r3, #32]
			if (playerCanMove(&p1, 1)) {
 80052e8:	2101      	movs	r1, #1
 80052ea:	480c      	ldr	r0, [pc, #48]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052ec:	f7fe f9d8 	bl	80036a0 <playerCanMove>
 80052f0:	4603      	mov	r3, r0
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d023      	beq.n	800533e <HAL_UART_RxCpltCallback+0x28e>
				p1.x=p1.x+p1.speed;
 80052f6:	4b09      	ldr	r3, [pc, #36]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052f8:	681a      	ldr	r2, [r3, #0]
 80052fa:	4b08      	ldr	r3, [pc, #32]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 80052fc:	691b      	ldr	r3, [r3, #16]
 80052fe:	4413      	add	r3, r2
 8005300:	4a06      	ldr	r2, [pc, #24]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005302:	6013      	str	r3, [r2, #0]
				if (p1.animationWalkRight<10){
 8005304:	4b05      	ldr	r3, [pc, #20]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005306:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005308:	2b09      	cmp	r3, #9
 800530a:	d811      	bhi.n	8005330 <HAL_UART_RxCpltCallback+0x280>
						p1.animationWalkRight+=1;
 800530c:	4b03      	ldr	r3, [pc, #12]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 800530e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005310:	3301      	adds	r3, #1
 8005312:	4a02      	ldr	r2, [pc, #8]	@ (800531c <HAL_UART_RxCpltCallback+0x26c>)
 8005314:	6493      	str	r3, [r2, #72]	@ 0x48
 8005316:	e00e      	b.n	8005336 <HAL_UART_RxCpltCallback+0x286>
 8005318:	2001cadc 	.word	0x2001cadc
 800531c:	2001c784 	.word	0x2001c784
 8005320:	2001c7f8 	.word	0x2001c7f8
 8005324:	2001c778 	.word	0x2001c778
 8005328:	200148b8 	.word	0x200148b8
 800532c:	20012428 	.word	0x20012428
						} else{
						  p1.animationWalkRight=0;
 8005330:	4b8e      	ldr	r3, [pc, #568]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005332:	2200      	movs	r2, #0
 8005334:	649a      	str	r2, [r3, #72]	@ 0x48
						  }
			PlayerAnimation(&p1);
 8005336:	488d      	ldr	r0, [pc, #564]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005338:	f7fe fc10 	bl	8003b5c <PlayerAnimation>
 800533c:	e015      	b.n	800536a <HAL_UART_RxCpltCallback+0x2ba>
						  //FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
			} else {
				LCD_Sprite(p1.x - (22 / 2)+1, p1.y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, 0, 1, 0);
 800533e:	4b8b      	ldr	r3, [pc, #556]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	3b0a      	subs	r3, #10
 8005344:	4618      	mov	r0, r3
 8005346:	4b89      	ldr	r3, [pc, #548]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005348:	685b      	ldr	r3, [r3, #4]
 800534a:	3b0b      	subs	r3, #11
 800534c:	4619      	mov	r1, r3
 800534e:	2300      	movs	r3, #0
 8005350:	9304      	str	r3, [sp, #16]
 8005352:	2301      	movs	r3, #1
 8005354:	9303      	str	r3, [sp, #12]
 8005356:	2300      	movs	r3, #0
 8005358:	9302      	str	r3, [sp, #8]
 800535a:	230a      	movs	r3, #10
 800535c:	9301      	str	r3, [sp, #4]
 800535e:	4b84      	ldr	r3, [pc, #528]	@ (8005570 <HAL_UART_RxCpltCallback+0x4c0>)
 8005360:	9300      	str	r3, [sp, #0]
 8005362:	2317      	movs	r3, #23
 8005364:	2216      	movs	r2, #22
 8005366:	f7fc fbd7 	bl	8001b18 <LCD_Sprite>
				//FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
			}
	}
}
	if(buffer[0] == 'l'){
 800536a:	4b82      	ldr	r3, [pc, #520]	@ (8005574 <HAL_UART_RxCpltCallback+0x4c4>)
 800536c:	781b      	ldrb	r3, [r3, #0]
 800536e:	2b6c      	cmp	r3, #108	@ 0x6c
 8005370:	d15c      	bne.n	800542c <HAL_UART_RxCpltCallback+0x37c>
		if (p1.IsAttack==0 && p1.IsDamage==0 &&p1.isAlive==1){
 8005372:	4b7e      	ldr	r3, [pc, #504]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005374:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005376:	2b00      	cmp	r3, #0
 8005378:	d158      	bne.n	800542c <HAL_UART_RxCpltCallback+0x37c>
 800537a:	4b7c      	ldr	r3, [pc, #496]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 800537c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800537e:	2b00      	cmp	r3, #0
 8005380:	d154      	bne.n	800542c <HAL_UART_RxCpltCallback+0x37c>
 8005382:	4b7a      	ldr	r3, [pc, #488]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005384:	69db      	ldr	r3, [r3, #28]
 8005386:	2b01      	cmp	r3, #1
 8005388:	d150      	bne.n	800542c <HAL_UART_RxCpltCallback+0x37c>
			FillRect(p1.x - (p1.width / 2)+1, p1.y - (p1.height / 2)+1, p1.width+1, p1.height+1, 0xFE8B);
 800538a:	4b78      	ldr	r3, [pc, #480]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 800538c:	681a      	ldr	r2, [r3, #0]
 800538e:	4b77      	ldr	r3, [pc, #476]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005390:	689b      	ldr	r3, [r3, #8]
 8005392:	085b      	lsrs	r3, r3, #1
 8005394:	1ad3      	subs	r3, r2, r3
 8005396:	1c58      	adds	r0, r3, #1
 8005398:	4b74      	ldr	r3, [pc, #464]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 800539a:	685a      	ldr	r2, [r3, #4]
 800539c:	4b73      	ldr	r3, [pc, #460]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 800539e:	68db      	ldr	r3, [r3, #12]
 80053a0:	085b      	lsrs	r3, r3, #1
 80053a2:	1ad3      	subs	r3, r2, r3
 80053a4:	1c59      	adds	r1, r3, #1
 80053a6:	4b71      	ldr	r3, [pc, #452]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053a8:	689b      	ldr	r3, [r3, #8]
 80053aa:	1c5a      	adds	r2, r3, #1
 80053ac:	4b6f      	ldr	r3, [pc, #444]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053ae:	68db      	ldr	r3, [r3, #12]
 80053b0:	3301      	adds	r3, #1
 80053b2:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 80053b6:	9400      	str	r4, [sp, #0]
 80053b8:	f7fc fafe 	bl	80019b8 <FillRect>
			p1.direction=3;
 80053bc:	4b6b      	ldr	r3, [pc, #428]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053be:	2203      	movs	r2, #3
 80053c0:	621a      	str	r2, [r3, #32]
			if (playerCanMove(&p1, 3)) {
 80053c2:	2103      	movs	r1, #3
 80053c4:	4869      	ldr	r0, [pc, #420]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053c6:	f7fe f96b 	bl	80036a0 <playerCanMove>
 80053ca:	4603      	mov	r3, r0
 80053cc:	2b00      	cmp	r3, #0
 80053ce:	d017      	beq.n	8005400 <HAL_UART_RxCpltCallback+0x350>
				p1.x=p1.x-p1.speed;
 80053d0:	4b66      	ldr	r3, [pc, #408]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053d2:	681a      	ldr	r2, [r3, #0]
 80053d4:	4b65      	ldr	r3, [pc, #404]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053d6:	691b      	ldr	r3, [r3, #16]
 80053d8:	1ad3      	subs	r3, r2, r3
 80053da:	4a64      	ldr	r2, [pc, #400]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053dc:	6013      	str	r3, [r2, #0]
				if (p1.animationWalkLeft<10){
 80053de:	4b63      	ldr	r3, [pc, #396]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053e2:	2b09      	cmp	r3, #9
 80053e4:	d805      	bhi.n	80053f2 <HAL_UART_RxCpltCallback+0x342>
						p1.animationWalkLeft+=1;
 80053e6:	4b61      	ldr	r3, [pc, #388]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053ea:	3301      	adds	r3, #1
 80053ec:	4a5f      	ldr	r2, [pc, #380]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053ee:	6453      	str	r3, [r2, #68]	@ 0x44
 80053f0:	e002      	b.n	80053f8 <HAL_UART_RxCpltCallback+0x348>
						} else{
						  p1.animationWalkLeft=0;
 80053f2:	4b5e      	ldr	r3, [pc, #376]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053f4:	2200      	movs	r2, #0
 80053f6:	645a      	str	r2, [r3, #68]	@ 0x44
						  }
			 PlayerAnimation(&p1);
 80053f8:	485c      	ldr	r0, [pc, #368]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80053fa:	f7fe fbaf 	bl	8003b5c <PlayerAnimation>
 80053fe:	e015      	b.n	800542c <HAL_UART_RxCpltCallback+0x37c>
						  //FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);

			} else {
				LCD_Sprite(p1.x - (22 / 2)+1, p1.y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, 0, 0, 0);
 8005400:	4b5a      	ldr	r3, [pc, #360]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	3b0a      	subs	r3, #10
 8005406:	4618      	mov	r0, r3
 8005408:	4b58      	ldr	r3, [pc, #352]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 800540a:	685b      	ldr	r3, [r3, #4]
 800540c:	3b0b      	subs	r3, #11
 800540e:	4619      	mov	r1, r3
 8005410:	2300      	movs	r3, #0
 8005412:	9304      	str	r3, [sp, #16]
 8005414:	2300      	movs	r3, #0
 8005416:	9303      	str	r3, [sp, #12]
 8005418:	2300      	movs	r3, #0
 800541a:	9302      	str	r3, [sp, #8]
 800541c:	230a      	movs	r3, #10
 800541e:	9301      	str	r3, [sp, #4]
 8005420:	4b53      	ldr	r3, [pc, #332]	@ (8005570 <HAL_UART_RxCpltCallback+0x4c0>)
 8005422:	9300      	str	r3, [sp, #0]
 8005424:	2317      	movs	r3, #23
 8005426:	2216      	movs	r2, #22
 8005428:	f7fc fb76 	bl	8001b18 <LCD_Sprite>
				//FillRect(p1.x - (p1.width / 2), p1.y - (p1.height / 2), p1.width, p1.height, 0xFFFB00);
			}
	}
}
	if (buffer[0]=='b'){
 800542c:	4b51      	ldr	r3, [pc, #324]	@ (8005574 <HAL_UART_RxCpltCallback+0x4c4>)
 800542e:	781b      	ldrb	r3, [r3, #0]
 8005430:	2b62      	cmp	r3, #98	@ 0x62
 8005432:	d14f      	bne.n	80054d4 <HAL_UART_RxCpltCallback+0x424>
		 if (estadoActual == MENU ) {
 8005434:	4b50      	ldr	r3, [pc, #320]	@ (8005578 <HAL_UART_RxCpltCallback+0x4c8>)
 8005436:	781b      	ldrb	r3, [r3, #0]
 8005438:	b2db      	uxtb	r3, r3
 800543a:	2b00      	cmp	r3, #0
 800543c:	d127      	bne.n	800548e <HAL_UART_RxCpltCallback+0x3de>
			 // IMPRIMIR SPRITE DE UN JUGADOR
			 estadoFuturo = SOLO;
 800543e:	4b4f      	ldr	r3, [pc, #316]	@ (800557c <HAL_UART_RxCpltCallback+0x4cc>)
 8005440:	2201      	movs	r2, #1
 8005442:	701a      	strb	r2, [r3, #0]
			 if (nivelActual1==NIVEL1){
 8005444:	4b4e      	ldr	r3, [pc, #312]	@ (8005580 <HAL_UART_RxCpltCallback+0x4d0>)
 8005446:	781b      	ldrb	r3, [r3, #0]
 8005448:	b2db      	uxtb	r3, r3
 800544a:	2b00      	cmp	r3, #0
 800544c:	d142      	bne.n	80054d4 <HAL_UART_RxCpltCallback+0x424>
			 		//Inicializar enemigo 1
			 		initEnemy1(&e1_1, 40, 80, 16, 19, 3);
 800544e:	2303      	movs	r3, #3
 8005450:	9301      	str	r3, [sp, #4]
 8005452:	2313      	movs	r3, #19
 8005454:	9300      	str	r3, [sp, #0]
 8005456:	2310      	movs	r3, #16
 8005458:	2250      	movs	r2, #80	@ 0x50
 800545a:	2128      	movs	r1, #40	@ 0x28
 800545c:	4849      	ldr	r0, [pc, #292]	@ (8005584 <HAL_UART_RxCpltCallback+0x4d4>)
 800545e:	f7fc fe11 	bl	8002084 <initEnemy1>
			 		//Inicializar enemigo 2
			 		initEnemy1(&e1_2, 160, 80, 16, 19, 3);
 8005462:	2303      	movs	r3, #3
 8005464:	9301      	str	r3, [sp, #4]
 8005466:	2313      	movs	r3, #19
 8005468:	9300      	str	r3, [sp, #0]
 800546a:	2310      	movs	r3, #16
 800546c:	2250      	movs	r2, #80	@ 0x50
 800546e:	21a0      	movs	r1, #160	@ 0xa0
 8005470:	4845      	ldr	r0, [pc, #276]	@ (8005588 <HAL_UART_RxCpltCallback+0x4d8>)
 8005472:	f7fc fe07 	bl	8002084 <initEnemy1>
			 		//Inicializar enemigo 3
			 		initEnemy1(&e1_3, 280, 80, 16, 19, 3);}
 8005476:	2303      	movs	r3, #3
 8005478:	9301      	str	r3, [sp, #4]
 800547a:	2313      	movs	r3, #19
 800547c:	9300      	str	r3, [sp, #0]
 800547e:	2310      	movs	r3, #16
 8005480:	2250      	movs	r2, #80	@ 0x50
 8005482:	f44f 718c 	mov.w	r1, #280	@ 0x118
 8005486:	4841      	ldr	r0, [pc, #260]	@ (800558c <HAL_UART_RxCpltCallback+0x4dc>)
 8005488:	f7fc fdfc 	bl	8002084 <initEnemy1>
 800548c:	e022      	b.n	80054d4 <HAL_UART_RxCpltCallback+0x424>
		 	 }
		 else {
			 if (p1.IsAttack==0 && p1.IsDamage==0 &&p1.isAlive==1){
 800548e:	4b37      	ldr	r3, [pc, #220]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005490:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005492:	2b00      	cmp	r3, #0
 8005494:	d11a      	bne.n	80054cc <HAL_UART_RxCpltCallback+0x41c>
 8005496:	4b35      	ldr	r3, [pc, #212]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 8005498:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800549a:	2b00      	cmp	r3, #0
 800549c:	d116      	bne.n	80054cc <HAL_UART_RxCpltCallback+0x41c>
 800549e:	4b33      	ldr	r3, [pc, #204]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054a0:	69db      	ldr	r3, [r3, #28]
 80054a2:	2b01      	cmp	r3, #1
 80054a4:	d112      	bne.n	80054cc <HAL_UART_RxCpltCallback+0x41c>
			 			p1.IsAttack=1;
 80054a6:	4b31      	ldr	r3, [pc, #196]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054a8:	2201      	movs	r2, #1
 80054aa:	655a      	str	r2, [r3, #84]	@ 0x54
			 			p1.animationAttack=0;
 80054ac:	4b2f      	ldr	r3, [pc, #188]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054ae:	f04f 0200 	mov.w	r2, #0
 80054b2:	659a      	str	r2, [r3, #88]	@ 0x58
			 			PlayerHit(&p1, &e1_1);
 80054b4:	4933      	ldr	r1, [pc, #204]	@ (8005584 <HAL_UART_RxCpltCallback+0x4d4>)
 80054b6:	482d      	ldr	r0, [pc, #180]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054b8:	f7fe fa70 	bl	800399c <PlayerHit>
			 			PlayerHit(&p1, &e1_2);
 80054bc:	4932      	ldr	r1, [pc, #200]	@ (8005588 <HAL_UART_RxCpltCallback+0x4d8>)
 80054be:	482b      	ldr	r0, [pc, #172]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054c0:	f7fe fa6c 	bl	800399c <PlayerHit>
			 			PlayerHit(&p1, &e1_3);}
 80054c4:	4931      	ldr	r1, [pc, #196]	@ (800558c <HAL_UART_RxCpltCallback+0x4dc>)
 80054c6:	4829      	ldr	r0, [pc, #164]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054c8:	f7fe fa68 	bl	800399c <PlayerHit>
			 			PlayerHit_E2(&p1, &e2_1);
 80054cc:	4930      	ldr	r1, [pc, #192]	@ (8005590 <HAL_UART_RxCpltCallback+0x4e0>)
 80054ce:	4827      	ldr	r0, [pc, #156]	@ (800556c <HAL_UART_RxCpltCallback+0x4bc>)
 80054d0:	f7fd fc44 	bl	8002d5c <PlayerHit_E2>
		 }
	}

	//Jugador 2
	if(buffer[0] == '1'){ //Arriba
 80054d4:	4b27      	ldr	r3, [pc, #156]	@ (8005574 <HAL_UART_RxCpltCallback+0x4c4>)
 80054d6:	781b      	ldrb	r3, [r3, #0]
 80054d8:	2b31      	cmp	r3, #49	@ 0x31
 80054da:	d173      	bne.n	80055c4 <HAL_UART_RxCpltCallback+0x514>
			if (p2.IsAttack==0 && p2.IsDamage==0 &&p2.isAlive==1){
 80054dc:	4b2d      	ldr	r3, [pc, #180]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 80054de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d16f      	bne.n	80055c4 <HAL_UART_RxCpltCallback+0x514>
 80054e4:	4b2b      	ldr	r3, [pc, #172]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 80054e6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80054e8:	2b00      	cmp	r3, #0
 80054ea:	d16b      	bne.n	80055c4 <HAL_UART_RxCpltCallback+0x514>
 80054ec:	4b29      	ldr	r3, [pc, #164]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 80054ee:	69db      	ldr	r3, [r3, #28]
 80054f0:	2b01      	cmp	r3, #1
 80054f2:	d167      	bne.n	80055c4 <HAL_UART_RxCpltCallback+0x514>
				FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 80054f4:	4b27      	ldr	r3, [pc, #156]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 80054f6:	681a      	ldr	r2, [r3, #0]
 80054f8:	4b26      	ldr	r3, [pc, #152]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 80054fa:	689b      	ldr	r3, [r3, #8]
 80054fc:	085b      	lsrs	r3, r3, #1
 80054fe:	1ad3      	subs	r3, r2, r3
 8005500:	1c58      	adds	r0, r3, #1
 8005502:	4b24      	ldr	r3, [pc, #144]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005504:	685a      	ldr	r2, [r3, #4]
 8005506:	4b23      	ldr	r3, [pc, #140]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005508:	68db      	ldr	r3, [r3, #12]
 800550a:	085b      	lsrs	r3, r3, #1
 800550c:	1ad3      	subs	r3, r2, r3
 800550e:	1c59      	adds	r1, r3, #1
 8005510:	4b20      	ldr	r3, [pc, #128]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005512:	689b      	ldr	r3, [r3, #8]
 8005514:	1c5a      	adds	r2, r3, #1
 8005516:	4b1f      	ldr	r3, [pc, #124]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005518:	68db      	ldr	r3, [r3, #12]
 800551a:	3301      	adds	r3, #1
 800551c:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8005520:	9400      	str	r4, [sp, #0]
 8005522:	f7fc fa49 	bl	80019b8 <FillRect>
				p2.direction=0;
 8005526:	4b1b      	ldr	r3, [pc, #108]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005528:	2200      	movs	r2, #0
 800552a:	621a      	str	r2, [r3, #32]
				if (playerCanMove(&p2, 2)) {
 800552c:	2102      	movs	r1, #2
 800552e:	4819      	ldr	r0, [pc, #100]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005530:	f7fe f8b6 	bl	80036a0 <playerCanMove>
 8005534:	4603      	mov	r3, r0
 8005536:	2b00      	cmp	r3, #0
 8005538:	d02e      	beq.n	8005598 <HAL_UART_RxCpltCallback+0x4e8>
					p2.y=p2.y-p2.speed;
 800553a:	4b16      	ldr	r3, [pc, #88]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 800553c:	685a      	ldr	r2, [r3, #4]
 800553e:	4b15      	ldr	r3, [pc, #84]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005540:	691b      	ldr	r3, [r3, #16]
 8005542:	1ad3      	subs	r3, r2, r3
 8005544:	4a13      	ldr	r2, [pc, #76]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005546:	6053      	str	r3, [r2, #4]
					if (p2.animationWalkUp<10){
 8005548:	4b12      	ldr	r3, [pc, #72]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 800554a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800554c:	2b09      	cmp	r3, #9
 800554e:	d805      	bhi.n	800555c <HAL_UART_RxCpltCallback+0x4ac>
							p2.animationWalkUp+=1;
 8005550:	4b10      	ldr	r3, [pc, #64]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005552:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005554:	3301      	adds	r3, #1
 8005556:	4a0f      	ldr	r2, [pc, #60]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005558:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800555a:	e002      	b.n	8005562 <HAL_UART_RxCpltCallback+0x4b2>
							} else{
							  p2.animationWalkUp=0;
 800555c:	4b0d      	ldr	r3, [pc, #52]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 800555e:	2200      	movs	r2, #0
 8005560:	64da      	str	r2, [r3, #76]	@ 0x4c
							  }
				PlayerAnimation(&p2);
 8005562:	480c      	ldr	r0, [pc, #48]	@ (8005594 <HAL_UART_RxCpltCallback+0x4e4>)
 8005564:	f7fe fafa 	bl	8003b5c <PlayerAnimation>
 8005568:	e02c      	b.n	80055c4 <HAL_UART_RxCpltCallback+0x514>
 800556a:	bf00      	nop
 800556c:	2001c784 	.word	0x2001c784
 8005570:	2000fca0 	.word	0x2000fca0
 8005574:	2001c778 	.word	0x2001c778
 8005578:	20016a78 	.word	0x20016a78
 800557c:	2001cae0 	.word	0x2001cae0
 8005580:	2001cae1 	.word	0x2001cae1
 8005584:	2001c86c 	.word	0x2001c86c
 8005588:	2001c8a0 	.word	0x2001c8a0
 800558c:	2001c8d4 	.word	0x2001c8d4
 8005590:	2001c9a4 	.word	0x2001c9a4
 8005594:	2001c7f8 	.word	0x2001c7f8
				} else {
					LCD_Sprite(p2.x - (18 / 2)+1, p2.y - (26 / 2), 18, 26, LinkUpWalk180x26_10, 10, 0, 0, 0);
 8005598:	4b9a      	ldr	r3, [pc, #616]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	3b08      	subs	r3, #8
 800559e:	4618      	mov	r0, r3
 80055a0:	4b98      	ldr	r3, [pc, #608]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055a2:	685b      	ldr	r3, [r3, #4]
 80055a4:	3b0d      	subs	r3, #13
 80055a6:	4619      	mov	r1, r3
 80055a8:	2300      	movs	r3, #0
 80055aa:	9304      	str	r3, [sp, #16]
 80055ac:	2300      	movs	r3, #0
 80055ae:	9303      	str	r3, [sp, #12]
 80055b0:	2300      	movs	r3, #0
 80055b2:	9302      	str	r3, [sp, #8]
 80055b4:	230a      	movs	r3, #10
 80055b6:	9301      	str	r3, [sp, #4]
 80055b8:	4b93      	ldr	r3, [pc, #588]	@ (8005808 <HAL_UART_RxCpltCallback+0x758>)
 80055ba:	9300      	str	r3, [sp, #0]
 80055bc:	231a      	movs	r3, #26
 80055be:	2212      	movs	r2, #18
 80055c0:	f7fc faaa 	bl	8001b18 <LCD_Sprite>
					//FillRect(p2.x - (p2.width / 2), p2.y - (p2.height / 2), p2.width, p2.height, 0xFFFB00);
				}
			}
	}

	if(buffer[0] == '2'){ //Derecha
 80055c4:	4b91      	ldr	r3, [pc, #580]	@ (800580c <HAL_UART_RxCpltCallback+0x75c>)
 80055c6:	781b      	ldrb	r3, [r3, #0]
 80055c8:	2b32      	cmp	r3, #50	@ 0x32
 80055ca:	d15c      	bne.n	8005686 <HAL_UART_RxCpltCallback+0x5d6>
		if (p2.IsAttack==0 && p2.IsDamage==0 &&p2.isAlive==1){
 80055cc:	4b8d      	ldr	r3, [pc, #564]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	d158      	bne.n	8005686 <HAL_UART_RxCpltCallback+0x5d6>
 80055d4:	4b8b      	ldr	r3, [pc, #556]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055d6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80055d8:	2b00      	cmp	r3, #0
 80055da:	d154      	bne.n	8005686 <HAL_UART_RxCpltCallback+0x5d6>
 80055dc:	4b89      	ldr	r3, [pc, #548]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055de:	69db      	ldr	r3, [r3, #28]
 80055e0:	2b01      	cmp	r3, #1
 80055e2:	d150      	bne.n	8005686 <HAL_UART_RxCpltCallback+0x5d6>
			FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 80055e4:	4b87      	ldr	r3, [pc, #540]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055e6:	681a      	ldr	r2, [r3, #0]
 80055e8:	4b86      	ldr	r3, [pc, #536]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055ea:	689b      	ldr	r3, [r3, #8]
 80055ec:	085b      	lsrs	r3, r3, #1
 80055ee:	1ad3      	subs	r3, r2, r3
 80055f0:	1c58      	adds	r0, r3, #1
 80055f2:	4b84      	ldr	r3, [pc, #528]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055f4:	685a      	ldr	r2, [r3, #4]
 80055f6:	4b83      	ldr	r3, [pc, #524]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80055f8:	68db      	ldr	r3, [r3, #12]
 80055fa:	085b      	lsrs	r3, r3, #1
 80055fc:	1ad3      	subs	r3, r2, r3
 80055fe:	1c59      	adds	r1, r3, #1
 8005600:	4b80      	ldr	r3, [pc, #512]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005602:	689b      	ldr	r3, [r3, #8]
 8005604:	1c5a      	adds	r2, r3, #1
 8005606:	4b7f      	ldr	r3, [pc, #508]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005608:	68db      	ldr	r3, [r3, #12]
 800560a:	3301      	adds	r3, #1
 800560c:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8005610:	9400      	str	r4, [sp, #0]
 8005612:	f7fc f9d1 	bl	80019b8 <FillRect>
			p2.direction=1;
 8005616:	4b7b      	ldr	r3, [pc, #492]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005618:	2201      	movs	r2, #1
 800561a:	621a      	str	r2, [r3, #32]
			if (playerCanMove(&p2, 1)) {
 800561c:	2101      	movs	r1, #1
 800561e:	4879      	ldr	r0, [pc, #484]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005620:	f7fe f83e 	bl	80036a0 <playerCanMove>
 8005624:	4603      	mov	r3, r0
 8005626:	2b00      	cmp	r3, #0
 8005628:	d017      	beq.n	800565a <HAL_UART_RxCpltCallback+0x5aa>
				p2.x=p2.x+p2.speed;
 800562a:	4b76      	ldr	r3, [pc, #472]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800562c:	681a      	ldr	r2, [r3, #0]
 800562e:	4b75      	ldr	r3, [pc, #468]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005630:	691b      	ldr	r3, [r3, #16]
 8005632:	4413      	add	r3, r2
 8005634:	4a73      	ldr	r2, [pc, #460]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005636:	6013      	str	r3, [r2, #0]
				if (p2.animationWalkRight<10){
 8005638:	4b72      	ldr	r3, [pc, #456]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800563a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800563c:	2b09      	cmp	r3, #9
 800563e:	d805      	bhi.n	800564c <HAL_UART_RxCpltCallback+0x59c>
						p2.animationWalkRight+=1;
 8005640:	4b70      	ldr	r3, [pc, #448]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005642:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005644:	3301      	adds	r3, #1
 8005646:	4a6f      	ldr	r2, [pc, #444]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005648:	6493      	str	r3, [r2, #72]	@ 0x48
 800564a:	e002      	b.n	8005652 <HAL_UART_RxCpltCallback+0x5a2>
						} else{
						  p2.animationWalkRight=0;
 800564c:	4b6d      	ldr	r3, [pc, #436]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800564e:	2200      	movs	r2, #0
 8005650:	649a      	str	r2, [r3, #72]	@ 0x48
						  }
			PlayerAnimation(&p2);
 8005652:	486c      	ldr	r0, [pc, #432]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005654:	f7fe fa82 	bl	8003b5c <PlayerAnimation>
 8005658:	e015      	b.n	8005686 <HAL_UART_RxCpltCallback+0x5d6>
						  //FillRect(p2.x - (p2.width / 2), p2.y - (p2.height / 2), p2.width, p2.height, 0xFFFB00);
			} else {
				LCD_Sprite(p2.x - (22 / 2)+1, p2.y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, 0, 1, 0);
 800565a:	4b6a      	ldr	r3, [pc, #424]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	3b0a      	subs	r3, #10
 8005660:	4618      	mov	r0, r3
 8005662:	4b68      	ldr	r3, [pc, #416]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005664:	685b      	ldr	r3, [r3, #4]
 8005666:	3b0b      	subs	r3, #11
 8005668:	4619      	mov	r1, r3
 800566a:	2300      	movs	r3, #0
 800566c:	9304      	str	r3, [sp, #16]
 800566e:	2301      	movs	r3, #1
 8005670:	9303      	str	r3, [sp, #12]
 8005672:	2300      	movs	r3, #0
 8005674:	9302      	str	r3, [sp, #8]
 8005676:	230a      	movs	r3, #10
 8005678:	9301      	str	r3, [sp, #4]
 800567a:	4b65      	ldr	r3, [pc, #404]	@ (8005810 <HAL_UART_RxCpltCallback+0x760>)
 800567c:	9300      	str	r3, [sp, #0]
 800567e:	2317      	movs	r3, #23
 8005680:	2216      	movs	r2, #22
 8005682:	f7fc fa49 	bl	8001b18 <LCD_Sprite>
				//FillRect(p2.x - (p2.width / 2), p2.y - (p2.height / 2), p2.width, p2.height, 0xFFFB00);
			}
	}
}

	if(buffer[0] == '3'){ //Abajo
 8005686:	4b61      	ldr	r3, [pc, #388]	@ (800580c <HAL_UART_RxCpltCallback+0x75c>)
 8005688:	781b      	ldrb	r3, [r3, #0]
 800568a:	2b33      	cmp	r3, #51	@ 0x33
 800568c:	d175      	bne.n	800577a <HAL_UART_RxCpltCallback+0x6ca>
		if (p2.IsAttack==0 && p2.IsDamage==0 &&p2.isAlive==1){
 800568e:	4b5d      	ldr	r3, [pc, #372]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005690:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005692:	2b00      	cmp	r3, #0
 8005694:	d171      	bne.n	800577a <HAL_UART_RxCpltCallback+0x6ca>
 8005696:	4b5b      	ldr	r3, [pc, #364]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005698:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800569a:	2b00      	cmp	r3, #0
 800569c:	d16d      	bne.n	800577a <HAL_UART_RxCpltCallback+0x6ca>
 800569e:	4b59      	ldr	r3, [pc, #356]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056a0:	69db      	ldr	r3, [r3, #28]
 80056a2:	2b01      	cmp	r3, #1
 80056a4:	d169      	bne.n	800577a <HAL_UART_RxCpltCallback+0x6ca>
			FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 80056a6:	4b57      	ldr	r3, [pc, #348]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056a8:	681a      	ldr	r2, [r3, #0]
 80056aa:	4b56      	ldr	r3, [pc, #344]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056ac:	689b      	ldr	r3, [r3, #8]
 80056ae:	085b      	lsrs	r3, r3, #1
 80056b0:	1ad3      	subs	r3, r2, r3
 80056b2:	1c58      	adds	r0, r3, #1
 80056b4:	4b53      	ldr	r3, [pc, #332]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056b6:	685a      	ldr	r2, [r3, #4]
 80056b8:	4b52      	ldr	r3, [pc, #328]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056ba:	68db      	ldr	r3, [r3, #12]
 80056bc:	085b      	lsrs	r3, r3, #1
 80056be:	1ad3      	subs	r3, r2, r3
 80056c0:	1c59      	adds	r1, r3, #1
 80056c2:	4b50      	ldr	r3, [pc, #320]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056c4:	689b      	ldr	r3, [r3, #8]
 80056c6:	1c5a      	adds	r2, r3, #1
 80056c8:	4b4e      	ldr	r3, [pc, #312]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056ca:	68db      	ldr	r3, [r3, #12]
 80056cc:	3301      	adds	r3, #1
 80056ce:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 80056d2:	9400      	str	r4, [sp, #0]
 80056d4:	f7fc f970 	bl	80019b8 <FillRect>
			p2.direction=2;
 80056d8:	4b4a      	ldr	r3, [pc, #296]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056da:	2202      	movs	r2, #2
 80056dc:	621a      	str	r2, [r3, #32]
		if (playerCanMove(&p2, 0)) {
 80056de:	2100      	movs	r1, #0
 80056e0:	4848      	ldr	r0, [pc, #288]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056e2:	f7fd ffdd 	bl	80036a0 <playerCanMove>
 80056e6:	4603      	mov	r3, r0
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d017      	beq.n	800571c <HAL_UART_RxCpltCallback+0x66c>
		    p2.y=p2.y+p2.speed;
 80056ec:	4b45      	ldr	r3, [pc, #276]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056ee:	685a      	ldr	r2, [r3, #4]
 80056f0:	4b44      	ldr	r3, [pc, #272]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056f2:	691b      	ldr	r3, [r3, #16]
 80056f4:	4413      	add	r3, r2
 80056f6:	4a43      	ldr	r2, [pc, #268]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056f8:	6053      	str	r3, [r2, #4]
		    if (p2.animationWalkDown<10){
 80056fa:	4b42      	ldr	r3, [pc, #264]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80056fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80056fe:	2b09      	cmp	r3, #9
 8005700:	d805      	bhi.n	800570e <HAL_UART_RxCpltCallback+0x65e>
		    		p2.animationWalkDown+=1;
 8005702:	4b40      	ldr	r3, [pc, #256]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005704:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005706:	3301      	adds	r3, #1
 8005708:	4a3e      	ldr	r2, [pc, #248]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800570a:	6513      	str	r3, [r2, #80]	@ 0x50
 800570c:	e002      	b.n	8005714 <HAL_UART_RxCpltCallback+0x664>
		    			} else{
		    				p2.animationWalkDown=0;
 800570e:	4b3d      	ldr	r3, [pc, #244]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005710:	2200      	movs	r2, #0
 8005712:	651a      	str	r2, [r3, #80]	@ 0x50
		    			}
		    PlayerAnimation(&p2);
 8005714:	483b      	ldr	r0, [pc, #236]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005716:	f7fe fa21 	bl	8003b5c <PlayerAnimation>
 800571a:	e02e      	b.n	800577a <HAL_UART_RxCpltCallback+0x6ca>
		} else {
			FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 800571c:	4b39      	ldr	r3, [pc, #228]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800571e:	681a      	ldr	r2, [r3, #0]
 8005720:	4b38      	ldr	r3, [pc, #224]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005722:	689b      	ldr	r3, [r3, #8]
 8005724:	085b      	lsrs	r3, r3, #1
 8005726:	1ad3      	subs	r3, r2, r3
 8005728:	1c58      	adds	r0, r3, #1
 800572a:	4b36      	ldr	r3, [pc, #216]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800572c:	685a      	ldr	r2, [r3, #4]
 800572e:	4b35      	ldr	r3, [pc, #212]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005730:	68db      	ldr	r3, [r3, #12]
 8005732:	085b      	lsrs	r3, r3, #1
 8005734:	1ad3      	subs	r3, r2, r3
 8005736:	1c59      	adds	r1, r3, #1
 8005738:	4b32      	ldr	r3, [pc, #200]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800573a:	689b      	ldr	r3, [r3, #8]
 800573c:	1c5a      	adds	r2, r3, #1
 800573e:	4b31      	ldr	r3, [pc, #196]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005740:	68db      	ldr	r3, [r3, #12]
 8005742:	3301      	adds	r3, #1
 8005744:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 8005748:	9400      	str	r4, [sp, #0]
 800574a:	f7fc f935 	bl	80019b8 <FillRect>
			LCD_Sprite(p2.x - (18 / 2)+1, p2.y - (26 / 2)+1, 18, 26, LinkDownWalk180x24_10, 10, 0, 0, 0);
 800574e:	4b2d      	ldr	r3, [pc, #180]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	3b08      	subs	r3, #8
 8005754:	4618      	mov	r0, r3
 8005756:	4b2b      	ldr	r3, [pc, #172]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005758:	685b      	ldr	r3, [r3, #4]
 800575a:	3b0c      	subs	r3, #12
 800575c:	4619      	mov	r1, r3
 800575e:	2300      	movs	r3, #0
 8005760:	9304      	str	r3, [sp, #16]
 8005762:	2300      	movs	r3, #0
 8005764:	9303      	str	r3, [sp, #12]
 8005766:	2300      	movs	r3, #0
 8005768:	9302      	str	r3, [sp, #8]
 800576a:	230a      	movs	r3, #10
 800576c:	9301      	str	r3, [sp, #4]
 800576e:	4b29      	ldr	r3, [pc, #164]	@ (8005814 <HAL_UART_RxCpltCallback+0x764>)
 8005770:	9300      	str	r3, [sp, #0]
 8005772:	231a      	movs	r3, #26
 8005774:	2212      	movs	r2, #18
 8005776:	f7fc f9cf 	bl	8001b18 <LCD_Sprite>
		}
	}
}

	if(buffer[0] == '4'){ //Izquierda
 800577a:	4b24      	ldr	r3, [pc, #144]	@ (800580c <HAL_UART_RxCpltCallback+0x75c>)
 800577c:	781b      	ldrb	r3, [r3, #0]
 800577e:	2b34      	cmp	r3, #52	@ 0x34
 8005780:	d167      	bne.n	8005852 <HAL_UART_RxCpltCallback+0x7a2>
		if (p2.IsAttack==0 && p2.IsDamage==0 &&p2.isAlive==1){
 8005782:	4b20      	ldr	r3, [pc, #128]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005784:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005786:	2b00      	cmp	r3, #0
 8005788:	d163      	bne.n	8005852 <HAL_UART_RxCpltCallback+0x7a2>
 800578a:	4b1e      	ldr	r3, [pc, #120]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800578c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800578e:	2b00      	cmp	r3, #0
 8005790:	d15f      	bne.n	8005852 <HAL_UART_RxCpltCallback+0x7a2>
 8005792:	4b1c      	ldr	r3, [pc, #112]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 8005794:	69db      	ldr	r3, [r3, #28]
 8005796:	2b01      	cmp	r3, #1
 8005798:	d15b      	bne.n	8005852 <HAL_UART_RxCpltCallback+0x7a2>
			FillRect(p2.x - (p2.width / 2)+1, p2.y - (p2.height / 2)+1, p2.width+1, p2.height+1, 0xFE8B);
 800579a:	4b1a      	ldr	r3, [pc, #104]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 800579c:	681a      	ldr	r2, [r3, #0]
 800579e:	4b19      	ldr	r3, [pc, #100]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057a0:	689b      	ldr	r3, [r3, #8]
 80057a2:	085b      	lsrs	r3, r3, #1
 80057a4:	1ad3      	subs	r3, r2, r3
 80057a6:	1c58      	adds	r0, r3, #1
 80057a8:	4b16      	ldr	r3, [pc, #88]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057aa:	685a      	ldr	r2, [r3, #4]
 80057ac:	4b15      	ldr	r3, [pc, #84]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057ae:	68db      	ldr	r3, [r3, #12]
 80057b0:	085b      	lsrs	r3, r3, #1
 80057b2:	1ad3      	subs	r3, r2, r3
 80057b4:	1c59      	adds	r1, r3, #1
 80057b6:	4b13      	ldr	r3, [pc, #76]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057b8:	689b      	ldr	r3, [r3, #8]
 80057ba:	1c5a      	adds	r2, r3, #1
 80057bc:	4b11      	ldr	r3, [pc, #68]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057be:	68db      	ldr	r3, [r3, #12]
 80057c0:	3301      	adds	r3, #1
 80057c2:	f64f 648b 	movw	r4, #65163	@ 0xfe8b
 80057c6:	9400      	str	r4, [sp, #0]
 80057c8:	f7fc f8f6 	bl	80019b8 <FillRect>
			p2.direction=3;
 80057cc:	4b0d      	ldr	r3, [pc, #52]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057ce:	2203      	movs	r2, #3
 80057d0:	621a      	str	r2, [r3, #32]
			if (playerCanMove(&p2, 3)) {
 80057d2:	2103      	movs	r1, #3
 80057d4:	480b      	ldr	r0, [pc, #44]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057d6:	f7fd ff63 	bl	80036a0 <playerCanMove>
 80057da:	4603      	mov	r3, r0
 80057dc:	2b00      	cmp	r3, #0
 80057de:	d022      	beq.n	8005826 <HAL_UART_RxCpltCallback+0x776>
				p2.x=p2.x-p2.speed;
 80057e0:	4b08      	ldr	r3, [pc, #32]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057e2:	681a      	ldr	r2, [r3, #0]
 80057e4:	4b07      	ldr	r3, [pc, #28]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057e6:	691b      	ldr	r3, [r3, #16]
 80057e8:	1ad3      	subs	r3, r2, r3
 80057ea:	4a06      	ldr	r2, [pc, #24]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057ec:	6013      	str	r3, [r2, #0]
				if (p2.animationWalkLeft<10){
 80057ee:	4b05      	ldr	r3, [pc, #20]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80057f2:	2b09      	cmp	r3, #9
 80057f4:	d810      	bhi.n	8005818 <HAL_UART_RxCpltCallback+0x768>
						p2.animationWalkLeft+=1;
 80057f6:	4b03      	ldr	r3, [pc, #12]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80057fa:	3301      	adds	r3, #1
 80057fc:	4a01      	ldr	r2, [pc, #4]	@ (8005804 <HAL_UART_RxCpltCallback+0x754>)
 80057fe:	6453      	str	r3, [r2, #68]	@ 0x44
 8005800:	e00d      	b.n	800581e <HAL_UART_RxCpltCallback+0x76e>
 8005802:	bf00      	nop
 8005804:	2001c7f8 	.word	0x2001c7f8
 8005808:	20012428 	.word	0x20012428
 800580c:	2001c778 	.word	0x2001c778
 8005810:	2000fca0 	.word	0x2000fca0
 8005814:	200148b8 	.word	0x200148b8
						} else{
						  p2.animationWalkLeft=0;
 8005818:	4b6a      	ldr	r3, [pc, #424]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800581a:	2200      	movs	r2, #0
 800581c:	645a      	str	r2, [r3, #68]	@ 0x44
						  }
			 PlayerAnimation(&p2);
 800581e:	4869      	ldr	r0, [pc, #420]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005820:	f7fe f99c 	bl	8003b5c <PlayerAnimation>
 8005824:	e015      	b.n	8005852 <HAL_UART_RxCpltCallback+0x7a2>
						  //FillRect(p2.x - (p2.width / 2), p2.y - (p2.height / 2), p2.width, p2.height, 0xFFFB00);

			} else {
				LCD_Sprite(p2.x - (22 / 2)+1, p2.y - (23 / 2), 22, 23, LinkSideWalk220x23_10, 10, 0, 0, 0);
 8005826:	4b67      	ldr	r3, [pc, #412]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	3b0a      	subs	r3, #10
 800582c:	4618      	mov	r0, r3
 800582e:	4b65      	ldr	r3, [pc, #404]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005830:	685b      	ldr	r3, [r3, #4]
 8005832:	3b0b      	subs	r3, #11
 8005834:	4619      	mov	r1, r3
 8005836:	2300      	movs	r3, #0
 8005838:	9304      	str	r3, [sp, #16]
 800583a:	2300      	movs	r3, #0
 800583c:	9303      	str	r3, [sp, #12]
 800583e:	2300      	movs	r3, #0
 8005840:	9302      	str	r3, [sp, #8]
 8005842:	230a      	movs	r3, #10
 8005844:	9301      	str	r3, [sp, #4]
 8005846:	4b60      	ldr	r3, [pc, #384]	@ (80059c8 <HAL_UART_RxCpltCallback+0x918>)
 8005848:	9300      	str	r3, [sp, #0]
 800584a:	2317      	movs	r3, #23
 800584c:	2216      	movs	r2, #22
 800584e:	f7fc f963 	bl	8001b18 <LCD_Sprite>
				//FillRect(p2.x - (p2.width / 2), p2.y - (p2.height / 2), p2.width, p2.height, 0xFFFB00);
			}
	}
}

	if (buffer[0]=='5'){
 8005852:	4b5e      	ldr	r3, [pc, #376]	@ (80059cc <HAL_UART_RxCpltCallback+0x91c>)
 8005854:	781b      	ldrb	r3, [r3, #0]
 8005856:	2b35      	cmp	r3, #53	@ 0x35
 8005858:	d12b      	bne.n	80058b2 <HAL_UART_RxCpltCallback+0x802>
		if (estadoActual == MENU ) {
 800585a:	4b5d      	ldr	r3, [pc, #372]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 800585c:	781b      	ldrb	r3, [r3, #0]
 800585e:	b2db      	uxtb	r3, r3
 8005860:	2b00      	cmp	r3, #0
 8005862:	d103      	bne.n	800586c <HAL_UART_RxCpltCallback+0x7bc>
					 // IMPRIMIR SPRITE DE DOS JUGADORES
			estadoFuturo = DUO;
 8005864:	4b5b      	ldr	r3, [pc, #364]	@ (80059d4 <HAL_UART_RxCpltCallback+0x924>)
 8005866:	2202      	movs	r2, #2
 8005868:	701a      	strb	r2, [r3, #0]
 800586a:	e022      	b.n	80058b2 <HAL_UART_RxCpltCallback+0x802>
		}
		else {
			if (p2.IsAttack==0 && p2.IsDamage==0 &&p2.isAlive==1){
 800586c:	4b55      	ldr	r3, [pc, #340]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800586e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005870:	2b00      	cmp	r3, #0
 8005872:	d11a      	bne.n	80058aa <HAL_UART_RxCpltCallback+0x7fa>
 8005874:	4b53      	ldr	r3, [pc, #332]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005876:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005878:	2b00      	cmp	r3, #0
 800587a:	d116      	bne.n	80058aa <HAL_UART_RxCpltCallback+0x7fa>
 800587c:	4b51      	ldr	r3, [pc, #324]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800587e:	69db      	ldr	r3, [r3, #28]
 8005880:	2b01      	cmp	r3, #1
 8005882:	d112      	bne.n	80058aa <HAL_UART_RxCpltCallback+0x7fa>
				p2.IsAttack=1;
 8005884:	4b4f      	ldr	r3, [pc, #316]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005886:	2201      	movs	r2, #1
 8005888:	655a      	str	r2, [r3, #84]	@ 0x54
				p2.animationAttack=0;
 800588a:	4b4e      	ldr	r3, [pc, #312]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800588c:	f04f 0200 	mov.w	r2, #0
 8005890:	659a      	str	r2, [r3, #88]	@ 0x58
				PlayerHit(&p2, &e1_4);
 8005892:	4951      	ldr	r1, [pc, #324]	@ (80059d8 <HAL_UART_RxCpltCallback+0x928>)
 8005894:	484b      	ldr	r0, [pc, #300]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005896:	f7fe f881 	bl	800399c <PlayerHit>
				PlayerHit(&p2, &e1_5);
 800589a:	4950      	ldr	r1, [pc, #320]	@ (80059dc <HAL_UART_RxCpltCallback+0x92c>)
 800589c:	4849      	ldr	r0, [pc, #292]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800589e:	f7fe f87d 	bl	800399c <PlayerHit>
				PlayerHit(&p2, &e1_6);}
 80058a2:	494f      	ldr	r1, [pc, #316]	@ (80059e0 <HAL_UART_RxCpltCallback+0x930>)
 80058a4:	4847      	ldr	r0, [pc, #284]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 80058a6:	f7fe f879 	bl	800399c <PlayerHit>
				PlayerHit_E2(&p2, &e2_2);
 80058aa:	494e      	ldr	r1, [pc, #312]	@ (80059e4 <HAL_UART_RxCpltCallback+0x934>)
 80058ac:	4845      	ldr	r0, [pc, #276]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 80058ae:	f7fd fa55 	bl	8002d5c <PlayerHit_E2>
		}
	}

	if (buffer[0]=='6'){
 80058b2:	4b46      	ldr	r3, [pc, #280]	@ (80059cc <HAL_UART_RxCpltCallback+0x91c>)
 80058b4:	781b      	ldrb	r3, [r3, #0]
 80058b6:	2b36      	cmp	r3, #54	@ 0x36
 80058b8:	d17a      	bne.n	80059b0 <HAL_UART_RxCpltCallback+0x900>
		if (estadoActual == MENU){
 80058ba:	4b45      	ldr	r3, [pc, #276]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058bc:	781b      	ldrb	r3, [r3, #0]
 80058be:	b2db      	uxtb	r3, r3
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d104      	bne.n	80058ce <HAL_UART_RxCpltCallback+0x81e>
			estadoActual = estadoFuturo;
 80058c4:	4b43      	ldr	r3, [pc, #268]	@ (80059d4 <HAL_UART_RxCpltCallback+0x924>)
 80058c6:	781b      	ldrb	r3, [r3, #0]
 80058c8:	b2da      	uxtb	r2, r3
 80058ca:	4b41      	ldr	r3, [pc, #260]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058cc:	701a      	strb	r2, [r3, #0]
		}
		// Solo cambia a PAUSA si estamos en SOLO o DUO
		if (estadoActual == SOLO || estadoActual == DUO) {
 80058ce:	4b40      	ldr	r3, [pc, #256]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058d0:	781b      	ldrb	r3, [r3, #0]
 80058d2:	b2db      	uxtb	r3, r3
 80058d4:	2b01      	cmp	r3, #1
 80058d6:	d004      	beq.n	80058e2 <HAL_UART_RxCpltCallback+0x832>
 80058d8:	4b3d      	ldr	r3, [pc, #244]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058da:	781b      	ldrb	r3, [r3, #0]
 80058dc:	b2db      	uxtb	r3, r3
 80058de:	2b02      	cmp	r3, #2
 80058e0:	d10d      	bne.n	80058fe <HAL_UART_RxCpltCallback+0x84e>
			// Solo cambia si no estamos ya en PAUSA
			if (estadoActual != PAUSA) {
 80058e2:	4b3b      	ldr	r3, [pc, #236]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058e4:	781b      	ldrb	r3, [r3, #0]
 80058e6:	b2db      	uxtb	r3, r3
 80058e8:	2b03      	cmp	r3, #3
 80058ea:	d061      	beq.n	80059b0 <HAL_UART_RxCpltCallback+0x900>
				estadoAnterior = estadoActual;  // Guarda el estado actual antes de cambiar
 80058ec:	4b38      	ldr	r3, [pc, #224]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058ee:	781b      	ldrb	r3, [r3, #0]
 80058f0:	b2da      	uxtb	r2, r3
 80058f2:	4b3d      	ldr	r3, [pc, #244]	@ (80059e8 <HAL_UART_RxCpltCallback+0x938>)
 80058f4:	701a      	strb	r2, [r3, #0]
				estadoActual = PAUSA;           // Cambia a PAUSA
 80058f6:	4b36      	ldr	r3, [pc, #216]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80058f8:	2203      	movs	r2, #3
 80058fa:	701a      	strb	r2, [r3, #0]
			if (estadoActual != PAUSA) {
 80058fc:	e058      	b.n	80059b0 <HAL_UART_RxCpltCallback+0x900>
			}
		} else if (estadoActual == PAUSA) {
 80058fe:	4b34      	ldr	r3, [pc, #208]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 8005900:	781b      	ldrb	r3, [r3, #0]
 8005902:	b2db      	uxtb	r3, r3
 8005904:	2b03      	cmp	r3, #3
 8005906:	d153      	bne.n	80059b0 <HAL_UART_RxCpltCallback+0x900>
			// Si estamos en PAUSA, regresa al estado anterior
			//LCD_Bitmap(0, 0, 320, 240, fondo);
			//Cargar el fondo en 8 fragmentaciones

			if (estadoAnterior == SOLO){
 8005908:	4b37      	ldr	r3, [pc, #220]	@ (80059e8 <HAL_UART_RxCpltCallback+0x938>)
 800590a:	781b      	ldrb	r3, [r3, #0]
 800590c:	b2db      	uxtb	r3, r3
 800590e:	2b01      	cmp	r3, #1
 8005910:	d115      	bne.n	800593e <HAL_UART_RxCpltCallback+0x88e>
				LCD_Sprite(p1.x - (18 / 2)+2, p1.y - (23 / 2+4), 18, 23, LinkAttackDown_18x23_6, 6, 5, 0, 0);
 8005912:	4b36      	ldr	r3, [pc, #216]	@ (80059ec <HAL_UART_RxCpltCallback+0x93c>)
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	3b07      	subs	r3, #7
 8005918:	4618      	mov	r0, r3
 800591a:	4b34      	ldr	r3, [pc, #208]	@ (80059ec <HAL_UART_RxCpltCallback+0x93c>)
 800591c:	685b      	ldr	r3, [r3, #4]
 800591e:	3b0f      	subs	r3, #15
 8005920:	4619      	mov	r1, r3
 8005922:	2300      	movs	r3, #0
 8005924:	9304      	str	r3, [sp, #16]
 8005926:	2300      	movs	r3, #0
 8005928:	9303      	str	r3, [sp, #12]
 800592a:	2305      	movs	r3, #5
 800592c:	9302      	str	r3, [sp, #8]
 800592e:	2306      	movs	r3, #6
 8005930:	9301      	str	r3, [sp, #4]
 8005932:	4b2f      	ldr	r3, [pc, #188]	@ (80059f0 <HAL_UART_RxCpltCallback+0x940>)
 8005934:	9300      	str	r3, [sp, #0]
 8005936:	2317      	movs	r3, #23
 8005938:	2212      	movs	r2, #18
 800593a:	f7fc f8ed 	bl	8001b18 <LCD_Sprite>
			}
			if (estadoAnterior == DUO){
 800593e:	4b2a      	ldr	r3, [pc, #168]	@ (80059e8 <HAL_UART_RxCpltCallback+0x938>)
 8005940:	781b      	ldrb	r3, [r3, #0]
 8005942:	b2db      	uxtb	r3, r3
 8005944:	2b02      	cmp	r3, #2
 8005946:	d12b      	bne.n	80059a0 <HAL_UART_RxCpltCallback+0x8f0>
				LCD_Sprite(p1.x - (18 / 2)+2, p1.y - (23 / 2+4), 18, 23, LinkAttackDown_18x23_6, 6, 5, 0, 0);
 8005948:	4b28      	ldr	r3, [pc, #160]	@ (80059ec <HAL_UART_RxCpltCallback+0x93c>)
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	3b07      	subs	r3, #7
 800594e:	4618      	mov	r0, r3
 8005950:	4b26      	ldr	r3, [pc, #152]	@ (80059ec <HAL_UART_RxCpltCallback+0x93c>)
 8005952:	685b      	ldr	r3, [r3, #4]
 8005954:	3b0f      	subs	r3, #15
 8005956:	4619      	mov	r1, r3
 8005958:	2300      	movs	r3, #0
 800595a:	9304      	str	r3, [sp, #16]
 800595c:	2300      	movs	r3, #0
 800595e:	9303      	str	r3, [sp, #12]
 8005960:	2305      	movs	r3, #5
 8005962:	9302      	str	r3, [sp, #8]
 8005964:	2306      	movs	r3, #6
 8005966:	9301      	str	r3, [sp, #4]
 8005968:	4b21      	ldr	r3, [pc, #132]	@ (80059f0 <HAL_UART_RxCpltCallback+0x940>)
 800596a:	9300      	str	r3, [sp, #0]
 800596c:	2317      	movs	r3, #23
 800596e:	2212      	movs	r2, #18
 8005970:	f7fc f8d2 	bl	8001b18 <LCD_Sprite>
				LCD_Sprite(p2.x - (18 / 2)+2, p2.y - (23 / 2+4), 18, 23, LinkAttackDown_18x23_6, 6, 5, 0, 0);
 8005974:	4b13      	ldr	r3, [pc, #76]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	3b07      	subs	r3, #7
 800597a:	4618      	mov	r0, r3
 800597c:	4b11      	ldr	r3, [pc, #68]	@ (80059c4 <HAL_UART_RxCpltCallback+0x914>)
 800597e:	685b      	ldr	r3, [r3, #4]
 8005980:	3b0f      	subs	r3, #15
 8005982:	4619      	mov	r1, r3
 8005984:	2300      	movs	r3, #0
 8005986:	9304      	str	r3, [sp, #16]
 8005988:	2300      	movs	r3, #0
 800598a:	9303      	str	r3, [sp, #12]
 800598c:	2305      	movs	r3, #5
 800598e:	9302      	str	r3, [sp, #8]
 8005990:	2306      	movs	r3, #6
 8005992:	9301      	str	r3, [sp, #4]
 8005994:	4b16      	ldr	r3, [pc, #88]	@ (80059f0 <HAL_UART_RxCpltCallback+0x940>)
 8005996:	9300      	str	r3, [sp, #0]
 8005998:	2317      	movs	r3, #23
 800599a:	2212      	movs	r2, #18
 800599c:	f7fc f8bc 	bl	8001b18 <LCD_Sprite>
			}
			estadoActual = estadoAnterior; // Restaura el estado anterior
 80059a0:	4b11      	ldr	r3, [pc, #68]	@ (80059e8 <HAL_UART_RxCpltCallback+0x938>)
 80059a2:	781b      	ldrb	r3, [r3, #0]
 80059a4:	b2da      	uxtb	r2, r3
 80059a6:	4b0a      	ldr	r3, [pc, #40]	@ (80059d0 <HAL_UART_RxCpltCallback+0x920>)
 80059a8:	701a      	strb	r2, [r3, #0]
			repintarFondo = 1;
 80059aa:	4b12      	ldr	r3, [pc, #72]	@ (80059f4 <HAL_UART_RxCpltCallback+0x944>)
 80059ac:	2201      	movs	r2, #1
 80059ae:	701a      	strb	r2, [r3, #0]
		}
	}

	// Vuelve a activar la recepción por interrupción
	HAL_UART_Receive_IT(&huart2, buffer, 1);
 80059b0:	2201      	movs	r2, #1
 80059b2:	4906      	ldr	r1, [pc, #24]	@ (80059cc <HAL_UART_RxCpltCallback+0x91c>)
 80059b4:	4810      	ldr	r0, [pc, #64]	@ (80059f8 <HAL_UART_RxCpltCallback+0x948>)
 80059b6:	f002 fdce 	bl	8008556 <HAL_UART_Receive_IT>
}
 80059ba:	bf00      	nop
 80059bc:	370c      	adds	r7, #12
 80059be:	46bd      	mov	sp, r7
 80059c0:	bd90      	pop	{r4, r7, pc}
 80059c2:	bf00      	nop
 80059c4:	2001c7f8 	.word	0x2001c7f8
 80059c8:	2000fca0 	.word	0x2000fca0
 80059cc:	2001c778 	.word	0x2001c778
 80059d0:	20016a78 	.word	0x20016a78
 80059d4:	2001cae0 	.word	0x2001cae0
 80059d8:	2001c908 	.word	0x2001c908
 80059dc:	2001c93c 	.word	0x2001c93c
 80059e0:	2001c970 	.word	0x2001c970
 80059e4:	2001c9e8 	.word	0x2001c9e8
 80059e8:	20016a79 	.word	0x20016a79
 80059ec:	2001c784 	.word	0x2001c784
 80059f0:	20007df4 	.word	0x20007df4
 80059f4:	2001caec 	.word	0x2001caec
 80059f8:	20017c30 	.word	0x20017c30

080059fc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80059fc:	b480      	push	{r7}
 80059fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8005a00:	b672      	cpsid	i
}
 8005a02:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8005a04:	bf00      	nop
 8005a06:	e7fd      	b.n	8005a04 <Error_Handler+0x8>

08005a08 <HAL_MspInit>:
 8005a08:	b480      	push	{r7}
 8005a0a:	b083      	sub	sp, #12
 8005a0c:	af00      	add	r7, sp, #0
 8005a0e:	2300      	movs	r3, #0
 8005a10:	607b      	str	r3, [r7, #4]
 8005a12:	4b10      	ldr	r3, [pc, #64]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a16:	4a0f      	ldr	r2, [pc, #60]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a18:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005a1c:	6453      	str	r3, [r2, #68]	@ 0x44
 8005a1e:	4b0d      	ldr	r3, [pc, #52]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a22:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005a26:	607b      	str	r3, [r7, #4]
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	2300      	movs	r3, #0
 8005a2c:	603b      	str	r3, [r7, #0]
 8005a2e:	4b09      	ldr	r3, [pc, #36]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a32:	4a08      	ldr	r2, [pc, #32]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a34:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005a38:	6413      	str	r3, [r2, #64]	@ 0x40
 8005a3a:	4b06      	ldr	r3, [pc, #24]	@ (8005a54 <HAL_MspInit+0x4c>)
 8005a3c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a3e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005a42:	603b      	str	r3, [r7, #0]
 8005a44:	683b      	ldr	r3, [r7, #0]
 8005a46:	bf00      	nop
 8005a48:	370c      	adds	r7, #12
 8005a4a:	46bd      	mov	sp, r7
 8005a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a50:	4770      	bx	lr
 8005a52:	bf00      	nop
 8005a54:	40023800 	.word	0x40023800

08005a58 <HAL_SPI_MspInit>:
 8005a58:	b580      	push	{r7, lr}
 8005a5a:	b08a      	sub	sp, #40	@ 0x28
 8005a5c:	af00      	add	r7, sp, #0
 8005a5e:	6078      	str	r0, [r7, #4]
 8005a60:	f107 0314 	add.w	r3, r7, #20
 8005a64:	2200      	movs	r2, #0
 8005a66:	601a      	str	r2, [r3, #0]
 8005a68:	605a      	str	r2, [r3, #4]
 8005a6a:	609a      	str	r2, [r3, #8]
 8005a6c:	60da      	str	r2, [r3, #12]
 8005a6e:	611a      	str	r2, [r3, #16]
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	4a19      	ldr	r2, [pc, #100]	@ (8005adc <HAL_SPI_MspInit+0x84>)
 8005a76:	4293      	cmp	r3, r2
 8005a78:	d12b      	bne.n	8005ad2 <HAL_SPI_MspInit+0x7a>
 8005a7a:	2300      	movs	r3, #0
 8005a7c:	613b      	str	r3, [r7, #16]
 8005a7e:	4b18      	ldr	r3, [pc, #96]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a82:	4a17      	ldr	r2, [pc, #92]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005a84:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8005a88:	6453      	str	r3, [r2, #68]	@ 0x44
 8005a8a:	4b15      	ldr	r3, [pc, #84]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005a8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a8e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005a92:	613b      	str	r3, [r7, #16]
 8005a94:	693b      	ldr	r3, [r7, #16]
 8005a96:	2300      	movs	r3, #0
 8005a98:	60fb      	str	r3, [r7, #12]
 8005a9a:	4b11      	ldr	r3, [pc, #68]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005a9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a9e:	4a10      	ldr	r2, [pc, #64]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005aa0:	f043 0301 	orr.w	r3, r3, #1
 8005aa4:	6313      	str	r3, [r2, #48]	@ 0x30
 8005aa6:	4b0e      	ldr	r3, [pc, #56]	@ (8005ae0 <HAL_SPI_MspInit+0x88>)
 8005aa8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005aaa:	f003 0301 	and.w	r3, r3, #1
 8005aae:	60fb      	str	r3, [r7, #12]
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	23e0      	movs	r3, #224	@ 0xe0
 8005ab4:	617b      	str	r3, [r7, #20]
 8005ab6:	2302      	movs	r3, #2
 8005ab8:	61bb      	str	r3, [r7, #24]
 8005aba:	2300      	movs	r3, #0
 8005abc:	61fb      	str	r3, [r7, #28]
 8005abe:	2303      	movs	r3, #3
 8005ac0:	623b      	str	r3, [r7, #32]
 8005ac2:	2305      	movs	r3, #5
 8005ac4:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ac6:	f107 0314 	add.w	r3, r7, #20
 8005aca:	4619      	mov	r1, r3
 8005acc:	4805      	ldr	r0, [pc, #20]	@ (8005ae4 <HAL_SPI_MspInit+0x8c>)
 8005ace:	f000 fc27 	bl	8006320 <HAL_GPIO_Init>
 8005ad2:	bf00      	nop
 8005ad4:	3728      	adds	r7, #40	@ 0x28
 8005ad6:	46bd      	mov	sp, r7
 8005ad8:	bd80      	pop	{r7, pc}
 8005ada:	bf00      	nop
 8005adc:	40013000 	.word	0x40013000
 8005ae0:	40023800 	.word	0x40023800
 8005ae4:	40020000 	.word	0x40020000

08005ae8 <HAL_TIM_PWM_MspInit>:
 8005ae8:	b480      	push	{r7}
 8005aea:	b085      	sub	sp, #20
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005af8:	d10d      	bne.n	8005b16 <HAL_TIM_PWM_MspInit+0x2e>
 8005afa:	2300      	movs	r3, #0
 8005afc:	60fb      	str	r3, [r7, #12]
 8005afe:	4b09      	ldr	r3, [pc, #36]	@ (8005b24 <HAL_TIM_PWM_MspInit+0x3c>)
 8005b00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b02:	4a08      	ldr	r2, [pc, #32]	@ (8005b24 <HAL_TIM_PWM_MspInit+0x3c>)
 8005b04:	f043 0301 	orr.w	r3, r3, #1
 8005b08:	6413      	str	r3, [r2, #64]	@ 0x40
 8005b0a:	4b06      	ldr	r3, [pc, #24]	@ (8005b24 <HAL_TIM_PWM_MspInit+0x3c>)
 8005b0c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b0e:	f003 0301 	and.w	r3, r3, #1
 8005b12:	60fb      	str	r3, [r7, #12]
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	bf00      	nop
 8005b18:	3714      	adds	r7, #20
 8005b1a:	46bd      	mov	sp, r7
 8005b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b20:	4770      	bx	lr
 8005b22:	bf00      	nop
 8005b24:	40023800 	.word	0x40023800

08005b28 <HAL_TIM_MspPostInit>:
 8005b28:	b580      	push	{r7, lr}
 8005b2a:	b088      	sub	sp, #32
 8005b2c:	af00      	add	r7, sp, #0
 8005b2e:	6078      	str	r0, [r7, #4]
 8005b30:	f107 030c 	add.w	r3, r7, #12
 8005b34:	2200      	movs	r2, #0
 8005b36:	601a      	str	r2, [r3, #0]
 8005b38:	605a      	str	r2, [r3, #4]
 8005b3a:	609a      	str	r2, [r3, #8]
 8005b3c:	60da      	str	r2, [r3, #12]
 8005b3e:	611a      	str	r2, [r3, #16]
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005b48:	d11d      	bne.n	8005b86 <HAL_TIM_MspPostInit+0x5e>
 8005b4a:	2300      	movs	r3, #0
 8005b4c:	60bb      	str	r3, [r7, #8]
 8005b4e:	4b10      	ldr	r3, [pc, #64]	@ (8005b90 <HAL_TIM_MspPostInit+0x68>)
 8005b50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b52:	4a0f      	ldr	r2, [pc, #60]	@ (8005b90 <HAL_TIM_MspPostInit+0x68>)
 8005b54:	f043 0302 	orr.w	r3, r3, #2
 8005b58:	6313      	str	r3, [r2, #48]	@ 0x30
 8005b5a:	4b0d      	ldr	r3, [pc, #52]	@ (8005b90 <HAL_TIM_MspPostInit+0x68>)
 8005b5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b5e:	f003 0302 	and.w	r3, r3, #2
 8005b62:	60bb      	str	r3, [r7, #8]
 8005b64:	68bb      	ldr	r3, [r7, #8]
 8005b66:	2304      	movs	r3, #4
 8005b68:	60fb      	str	r3, [r7, #12]
 8005b6a:	2302      	movs	r3, #2
 8005b6c:	613b      	str	r3, [r7, #16]
 8005b6e:	2300      	movs	r3, #0
 8005b70:	617b      	str	r3, [r7, #20]
 8005b72:	2300      	movs	r3, #0
 8005b74:	61bb      	str	r3, [r7, #24]
 8005b76:	2301      	movs	r3, #1
 8005b78:	61fb      	str	r3, [r7, #28]
 8005b7a:	f107 030c 	add.w	r3, r7, #12
 8005b7e:	4619      	mov	r1, r3
 8005b80:	4804      	ldr	r0, [pc, #16]	@ (8005b94 <HAL_TIM_MspPostInit+0x6c>)
 8005b82:	f000 fbcd 	bl	8006320 <HAL_GPIO_Init>
 8005b86:	bf00      	nop
 8005b88:	3720      	adds	r7, #32
 8005b8a:	46bd      	mov	sp, r7
 8005b8c:	bd80      	pop	{r7, pc}
 8005b8e:	bf00      	nop
 8005b90:	40023800 	.word	0x40023800
 8005b94:	40020400 	.word	0x40020400

08005b98 <HAL_UART_MspInit>:
 8005b98:	b580      	push	{r7, lr}
 8005b9a:	b08c      	sub	sp, #48	@ 0x30
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	6078      	str	r0, [r7, #4]
 8005ba0:	f107 031c 	add.w	r3, r7, #28
 8005ba4:	2200      	movs	r2, #0
 8005ba6:	601a      	str	r2, [r3, #0]
 8005ba8:	605a      	str	r2, [r3, #4]
 8005baa:	609a      	str	r2, [r3, #8]
 8005bac:	60da      	str	r2, [r3, #12]
 8005bae:	611a      	str	r2, [r3, #16]
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	4a49      	ldr	r2, [pc, #292]	@ (8005cdc <HAL_UART_MspInit+0x144>)
 8005bb6:	4293      	cmp	r3, r2
 8005bb8:	d153      	bne.n	8005c62 <HAL_UART_MspInit+0xca>
 8005bba:	2300      	movs	r3, #0
 8005bbc:	61bb      	str	r3, [r7, #24]
 8005bbe:	4b48      	ldr	r3, [pc, #288]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bc0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005bc2:	4a47      	ldr	r2, [pc, #284]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bc4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8005bc8:	6413      	str	r3, [r2, #64]	@ 0x40
 8005bca:	4b45      	ldr	r3, [pc, #276]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bcc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005bce:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005bd2:	61bb      	str	r3, [r7, #24]
 8005bd4:	69bb      	ldr	r3, [r7, #24]
 8005bd6:	2300      	movs	r3, #0
 8005bd8:	617b      	str	r3, [r7, #20]
 8005bda:	4b41      	ldr	r3, [pc, #260]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005bde:	4a40      	ldr	r2, [pc, #256]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005be0:	f043 0304 	orr.w	r3, r3, #4
 8005be4:	6313      	str	r3, [r2, #48]	@ 0x30
 8005be6:	4b3e      	ldr	r3, [pc, #248]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005be8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005bea:	f003 0304 	and.w	r3, r3, #4
 8005bee:	617b      	str	r3, [r7, #20]
 8005bf0:	697b      	ldr	r3, [r7, #20]
 8005bf2:	2300      	movs	r3, #0
 8005bf4:	613b      	str	r3, [r7, #16]
 8005bf6:	4b3a      	ldr	r3, [pc, #232]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bf8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005bfa:	4a39      	ldr	r2, [pc, #228]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005bfc:	f043 0308 	orr.w	r3, r3, #8
 8005c00:	6313      	str	r3, [r2, #48]	@ 0x30
 8005c02:	4b37      	ldr	r3, [pc, #220]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c06:	f003 0308 	and.w	r3, r3, #8
 8005c0a:	613b      	str	r3, [r7, #16]
 8005c0c:	693b      	ldr	r3, [r7, #16]
 8005c0e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8005c12:	61fb      	str	r3, [r7, #28]
 8005c14:	2302      	movs	r3, #2
 8005c16:	623b      	str	r3, [r7, #32]
 8005c18:	2300      	movs	r3, #0
 8005c1a:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c1c:	2303      	movs	r3, #3
 8005c1e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005c20:	2308      	movs	r3, #8
 8005c22:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005c24:	f107 031c 	add.w	r3, r7, #28
 8005c28:	4619      	mov	r1, r3
 8005c2a:	482e      	ldr	r0, [pc, #184]	@ (8005ce4 <HAL_UART_MspInit+0x14c>)
 8005c2c:	f000 fb78 	bl	8006320 <HAL_GPIO_Init>
 8005c30:	2304      	movs	r3, #4
 8005c32:	61fb      	str	r3, [r7, #28]
 8005c34:	2302      	movs	r3, #2
 8005c36:	623b      	str	r3, [r7, #32]
 8005c38:	2300      	movs	r3, #0
 8005c3a:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c3c:	2303      	movs	r3, #3
 8005c3e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005c40:	2308      	movs	r3, #8
 8005c42:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005c44:	f107 031c 	add.w	r3, r7, #28
 8005c48:	4619      	mov	r1, r3
 8005c4a:	4827      	ldr	r0, [pc, #156]	@ (8005ce8 <HAL_UART_MspInit+0x150>)
 8005c4c:	f000 fb68 	bl	8006320 <HAL_GPIO_Init>
 8005c50:	2200      	movs	r2, #0
 8005c52:	2100      	movs	r1, #0
 8005c54:	2035      	movs	r0, #53	@ 0x35
 8005c56:	f000 fa8e 	bl	8006176 <HAL_NVIC_SetPriority>
 8005c5a:	2035      	movs	r0, #53	@ 0x35
 8005c5c:	f000 faa7 	bl	80061ae <HAL_NVIC_EnableIRQ>
 8005c60:	e038      	b.n	8005cd4 <HAL_UART_MspInit+0x13c>
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	4a21      	ldr	r2, [pc, #132]	@ (8005cec <HAL_UART_MspInit+0x154>)
 8005c68:	4293      	cmp	r3, r2
 8005c6a:	d133      	bne.n	8005cd4 <HAL_UART_MspInit+0x13c>
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	60fb      	str	r3, [r7, #12]
 8005c70:	4b1b      	ldr	r3, [pc, #108]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c74:	4a1a      	ldr	r2, [pc, #104]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c76:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005c7a:	6413      	str	r3, [r2, #64]	@ 0x40
 8005c7c:	4b18      	ldr	r3, [pc, #96]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c80:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005c84:	60fb      	str	r3, [r7, #12]
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	2300      	movs	r3, #0
 8005c8a:	60bb      	str	r3, [r7, #8]
 8005c8c:	4b14      	ldr	r3, [pc, #80]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c90:	4a13      	ldr	r2, [pc, #76]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c92:	f043 0301 	orr.w	r3, r3, #1
 8005c96:	6313      	str	r3, [r2, #48]	@ 0x30
 8005c98:	4b11      	ldr	r3, [pc, #68]	@ (8005ce0 <HAL_UART_MspInit+0x148>)
 8005c9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c9c:	f003 0301 	and.w	r3, r3, #1
 8005ca0:	60bb      	str	r3, [r7, #8]
 8005ca2:	68bb      	ldr	r3, [r7, #8]
 8005ca4:	230c      	movs	r3, #12
 8005ca6:	61fb      	str	r3, [r7, #28]
 8005ca8:	2302      	movs	r3, #2
 8005caa:	623b      	str	r3, [r7, #32]
 8005cac:	2300      	movs	r3, #0
 8005cae:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cb0:	2303      	movs	r3, #3
 8005cb2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cb4:	2307      	movs	r3, #7
 8005cb6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005cb8:	f107 031c 	add.w	r3, r7, #28
 8005cbc:	4619      	mov	r1, r3
 8005cbe:	480c      	ldr	r0, [pc, #48]	@ (8005cf0 <HAL_UART_MspInit+0x158>)
 8005cc0:	f000 fb2e 	bl	8006320 <HAL_GPIO_Init>
 8005cc4:	2200      	movs	r2, #0
 8005cc6:	2100      	movs	r1, #0
 8005cc8:	2026      	movs	r0, #38	@ 0x26
 8005cca:	f000 fa54 	bl	8006176 <HAL_NVIC_SetPriority>
 8005cce:	2026      	movs	r0, #38	@ 0x26
 8005cd0:	f000 fa6d 	bl	80061ae <HAL_NVIC_EnableIRQ>
 8005cd4:	bf00      	nop
 8005cd6:	3730      	adds	r7, #48	@ 0x30
 8005cd8:	46bd      	mov	sp, r7
 8005cda:	bd80      	pop	{r7, pc}
 8005cdc:	40005000 	.word	0x40005000
 8005ce0:	40023800 	.word	0x40023800
 8005ce4:	40020800 	.word	0x40020800
 8005ce8:	40020c00 	.word	0x40020c00
 8005cec:	40004400 	.word	0x40004400
 8005cf0:	40020000 	.word	0x40020000

08005cf4 <NMI_Handler>:
 8005cf4:	b480      	push	{r7}
 8005cf6:	af00      	add	r7, sp, #0
 8005cf8:	bf00      	nop
 8005cfa:	e7fd      	b.n	8005cf8 <NMI_Handler+0x4>

08005cfc <HardFault_Handler>:
 8005cfc:	b480      	push	{r7}
 8005cfe:	af00      	add	r7, sp, #0
 8005d00:	bf00      	nop
 8005d02:	e7fd      	b.n	8005d00 <HardFault_Handler+0x4>

08005d04 <MemManage_Handler>:
 8005d04:	b480      	push	{r7}
 8005d06:	af00      	add	r7, sp, #0
 8005d08:	bf00      	nop
 8005d0a:	e7fd      	b.n	8005d08 <MemManage_Handler+0x4>

08005d0c <BusFault_Handler>:
 8005d0c:	b480      	push	{r7}
 8005d0e:	af00      	add	r7, sp, #0
 8005d10:	bf00      	nop
 8005d12:	e7fd      	b.n	8005d10 <BusFault_Handler+0x4>

08005d14 <UsageFault_Handler>:
 8005d14:	b480      	push	{r7}
 8005d16:	af00      	add	r7, sp, #0
 8005d18:	bf00      	nop
 8005d1a:	e7fd      	b.n	8005d18 <UsageFault_Handler+0x4>

08005d1c <SVC_Handler>:
 8005d1c:	b480      	push	{r7}
 8005d1e:	af00      	add	r7, sp, #0
 8005d20:	bf00      	nop
 8005d22:	46bd      	mov	sp, r7
 8005d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d28:	4770      	bx	lr

08005d2a <DebugMon_Handler>:
 8005d2a:	b480      	push	{r7}
 8005d2c:	af00      	add	r7, sp, #0
 8005d2e:	bf00      	nop
 8005d30:	46bd      	mov	sp, r7
 8005d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d36:	4770      	bx	lr

08005d38 <PendSV_Handler>:
 8005d38:	b480      	push	{r7}
 8005d3a:	af00      	add	r7, sp, #0
 8005d3c:	bf00      	nop
 8005d3e:	46bd      	mov	sp, r7
 8005d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d44:	4770      	bx	lr
	...

08005d48 <SysTick_Handler>:
 8005d48:	b580      	push	{r7, lr}
 8005d4a:	af00      	add	r7, sp, #0
 8005d4c:	4b0c      	ldr	r3, [pc, #48]	@ (8005d80 <SysTick_Handler+0x38>)
 8005d4e:	881b      	ldrh	r3, [r3, #0]
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	d005      	beq.n	8005d60 <SysTick_Handler+0x18>
 8005d54:	4b0a      	ldr	r3, [pc, #40]	@ (8005d80 <SysTick_Handler+0x38>)
 8005d56:	881b      	ldrh	r3, [r3, #0]
 8005d58:	3b01      	subs	r3, #1
 8005d5a:	b29a      	uxth	r2, r3
 8005d5c:	4b08      	ldr	r3, [pc, #32]	@ (8005d80 <SysTick_Handler+0x38>)
 8005d5e:	801a      	strh	r2, [r3, #0]
 8005d60:	4b08      	ldr	r3, [pc, #32]	@ (8005d84 <SysTick_Handler+0x3c>)
 8005d62:	881b      	ldrh	r3, [r3, #0]
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d005      	beq.n	8005d74 <SysTick_Handler+0x2c>
 8005d68:	4b06      	ldr	r3, [pc, #24]	@ (8005d84 <SysTick_Handler+0x3c>)
 8005d6a:	881b      	ldrh	r3, [r3, #0]
 8005d6c:	3b01      	subs	r3, #1
 8005d6e:	b29a      	uxth	r2, r3
 8005d70:	4b04      	ldr	r3, [pc, #16]	@ (8005d84 <SysTick_Handler+0x3c>)
 8005d72:	801a      	strh	r2, [r3, #0]
 8005d74:	f000 f8e0 	bl	8005f38 <HAL_IncTick>
 8005d78:	f000 fa33 	bl	80061e2 <HAL_SYSTICK_IRQHandler>
 8005d7c:	bf00      	nop
 8005d7e:	bd80      	pop	{r7, pc}
 8005d80:	20016b08 	.word	0x20016b08
 8005d84:	20016b0a 	.word	0x20016b0a

08005d88 <USART2_IRQHandler>:
 8005d88:	b580      	push	{r7, lr}
 8005d8a:	af00      	add	r7, sp, #0
 8005d8c:	4802      	ldr	r0, [pc, #8]	@ (8005d98 <USART2_IRQHandler+0x10>)
 8005d8e:	f002 fc07 	bl	80085a0 <HAL_UART_IRQHandler>
 8005d92:	bf00      	nop
 8005d94:	bd80      	pop	{r7, pc}
 8005d96:	bf00      	nop
 8005d98:	20017c30 	.word	0x20017c30

08005d9c <UART5_IRQHandler>:
 8005d9c:	b580      	push	{r7, lr}
 8005d9e:	af00      	add	r7, sp, #0
 8005da0:	4802      	ldr	r0, [pc, #8]	@ (8005dac <UART5_IRQHandler+0x10>)
 8005da2:	f002 fbfd 	bl	80085a0 <HAL_UART_IRQHandler>
 8005da6:	bf00      	nop
 8005da8:	bd80      	pop	{r7, pc}
 8005daa:	bf00      	nop
 8005dac:	20017be8 	.word	0x20017be8

08005db0 <_sbrk>:
 8005db0:	b580      	push	{r7, lr}
 8005db2:	b086      	sub	sp, #24
 8005db4:	af00      	add	r7, sp, #0
 8005db6:	6078      	str	r0, [r7, #4]
 8005db8:	4a14      	ldr	r2, [pc, #80]	@ (8005e0c <_sbrk+0x5c>)
 8005dba:	4b15      	ldr	r3, [pc, #84]	@ (8005e10 <_sbrk+0x60>)
 8005dbc:	1ad3      	subs	r3, r2, r3
 8005dbe:	617b      	str	r3, [r7, #20]
 8005dc0:	697b      	ldr	r3, [r7, #20]
 8005dc2:	613b      	str	r3, [r7, #16]
 8005dc4:	4b13      	ldr	r3, [pc, #76]	@ (8005e14 <_sbrk+0x64>)
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d102      	bne.n	8005dd2 <_sbrk+0x22>
 8005dcc:	4b11      	ldr	r3, [pc, #68]	@ (8005e14 <_sbrk+0x64>)
 8005dce:	4a12      	ldr	r2, [pc, #72]	@ (8005e18 <_sbrk+0x68>)
 8005dd0:	601a      	str	r2, [r3, #0]
 8005dd2:	4b10      	ldr	r3, [pc, #64]	@ (8005e14 <_sbrk+0x64>)
 8005dd4:	681a      	ldr	r2, [r3, #0]
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	4413      	add	r3, r2
 8005dda:	693a      	ldr	r2, [r7, #16]
 8005ddc:	429a      	cmp	r2, r3
 8005dde:	d207      	bcs.n	8005df0 <_sbrk+0x40>
 8005de0:	f006 fadc 	bl	800c39c <__errno>
 8005de4:	4603      	mov	r3, r0
 8005de6:	220c      	movs	r2, #12
 8005de8:	601a      	str	r2, [r3, #0]
 8005dea:	f04f 33ff 	mov.w	r3, #4294967295
 8005dee:	e009      	b.n	8005e04 <_sbrk+0x54>
 8005df0:	4b08      	ldr	r3, [pc, #32]	@ (8005e14 <_sbrk+0x64>)
 8005df2:	681b      	ldr	r3, [r3, #0]
 8005df4:	60fb      	str	r3, [r7, #12]
 8005df6:	4b07      	ldr	r3, [pc, #28]	@ (8005e14 <_sbrk+0x64>)
 8005df8:	681a      	ldr	r2, [r3, #0]
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	4413      	add	r3, r2
 8005dfe:	4a05      	ldr	r2, [pc, #20]	@ (8005e14 <_sbrk+0x64>)
 8005e00:	6013      	str	r3, [r2, #0]
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	4618      	mov	r0, r3
 8005e06:	3718      	adds	r7, #24
 8005e08:	46bd      	mov	sp, r7
 8005e0a:	bd80      	pop	{r7, pc}
 8005e0c:	20020000 	.word	0x20020000
 8005e10:	00000400 	.word	0x00000400
 8005e14:	2001caf0 	.word	0x2001caf0
 8005e18:	2001ce80 	.word	0x2001ce80

08005e1c <SystemInit>:
 8005e1c:	b480      	push	{r7}
 8005e1e:	af00      	add	r7, sp, #0
 8005e20:	4b06      	ldr	r3, [pc, #24]	@ (8005e3c <SystemInit+0x20>)
 8005e22:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005e26:	4a05      	ldr	r2, [pc, #20]	@ (8005e3c <SystemInit+0x20>)
 8005e28:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8005e2c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8005e30:	bf00      	nop
 8005e32:	46bd      	mov	sp, r7
 8005e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e38:	4770      	bx	lr
 8005e3a:	bf00      	nop
 8005e3c:	e000ed00 	.word	0xe000ed00

08005e40 <Reset_Handler>:
 8005e40:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8005e78 <LoopFillZerobss+0xe>
 8005e44:	f7ff ffea 	bl	8005e1c <SystemInit>
 8005e48:	480c      	ldr	r0, [pc, #48]	@ (8005e7c <LoopFillZerobss+0x12>)
 8005e4a:	490d      	ldr	r1, [pc, #52]	@ (8005e80 <LoopFillZerobss+0x16>)
 8005e4c:	4a0d      	ldr	r2, [pc, #52]	@ (8005e84 <LoopFillZerobss+0x1a>)
 8005e4e:	2300      	movs	r3, #0
 8005e50:	e002      	b.n	8005e58 <LoopCopyDataInit>

08005e52 <CopyDataInit>:
 8005e52:	58d4      	ldr	r4, [r2, r3]
 8005e54:	50c4      	str	r4, [r0, r3]
 8005e56:	3304      	adds	r3, #4

08005e58 <LoopCopyDataInit>:
 8005e58:	18c4      	adds	r4, r0, r3
 8005e5a:	428c      	cmp	r4, r1
 8005e5c:	d3f9      	bcc.n	8005e52 <CopyDataInit>
 8005e5e:	4a0a      	ldr	r2, [pc, #40]	@ (8005e88 <LoopFillZerobss+0x1e>)
 8005e60:	4c0a      	ldr	r4, [pc, #40]	@ (8005e8c <LoopFillZerobss+0x22>)
 8005e62:	2300      	movs	r3, #0
 8005e64:	e001      	b.n	8005e6a <LoopFillZerobss>

08005e66 <FillZerobss>:
 8005e66:	6013      	str	r3, [r2, #0]
 8005e68:	3204      	adds	r2, #4

08005e6a <LoopFillZerobss>:
 8005e6a:	42a2      	cmp	r2, r4
 8005e6c:	d3fb      	bcc.n	8005e66 <FillZerobss>
 8005e6e:	f006 fa9b 	bl	800c3a8 <__libc_init_array>
 8005e72:	f7fe fb4b 	bl	800450c <main>
 8005e76:	4770      	bx	lr
 8005e78:	20020000 	.word	0x20020000
 8005e7c:	20000000 	.word	0x20000000
 8005e80:	20016aec 	.word	0x20016aec
 8005e84:	0800d23c 	.word	0x0800d23c
 8005e88:	20016aec 	.word	0x20016aec
 8005e8c:	2001ce7c 	.word	0x2001ce7c

08005e90 <ADC_IRQHandler>:
 8005e90:	e7fe      	b.n	8005e90 <ADC_IRQHandler>
	...

08005e94 <HAL_Init>:
 8005e94:	b580      	push	{r7, lr}
 8005e96:	af00      	add	r7, sp, #0
 8005e98:	4b0e      	ldr	r3, [pc, #56]	@ (8005ed4 <HAL_Init+0x40>)
 8005e9a:	681b      	ldr	r3, [r3, #0]
 8005e9c:	4a0d      	ldr	r2, [pc, #52]	@ (8005ed4 <HAL_Init+0x40>)
 8005e9e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005ea2:	6013      	str	r3, [r2, #0]
 8005ea4:	4b0b      	ldr	r3, [pc, #44]	@ (8005ed4 <HAL_Init+0x40>)
 8005ea6:	681b      	ldr	r3, [r3, #0]
 8005ea8:	4a0a      	ldr	r2, [pc, #40]	@ (8005ed4 <HAL_Init+0x40>)
 8005eaa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8005eae:	6013      	str	r3, [r2, #0]
 8005eb0:	4b08      	ldr	r3, [pc, #32]	@ (8005ed4 <HAL_Init+0x40>)
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	4a07      	ldr	r2, [pc, #28]	@ (8005ed4 <HAL_Init+0x40>)
 8005eb6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005eba:	6013      	str	r3, [r2, #0]
 8005ebc:	2003      	movs	r0, #3
 8005ebe:	f000 f94f 	bl	8006160 <HAL_NVIC_SetPriorityGrouping>
 8005ec2:	200f      	movs	r0, #15
 8005ec4:	f000 f808 	bl	8005ed8 <HAL_InitTick>
 8005ec8:	f7ff fd9e 	bl	8005a08 <HAL_MspInit>
 8005ecc:	2300      	movs	r3, #0
 8005ece:	4618      	mov	r0, r3
 8005ed0:	bd80      	pop	{r7, pc}
 8005ed2:	bf00      	nop
 8005ed4:	40023c00 	.word	0x40023c00

08005ed8 <HAL_InitTick>:
 8005ed8:	b580      	push	{r7, lr}
 8005eda:	b082      	sub	sp, #8
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	6078      	str	r0, [r7, #4]
 8005ee0:	4b12      	ldr	r3, [pc, #72]	@ (8005f2c <HAL_InitTick+0x54>)
 8005ee2:	681a      	ldr	r2, [r3, #0]
 8005ee4:	4b12      	ldr	r3, [pc, #72]	@ (8005f30 <HAL_InitTick+0x58>)
 8005ee6:	781b      	ldrb	r3, [r3, #0]
 8005ee8:	4619      	mov	r1, r3
 8005eea:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005eee:	fbb3 f3f1 	udiv	r3, r3, r1
 8005ef2:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	f000 f967 	bl	80061ca <HAL_SYSTICK_Config>
 8005efc:	4603      	mov	r3, r0
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d001      	beq.n	8005f06 <HAL_InitTick+0x2e>
 8005f02:	2301      	movs	r3, #1
 8005f04:	e00e      	b.n	8005f24 <HAL_InitTick+0x4c>
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	2b0f      	cmp	r3, #15
 8005f0a:	d80a      	bhi.n	8005f22 <HAL_InitTick+0x4a>
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	6879      	ldr	r1, [r7, #4]
 8005f10:	f04f 30ff 	mov.w	r0, #4294967295
 8005f14:	f000 f92f 	bl	8006176 <HAL_NVIC_SetPriority>
 8005f18:	4a06      	ldr	r2, [pc, #24]	@ (8005f34 <HAL_InitTick+0x5c>)
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	6013      	str	r3, [r2, #0]
 8005f1e:	2300      	movs	r3, #0
 8005f20:	e000      	b.n	8005f24 <HAL_InitTick+0x4c>
 8005f22:	2301      	movs	r3, #1
 8005f24:	4618      	mov	r0, r3
 8005f26:	3708      	adds	r7, #8
 8005f28:	46bd      	mov	sp, r7
 8005f2a:	bd80      	pop	{r7, pc}
 8005f2c:	20016a7c 	.word	0x20016a7c
 8005f30:	20016a84 	.word	0x20016a84
 8005f34:	20016a80 	.word	0x20016a80

08005f38 <HAL_IncTick>:
 8005f38:	b480      	push	{r7}
 8005f3a:	af00      	add	r7, sp, #0
 8005f3c:	4b06      	ldr	r3, [pc, #24]	@ (8005f58 <HAL_IncTick+0x20>)
 8005f3e:	781b      	ldrb	r3, [r3, #0]
 8005f40:	461a      	mov	r2, r3
 8005f42:	4b06      	ldr	r3, [pc, #24]	@ (8005f5c <HAL_IncTick+0x24>)
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	4413      	add	r3, r2
 8005f48:	4a04      	ldr	r2, [pc, #16]	@ (8005f5c <HAL_IncTick+0x24>)
 8005f4a:	6013      	str	r3, [r2, #0]
 8005f4c:	bf00      	nop
 8005f4e:	46bd      	mov	sp, r7
 8005f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f54:	4770      	bx	lr
 8005f56:	bf00      	nop
 8005f58:	20016a84 	.word	0x20016a84
 8005f5c:	2001caf4 	.word	0x2001caf4

08005f60 <HAL_GetTick>:
 8005f60:	b480      	push	{r7}
 8005f62:	af00      	add	r7, sp, #0
 8005f64:	4b03      	ldr	r3, [pc, #12]	@ (8005f74 <HAL_GetTick+0x14>)
 8005f66:	681b      	ldr	r3, [r3, #0]
 8005f68:	4618      	mov	r0, r3
 8005f6a:	46bd      	mov	sp, r7
 8005f6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f70:	4770      	bx	lr
 8005f72:	bf00      	nop
 8005f74:	2001caf4 	.word	0x2001caf4

08005f78 <HAL_Delay>:
 8005f78:	b580      	push	{r7, lr}
 8005f7a:	b084      	sub	sp, #16
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	6078      	str	r0, [r7, #4]
 8005f80:	f7ff ffee 	bl	8005f60 <HAL_GetTick>
 8005f84:	60b8      	str	r0, [r7, #8]
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	60fb      	str	r3, [r7, #12]
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f90:	d005      	beq.n	8005f9e <HAL_Delay+0x26>
 8005f92:	4b0a      	ldr	r3, [pc, #40]	@ (8005fbc <HAL_Delay+0x44>)
 8005f94:	781b      	ldrb	r3, [r3, #0]
 8005f96:	461a      	mov	r2, r3
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	4413      	add	r3, r2
 8005f9c:	60fb      	str	r3, [r7, #12]
 8005f9e:	bf00      	nop
 8005fa0:	f7ff ffde 	bl	8005f60 <HAL_GetTick>
 8005fa4:	4602      	mov	r2, r0
 8005fa6:	68bb      	ldr	r3, [r7, #8]
 8005fa8:	1ad3      	subs	r3, r2, r3
 8005faa:	68fa      	ldr	r2, [r7, #12]
 8005fac:	429a      	cmp	r2, r3
 8005fae:	d8f7      	bhi.n	8005fa0 <HAL_Delay+0x28>
 8005fb0:	bf00      	nop
 8005fb2:	bf00      	nop
 8005fb4:	3710      	adds	r7, #16
 8005fb6:	46bd      	mov	sp, r7
 8005fb8:	bd80      	pop	{r7, pc}
 8005fba:	bf00      	nop
 8005fbc:	20016a84 	.word	0x20016a84

08005fc0 <__NVIC_SetPriorityGrouping>:
 8005fc0:	b480      	push	{r7}
 8005fc2:	b085      	sub	sp, #20
 8005fc4:	af00      	add	r7, sp, #0
 8005fc6:	6078      	str	r0, [r7, #4]
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	f003 0307 	and.w	r3, r3, #7
 8005fce:	60fb      	str	r3, [r7, #12]
 8005fd0:	4b0c      	ldr	r3, [pc, #48]	@ (8006004 <__NVIC_SetPriorityGrouping+0x44>)
 8005fd2:	68db      	ldr	r3, [r3, #12]
 8005fd4:	60bb      	str	r3, [r7, #8]
 8005fd6:	68ba      	ldr	r2, [r7, #8]
 8005fd8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8005fdc:	4013      	ands	r3, r2
 8005fde:	60bb      	str	r3, [r7, #8]
 8005fe0:	68fb      	ldr	r3, [r7, #12]
 8005fe2:	021a      	lsls	r2, r3, #8
 8005fe4:	68bb      	ldr	r3, [r7, #8]
 8005fe6:	4313      	orrs	r3, r2
 8005fe8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8005fec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005ff0:	60bb      	str	r3, [r7, #8]
 8005ff2:	4a04      	ldr	r2, [pc, #16]	@ (8006004 <__NVIC_SetPriorityGrouping+0x44>)
 8005ff4:	68bb      	ldr	r3, [r7, #8]
 8005ff6:	60d3      	str	r3, [r2, #12]
 8005ff8:	bf00      	nop
 8005ffa:	3714      	adds	r7, #20
 8005ffc:	46bd      	mov	sp, r7
 8005ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006002:	4770      	bx	lr
 8006004:	e000ed00 	.word	0xe000ed00

08006008 <__NVIC_GetPriorityGrouping>:
 8006008:	b480      	push	{r7}
 800600a:	af00      	add	r7, sp, #0
 800600c:	4b04      	ldr	r3, [pc, #16]	@ (8006020 <__NVIC_GetPriorityGrouping+0x18>)
 800600e:	68db      	ldr	r3, [r3, #12]
 8006010:	0a1b      	lsrs	r3, r3, #8
 8006012:	f003 0307 	and.w	r3, r3, #7
 8006016:	4618      	mov	r0, r3
 8006018:	46bd      	mov	sp, r7
 800601a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601e:	4770      	bx	lr
 8006020:	e000ed00 	.word	0xe000ed00

08006024 <__NVIC_EnableIRQ>:
 8006024:	b480      	push	{r7}
 8006026:	b083      	sub	sp, #12
 8006028:	af00      	add	r7, sp, #0
 800602a:	4603      	mov	r3, r0
 800602c:	71fb      	strb	r3, [r7, #7]
 800602e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006032:	2b00      	cmp	r3, #0
 8006034:	db0b      	blt.n	800604e <__NVIC_EnableIRQ+0x2a>
 8006036:	79fb      	ldrb	r3, [r7, #7]
 8006038:	f003 021f 	and.w	r2, r3, #31
 800603c:	4907      	ldr	r1, [pc, #28]	@ (800605c <__NVIC_EnableIRQ+0x38>)
 800603e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006042:	095b      	lsrs	r3, r3, #5
 8006044:	2001      	movs	r0, #1
 8006046:	fa00 f202 	lsl.w	r2, r0, r2
 800604a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800604e:	bf00      	nop
 8006050:	370c      	adds	r7, #12
 8006052:	46bd      	mov	sp, r7
 8006054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006058:	4770      	bx	lr
 800605a:	bf00      	nop
 800605c:	e000e100 	.word	0xe000e100

08006060 <__NVIC_SetPriority>:
 8006060:	b480      	push	{r7}
 8006062:	b083      	sub	sp, #12
 8006064:	af00      	add	r7, sp, #0
 8006066:	4603      	mov	r3, r0
 8006068:	6039      	str	r1, [r7, #0]
 800606a:	71fb      	strb	r3, [r7, #7]
 800606c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006070:	2b00      	cmp	r3, #0
 8006072:	db0a      	blt.n	800608a <__NVIC_SetPriority+0x2a>
 8006074:	683b      	ldr	r3, [r7, #0]
 8006076:	b2da      	uxtb	r2, r3
 8006078:	490c      	ldr	r1, [pc, #48]	@ (80060ac <__NVIC_SetPriority+0x4c>)
 800607a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800607e:	0112      	lsls	r2, r2, #4
 8006080:	b2d2      	uxtb	r2, r2
 8006082:	440b      	add	r3, r1
 8006084:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8006088:	e00a      	b.n	80060a0 <__NVIC_SetPriority+0x40>
 800608a:	683b      	ldr	r3, [r7, #0]
 800608c:	b2da      	uxtb	r2, r3
 800608e:	4908      	ldr	r1, [pc, #32]	@ (80060b0 <__NVIC_SetPriority+0x50>)
 8006090:	79fb      	ldrb	r3, [r7, #7]
 8006092:	f003 030f 	and.w	r3, r3, #15
 8006096:	3b04      	subs	r3, #4
 8006098:	0112      	lsls	r2, r2, #4
 800609a:	b2d2      	uxtb	r2, r2
 800609c:	440b      	add	r3, r1
 800609e:	761a      	strb	r2, [r3, #24]
 80060a0:	bf00      	nop
 80060a2:	370c      	adds	r7, #12
 80060a4:	46bd      	mov	sp, r7
 80060a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060aa:	4770      	bx	lr
 80060ac:	e000e100 	.word	0xe000e100
 80060b0:	e000ed00 	.word	0xe000ed00

080060b4 <NVIC_EncodePriority>:
 80060b4:	b480      	push	{r7}
 80060b6:	b089      	sub	sp, #36	@ 0x24
 80060b8:	af00      	add	r7, sp, #0
 80060ba:	60f8      	str	r0, [r7, #12]
 80060bc:	60b9      	str	r1, [r7, #8]
 80060be:	607a      	str	r2, [r7, #4]
 80060c0:	68fb      	ldr	r3, [r7, #12]
 80060c2:	f003 0307 	and.w	r3, r3, #7
 80060c6:	61fb      	str	r3, [r7, #28]
 80060c8:	69fb      	ldr	r3, [r7, #28]
 80060ca:	f1c3 0307 	rsb	r3, r3, #7
 80060ce:	2b04      	cmp	r3, #4
 80060d0:	bf28      	it	cs
 80060d2:	2304      	movcs	r3, #4
 80060d4:	61bb      	str	r3, [r7, #24]
 80060d6:	69fb      	ldr	r3, [r7, #28]
 80060d8:	3304      	adds	r3, #4
 80060da:	2b06      	cmp	r3, #6
 80060dc:	d902      	bls.n	80060e4 <NVIC_EncodePriority+0x30>
 80060de:	69fb      	ldr	r3, [r7, #28]
 80060e0:	3b03      	subs	r3, #3
 80060e2:	e000      	b.n	80060e6 <NVIC_EncodePriority+0x32>
 80060e4:	2300      	movs	r3, #0
 80060e6:	617b      	str	r3, [r7, #20]
 80060e8:	f04f 32ff 	mov.w	r2, #4294967295
 80060ec:	69bb      	ldr	r3, [r7, #24]
 80060ee:	fa02 f303 	lsl.w	r3, r2, r3
 80060f2:	43da      	mvns	r2, r3
 80060f4:	68bb      	ldr	r3, [r7, #8]
 80060f6:	401a      	ands	r2, r3
 80060f8:	697b      	ldr	r3, [r7, #20]
 80060fa:	409a      	lsls	r2, r3
 80060fc:	f04f 31ff 	mov.w	r1, #4294967295
 8006100:	697b      	ldr	r3, [r7, #20]
 8006102:	fa01 f303 	lsl.w	r3, r1, r3
 8006106:	43d9      	mvns	r1, r3
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	400b      	ands	r3, r1
 800610c:	4313      	orrs	r3, r2
 800610e:	4618      	mov	r0, r3
 8006110:	3724      	adds	r7, #36	@ 0x24
 8006112:	46bd      	mov	sp, r7
 8006114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006118:	4770      	bx	lr
	...

0800611c <SysTick_Config>:
 800611c:	b580      	push	{r7, lr}
 800611e:	b082      	sub	sp, #8
 8006120:	af00      	add	r7, sp, #0
 8006122:	6078      	str	r0, [r7, #4]
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	3b01      	subs	r3, #1
 8006128:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800612c:	d301      	bcc.n	8006132 <SysTick_Config+0x16>
 800612e:	2301      	movs	r3, #1
 8006130:	e00f      	b.n	8006152 <SysTick_Config+0x36>
 8006132:	4a0a      	ldr	r2, [pc, #40]	@ (800615c <SysTick_Config+0x40>)
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	3b01      	subs	r3, #1
 8006138:	6053      	str	r3, [r2, #4]
 800613a:	210f      	movs	r1, #15
 800613c:	f04f 30ff 	mov.w	r0, #4294967295
 8006140:	f7ff ff8e 	bl	8006060 <__NVIC_SetPriority>
 8006144:	4b05      	ldr	r3, [pc, #20]	@ (800615c <SysTick_Config+0x40>)
 8006146:	2200      	movs	r2, #0
 8006148:	609a      	str	r2, [r3, #8]
 800614a:	4b04      	ldr	r3, [pc, #16]	@ (800615c <SysTick_Config+0x40>)
 800614c:	2207      	movs	r2, #7
 800614e:	601a      	str	r2, [r3, #0]
 8006150:	2300      	movs	r3, #0
 8006152:	4618      	mov	r0, r3
 8006154:	3708      	adds	r7, #8
 8006156:	46bd      	mov	sp, r7
 8006158:	bd80      	pop	{r7, pc}
 800615a:	bf00      	nop
 800615c:	e000e010 	.word	0xe000e010

08006160 <HAL_NVIC_SetPriorityGrouping>:
 8006160:	b580      	push	{r7, lr}
 8006162:	b082      	sub	sp, #8
 8006164:	af00      	add	r7, sp, #0
 8006166:	6078      	str	r0, [r7, #4]
 8006168:	6878      	ldr	r0, [r7, #4]
 800616a:	f7ff ff29 	bl	8005fc0 <__NVIC_SetPriorityGrouping>
 800616e:	bf00      	nop
 8006170:	3708      	adds	r7, #8
 8006172:	46bd      	mov	sp, r7
 8006174:	bd80      	pop	{r7, pc}

08006176 <HAL_NVIC_SetPriority>:
 8006176:	b580      	push	{r7, lr}
 8006178:	b086      	sub	sp, #24
 800617a:	af00      	add	r7, sp, #0
 800617c:	4603      	mov	r3, r0
 800617e:	60b9      	str	r1, [r7, #8]
 8006180:	607a      	str	r2, [r7, #4]
 8006182:	73fb      	strb	r3, [r7, #15]
 8006184:	2300      	movs	r3, #0
 8006186:	617b      	str	r3, [r7, #20]
 8006188:	f7ff ff3e 	bl	8006008 <__NVIC_GetPriorityGrouping>
 800618c:	6178      	str	r0, [r7, #20]
 800618e:	687a      	ldr	r2, [r7, #4]
 8006190:	68b9      	ldr	r1, [r7, #8]
 8006192:	6978      	ldr	r0, [r7, #20]
 8006194:	f7ff ff8e 	bl	80060b4 <NVIC_EncodePriority>
 8006198:	4602      	mov	r2, r0
 800619a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800619e:	4611      	mov	r1, r2
 80061a0:	4618      	mov	r0, r3
 80061a2:	f7ff ff5d 	bl	8006060 <__NVIC_SetPriority>
 80061a6:	bf00      	nop
 80061a8:	3718      	adds	r7, #24
 80061aa:	46bd      	mov	sp, r7
 80061ac:	bd80      	pop	{r7, pc}

080061ae <HAL_NVIC_EnableIRQ>:
 80061ae:	b580      	push	{r7, lr}
 80061b0:	b082      	sub	sp, #8
 80061b2:	af00      	add	r7, sp, #0
 80061b4:	4603      	mov	r3, r0
 80061b6:	71fb      	strb	r3, [r7, #7]
 80061b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80061bc:	4618      	mov	r0, r3
 80061be:	f7ff ff31 	bl	8006024 <__NVIC_EnableIRQ>
 80061c2:	bf00      	nop
 80061c4:	3708      	adds	r7, #8
 80061c6:	46bd      	mov	sp, r7
 80061c8:	bd80      	pop	{r7, pc}

080061ca <HAL_SYSTICK_Config>:
 80061ca:	b580      	push	{r7, lr}
 80061cc:	b082      	sub	sp, #8
 80061ce:	af00      	add	r7, sp, #0
 80061d0:	6078      	str	r0, [r7, #4]
 80061d2:	6878      	ldr	r0, [r7, #4]
 80061d4:	f7ff ffa2 	bl	800611c <SysTick_Config>
 80061d8:	4603      	mov	r3, r0
 80061da:	4618      	mov	r0, r3
 80061dc:	3708      	adds	r7, #8
 80061de:	46bd      	mov	sp, r7
 80061e0:	bd80      	pop	{r7, pc}

080061e2 <HAL_SYSTICK_IRQHandler>:
 80061e2:	b580      	push	{r7, lr}
 80061e4:	af00      	add	r7, sp, #0
 80061e6:	f000 f802 	bl	80061ee <HAL_SYSTICK_Callback>
 80061ea:	bf00      	nop
 80061ec:	bd80      	pop	{r7, pc}

080061ee <HAL_SYSTICK_Callback>:
 80061ee:	b480      	push	{r7}
 80061f0:	af00      	add	r7, sp, #0
 80061f2:	bf00      	nop
 80061f4:	46bd      	mov	sp, r7
 80061f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061fa:	4770      	bx	lr

080061fc <HAL_DMA_Abort>:
 80061fc:	b580      	push	{r7, lr}
 80061fe:	b084      	sub	sp, #16
 8006200:	af00      	add	r7, sp, #0
 8006202:	6078      	str	r0, [r7, #4]
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006208:	60fb      	str	r3, [r7, #12]
 800620a:	f7ff fea9 	bl	8005f60 <HAL_GetTick>
 800620e:	60b8      	str	r0, [r7, #8]
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8006216:	b2db      	uxtb	r3, r3
 8006218:	2b02      	cmp	r3, #2
 800621a:	d008      	beq.n	800622e <HAL_DMA_Abort+0x32>
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	2280      	movs	r2, #128	@ 0x80
 8006220:	655a      	str	r2, [r3, #84]	@ 0x54
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	2200      	movs	r2, #0
 8006226:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800622a:	2301      	movs	r3, #1
 800622c:	e052      	b.n	80062d4 <HAL_DMA_Abort+0xd8>
 800622e:	687b      	ldr	r3, [r7, #4]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	681a      	ldr	r2, [r3, #0]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f022 0216 	bic.w	r2, r2, #22
 800623c:	601a      	str	r2, [r3, #0]
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	681b      	ldr	r3, [r3, #0]
 8006242:	695a      	ldr	r2, [r3, #20]
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	681b      	ldr	r3, [r3, #0]
 8006248:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800624c:	615a      	str	r2, [r3, #20]
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006252:	2b00      	cmp	r3, #0
 8006254:	d103      	bne.n	800625e <HAL_DMA_Abort+0x62>
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800625a:	2b00      	cmp	r3, #0
 800625c:	d007      	beq.n	800626e <HAL_DMA_Abort+0x72>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	681a      	ldr	r2, [r3, #0]
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	f022 0208 	bic.w	r2, r2, #8
 800626c:	601a      	str	r2, [r3, #0]
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	681a      	ldr	r2, [r3, #0]
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	f022 0201 	bic.w	r2, r2, #1
 800627c:	601a      	str	r2, [r3, #0]
 800627e:	e013      	b.n	80062a8 <HAL_DMA_Abort+0xac>
 8006280:	f7ff fe6e 	bl	8005f60 <HAL_GetTick>
 8006284:	4602      	mov	r2, r0
 8006286:	68bb      	ldr	r3, [r7, #8]
 8006288:	1ad3      	subs	r3, r2, r3
 800628a:	2b05      	cmp	r3, #5
 800628c:	d90c      	bls.n	80062a8 <HAL_DMA_Abort+0xac>
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	2220      	movs	r2, #32
 8006292:	655a      	str	r2, [r3, #84]	@ 0x54
 8006294:	687b      	ldr	r3, [r7, #4]
 8006296:	2203      	movs	r2, #3
 8006298:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	2200      	movs	r2, #0
 80062a0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80062a4:	2303      	movs	r3, #3
 80062a6:	e015      	b.n	80062d4 <HAL_DMA_Abort+0xd8>
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	f003 0301 	and.w	r3, r3, #1
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d1e4      	bne.n	8006280 <HAL_DMA_Abort+0x84>
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80062ba:	223f      	movs	r2, #63	@ 0x3f
 80062bc:	409a      	lsls	r2, r3
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	609a      	str	r2, [r3, #8]
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	2201      	movs	r2, #1
 80062c6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	2200      	movs	r2, #0
 80062ce:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80062d2:	2300      	movs	r3, #0
 80062d4:	4618      	mov	r0, r3
 80062d6:	3710      	adds	r7, #16
 80062d8:	46bd      	mov	sp, r7
 80062da:	bd80      	pop	{r7, pc}

080062dc <HAL_DMA_Abort_IT>:
 80062dc:	b480      	push	{r7}
 80062de:	b083      	sub	sp, #12
 80062e0:	af00      	add	r7, sp, #0
 80062e2:	6078      	str	r0, [r7, #4]
 80062e4:	687b      	ldr	r3, [r7, #4]
 80062e6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80062ea:	b2db      	uxtb	r3, r3
 80062ec:	2b02      	cmp	r3, #2
 80062ee:	d004      	beq.n	80062fa <HAL_DMA_Abort_IT+0x1e>
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	2280      	movs	r2, #128	@ 0x80
 80062f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80062f6:	2301      	movs	r3, #1
 80062f8:	e00c      	b.n	8006314 <HAL_DMA_Abort_IT+0x38>
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	2205      	movs	r2, #5
 80062fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	681a      	ldr	r2, [r3, #0]
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	681b      	ldr	r3, [r3, #0]
 800630c:	f022 0201 	bic.w	r2, r2, #1
 8006310:	601a      	str	r2, [r3, #0]
 8006312:	2300      	movs	r3, #0
 8006314:	4618      	mov	r0, r3
 8006316:	370c      	adds	r7, #12
 8006318:	46bd      	mov	sp, r7
 800631a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800631e:	4770      	bx	lr

08006320 <HAL_GPIO_Init>:
 8006320:	b480      	push	{r7}
 8006322:	b089      	sub	sp, #36	@ 0x24
 8006324:	af00      	add	r7, sp, #0
 8006326:	6078      	str	r0, [r7, #4]
 8006328:	6039      	str	r1, [r7, #0]
 800632a:	2300      	movs	r3, #0
 800632c:	617b      	str	r3, [r7, #20]
 800632e:	2300      	movs	r3, #0
 8006330:	613b      	str	r3, [r7, #16]
 8006332:	2300      	movs	r3, #0
 8006334:	61bb      	str	r3, [r7, #24]
 8006336:	2300      	movs	r3, #0
 8006338:	61fb      	str	r3, [r7, #28]
 800633a:	e165      	b.n	8006608 <HAL_GPIO_Init+0x2e8>
 800633c:	2201      	movs	r2, #1
 800633e:	69fb      	ldr	r3, [r7, #28]
 8006340:	fa02 f303 	lsl.w	r3, r2, r3
 8006344:	617b      	str	r3, [r7, #20]
 8006346:	683b      	ldr	r3, [r7, #0]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	697a      	ldr	r2, [r7, #20]
 800634c:	4013      	ands	r3, r2
 800634e:	613b      	str	r3, [r7, #16]
 8006350:	693a      	ldr	r2, [r7, #16]
 8006352:	697b      	ldr	r3, [r7, #20]
 8006354:	429a      	cmp	r2, r3
 8006356:	f040 8154 	bne.w	8006602 <HAL_GPIO_Init+0x2e2>
 800635a:	683b      	ldr	r3, [r7, #0]
 800635c:	685b      	ldr	r3, [r3, #4]
 800635e:	f003 0303 	and.w	r3, r3, #3
 8006362:	2b01      	cmp	r3, #1
 8006364:	d005      	beq.n	8006372 <HAL_GPIO_Init+0x52>
 8006366:	683b      	ldr	r3, [r7, #0]
 8006368:	685b      	ldr	r3, [r3, #4]
 800636a:	f003 0303 	and.w	r3, r3, #3
 800636e:	2b02      	cmp	r3, #2
 8006370:	d130      	bne.n	80063d4 <HAL_GPIO_Init+0xb4>
 8006372:	687b      	ldr	r3, [r7, #4]
 8006374:	689b      	ldr	r3, [r3, #8]
 8006376:	61bb      	str	r3, [r7, #24]
 8006378:	69fb      	ldr	r3, [r7, #28]
 800637a:	005b      	lsls	r3, r3, #1
 800637c:	2203      	movs	r2, #3
 800637e:	fa02 f303 	lsl.w	r3, r2, r3
 8006382:	43db      	mvns	r3, r3
 8006384:	69ba      	ldr	r2, [r7, #24]
 8006386:	4013      	ands	r3, r2
 8006388:	61bb      	str	r3, [r7, #24]
 800638a:	683b      	ldr	r3, [r7, #0]
 800638c:	68da      	ldr	r2, [r3, #12]
 800638e:	69fb      	ldr	r3, [r7, #28]
 8006390:	005b      	lsls	r3, r3, #1
 8006392:	fa02 f303 	lsl.w	r3, r2, r3
 8006396:	69ba      	ldr	r2, [r7, #24]
 8006398:	4313      	orrs	r3, r2
 800639a:	61bb      	str	r3, [r7, #24]
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	69ba      	ldr	r2, [r7, #24]
 80063a0:	609a      	str	r2, [r3, #8]
 80063a2:	687b      	ldr	r3, [r7, #4]
 80063a4:	685b      	ldr	r3, [r3, #4]
 80063a6:	61bb      	str	r3, [r7, #24]
 80063a8:	2201      	movs	r2, #1
 80063aa:	69fb      	ldr	r3, [r7, #28]
 80063ac:	fa02 f303 	lsl.w	r3, r2, r3
 80063b0:	43db      	mvns	r3, r3
 80063b2:	69ba      	ldr	r2, [r7, #24]
 80063b4:	4013      	ands	r3, r2
 80063b6:	61bb      	str	r3, [r7, #24]
 80063b8:	683b      	ldr	r3, [r7, #0]
 80063ba:	685b      	ldr	r3, [r3, #4]
 80063bc:	091b      	lsrs	r3, r3, #4
 80063be:	f003 0201 	and.w	r2, r3, #1
 80063c2:	69fb      	ldr	r3, [r7, #28]
 80063c4:	fa02 f303 	lsl.w	r3, r2, r3
 80063c8:	69ba      	ldr	r2, [r7, #24]
 80063ca:	4313      	orrs	r3, r2
 80063cc:	61bb      	str	r3, [r7, #24]
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	69ba      	ldr	r2, [r7, #24]
 80063d2:	605a      	str	r2, [r3, #4]
 80063d4:	683b      	ldr	r3, [r7, #0]
 80063d6:	685b      	ldr	r3, [r3, #4]
 80063d8:	f003 0303 	and.w	r3, r3, #3
 80063dc:	2b03      	cmp	r3, #3
 80063de:	d017      	beq.n	8006410 <HAL_GPIO_Init+0xf0>
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	68db      	ldr	r3, [r3, #12]
 80063e4:	61bb      	str	r3, [r7, #24]
 80063e6:	69fb      	ldr	r3, [r7, #28]
 80063e8:	005b      	lsls	r3, r3, #1
 80063ea:	2203      	movs	r2, #3
 80063ec:	fa02 f303 	lsl.w	r3, r2, r3
 80063f0:	43db      	mvns	r3, r3
 80063f2:	69ba      	ldr	r2, [r7, #24]
 80063f4:	4013      	ands	r3, r2
 80063f6:	61bb      	str	r3, [r7, #24]
 80063f8:	683b      	ldr	r3, [r7, #0]
 80063fa:	689a      	ldr	r2, [r3, #8]
 80063fc:	69fb      	ldr	r3, [r7, #28]
 80063fe:	005b      	lsls	r3, r3, #1
 8006400:	fa02 f303 	lsl.w	r3, r2, r3
 8006404:	69ba      	ldr	r2, [r7, #24]
 8006406:	4313      	orrs	r3, r2
 8006408:	61bb      	str	r3, [r7, #24]
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	69ba      	ldr	r2, [r7, #24]
 800640e:	60da      	str	r2, [r3, #12]
 8006410:	683b      	ldr	r3, [r7, #0]
 8006412:	685b      	ldr	r3, [r3, #4]
 8006414:	f003 0303 	and.w	r3, r3, #3
 8006418:	2b02      	cmp	r3, #2
 800641a:	d123      	bne.n	8006464 <HAL_GPIO_Init+0x144>
 800641c:	69fb      	ldr	r3, [r7, #28]
 800641e:	08da      	lsrs	r2, r3, #3
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	3208      	adds	r2, #8
 8006424:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006428:	61bb      	str	r3, [r7, #24]
 800642a:	69fb      	ldr	r3, [r7, #28]
 800642c:	f003 0307 	and.w	r3, r3, #7
 8006430:	009b      	lsls	r3, r3, #2
 8006432:	220f      	movs	r2, #15
 8006434:	fa02 f303 	lsl.w	r3, r2, r3
 8006438:	43db      	mvns	r3, r3
 800643a:	69ba      	ldr	r2, [r7, #24]
 800643c:	4013      	ands	r3, r2
 800643e:	61bb      	str	r3, [r7, #24]
 8006440:	683b      	ldr	r3, [r7, #0]
 8006442:	691a      	ldr	r2, [r3, #16]
 8006444:	69fb      	ldr	r3, [r7, #28]
 8006446:	f003 0307 	and.w	r3, r3, #7
 800644a:	009b      	lsls	r3, r3, #2
 800644c:	fa02 f303 	lsl.w	r3, r2, r3
 8006450:	69ba      	ldr	r2, [r7, #24]
 8006452:	4313      	orrs	r3, r2
 8006454:	61bb      	str	r3, [r7, #24]
 8006456:	69fb      	ldr	r3, [r7, #28]
 8006458:	08da      	lsrs	r2, r3, #3
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	3208      	adds	r2, #8
 800645e:	69b9      	ldr	r1, [r7, #24]
 8006460:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	681b      	ldr	r3, [r3, #0]
 8006468:	61bb      	str	r3, [r7, #24]
 800646a:	69fb      	ldr	r3, [r7, #28]
 800646c:	005b      	lsls	r3, r3, #1
 800646e:	2203      	movs	r2, #3
 8006470:	fa02 f303 	lsl.w	r3, r2, r3
 8006474:	43db      	mvns	r3, r3
 8006476:	69ba      	ldr	r2, [r7, #24]
 8006478:	4013      	ands	r3, r2
 800647a:	61bb      	str	r3, [r7, #24]
 800647c:	683b      	ldr	r3, [r7, #0]
 800647e:	685b      	ldr	r3, [r3, #4]
 8006480:	f003 0203 	and.w	r2, r3, #3
 8006484:	69fb      	ldr	r3, [r7, #28]
 8006486:	005b      	lsls	r3, r3, #1
 8006488:	fa02 f303 	lsl.w	r3, r2, r3
 800648c:	69ba      	ldr	r2, [r7, #24]
 800648e:	4313      	orrs	r3, r2
 8006490:	61bb      	str	r3, [r7, #24]
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	69ba      	ldr	r2, [r7, #24]
 8006496:	601a      	str	r2, [r3, #0]
 8006498:	683b      	ldr	r3, [r7, #0]
 800649a:	685b      	ldr	r3, [r3, #4]
 800649c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	f000 80ae 	beq.w	8006602 <HAL_GPIO_Init+0x2e2>
 80064a6:	2300      	movs	r3, #0
 80064a8:	60fb      	str	r3, [r7, #12]
 80064aa:	4b5d      	ldr	r3, [pc, #372]	@ (8006620 <HAL_GPIO_Init+0x300>)
 80064ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80064ae:	4a5c      	ldr	r2, [pc, #368]	@ (8006620 <HAL_GPIO_Init+0x300>)
 80064b0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80064b4:	6453      	str	r3, [r2, #68]	@ 0x44
 80064b6:	4b5a      	ldr	r3, [pc, #360]	@ (8006620 <HAL_GPIO_Init+0x300>)
 80064b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80064ba:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80064be:	60fb      	str	r3, [r7, #12]
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	4a58      	ldr	r2, [pc, #352]	@ (8006624 <HAL_GPIO_Init+0x304>)
 80064c4:	69fb      	ldr	r3, [r7, #28]
 80064c6:	089b      	lsrs	r3, r3, #2
 80064c8:	3302      	adds	r3, #2
 80064ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80064ce:	61bb      	str	r3, [r7, #24]
 80064d0:	69fb      	ldr	r3, [r7, #28]
 80064d2:	f003 0303 	and.w	r3, r3, #3
 80064d6:	009b      	lsls	r3, r3, #2
 80064d8:	220f      	movs	r2, #15
 80064da:	fa02 f303 	lsl.w	r3, r2, r3
 80064de:	43db      	mvns	r3, r3
 80064e0:	69ba      	ldr	r2, [r7, #24]
 80064e2:	4013      	ands	r3, r2
 80064e4:	61bb      	str	r3, [r7, #24]
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	4a4f      	ldr	r2, [pc, #316]	@ (8006628 <HAL_GPIO_Init+0x308>)
 80064ea:	4293      	cmp	r3, r2
 80064ec:	d025      	beq.n	800653a <HAL_GPIO_Init+0x21a>
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4a4e      	ldr	r2, [pc, #312]	@ (800662c <HAL_GPIO_Init+0x30c>)
 80064f2:	4293      	cmp	r3, r2
 80064f4:	d01f      	beq.n	8006536 <HAL_GPIO_Init+0x216>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	4a4d      	ldr	r2, [pc, #308]	@ (8006630 <HAL_GPIO_Init+0x310>)
 80064fa:	4293      	cmp	r3, r2
 80064fc:	d019      	beq.n	8006532 <HAL_GPIO_Init+0x212>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	4a4c      	ldr	r2, [pc, #304]	@ (8006634 <HAL_GPIO_Init+0x314>)
 8006502:	4293      	cmp	r3, r2
 8006504:	d013      	beq.n	800652e <HAL_GPIO_Init+0x20e>
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	4a4b      	ldr	r2, [pc, #300]	@ (8006638 <HAL_GPIO_Init+0x318>)
 800650a:	4293      	cmp	r3, r2
 800650c:	d00d      	beq.n	800652a <HAL_GPIO_Init+0x20a>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	4a4a      	ldr	r2, [pc, #296]	@ (800663c <HAL_GPIO_Init+0x31c>)
 8006512:	4293      	cmp	r3, r2
 8006514:	d007      	beq.n	8006526 <HAL_GPIO_Init+0x206>
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	4a49      	ldr	r2, [pc, #292]	@ (8006640 <HAL_GPIO_Init+0x320>)
 800651a:	4293      	cmp	r3, r2
 800651c:	d101      	bne.n	8006522 <HAL_GPIO_Init+0x202>
 800651e:	2306      	movs	r3, #6
 8006520:	e00c      	b.n	800653c <HAL_GPIO_Init+0x21c>
 8006522:	2307      	movs	r3, #7
 8006524:	e00a      	b.n	800653c <HAL_GPIO_Init+0x21c>
 8006526:	2305      	movs	r3, #5
 8006528:	e008      	b.n	800653c <HAL_GPIO_Init+0x21c>
 800652a:	2304      	movs	r3, #4
 800652c:	e006      	b.n	800653c <HAL_GPIO_Init+0x21c>
 800652e:	2303      	movs	r3, #3
 8006530:	e004      	b.n	800653c <HAL_GPIO_Init+0x21c>
 8006532:	2302      	movs	r3, #2
 8006534:	e002      	b.n	800653c <HAL_GPIO_Init+0x21c>
 8006536:	2301      	movs	r3, #1
 8006538:	e000      	b.n	800653c <HAL_GPIO_Init+0x21c>
 800653a:	2300      	movs	r3, #0
 800653c:	69fa      	ldr	r2, [r7, #28]
 800653e:	f002 0203 	and.w	r2, r2, #3
 8006542:	0092      	lsls	r2, r2, #2
 8006544:	4093      	lsls	r3, r2
 8006546:	69ba      	ldr	r2, [r7, #24]
 8006548:	4313      	orrs	r3, r2
 800654a:	61bb      	str	r3, [r7, #24]
 800654c:	4935      	ldr	r1, [pc, #212]	@ (8006624 <HAL_GPIO_Init+0x304>)
 800654e:	69fb      	ldr	r3, [r7, #28]
 8006550:	089b      	lsrs	r3, r3, #2
 8006552:	3302      	adds	r3, #2
 8006554:	69ba      	ldr	r2, [r7, #24]
 8006556:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800655a:	4b3a      	ldr	r3, [pc, #232]	@ (8006644 <HAL_GPIO_Init+0x324>)
 800655c:	689b      	ldr	r3, [r3, #8]
 800655e:	61bb      	str	r3, [r7, #24]
 8006560:	693b      	ldr	r3, [r7, #16]
 8006562:	43db      	mvns	r3, r3
 8006564:	69ba      	ldr	r2, [r7, #24]
 8006566:	4013      	ands	r3, r2
 8006568:	61bb      	str	r3, [r7, #24]
 800656a:	683b      	ldr	r3, [r7, #0]
 800656c:	685b      	ldr	r3, [r3, #4]
 800656e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006572:	2b00      	cmp	r3, #0
 8006574:	d003      	beq.n	800657e <HAL_GPIO_Init+0x25e>
 8006576:	69ba      	ldr	r2, [r7, #24]
 8006578:	693b      	ldr	r3, [r7, #16]
 800657a:	4313      	orrs	r3, r2
 800657c:	61bb      	str	r3, [r7, #24]
 800657e:	4a31      	ldr	r2, [pc, #196]	@ (8006644 <HAL_GPIO_Init+0x324>)
 8006580:	69bb      	ldr	r3, [r7, #24]
 8006582:	6093      	str	r3, [r2, #8]
 8006584:	4b2f      	ldr	r3, [pc, #188]	@ (8006644 <HAL_GPIO_Init+0x324>)
 8006586:	68db      	ldr	r3, [r3, #12]
 8006588:	61bb      	str	r3, [r7, #24]
 800658a:	693b      	ldr	r3, [r7, #16]
 800658c:	43db      	mvns	r3, r3
 800658e:	69ba      	ldr	r2, [r7, #24]
 8006590:	4013      	ands	r3, r2
 8006592:	61bb      	str	r3, [r7, #24]
 8006594:	683b      	ldr	r3, [r7, #0]
 8006596:	685b      	ldr	r3, [r3, #4]
 8006598:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800659c:	2b00      	cmp	r3, #0
 800659e:	d003      	beq.n	80065a8 <HAL_GPIO_Init+0x288>
 80065a0:	69ba      	ldr	r2, [r7, #24]
 80065a2:	693b      	ldr	r3, [r7, #16]
 80065a4:	4313      	orrs	r3, r2
 80065a6:	61bb      	str	r3, [r7, #24]
 80065a8:	4a26      	ldr	r2, [pc, #152]	@ (8006644 <HAL_GPIO_Init+0x324>)
 80065aa:	69bb      	ldr	r3, [r7, #24]
 80065ac:	60d3      	str	r3, [r2, #12]
 80065ae:	4b25      	ldr	r3, [pc, #148]	@ (8006644 <HAL_GPIO_Init+0x324>)
 80065b0:	685b      	ldr	r3, [r3, #4]
 80065b2:	61bb      	str	r3, [r7, #24]
 80065b4:	693b      	ldr	r3, [r7, #16]
 80065b6:	43db      	mvns	r3, r3
 80065b8:	69ba      	ldr	r2, [r7, #24]
 80065ba:	4013      	ands	r3, r2
 80065bc:	61bb      	str	r3, [r7, #24]
 80065be:	683b      	ldr	r3, [r7, #0]
 80065c0:	685b      	ldr	r3, [r3, #4]
 80065c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d003      	beq.n	80065d2 <HAL_GPIO_Init+0x2b2>
 80065ca:	69ba      	ldr	r2, [r7, #24]
 80065cc:	693b      	ldr	r3, [r7, #16]
 80065ce:	4313      	orrs	r3, r2
 80065d0:	61bb      	str	r3, [r7, #24]
 80065d2:	4a1c      	ldr	r2, [pc, #112]	@ (8006644 <HAL_GPIO_Init+0x324>)
 80065d4:	69bb      	ldr	r3, [r7, #24]
 80065d6:	6053      	str	r3, [r2, #4]
 80065d8:	4b1a      	ldr	r3, [pc, #104]	@ (8006644 <HAL_GPIO_Init+0x324>)
 80065da:	681b      	ldr	r3, [r3, #0]
 80065dc:	61bb      	str	r3, [r7, #24]
 80065de:	693b      	ldr	r3, [r7, #16]
 80065e0:	43db      	mvns	r3, r3
 80065e2:	69ba      	ldr	r2, [r7, #24]
 80065e4:	4013      	ands	r3, r2
 80065e6:	61bb      	str	r3, [r7, #24]
 80065e8:	683b      	ldr	r3, [r7, #0]
 80065ea:	685b      	ldr	r3, [r3, #4]
 80065ec:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d003      	beq.n	80065fc <HAL_GPIO_Init+0x2dc>
 80065f4:	69ba      	ldr	r2, [r7, #24]
 80065f6:	693b      	ldr	r3, [r7, #16]
 80065f8:	4313      	orrs	r3, r2
 80065fa:	61bb      	str	r3, [r7, #24]
 80065fc:	4a11      	ldr	r2, [pc, #68]	@ (8006644 <HAL_GPIO_Init+0x324>)
 80065fe:	69bb      	ldr	r3, [r7, #24]
 8006600:	6013      	str	r3, [r2, #0]
 8006602:	69fb      	ldr	r3, [r7, #28]
 8006604:	3301      	adds	r3, #1
 8006606:	61fb      	str	r3, [r7, #28]
 8006608:	69fb      	ldr	r3, [r7, #28]
 800660a:	2b0f      	cmp	r3, #15
 800660c:	f67f ae96 	bls.w	800633c <HAL_GPIO_Init+0x1c>
 8006610:	bf00      	nop
 8006612:	bf00      	nop
 8006614:	3724      	adds	r7, #36	@ 0x24
 8006616:	46bd      	mov	sp, r7
 8006618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800661c:	4770      	bx	lr
 800661e:	bf00      	nop
 8006620:	40023800 	.word	0x40023800
 8006624:	40013800 	.word	0x40013800
 8006628:	40020000 	.word	0x40020000
 800662c:	40020400 	.word	0x40020400
 8006630:	40020800 	.word	0x40020800
 8006634:	40020c00 	.word	0x40020c00
 8006638:	40021000 	.word	0x40021000
 800663c:	40021400 	.word	0x40021400
 8006640:	40021800 	.word	0x40021800
 8006644:	40013c00 	.word	0x40013c00

08006648 <HAL_GPIO_WritePin>:
 8006648:	b480      	push	{r7}
 800664a:	b083      	sub	sp, #12
 800664c:	af00      	add	r7, sp, #0
 800664e:	6078      	str	r0, [r7, #4]
 8006650:	460b      	mov	r3, r1
 8006652:	807b      	strh	r3, [r7, #2]
 8006654:	4613      	mov	r3, r2
 8006656:	707b      	strb	r3, [r7, #1]
 8006658:	787b      	ldrb	r3, [r7, #1]
 800665a:	2b00      	cmp	r3, #0
 800665c:	d003      	beq.n	8006666 <HAL_GPIO_WritePin+0x1e>
 800665e:	887a      	ldrh	r2, [r7, #2]
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	619a      	str	r2, [r3, #24]
 8006664:	e003      	b.n	800666e <HAL_GPIO_WritePin+0x26>
 8006666:	887b      	ldrh	r3, [r7, #2]
 8006668:	041a      	lsls	r2, r3, #16
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	619a      	str	r2, [r3, #24]
 800666e:	bf00      	nop
 8006670:	370c      	adds	r7, #12
 8006672:	46bd      	mov	sp, r7
 8006674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006678:	4770      	bx	lr
	...

0800667c <HAL_RCC_ClockConfig>:
 800667c:	b580      	push	{r7, lr}
 800667e:	b084      	sub	sp, #16
 8006680:	af00      	add	r7, sp, #0
 8006682:	6078      	str	r0, [r7, #4]
 8006684:	6039      	str	r1, [r7, #0]
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	2b00      	cmp	r3, #0
 800668a:	d101      	bne.n	8006690 <HAL_RCC_ClockConfig+0x14>
 800668c:	2301      	movs	r3, #1
 800668e:	e0cc      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 8006690:	4b68      	ldr	r3, [pc, #416]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	f003 030f 	and.w	r3, r3, #15
 8006698:	683a      	ldr	r2, [r7, #0]
 800669a:	429a      	cmp	r2, r3
 800669c:	d90c      	bls.n	80066b8 <HAL_RCC_ClockConfig+0x3c>
 800669e:	4b65      	ldr	r3, [pc, #404]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 80066a0:	683a      	ldr	r2, [r7, #0]
 80066a2:	b2d2      	uxtb	r2, r2
 80066a4:	701a      	strb	r2, [r3, #0]
 80066a6:	4b63      	ldr	r3, [pc, #396]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	f003 030f 	and.w	r3, r3, #15
 80066ae:	683a      	ldr	r2, [r7, #0]
 80066b0:	429a      	cmp	r2, r3
 80066b2:	d001      	beq.n	80066b8 <HAL_RCC_ClockConfig+0x3c>
 80066b4:	2301      	movs	r3, #1
 80066b6:	e0b8      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	f003 0302 	and.w	r3, r3, #2
 80066c0:	2b00      	cmp	r3, #0
 80066c2:	d020      	beq.n	8006706 <HAL_RCC_ClockConfig+0x8a>
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	681b      	ldr	r3, [r3, #0]
 80066c8:	f003 0304 	and.w	r3, r3, #4
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	d005      	beq.n	80066dc <HAL_RCC_ClockConfig+0x60>
 80066d0:	4b59      	ldr	r3, [pc, #356]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80066d2:	689b      	ldr	r3, [r3, #8]
 80066d4:	4a58      	ldr	r2, [pc, #352]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80066d6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80066da:	6093      	str	r3, [r2, #8]
 80066dc:	687b      	ldr	r3, [r7, #4]
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	f003 0308 	and.w	r3, r3, #8
 80066e4:	2b00      	cmp	r3, #0
 80066e6:	d005      	beq.n	80066f4 <HAL_RCC_ClockConfig+0x78>
 80066e8:	4b53      	ldr	r3, [pc, #332]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80066ea:	689b      	ldr	r3, [r3, #8]
 80066ec:	4a52      	ldr	r2, [pc, #328]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80066ee:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80066f2:	6093      	str	r3, [r2, #8]
 80066f4:	4b50      	ldr	r3, [pc, #320]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80066f6:	689b      	ldr	r3, [r3, #8]
 80066f8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	689b      	ldr	r3, [r3, #8]
 8006700:	494d      	ldr	r1, [pc, #308]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 8006702:	4313      	orrs	r3, r2
 8006704:	608b      	str	r3, [r1, #8]
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	f003 0301 	and.w	r3, r3, #1
 800670e:	2b00      	cmp	r3, #0
 8006710:	d044      	beq.n	800679c <HAL_RCC_ClockConfig+0x120>
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	685b      	ldr	r3, [r3, #4]
 8006716:	2b01      	cmp	r3, #1
 8006718:	d107      	bne.n	800672a <HAL_RCC_ClockConfig+0xae>
 800671a:	4b47      	ldr	r3, [pc, #284]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006722:	2b00      	cmp	r3, #0
 8006724:	d119      	bne.n	800675a <HAL_RCC_ClockConfig+0xde>
 8006726:	2301      	movs	r3, #1
 8006728:	e07f      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	685b      	ldr	r3, [r3, #4]
 800672e:	2b02      	cmp	r3, #2
 8006730:	d003      	beq.n	800673a <HAL_RCC_ClockConfig+0xbe>
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	685b      	ldr	r3, [r3, #4]
 8006736:	2b03      	cmp	r3, #3
 8006738:	d107      	bne.n	800674a <HAL_RCC_ClockConfig+0xce>
 800673a:	4b3f      	ldr	r3, [pc, #252]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800673c:	681b      	ldr	r3, [r3, #0]
 800673e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006742:	2b00      	cmp	r3, #0
 8006744:	d109      	bne.n	800675a <HAL_RCC_ClockConfig+0xde>
 8006746:	2301      	movs	r3, #1
 8006748:	e06f      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 800674a:	4b3b      	ldr	r3, [pc, #236]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f003 0302 	and.w	r3, r3, #2
 8006752:	2b00      	cmp	r3, #0
 8006754:	d101      	bne.n	800675a <HAL_RCC_ClockConfig+0xde>
 8006756:	2301      	movs	r3, #1
 8006758:	e067      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 800675a:	4b37      	ldr	r3, [pc, #220]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800675c:	689b      	ldr	r3, [r3, #8]
 800675e:	f023 0203 	bic.w	r2, r3, #3
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	685b      	ldr	r3, [r3, #4]
 8006766:	4934      	ldr	r1, [pc, #208]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 8006768:	4313      	orrs	r3, r2
 800676a:	608b      	str	r3, [r1, #8]
 800676c:	f7ff fbf8 	bl	8005f60 <HAL_GetTick>
 8006770:	60f8      	str	r0, [r7, #12]
 8006772:	e00a      	b.n	800678a <HAL_RCC_ClockConfig+0x10e>
 8006774:	f7ff fbf4 	bl	8005f60 <HAL_GetTick>
 8006778:	4602      	mov	r2, r0
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	1ad3      	subs	r3, r2, r3
 800677e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006782:	4293      	cmp	r3, r2
 8006784:	d901      	bls.n	800678a <HAL_RCC_ClockConfig+0x10e>
 8006786:	2303      	movs	r3, #3
 8006788:	e04f      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 800678a:	4b2b      	ldr	r3, [pc, #172]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800678c:	689b      	ldr	r3, [r3, #8]
 800678e:	f003 020c 	and.w	r2, r3, #12
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	685b      	ldr	r3, [r3, #4]
 8006796:	009b      	lsls	r3, r3, #2
 8006798:	429a      	cmp	r2, r3
 800679a:	d1eb      	bne.n	8006774 <HAL_RCC_ClockConfig+0xf8>
 800679c:	4b25      	ldr	r3, [pc, #148]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	f003 030f 	and.w	r3, r3, #15
 80067a4:	683a      	ldr	r2, [r7, #0]
 80067a6:	429a      	cmp	r2, r3
 80067a8:	d20c      	bcs.n	80067c4 <HAL_RCC_ClockConfig+0x148>
 80067aa:	4b22      	ldr	r3, [pc, #136]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 80067ac:	683a      	ldr	r2, [r7, #0]
 80067ae:	b2d2      	uxtb	r2, r2
 80067b0:	701a      	strb	r2, [r3, #0]
 80067b2:	4b20      	ldr	r3, [pc, #128]	@ (8006834 <HAL_RCC_ClockConfig+0x1b8>)
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	f003 030f 	and.w	r3, r3, #15
 80067ba:	683a      	ldr	r2, [r7, #0]
 80067bc:	429a      	cmp	r2, r3
 80067be:	d001      	beq.n	80067c4 <HAL_RCC_ClockConfig+0x148>
 80067c0:	2301      	movs	r3, #1
 80067c2:	e032      	b.n	800682a <HAL_RCC_ClockConfig+0x1ae>
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	f003 0304 	and.w	r3, r3, #4
 80067cc:	2b00      	cmp	r3, #0
 80067ce:	d008      	beq.n	80067e2 <HAL_RCC_ClockConfig+0x166>
 80067d0:	4b19      	ldr	r3, [pc, #100]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80067d2:	689b      	ldr	r3, [r3, #8]
 80067d4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	68db      	ldr	r3, [r3, #12]
 80067dc:	4916      	ldr	r1, [pc, #88]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80067de:	4313      	orrs	r3, r2
 80067e0:	608b      	str	r3, [r1, #8]
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	f003 0308 	and.w	r3, r3, #8
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d009      	beq.n	8006802 <HAL_RCC_ClockConfig+0x186>
 80067ee:	4b12      	ldr	r3, [pc, #72]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80067f0:	689b      	ldr	r3, [r3, #8]
 80067f2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	691b      	ldr	r3, [r3, #16]
 80067fa:	00db      	lsls	r3, r3, #3
 80067fc:	490e      	ldr	r1, [pc, #56]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 80067fe:	4313      	orrs	r3, r2
 8006800:	608b      	str	r3, [r1, #8]
 8006802:	f000 f855 	bl	80068b0 <HAL_RCC_GetSysClockFreq>
 8006806:	4602      	mov	r2, r0
 8006808:	4b0b      	ldr	r3, [pc, #44]	@ (8006838 <HAL_RCC_ClockConfig+0x1bc>)
 800680a:	689b      	ldr	r3, [r3, #8]
 800680c:	091b      	lsrs	r3, r3, #4
 800680e:	f003 030f 	and.w	r3, r3, #15
 8006812:	490a      	ldr	r1, [pc, #40]	@ (800683c <HAL_RCC_ClockConfig+0x1c0>)
 8006814:	5ccb      	ldrb	r3, [r1, r3]
 8006816:	fa22 f303 	lsr.w	r3, r2, r3
 800681a:	4a09      	ldr	r2, [pc, #36]	@ (8006840 <HAL_RCC_ClockConfig+0x1c4>)
 800681c:	6013      	str	r3, [r2, #0]
 800681e:	4b09      	ldr	r3, [pc, #36]	@ (8006844 <HAL_RCC_ClockConfig+0x1c8>)
 8006820:	681b      	ldr	r3, [r3, #0]
 8006822:	4618      	mov	r0, r3
 8006824:	f7ff fb58 	bl	8005ed8 <HAL_InitTick>
 8006828:	2300      	movs	r3, #0
 800682a:	4618      	mov	r0, r3
 800682c:	3710      	adds	r7, #16
 800682e:	46bd      	mov	sp, r7
 8006830:	bd80      	pop	{r7, pc}
 8006832:	bf00      	nop
 8006834:	40023c00 	.word	0x40023c00
 8006838:	40023800 	.word	0x40023800
 800683c:	0800cda0 	.word	0x0800cda0
 8006840:	20016a7c 	.word	0x20016a7c
 8006844:	20016a80 	.word	0x20016a80

08006848 <HAL_RCC_GetHCLKFreq>:
 8006848:	b480      	push	{r7}
 800684a:	af00      	add	r7, sp, #0
 800684c:	4b03      	ldr	r3, [pc, #12]	@ (800685c <HAL_RCC_GetHCLKFreq+0x14>)
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	4618      	mov	r0, r3
 8006852:	46bd      	mov	sp, r7
 8006854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006858:	4770      	bx	lr
 800685a:	bf00      	nop
 800685c:	20016a7c 	.word	0x20016a7c

08006860 <HAL_RCC_GetPCLK1Freq>:
 8006860:	b580      	push	{r7, lr}
 8006862:	af00      	add	r7, sp, #0
 8006864:	f7ff fff0 	bl	8006848 <HAL_RCC_GetHCLKFreq>
 8006868:	4602      	mov	r2, r0
 800686a:	4b05      	ldr	r3, [pc, #20]	@ (8006880 <HAL_RCC_GetPCLK1Freq+0x20>)
 800686c:	689b      	ldr	r3, [r3, #8]
 800686e:	0a9b      	lsrs	r3, r3, #10
 8006870:	f003 0307 	and.w	r3, r3, #7
 8006874:	4903      	ldr	r1, [pc, #12]	@ (8006884 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006876:	5ccb      	ldrb	r3, [r1, r3]
 8006878:	fa22 f303 	lsr.w	r3, r2, r3
 800687c:	4618      	mov	r0, r3
 800687e:	bd80      	pop	{r7, pc}
 8006880:	40023800 	.word	0x40023800
 8006884:	0800cdb0 	.word	0x0800cdb0

08006888 <HAL_RCC_GetPCLK2Freq>:
 8006888:	b580      	push	{r7, lr}
 800688a:	af00      	add	r7, sp, #0
 800688c:	f7ff ffdc 	bl	8006848 <HAL_RCC_GetHCLKFreq>
 8006890:	4602      	mov	r2, r0
 8006892:	4b05      	ldr	r3, [pc, #20]	@ (80068a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006894:	689b      	ldr	r3, [r3, #8]
 8006896:	0b5b      	lsrs	r3, r3, #13
 8006898:	f003 0307 	and.w	r3, r3, #7
 800689c:	4903      	ldr	r1, [pc, #12]	@ (80068ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800689e:	5ccb      	ldrb	r3, [r1, r3]
 80068a0:	fa22 f303 	lsr.w	r3, r2, r3
 80068a4:	4618      	mov	r0, r3
 80068a6:	bd80      	pop	{r7, pc}
 80068a8:	40023800 	.word	0x40023800
 80068ac:	0800cdb0 	.word	0x0800cdb0

080068b0 <HAL_RCC_GetSysClockFreq>:
 80068b0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80068b4:	b0a6      	sub	sp, #152	@ 0x98
 80068b6:	af00      	add	r7, sp, #0
 80068b8:	2300      	movs	r3, #0
 80068ba:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80068be:	2300      	movs	r3, #0
 80068c0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80068c4:	2300      	movs	r3, #0
 80068c6:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80068ca:	2300      	movs	r3, #0
 80068cc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80068d0:	2300      	movs	r3, #0
 80068d2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80068d6:	4bc8      	ldr	r3, [pc, #800]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 80068d8:	689b      	ldr	r3, [r3, #8]
 80068da:	f003 030c 	and.w	r3, r3, #12
 80068de:	2b0c      	cmp	r3, #12
 80068e0:	f200 817e 	bhi.w	8006be0 <HAL_RCC_GetSysClockFreq+0x330>
 80068e4:	a201      	add	r2, pc, #4	@ (adr r2, 80068ec <HAL_RCC_GetSysClockFreq+0x3c>)
 80068e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80068ea:	bf00      	nop
 80068ec:	08006921 	.word	0x08006921
 80068f0:	08006be1 	.word	0x08006be1
 80068f4:	08006be1 	.word	0x08006be1
 80068f8:	08006be1 	.word	0x08006be1
 80068fc:	08006929 	.word	0x08006929
 8006900:	08006be1 	.word	0x08006be1
 8006904:	08006be1 	.word	0x08006be1
 8006908:	08006be1 	.word	0x08006be1
 800690c:	08006931 	.word	0x08006931
 8006910:	08006be1 	.word	0x08006be1
 8006914:	08006be1 	.word	0x08006be1
 8006918:	08006be1 	.word	0x08006be1
 800691c:	08006a9b 	.word	0x08006a9b
 8006920:	4bb6      	ldr	r3, [pc, #728]	@ (8006bfc <HAL_RCC_GetSysClockFreq+0x34c>)
 8006922:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006926:	e15f      	b.n	8006be8 <HAL_RCC_GetSysClockFreq+0x338>
 8006928:	4bb5      	ldr	r3, [pc, #724]	@ (8006c00 <HAL_RCC_GetSysClockFreq+0x350>)
 800692a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800692e:	e15b      	b.n	8006be8 <HAL_RCC_GetSysClockFreq+0x338>
 8006930:	4bb1      	ldr	r3, [pc, #708]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006932:	685b      	ldr	r3, [r3, #4]
 8006934:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006938:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800693c:	4bae      	ldr	r3, [pc, #696]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 800693e:	685b      	ldr	r3, [r3, #4]
 8006940:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006944:	2b00      	cmp	r3, #0
 8006946:	d031      	beq.n	80069ac <HAL_RCC_GetSysClockFreq+0xfc>
 8006948:	4bab      	ldr	r3, [pc, #684]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 800694a:	685b      	ldr	r3, [r3, #4]
 800694c:	099b      	lsrs	r3, r3, #6
 800694e:	2200      	movs	r2, #0
 8006950:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006952:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8006954:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8006956:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800695a:	663b      	str	r3, [r7, #96]	@ 0x60
 800695c:	2300      	movs	r3, #0
 800695e:	667b      	str	r3, [r7, #100]	@ 0x64
 8006960:	4ba7      	ldr	r3, [pc, #668]	@ (8006c00 <HAL_RCC_GetSysClockFreq+0x350>)
 8006962:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8006966:	462a      	mov	r2, r5
 8006968:	fb03 f202 	mul.w	r2, r3, r2
 800696c:	2300      	movs	r3, #0
 800696e:	4621      	mov	r1, r4
 8006970:	fb01 f303 	mul.w	r3, r1, r3
 8006974:	4413      	add	r3, r2
 8006976:	4aa2      	ldr	r2, [pc, #648]	@ (8006c00 <HAL_RCC_GetSysClockFreq+0x350>)
 8006978:	4621      	mov	r1, r4
 800697a:	fba1 1202 	umull	r1, r2, r1, r2
 800697e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8006980:	460a      	mov	r2, r1
 8006982:	67ba      	str	r2, [r7, #120]	@ 0x78
 8006984:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8006986:	4413      	add	r3, r2
 8006988:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800698a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800698e:	2200      	movs	r2, #0
 8006990:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006992:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8006994:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8006998:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 800699c:	f7f9 fe9c 	bl	80006d8 <__aeabi_uldivmod>
 80069a0:	4602      	mov	r2, r0
 80069a2:	460b      	mov	r3, r1
 80069a4:	4613      	mov	r3, r2
 80069a6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80069aa:	e064      	b.n	8006a76 <HAL_RCC_GetSysClockFreq+0x1c6>
 80069ac:	4b92      	ldr	r3, [pc, #584]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 80069ae:	685b      	ldr	r3, [r3, #4]
 80069b0:	099b      	lsrs	r3, r3, #6
 80069b2:	2200      	movs	r2, #0
 80069b4:	653b      	str	r3, [r7, #80]	@ 0x50
 80069b6:	657a      	str	r2, [r7, #84]	@ 0x54
 80069b8:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80069ba:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80069be:	64bb      	str	r3, [r7, #72]	@ 0x48
 80069c0:	2300      	movs	r3, #0
 80069c2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80069c4:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 80069c8:	4622      	mov	r2, r4
 80069ca:	462b      	mov	r3, r5
 80069cc:	f04f 0000 	mov.w	r0, #0
 80069d0:	f04f 0100 	mov.w	r1, #0
 80069d4:	0159      	lsls	r1, r3, #5
 80069d6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80069da:	0150      	lsls	r0, r2, #5
 80069dc:	4602      	mov	r2, r0
 80069de:	460b      	mov	r3, r1
 80069e0:	4621      	mov	r1, r4
 80069e2:	1a51      	subs	r1, r2, r1
 80069e4:	6139      	str	r1, [r7, #16]
 80069e6:	4629      	mov	r1, r5
 80069e8:	eb63 0301 	sbc.w	r3, r3, r1
 80069ec:	617b      	str	r3, [r7, #20]
 80069ee:	f04f 0200 	mov.w	r2, #0
 80069f2:	f04f 0300 	mov.w	r3, #0
 80069f6:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80069fa:	4659      	mov	r1, fp
 80069fc:	018b      	lsls	r3, r1, #6
 80069fe:	4651      	mov	r1, sl
 8006a00:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006a04:	4651      	mov	r1, sl
 8006a06:	018a      	lsls	r2, r1, #6
 8006a08:	4651      	mov	r1, sl
 8006a0a:	ebb2 0801 	subs.w	r8, r2, r1
 8006a0e:	4659      	mov	r1, fp
 8006a10:	eb63 0901 	sbc.w	r9, r3, r1
 8006a14:	f04f 0200 	mov.w	r2, #0
 8006a18:	f04f 0300 	mov.w	r3, #0
 8006a1c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006a20:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006a24:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006a28:	4690      	mov	r8, r2
 8006a2a:	4699      	mov	r9, r3
 8006a2c:	4623      	mov	r3, r4
 8006a2e:	eb18 0303 	adds.w	r3, r8, r3
 8006a32:	60bb      	str	r3, [r7, #8]
 8006a34:	462b      	mov	r3, r5
 8006a36:	eb49 0303 	adc.w	r3, r9, r3
 8006a3a:	60fb      	str	r3, [r7, #12]
 8006a3c:	f04f 0200 	mov.w	r2, #0
 8006a40:	f04f 0300 	mov.w	r3, #0
 8006a44:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8006a48:	4629      	mov	r1, r5
 8006a4a:	028b      	lsls	r3, r1, #10
 8006a4c:	4621      	mov	r1, r4
 8006a4e:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006a52:	4621      	mov	r1, r4
 8006a54:	028a      	lsls	r2, r1, #10
 8006a56:	4610      	mov	r0, r2
 8006a58:	4619      	mov	r1, r3
 8006a5a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006a5e:	2200      	movs	r2, #0
 8006a60:	643b      	str	r3, [r7, #64]	@ 0x40
 8006a62:	647a      	str	r2, [r7, #68]	@ 0x44
 8006a64:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006a68:	f7f9 fe36 	bl	80006d8 <__aeabi_uldivmod>
 8006a6c:	4602      	mov	r2, r0
 8006a6e:	460b      	mov	r3, r1
 8006a70:	4613      	mov	r3, r2
 8006a72:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8006a76:	4b60      	ldr	r3, [pc, #384]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006a78:	685b      	ldr	r3, [r3, #4]
 8006a7a:	0c1b      	lsrs	r3, r3, #16
 8006a7c:	f003 0303 	and.w	r3, r3, #3
 8006a80:	3301      	adds	r3, #1
 8006a82:	005b      	lsls	r3, r3, #1
 8006a84:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006a88:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006a8c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8006a90:	fbb2 f3f3 	udiv	r3, r2, r3
 8006a94:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006a98:	e0a6      	b.n	8006be8 <HAL_RCC_GetSysClockFreq+0x338>
 8006a9a:	4b57      	ldr	r3, [pc, #348]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006a9c:	685b      	ldr	r3, [r3, #4]
 8006a9e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006aa2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8006aa6:	4b54      	ldr	r3, [pc, #336]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006aa8:	685b      	ldr	r3, [r3, #4]
 8006aaa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d02a      	beq.n	8006b08 <HAL_RCC_GetSysClockFreq+0x258>
 8006ab2:	4b51      	ldr	r3, [pc, #324]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006ab4:	685b      	ldr	r3, [r3, #4]
 8006ab6:	099b      	lsrs	r3, r3, #6
 8006ab8:	2200      	movs	r2, #0
 8006aba:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006abc:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8006abe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ac0:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8006ac4:	2100      	movs	r1, #0
 8006ac6:	4b4e      	ldr	r3, [pc, #312]	@ (8006c00 <HAL_RCC_GetSysClockFreq+0x350>)
 8006ac8:	fb03 f201 	mul.w	r2, r3, r1
 8006acc:	2300      	movs	r3, #0
 8006ace:	fb00 f303 	mul.w	r3, r0, r3
 8006ad2:	4413      	add	r3, r2
 8006ad4:	4a4a      	ldr	r2, [pc, #296]	@ (8006c00 <HAL_RCC_GetSysClockFreq+0x350>)
 8006ad6:	fba0 1202 	umull	r1, r2, r0, r2
 8006ada:	677a      	str	r2, [r7, #116]	@ 0x74
 8006adc:	460a      	mov	r2, r1
 8006ade:	673a      	str	r2, [r7, #112]	@ 0x70
 8006ae0:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8006ae2:	4413      	add	r3, r2
 8006ae4:	677b      	str	r3, [r7, #116]	@ 0x74
 8006ae6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006aea:	2200      	movs	r2, #0
 8006aec:	633b      	str	r3, [r7, #48]	@ 0x30
 8006aee:	637a      	str	r2, [r7, #52]	@ 0x34
 8006af0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8006af4:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8006af8:	f7f9 fdee 	bl	80006d8 <__aeabi_uldivmod>
 8006afc:	4602      	mov	r2, r0
 8006afe:	460b      	mov	r3, r1
 8006b00:	4613      	mov	r3, r2
 8006b02:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8006b06:	e05b      	b.n	8006bc0 <HAL_RCC_GetSysClockFreq+0x310>
 8006b08:	4b3b      	ldr	r3, [pc, #236]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006b0a:	685b      	ldr	r3, [r3, #4]
 8006b0c:	099b      	lsrs	r3, r3, #6
 8006b0e:	2200      	movs	r2, #0
 8006b10:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006b12:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8006b14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006b16:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006b1a:	623b      	str	r3, [r7, #32]
 8006b1c:	2300      	movs	r3, #0
 8006b1e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006b20:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8006b24:	4642      	mov	r2, r8
 8006b26:	464b      	mov	r3, r9
 8006b28:	f04f 0000 	mov.w	r0, #0
 8006b2c:	f04f 0100 	mov.w	r1, #0
 8006b30:	0159      	lsls	r1, r3, #5
 8006b32:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006b36:	0150      	lsls	r0, r2, #5
 8006b38:	4602      	mov	r2, r0
 8006b3a:	460b      	mov	r3, r1
 8006b3c:	4641      	mov	r1, r8
 8006b3e:	ebb2 0a01 	subs.w	sl, r2, r1
 8006b42:	4649      	mov	r1, r9
 8006b44:	eb63 0b01 	sbc.w	fp, r3, r1
 8006b48:	f04f 0200 	mov.w	r2, #0
 8006b4c:	f04f 0300 	mov.w	r3, #0
 8006b50:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8006b54:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8006b58:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8006b5c:	ebb2 040a 	subs.w	r4, r2, sl
 8006b60:	eb63 050b 	sbc.w	r5, r3, fp
 8006b64:	f04f 0200 	mov.w	r2, #0
 8006b68:	f04f 0300 	mov.w	r3, #0
 8006b6c:	00eb      	lsls	r3, r5, #3
 8006b6e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006b72:	00e2      	lsls	r2, r4, #3
 8006b74:	4614      	mov	r4, r2
 8006b76:	461d      	mov	r5, r3
 8006b78:	4643      	mov	r3, r8
 8006b7a:	18e3      	adds	r3, r4, r3
 8006b7c:	603b      	str	r3, [r7, #0]
 8006b7e:	464b      	mov	r3, r9
 8006b80:	eb45 0303 	adc.w	r3, r5, r3
 8006b84:	607b      	str	r3, [r7, #4]
 8006b86:	f04f 0200 	mov.w	r2, #0
 8006b8a:	f04f 0300 	mov.w	r3, #0
 8006b8e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006b92:	4629      	mov	r1, r5
 8006b94:	028b      	lsls	r3, r1, #10
 8006b96:	4621      	mov	r1, r4
 8006b98:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006b9c:	4621      	mov	r1, r4
 8006b9e:	028a      	lsls	r2, r1, #10
 8006ba0:	4610      	mov	r0, r2
 8006ba2:	4619      	mov	r1, r3
 8006ba4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8006ba8:	2200      	movs	r2, #0
 8006baa:	61bb      	str	r3, [r7, #24]
 8006bac:	61fa      	str	r2, [r7, #28]
 8006bae:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006bb2:	f7f9 fd91 	bl	80006d8 <__aeabi_uldivmod>
 8006bb6:	4602      	mov	r2, r0
 8006bb8:	460b      	mov	r3, r1
 8006bba:	4613      	mov	r3, r2
 8006bbc:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8006bc0:	4b0d      	ldr	r3, [pc, #52]	@ (8006bf8 <HAL_RCC_GetSysClockFreq+0x348>)
 8006bc2:	685b      	ldr	r3, [r3, #4]
 8006bc4:	0f1b      	lsrs	r3, r3, #28
 8006bc6:	f003 0307 	and.w	r3, r3, #7
 8006bca:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006bce:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8006bd2:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8006bd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8006bda:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006bde:	e003      	b.n	8006be8 <HAL_RCC_GetSysClockFreq+0x338>
 8006be0:	4b06      	ldr	r3, [pc, #24]	@ (8006bfc <HAL_RCC_GetSysClockFreq+0x34c>)
 8006be2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006be6:	bf00      	nop
 8006be8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8006bec:	4618      	mov	r0, r3
 8006bee:	3798      	adds	r7, #152	@ 0x98
 8006bf0:	46bd      	mov	sp, r7
 8006bf2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006bf6:	bf00      	nop
 8006bf8:	40023800 	.word	0x40023800
 8006bfc:	00f42400 	.word	0x00f42400
 8006c00:	017d7840 	.word	0x017d7840

08006c04 <HAL_RCC_OscConfig>:
 8006c04:	b580      	push	{r7, lr}
 8006c06:	b086      	sub	sp, #24
 8006c08:	af00      	add	r7, sp, #0
 8006c0a:	6078      	str	r0, [r7, #4]
 8006c0c:	687b      	ldr	r3, [r7, #4]
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	d101      	bne.n	8006c16 <HAL_RCC_OscConfig+0x12>
 8006c12:	2301      	movs	r3, #1
 8006c14:	e28d      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	f003 0301 	and.w	r3, r3, #1
 8006c1e:	2b00      	cmp	r3, #0
 8006c20:	f000 8083 	beq.w	8006d2a <HAL_RCC_OscConfig+0x126>
 8006c24:	4b94      	ldr	r3, [pc, #592]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c26:	689b      	ldr	r3, [r3, #8]
 8006c28:	f003 030c 	and.w	r3, r3, #12
 8006c2c:	2b04      	cmp	r3, #4
 8006c2e:	d019      	beq.n	8006c64 <HAL_RCC_OscConfig+0x60>
 8006c30:	4b91      	ldr	r3, [pc, #580]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c32:	689b      	ldr	r3, [r3, #8]
 8006c34:	f003 030c 	and.w	r3, r3, #12
 8006c38:	2b08      	cmp	r3, #8
 8006c3a:	d106      	bne.n	8006c4a <HAL_RCC_OscConfig+0x46>
 8006c3c:	4b8e      	ldr	r3, [pc, #568]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c3e:	685b      	ldr	r3, [r3, #4]
 8006c40:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006c44:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006c48:	d00c      	beq.n	8006c64 <HAL_RCC_OscConfig+0x60>
 8006c4a:	4b8b      	ldr	r3, [pc, #556]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c4c:	689b      	ldr	r3, [r3, #8]
 8006c4e:	f003 030c 	and.w	r3, r3, #12
 8006c52:	2b0c      	cmp	r3, #12
 8006c54:	d112      	bne.n	8006c7c <HAL_RCC_OscConfig+0x78>
 8006c56:	4b88      	ldr	r3, [pc, #544]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c58:	685b      	ldr	r3, [r3, #4]
 8006c5a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006c5e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006c62:	d10b      	bne.n	8006c7c <HAL_RCC_OscConfig+0x78>
 8006c64:	4b84      	ldr	r3, [pc, #528]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d05b      	beq.n	8006d28 <HAL_RCC_OscConfig+0x124>
 8006c70:	687b      	ldr	r3, [r7, #4]
 8006c72:	685b      	ldr	r3, [r3, #4]
 8006c74:	2b00      	cmp	r3, #0
 8006c76:	d157      	bne.n	8006d28 <HAL_RCC_OscConfig+0x124>
 8006c78:	2301      	movs	r3, #1
 8006c7a:	e25a      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	685b      	ldr	r3, [r3, #4]
 8006c80:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006c84:	d106      	bne.n	8006c94 <HAL_RCC_OscConfig+0x90>
 8006c86:	4b7c      	ldr	r3, [pc, #496]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	4a7b      	ldr	r2, [pc, #492]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006c8c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006c90:	6013      	str	r3, [r2, #0]
 8006c92:	e01d      	b.n	8006cd0 <HAL_RCC_OscConfig+0xcc>
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	685b      	ldr	r3, [r3, #4]
 8006c98:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006c9c:	d10c      	bne.n	8006cb8 <HAL_RCC_OscConfig+0xb4>
 8006c9e:	4b76      	ldr	r3, [pc, #472]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006ca0:	681b      	ldr	r3, [r3, #0]
 8006ca2:	4a75      	ldr	r2, [pc, #468]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006ca4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006ca8:	6013      	str	r3, [r2, #0]
 8006caa:	4b73      	ldr	r3, [pc, #460]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	4a72      	ldr	r2, [pc, #456]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cb0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006cb4:	6013      	str	r3, [r2, #0]
 8006cb6:	e00b      	b.n	8006cd0 <HAL_RCC_OscConfig+0xcc>
 8006cb8:	4b6f      	ldr	r3, [pc, #444]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	4a6e      	ldr	r2, [pc, #440]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cbe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006cc2:	6013      	str	r3, [r2, #0]
 8006cc4:	4b6c      	ldr	r3, [pc, #432]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cc6:	681b      	ldr	r3, [r3, #0]
 8006cc8:	4a6b      	ldr	r2, [pc, #428]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cca:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006cce:	6013      	str	r3, [r2, #0]
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	685b      	ldr	r3, [r3, #4]
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d013      	beq.n	8006d00 <HAL_RCC_OscConfig+0xfc>
 8006cd8:	f7ff f942 	bl	8005f60 <HAL_GetTick>
 8006cdc:	6138      	str	r0, [r7, #16]
 8006cde:	e008      	b.n	8006cf2 <HAL_RCC_OscConfig+0xee>
 8006ce0:	f7ff f93e 	bl	8005f60 <HAL_GetTick>
 8006ce4:	4602      	mov	r2, r0
 8006ce6:	693b      	ldr	r3, [r7, #16]
 8006ce8:	1ad3      	subs	r3, r2, r3
 8006cea:	2b64      	cmp	r3, #100	@ 0x64
 8006cec:	d901      	bls.n	8006cf2 <HAL_RCC_OscConfig+0xee>
 8006cee:	2303      	movs	r3, #3
 8006cf0:	e21f      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006cf2:	4b61      	ldr	r3, [pc, #388]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006cfa:	2b00      	cmp	r3, #0
 8006cfc:	d0f0      	beq.n	8006ce0 <HAL_RCC_OscConfig+0xdc>
 8006cfe:	e014      	b.n	8006d2a <HAL_RCC_OscConfig+0x126>
 8006d00:	f7ff f92e 	bl	8005f60 <HAL_GetTick>
 8006d04:	6138      	str	r0, [r7, #16]
 8006d06:	e008      	b.n	8006d1a <HAL_RCC_OscConfig+0x116>
 8006d08:	f7ff f92a 	bl	8005f60 <HAL_GetTick>
 8006d0c:	4602      	mov	r2, r0
 8006d0e:	693b      	ldr	r3, [r7, #16]
 8006d10:	1ad3      	subs	r3, r2, r3
 8006d12:	2b64      	cmp	r3, #100	@ 0x64
 8006d14:	d901      	bls.n	8006d1a <HAL_RCC_OscConfig+0x116>
 8006d16:	2303      	movs	r3, #3
 8006d18:	e20b      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006d1a:	4b57      	ldr	r3, [pc, #348]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d1f0      	bne.n	8006d08 <HAL_RCC_OscConfig+0x104>
 8006d26:	e000      	b.n	8006d2a <HAL_RCC_OscConfig+0x126>
 8006d28:	bf00      	nop
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	f003 0302 	and.w	r3, r3, #2
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d06f      	beq.n	8006e16 <HAL_RCC_OscConfig+0x212>
 8006d36:	4b50      	ldr	r3, [pc, #320]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d38:	689b      	ldr	r3, [r3, #8]
 8006d3a:	f003 030c 	and.w	r3, r3, #12
 8006d3e:	2b00      	cmp	r3, #0
 8006d40:	d017      	beq.n	8006d72 <HAL_RCC_OscConfig+0x16e>
 8006d42:	4b4d      	ldr	r3, [pc, #308]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d44:	689b      	ldr	r3, [r3, #8]
 8006d46:	f003 030c 	and.w	r3, r3, #12
 8006d4a:	2b08      	cmp	r3, #8
 8006d4c:	d105      	bne.n	8006d5a <HAL_RCC_OscConfig+0x156>
 8006d4e:	4b4a      	ldr	r3, [pc, #296]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d50:	685b      	ldr	r3, [r3, #4]
 8006d52:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	d00b      	beq.n	8006d72 <HAL_RCC_OscConfig+0x16e>
 8006d5a:	4b47      	ldr	r3, [pc, #284]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d5c:	689b      	ldr	r3, [r3, #8]
 8006d5e:	f003 030c 	and.w	r3, r3, #12
 8006d62:	2b0c      	cmp	r3, #12
 8006d64:	d11c      	bne.n	8006da0 <HAL_RCC_OscConfig+0x19c>
 8006d66:	4b44      	ldr	r3, [pc, #272]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d68:	685b      	ldr	r3, [r3, #4]
 8006d6a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006d6e:	2b00      	cmp	r3, #0
 8006d70:	d116      	bne.n	8006da0 <HAL_RCC_OscConfig+0x19c>
 8006d72:	4b41      	ldr	r3, [pc, #260]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	f003 0302 	and.w	r3, r3, #2
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d005      	beq.n	8006d8a <HAL_RCC_OscConfig+0x186>
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	68db      	ldr	r3, [r3, #12]
 8006d82:	2b01      	cmp	r3, #1
 8006d84:	d001      	beq.n	8006d8a <HAL_RCC_OscConfig+0x186>
 8006d86:	2301      	movs	r3, #1
 8006d88:	e1d3      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006d8a:	4b3b      	ldr	r3, [pc, #236]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	691b      	ldr	r3, [r3, #16]
 8006d96:	00db      	lsls	r3, r3, #3
 8006d98:	4937      	ldr	r1, [pc, #220]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006d9a:	4313      	orrs	r3, r2
 8006d9c:	600b      	str	r3, [r1, #0]
 8006d9e:	e03a      	b.n	8006e16 <HAL_RCC_OscConfig+0x212>
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	68db      	ldr	r3, [r3, #12]
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d020      	beq.n	8006dea <HAL_RCC_OscConfig+0x1e6>
 8006da8:	4b34      	ldr	r3, [pc, #208]	@ (8006e7c <HAL_RCC_OscConfig+0x278>)
 8006daa:	2201      	movs	r2, #1
 8006dac:	601a      	str	r2, [r3, #0]
 8006dae:	f7ff f8d7 	bl	8005f60 <HAL_GetTick>
 8006db2:	6138      	str	r0, [r7, #16]
 8006db4:	e008      	b.n	8006dc8 <HAL_RCC_OscConfig+0x1c4>
 8006db6:	f7ff f8d3 	bl	8005f60 <HAL_GetTick>
 8006dba:	4602      	mov	r2, r0
 8006dbc:	693b      	ldr	r3, [r7, #16]
 8006dbe:	1ad3      	subs	r3, r2, r3
 8006dc0:	2b02      	cmp	r3, #2
 8006dc2:	d901      	bls.n	8006dc8 <HAL_RCC_OscConfig+0x1c4>
 8006dc4:	2303      	movs	r3, #3
 8006dc6:	e1b4      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006dc8:	4b2b      	ldr	r3, [pc, #172]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	f003 0302 	and.w	r3, r3, #2
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d0f0      	beq.n	8006db6 <HAL_RCC_OscConfig+0x1b2>
 8006dd4:	4b28      	ldr	r3, [pc, #160]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	691b      	ldr	r3, [r3, #16]
 8006de0:	00db      	lsls	r3, r3, #3
 8006de2:	4925      	ldr	r1, [pc, #148]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006de4:	4313      	orrs	r3, r2
 8006de6:	600b      	str	r3, [r1, #0]
 8006de8:	e015      	b.n	8006e16 <HAL_RCC_OscConfig+0x212>
 8006dea:	4b24      	ldr	r3, [pc, #144]	@ (8006e7c <HAL_RCC_OscConfig+0x278>)
 8006dec:	2200      	movs	r2, #0
 8006dee:	601a      	str	r2, [r3, #0]
 8006df0:	f7ff f8b6 	bl	8005f60 <HAL_GetTick>
 8006df4:	6138      	str	r0, [r7, #16]
 8006df6:	e008      	b.n	8006e0a <HAL_RCC_OscConfig+0x206>
 8006df8:	f7ff f8b2 	bl	8005f60 <HAL_GetTick>
 8006dfc:	4602      	mov	r2, r0
 8006dfe:	693b      	ldr	r3, [r7, #16]
 8006e00:	1ad3      	subs	r3, r2, r3
 8006e02:	2b02      	cmp	r3, #2
 8006e04:	d901      	bls.n	8006e0a <HAL_RCC_OscConfig+0x206>
 8006e06:	2303      	movs	r3, #3
 8006e08:	e193      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006e0a:	4b1b      	ldr	r3, [pc, #108]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	f003 0302 	and.w	r3, r3, #2
 8006e12:	2b00      	cmp	r3, #0
 8006e14:	d1f0      	bne.n	8006df8 <HAL_RCC_OscConfig+0x1f4>
 8006e16:	687b      	ldr	r3, [r7, #4]
 8006e18:	681b      	ldr	r3, [r3, #0]
 8006e1a:	f003 0308 	and.w	r3, r3, #8
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d036      	beq.n	8006e90 <HAL_RCC_OscConfig+0x28c>
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	695b      	ldr	r3, [r3, #20]
 8006e26:	2b00      	cmp	r3, #0
 8006e28:	d016      	beq.n	8006e58 <HAL_RCC_OscConfig+0x254>
 8006e2a:	4b15      	ldr	r3, [pc, #84]	@ (8006e80 <HAL_RCC_OscConfig+0x27c>)
 8006e2c:	2201      	movs	r2, #1
 8006e2e:	601a      	str	r2, [r3, #0]
 8006e30:	f7ff f896 	bl	8005f60 <HAL_GetTick>
 8006e34:	6138      	str	r0, [r7, #16]
 8006e36:	e008      	b.n	8006e4a <HAL_RCC_OscConfig+0x246>
 8006e38:	f7ff f892 	bl	8005f60 <HAL_GetTick>
 8006e3c:	4602      	mov	r2, r0
 8006e3e:	693b      	ldr	r3, [r7, #16]
 8006e40:	1ad3      	subs	r3, r2, r3
 8006e42:	2b02      	cmp	r3, #2
 8006e44:	d901      	bls.n	8006e4a <HAL_RCC_OscConfig+0x246>
 8006e46:	2303      	movs	r3, #3
 8006e48:	e173      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006e4a:	4b0b      	ldr	r3, [pc, #44]	@ (8006e78 <HAL_RCC_OscConfig+0x274>)
 8006e4c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e4e:	f003 0302 	and.w	r3, r3, #2
 8006e52:	2b00      	cmp	r3, #0
 8006e54:	d0f0      	beq.n	8006e38 <HAL_RCC_OscConfig+0x234>
 8006e56:	e01b      	b.n	8006e90 <HAL_RCC_OscConfig+0x28c>
 8006e58:	4b09      	ldr	r3, [pc, #36]	@ (8006e80 <HAL_RCC_OscConfig+0x27c>)
 8006e5a:	2200      	movs	r2, #0
 8006e5c:	601a      	str	r2, [r3, #0]
 8006e5e:	f7ff f87f 	bl	8005f60 <HAL_GetTick>
 8006e62:	6138      	str	r0, [r7, #16]
 8006e64:	e00e      	b.n	8006e84 <HAL_RCC_OscConfig+0x280>
 8006e66:	f7ff f87b 	bl	8005f60 <HAL_GetTick>
 8006e6a:	4602      	mov	r2, r0
 8006e6c:	693b      	ldr	r3, [r7, #16]
 8006e6e:	1ad3      	subs	r3, r2, r3
 8006e70:	2b02      	cmp	r3, #2
 8006e72:	d907      	bls.n	8006e84 <HAL_RCC_OscConfig+0x280>
 8006e74:	2303      	movs	r3, #3
 8006e76:	e15c      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006e78:	40023800 	.word	0x40023800
 8006e7c:	42470000 	.word	0x42470000
 8006e80:	42470e80 	.word	0x42470e80
 8006e84:	4b8a      	ldr	r3, [pc, #552]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006e86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e88:	f003 0302 	and.w	r3, r3, #2
 8006e8c:	2b00      	cmp	r3, #0
 8006e8e:	d1ea      	bne.n	8006e66 <HAL_RCC_OscConfig+0x262>
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	f003 0304 	and.w	r3, r3, #4
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	f000 8097 	beq.w	8006fcc <HAL_RCC_OscConfig+0x3c8>
 8006e9e:	2300      	movs	r3, #0
 8006ea0:	75fb      	strb	r3, [r7, #23]
 8006ea2:	4b83      	ldr	r3, [pc, #524]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006ea4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006ea6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006eaa:	2b00      	cmp	r3, #0
 8006eac:	d10f      	bne.n	8006ece <HAL_RCC_OscConfig+0x2ca>
 8006eae:	2300      	movs	r3, #0
 8006eb0:	60bb      	str	r3, [r7, #8]
 8006eb2:	4b7f      	ldr	r3, [pc, #508]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006eb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006eb6:	4a7e      	ldr	r2, [pc, #504]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006eb8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006ebc:	6413      	str	r3, [r2, #64]	@ 0x40
 8006ebe:	4b7c      	ldr	r3, [pc, #496]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006ec0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006ec2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006ec6:	60bb      	str	r3, [r7, #8]
 8006ec8:	68bb      	ldr	r3, [r7, #8]
 8006eca:	2301      	movs	r3, #1
 8006ecc:	75fb      	strb	r3, [r7, #23]
 8006ece:	4b79      	ldr	r3, [pc, #484]	@ (80070b4 <HAL_RCC_OscConfig+0x4b0>)
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d118      	bne.n	8006f0c <HAL_RCC_OscConfig+0x308>
 8006eda:	4b76      	ldr	r3, [pc, #472]	@ (80070b4 <HAL_RCC_OscConfig+0x4b0>)
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	4a75      	ldr	r2, [pc, #468]	@ (80070b4 <HAL_RCC_OscConfig+0x4b0>)
 8006ee0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006ee4:	6013      	str	r3, [r2, #0]
 8006ee6:	f7ff f83b 	bl	8005f60 <HAL_GetTick>
 8006eea:	6138      	str	r0, [r7, #16]
 8006eec:	e008      	b.n	8006f00 <HAL_RCC_OscConfig+0x2fc>
 8006eee:	f7ff f837 	bl	8005f60 <HAL_GetTick>
 8006ef2:	4602      	mov	r2, r0
 8006ef4:	693b      	ldr	r3, [r7, #16]
 8006ef6:	1ad3      	subs	r3, r2, r3
 8006ef8:	2b02      	cmp	r3, #2
 8006efa:	d901      	bls.n	8006f00 <HAL_RCC_OscConfig+0x2fc>
 8006efc:	2303      	movs	r3, #3
 8006efe:	e118      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006f00:	4b6c      	ldr	r3, [pc, #432]	@ (80070b4 <HAL_RCC_OscConfig+0x4b0>)
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006f08:	2b00      	cmp	r3, #0
 8006f0a:	d0f0      	beq.n	8006eee <HAL_RCC_OscConfig+0x2ea>
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	689b      	ldr	r3, [r3, #8]
 8006f10:	2b01      	cmp	r3, #1
 8006f12:	d106      	bne.n	8006f22 <HAL_RCC_OscConfig+0x31e>
 8006f14:	4b66      	ldr	r3, [pc, #408]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f16:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f18:	4a65      	ldr	r2, [pc, #404]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f1a:	f043 0301 	orr.w	r3, r3, #1
 8006f1e:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f20:	e01c      	b.n	8006f5c <HAL_RCC_OscConfig+0x358>
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	689b      	ldr	r3, [r3, #8]
 8006f26:	2b05      	cmp	r3, #5
 8006f28:	d10c      	bne.n	8006f44 <HAL_RCC_OscConfig+0x340>
 8006f2a:	4b61      	ldr	r3, [pc, #388]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f2e:	4a60      	ldr	r2, [pc, #384]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f30:	f043 0304 	orr.w	r3, r3, #4
 8006f34:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f36:	4b5e      	ldr	r3, [pc, #376]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f38:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f3a:	4a5d      	ldr	r2, [pc, #372]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f3c:	f043 0301 	orr.w	r3, r3, #1
 8006f40:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f42:	e00b      	b.n	8006f5c <HAL_RCC_OscConfig+0x358>
 8006f44:	4b5a      	ldr	r3, [pc, #360]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f46:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f48:	4a59      	ldr	r2, [pc, #356]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f4a:	f023 0301 	bic.w	r3, r3, #1
 8006f4e:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f50:	4b57      	ldr	r3, [pc, #348]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f52:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f54:	4a56      	ldr	r2, [pc, #344]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f56:	f023 0304 	bic.w	r3, r3, #4
 8006f5a:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	689b      	ldr	r3, [r3, #8]
 8006f60:	2b00      	cmp	r3, #0
 8006f62:	d015      	beq.n	8006f90 <HAL_RCC_OscConfig+0x38c>
 8006f64:	f7fe fffc 	bl	8005f60 <HAL_GetTick>
 8006f68:	6138      	str	r0, [r7, #16]
 8006f6a:	e00a      	b.n	8006f82 <HAL_RCC_OscConfig+0x37e>
 8006f6c:	f7fe fff8 	bl	8005f60 <HAL_GetTick>
 8006f70:	4602      	mov	r2, r0
 8006f72:	693b      	ldr	r3, [r7, #16]
 8006f74:	1ad3      	subs	r3, r2, r3
 8006f76:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006f7a:	4293      	cmp	r3, r2
 8006f7c:	d901      	bls.n	8006f82 <HAL_RCC_OscConfig+0x37e>
 8006f7e:	2303      	movs	r3, #3
 8006f80:	e0d7      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006f82:	4b4b      	ldr	r3, [pc, #300]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006f84:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f86:	f003 0302 	and.w	r3, r3, #2
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	d0ee      	beq.n	8006f6c <HAL_RCC_OscConfig+0x368>
 8006f8e:	e014      	b.n	8006fba <HAL_RCC_OscConfig+0x3b6>
 8006f90:	f7fe ffe6 	bl	8005f60 <HAL_GetTick>
 8006f94:	6138      	str	r0, [r7, #16]
 8006f96:	e00a      	b.n	8006fae <HAL_RCC_OscConfig+0x3aa>
 8006f98:	f7fe ffe2 	bl	8005f60 <HAL_GetTick>
 8006f9c:	4602      	mov	r2, r0
 8006f9e:	693b      	ldr	r3, [r7, #16]
 8006fa0:	1ad3      	subs	r3, r2, r3
 8006fa2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006fa6:	4293      	cmp	r3, r2
 8006fa8:	d901      	bls.n	8006fae <HAL_RCC_OscConfig+0x3aa>
 8006faa:	2303      	movs	r3, #3
 8006fac:	e0c1      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8006fae:	4b40      	ldr	r3, [pc, #256]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006fb0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006fb2:	f003 0302 	and.w	r3, r3, #2
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	d1ee      	bne.n	8006f98 <HAL_RCC_OscConfig+0x394>
 8006fba:	7dfb      	ldrb	r3, [r7, #23]
 8006fbc:	2b01      	cmp	r3, #1
 8006fbe:	d105      	bne.n	8006fcc <HAL_RCC_OscConfig+0x3c8>
 8006fc0:	4b3b      	ldr	r3, [pc, #236]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006fc4:	4a3a      	ldr	r2, [pc, #232]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006fc6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006fca:	6413      	str	r3, [r2, #64]	@ 0x40
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	699b      	ldr	r3, [r3, #24]
 8006fd0:	2b00      	cmp	r3, #0
 8006fd2:	f000 80ad 	beq.w	8007130 <HAL_RCC_OscConfig+0x52c>
 8006fd6:	4b36      	ldr	r3, [pc, #216]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8006fd8:	689b      	ldr	r3, [r3, #8]
 8006fda:	f003 030c 	and.w	r3, r3, #12
 8006fde:	2b08      	cmp	r3, #8
 8006fe0:	d060      	beq.n	80070a4 <HAL_RCC_OscConfig+0x4a0>
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	699b      	ldr	r3, [r3, #24]
 8006fe6:	2b02      	cmp	r3, #2
 8006fe8:	d145      	bne.n	8007076 <HAL_RCC_OscConfig+0x472>
 8006fea:	4b33      	ldr	r3, [pc, #204]	@ (80070b8 <HAL_RCC_OscConfig+0x4b4>)
 8006fec:	2200      	movs	r2, #0
 8006fee:	601a      	str	r2, [r3, #0]
 8006ff0:	f7fe ffb6 	bl	8005f60 <HAL_GetTick>
 8006ff4:	6138      	str	r0, [r7, #16]
 8006ff6:	e008      	b.n	800700a <HAL_RCC_OscConfig+0x406>
 8006ff8:	f7fe ffb2 	bl	8005f60 <HAL_GetTick>
 8006ffc:	4602      	mov	r2, r0
 8006ffe:	693b      	ldr	r3, [r7, #16]
 8007000:	1ad3      	subs	r3, r2, r3
 8007002:	2b02      	cmp	r3, #2
 8007004:	d901      	bls.n	800700a <HAL_RCC_OscConfig+0x406>
 8007006:	2303      	movs	r3, #3
 8007008:	e093      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 800700a:	4b29      	ldr	r3, [pc, #164]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 800700c:	681b      	ldr	r3, [r3, #0]
 800700e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007012:	2b00      	cmp	r3, #0
 8007014:	d1f0      	bne.n	8006ff8 <HAL_RCC_OscConfig+0x3f4>
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	69da      	ldr	r2, [r3, #28]
 800701a:	687b      	ldr	r3, [r7, #4]
 800701c:	6a1b      	ldr	r3, [r3, #32]
 800701e:	431a      	orrs	r2, r3
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007024:	019b      	lsls	r3, r3, #6
 8007026:	431a      	orrs	r2, r3
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800702c:	085b      	lsrs	r3, r3, #1
 800702e:	3b01      	subs	r3, #1
 8007030:	041b      	lsls	r3, r3, #16
 8007032:	431a      	orrs	r2, r3
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007038:	061b      	lsls	r3, r3, #24
 800703a:	431a      	orrs	r2, r3
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007040:	071b      	lsls	r3, r3, #28
 8007042:	491b      	ldr	r1, [pc, #108]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8007044:	4313      	orrs	r3, r2
 8007046:	604b      	str	r3, [r1, #4]
 8007048:	4b1b      	ldr	r3, [pc, #108]	@ (80070b8 <HAL_RCC_OscConfig+0x4b4>)
 800704a:	2201      	movs	r2, #1
 800704c:	601a      	str	r2, [r3, #0]
 800704e:	f7fe ff87 	bl	8005f60 <HAL_GetTick>
 8007052:	6138      	str	r0, [r7, #16]
 8007054:	e008      	b.n	8007068 <HAL_RCC_OscConfig+0x464>
 8007056:	f7fe ff83 	bl	8005f60 <HAL_GetTick>
 800705a:	4602      	mov	r2, r0
 800705c:	693b      	ldr	r3, [r7, #16]
 800705e:	1ad3      	subs	r3, r2, r3
 8007060:	2b02      	cmp	r3, #2
 8007062:	d901      	bls.n	8007068 <HAL_RCC_OscConfig+0x464>
 8007064:	2303      	movs	r3, #3
 8007066:	e064      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8007068:	4b11      	ldr	r3, [pc, #68]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007070:	2b00      	cmp	r3, #0
 8007072:	d0f0      	beq.n	8007056 <HAL_RCC_OscConfig+0x452>
 8007074:	e05c      	b.n	8007130 <HAL_RCC_OscConfig+0x52c>
 8007076:	4b10      	ldr	r3, [pc, #64]	@ (80070b8 <HAL_RCC_OscConfig+0x4b4>)
 8007078:	2200      	movs	r2, #0
 800707a:	601a      	str	r2, [r3, #0]
 800707c:	f7fe ff70 	bl	8005f60 <HAL_GetTick>
 8007080:	6138      	str	r0, [r7, #16]
 8007082:	e008      	b.n	8007096 <HAL_RCC_OscConfig+0x492>
 8007084:	f7fe ff6c 	bl	8005f60 <HAL_GetTick>
 8007088:	4602      	mov	r2, r0
 800708a:	693b      	ldr	r3, [r7, #16]
 800708c:	1ad3      	subs	r3, r2, r3
 800708e:	2b02      	cmp	r3, #2
 8007090:	d901      	bls.n	8007096 <HAL_RCC_OscConfig+0x492>
 8007092:	2303      	movs	r3, #3
 8007094:	e04d      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8007096:	4b06      	ldr	r3, [pc, #24]	@ (80070b0 <HAL_RCC_OscConfig+0x4ac>)
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800709e:	2b00      	cmp	r3, #0
 80070a0:	d1f0      	bne.n	8007084 <HAL_RCC_OscConfig+0x480>
 80070a2:	e045      	b.n	8007130 <HAL_RCC_OscConfig+0x52c>
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	699b      	ldr	r3, [r3, #24]
 80070a8:	2b01      	cmp	r3, #1
 80070aa:	d107      	bne.n	80070bc <HAL_RCC_OscConfig+0x4b8>
 80070ac:	2301      	movs	r3, #1
 80070ae:	e040      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 80070b0:	40023800 	.word	0x40023800
 80070b4:	40007000 	.word	0x40007000
 80070b8:	42470060 	.word	0x42470060
 80070bc:	4b1f      	ldr	r3, [pc, #124]	@ (800713c <HAL_RCC_OscConfig+0x538>)
 80070be:	685b      	ldr	r3, [r3, #4]
 80070c0:	60fb      	str	r3, [r7, #12]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	699b      	ldr	r3, [r3, #24]
 80070c6:	2b01      	cmp	r3, #1
 80070c8:	d030      	beq.n	800712c <HAL_RCC_OscConfig+0x528>
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80070d0:	687b      	ldr	r3, [r7, #4]
 80070d2:	69db      	ldr	r3, [r3, #28]
 80070d4:	429a      	cmp	r2, r3
 80070d6:	d129      	bne.n	800712c <HAL_RCC_OscConfig+0x528>
 80070d8:	68fb      	ldr	r3, [r7, #12]
 80070da:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	6a1b      	ldr	r3, [r3, #32]
 80070e2:	429a      	cmp	r2, r3
 80070e4:	d122      	bne.n	800712c <HAL_RCC_OscConfig+0x528>
 80070e6:	68fa      	ldr	r2, [r7, #12]
 80070e8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80070ec:	4013      	ands	r3, r2
 80070ee:	687a      	ldr	r2, [r7, #4]
 80070f0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80070f2:	0192      	lsls	r2, r2, #6
 80070f4:	4293      	cmp	r3, r2
 80070f6:	d119      	bne.n	800712c <HAL_RCC_OscConfig+0x528>
 80070f8:	68fb      	ldr	r3, [r7, #12]
 80070fa:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007102:	085b      	lsrs	r3, r3, #1
 8007104:	3b01      	subs	r3, #1
 8007106:	041b      	lsls	r3, r3, #16
 8007108:	429a      	cmp	r2, r3
 800710a:	d10f      	bne.n	800712c <HAL_RCC_OscConfig+0x528>
 800710c:	68fb      	ldr	r3, [r7, #12]
 800710e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007116:	061b      	lsls	r3, r3, #24
 8007118:	429a      	cmp	r2, r3
 800711a:	d107      	bne.n	800712c <HAL_RCC_OscConfig+0x528>
 800711c:	68fb      	ldr	r3, [r7, #12]
 800711e:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8007122:	687b      	ldr	r3, [r7, #4]
 8007124:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007126:	071b      	lsls	r3, r3, #28
 8007128:	429a      	cmp	r2, r3
 800712a:	d001      	beq.n	8007130 <HAL_RCC_OscConfig+0x52c>
 800712c:	2301      	movs	r3, #1
 800712e:	e000      	b.n	8007132 <HAL_RCC_OscConfig+0x52e>
 8007130:	2300      	movs	r3, #0
 8007132:	4618      	mov	r0, r3
 8007134:	3718      	adds	r7, #24
 8007136:	46bd      	mov	sp, r7
 8007138:	bd80      	pop	{r7, pc}
 800713a:	bf00      	nop
 800713c:	40023800 	.word	0x40023800

08007140 <HAL_SPI_Init>:
 8007140:	b580      	push	{r7, lr}
 8007142:	b082      	sub	sp, #8
 8007144:	af00      	add	r7, sp, #0
 8007146:	6078      	str	r0, [r7, #4]
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	2b00      	cmp	r3, #0
 800714c:	d101      	bne.n	8007152 <HAL_SPI_Init+0x12>
 800714e:	2301      	movs	r3, #1
 8007150:	e07b      	b.n	800724a <HAL_SPI_Init+0x10a>
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007156:	2b00      	cmp	r3, #0
 8007158:	d108      	bne.n	800716c <HAL_SPI_Init+0x2c>
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	685b      	ldr	r3, [r3, #4]
 800715e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007162:	d009      	beq.n	8007178 <HAL_SPI_Init+0x38>
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	2200      	movs	r2, #0
 8007168:	61da      	str	r2, [r3, #28]
 800716a:	e005      	b.n	8007178 <HAL_SPI_Init+0x38>
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	2200      	movs	r2, #0
 8007170:	611a      	str	r2, [r3, #16]
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	2200      	movs	r2, #0
 8007176:	615a      	str	r2, [r3, #20]
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2200      	movs	r2, #0
 800717c:	629a      	str	r2, [r3, #40]	@ 0x28
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007184:	b2db      	uxtb	r3, r3
 8007186:	2b00      	cmp	r3, #0
 8007188:	d106      	bne.n	8007198 <HAL_SPI_Init+0x58>
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	2200      	movs	r2, #0
 800718e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007192:	6878      	ldr	r0, [r7, #4]
 8007194:	f7fe fc60 	bl	8005a58 <HAL_SPI_MspInit>
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	2202      	movs	r2, #2
 800719c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	681a      	ldr	r2, [r3, #0]
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80071ae:	601a      	str	r2, [r3, #0]
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	685b      	ldr	r3, [r3, #4]
 80071b4:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	689b      	ldr	r3, [r3, #8]
 80071bc:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80071c0:	431a      	orrs	r2, r3
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	68db      	ldr	r3, [r3, #12]
 80071c6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80071ca:	431a      	orrs	r2, r3
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	691b      	ldr	r3, [r3, #16]
 80071d0:	f003 0302 	and.w	r3, r3, #2
 80071d4:	431a      	orrs	r2, r3
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	695b      	ldr	r3, [r3, #20]
 80071da:	f003 0301 	and.w	r3, r3, #1
 80071de:	431a      	orrs	r2, r3
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	699b      	ldr	r3, [r3, #24]
 80071e4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80071e8:	431a      	orrs	r2, r3
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	69db      	ldr	r3, [r3, #28]
 80071ee:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80071f2:	431a      	orrs	r2, r3
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	6a1b      	ldr	r3, [r3, #32]
 80071f8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80071fc:	ea42 0103 	orr.w	r1, r2, r3
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007204:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	430a      	orrs	r2, r1
 800720e:	601a      	str	r2, [r3, #0]
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	699b      	ldr	r3, [r3, #24]
 8007214:	0c1b      	lsrs	r3, r3, #16
 8007216:	f003 0104 	and.w	r1, r3, #4
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800721e:	f003 0210 	and.w	r2, r3, #16
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	681b      	ldr	r3, [r3, #0]
 8007226:	430a      	orrs	r2, r1
 8007228:	605a      	str	r2, [r3, #4]
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	681b      	ldr	r3, [r3, #0]
 800722e:	69da      	ldr	r2, [r3, #28]
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007238:	61da      	str	r2, [r3, #28]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	2200      	movs	r2, #0
 800723e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	2201      	movs	r2, #1
 8007244:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007248:	2300      	movs	r3, #0
 800724a:	4618      	mov	r0, r3
 800724c:	3708      	adds	r7, #8
 800724e:	46bd      	mov	sp, r7
 8007250:	bd80      	pop	{r7, pc}

08007252 <HAL_SPI_Transmit>:
 8007252:	b580      	push	{r7, lr}
 8007254:	b088      	sub	sp, #32
 8007256:	af00      	add	r7, sp, #0
 8007258:	60f8      	str	r0, [r7, #12]
 800725a:	60b9      	str	r1, [r7, #8]
 800725c:	603b      	str	r3, [r7, #0]
 800725e:	4613      	mov	r3, r2
 8007260:	80fb      	strh	r3, [r7, #6]
 8007262:	2300      	movs	r3, #0
 8007264:	77fb      	strb	r3, [r7, #31]
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800726c:	2b01      	cmp	r3, #1
 800726e:	d101      	bne.n	8007274 <HAL_SPI_Transmit+0x22>
 8007270:	2302      	movs	r3, #2
 8007272:	e12d      	b.n	80074d0 <HAL_SPI_Transmit+0x27e>
 8007274:	68fb      	ldr	r3, [r7, #12]
 8007276:	2201      	movs	r2, #1
 8007278:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800727c:	f7fe fe70 	bl	8005f60 <HAL_GetTick>
 8007280:	61b8      	str	r0, [r7, #24]
 8007282:	88fb      	ldrh	r3, [r7, #6]
 8007284:	82fb      	strh	r3, [r7, #22]
 8007286:	68fb      	ldr	r3, [r7, #12]
 8007288:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800728c:	b2db      	uxtb	r3, r3
 800728e:	2b01      	cmp	r3, #1
 8007290:	d002      	beq.n	8007298 <HAL_SPI_Transmit+0x46>
 8007292:	2302      	movs	r3, #2
 8007294:	77fb      	strb	r3, [r7, #31]
 8007296:	e116      	b.n	80074c6 <HAL_SPI_Transmit+0x274>
 8007298:	68bb      	ldr	r3, [r7, #8]
 800729a:	2b00      	cmp	r3, #0
 800729c:	d002      	beq.n	80072a4 <HAL_SPI_Transmit+0x52>
 800729e:	88fb      	ldrh	r3, [r7, #6]
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d102      	bne.n	80072aa <HAL_SPI_Transmit+0x58>
 80072a4:	2301      	movs	r3, #1
 80072a6:	77fb      	strb	r3, [r7, #31]
 80072a8:	e10d      	b.n	80074c6 <HAL_SPI_Transmit+0x274>
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	2203      	movs	r2, #3
 80072ae:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80072b2:	68fb      	ldr	r3, [r7, #12]
 80072b4:	2200      	movs	r2, #0
 80072b6:	655a      	str	r2, [r3, #84]	@ 0x54
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	68ba      	ldr	r2, [r7, #8]
 80072bc:	631a      	str	r2, [r3, #48]	@ 0x30
 80072be:	68fb      	ldr	r3, [r7, #12]
 80072c0:	88fa      	ldrh	r2, [r7, #6]
 80072c2:	869a      	strh	r2, [r3, #52]	@ 0x34
 80072c4:	68fb      	ldr	r3, [r7, #12]
 80072c6:	88fa      	ldrh	r2, [r7, #6]
 80072c8:	86da      	strh	r2, [r3, #54]	@ 0x36
 80072ca:	68fb      	ldr	r3, [r7, #12]
 80072cc:	2200      	movs	r2, #0
 80072ce:	639a      	str	r2, [r3, #56]	@ 0x38
 80072d0:	68fb      	ldr	r3, [r7, #12]
 80072d2:	2200      	movs	r2, #0
 80072d4:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	2200      	movs	r2, #0
 80072da:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	2200      	movs	r2, #0
 80072e0:	645a      	str	r2, [r3, #68]	@ 0x44
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	2200      	movs	r2, #0
 80072e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80072e8:	68fb      	ldr	r3, [r7, #12]
 80072ea:	689b      	ldr	r3, [r3, #8]
 80072ec:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80072f0:	d10f      	bne.n	8007312 <HAL_SPI_Transmit+0xc0>
 80072f2:	68fb      	ldr	r3, [r7, #12]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	681a      	ldr	r2, [r3, #0]
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007300:	601a      	str	r2, [r3, #0]
 8007302:	68fb      	ldr	r3, [r7, #12]
 8007304:	681b      	ldr	r3, [r3, #0]
 8007306:	681a      	ldr	r2, [r3, #0]
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	681b      	ldr	r3, [r3, #0]
 800730c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007310:	601a      	str	r2, [r3, #0]
 8007312:	68fb      	ldr	r3, [r7, #12]
 8007314:	681b      	ldr	r3, [r3, #0]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800731c:	2b40      	cmp	r3, #64	@ 0x40
 800731e:	d007      	beq.n	8007330 <HAL_SPI_Transmit+0xde>
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	681a      	ldr	r2, [r3, #0]
 8007326:	68fb      	ldr	r3, [r7, #12]
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800732e:	601a      	str	r2, [r3, #0]
 8007330:	68fb      	ldr	r3, [r7, #12]
 8007332:	68db      	ldr	r3, [r3, #12]
 8007334:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007338:	d14f      	bne.n	80073da <HAL_SPI_Transmit+0x188>
 800733a:	68fb      	ldr	r3, [r7, #12]
 800733c:	685b      	ldr	r3, [r3, #4]
 800733e:	2b00      	cmp	r3, #0
 8007340:	d002      	beq.n	8007348 <HAL_SPI_Transmit+0xf6>
 8007342:	8afb      	ldrh	r3, [r7, #22]
 8007344:	2b01      	cmp	r3, #1
 8007346:	d142      	bne.n	80073ce <HAL_SPI_Transmit+0x17c>
 8007348:	68fb      	ldr	r3, [r7, #12]
 800734a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800734c:	881a      	ldrh	r2, [r3, #0]
 800734e:	68fb      	ldr	r3, [r7, #12]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	60da      	str	r2, [r3, #12]
 8007354:	68fb      	ldr	r3, [r7, #12]
 8007356:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007358:	1c9a      	adds	r2, r3, #2
 800735a:	68fb      	ldr	r3, [r7, #12]
 800735c:	631a      	str	r2, [r3, #48]	@ 0x30
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007362:	b29b      	uxth	r3, r3
 8007364:	3b01      	subs	r3, #1
 8007366:	b29a      	uxth	r2, r3
 8007368:	68fb      	ldr	r3, [r7, #12]
 800736a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800736c:	e02f      	b.n	80073ce <HAL_SPI_Transmit+0x17c>
 800736e:	68fb      	ldr	r3, [r7, #12]
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	689b      	ldr	r3, [r3, #8]
 8007374:	f003 0302 	and.w	r3, r3, #2
 8007378:	2b02      	cmp	r3, #2
 800737a:	d112      	bne.n	80073a2 <HAL_SPI_Transmit+0x150>
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007380:	881a      	ldrh	r2, [r3, #0]
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	681b      	ldr	r3, [r3, #0]
 8007386:	60da      	str	r2, [r3, #12]
 8007388:	68fb      	ldr	r3, [r7, #12]
 800738a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800738c:	1c9a      	adds	r2, r3, #2
 800738e:	68fb      	ldr	r3, [r7, #12]
 8007390:	631a      	str	r2, [r3, #48]	@ 0x30
 8007392:	68fb      	ldr	r3, [r7, #12]
 8007394:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007396:	b29b      	uxth	r3, r3
 8007398:	3b01      	subs	r3, #1
 800739a:	b29a      	uxth	r2, r3
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	86da      	strh	r2, [r3, #54]	@ 0x36
 80073a0:	e015      	b.n	80073ce <HAL_SPI_Transmit+0x17c>
 80073a2:	f7fe fddd 	bl	8005f60 <HAL_GetTick>
 80073a6:	4602      	mov	r2, r0
 80073a8:	69bb      	ldr	r3, [r7, #24]
 80073aa:	1ad3      	subs	r3, r2, r3
 80073ac:	683a      	ldr	r2, [r7, #0]
 80073ae:	429a      	cmp	r2, r3
 80073b0:	d803      	bhi.n	80073ba <HAL_SPI_Transmit+0x168>
 80073b2:	683b      	ldr	r3, [r7, #0]
 80073b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80073b8:	d102      	bne.n	80073c0 <HAL_SPI_Transmit+0x16e>
 80073ba:	683b      	ldr	r3, [r7, #0]
 80073bc:	2b00      	cmp	r3, #0
 80073be:	d106      	bne.n	80073ce <HAL_SPI_Transmit+0x17c>
 80073c0:	2303      	movs	r3, #3
 80073c2:	77fb      	strb	r3, [r7, #31]
 80073c4:	68fb      	ldr	r3, [r7, #12]
 80073c6:	2201      	movs	r2, #1
 80073c8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80073cc:	e07b      	b.n	80074c6 <HAL_SPI_Transmit+0x274>
 80073ce:	68fb      	ldr	r3, [r7, #12]
 80073d0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80073d2:	b29b      	uxth	r3, r3
 80073d4:	2b00      	cmp	r3, #0
 80073d6:	d1ca      	bne.n	800736e <HAL_SPI_Transmit+0x11c>
 80073d8:	e050      	b.n	800747c <HAL_SPI_Transmit+0x22a>
 80073da:	68fb      	ldr	r3, [r7, #12]
 80073dc:	685b      	ldr	r3, [r3, #4]
 80073de:	2b00      	cmp	r3, #0
 80073e0:	d002      	beq.n	80073e8 <HAL_SPI_Transmit+0x196>
 80073e2:	8afb      	ldrh	r3, [r7, #22]
 80073e4:	2b01      	cmp	r3, #1
 80073e6:	d144      	bne.n	8007472 <HAL_SPI_Transmit+0x220>
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80073ec:	68fb      	ldr	r3, [r7, #12]
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	330c      	adds	r3, #12
 80073f2:	7812      	ldrb	r2, [r2, #0]
 80073f4:	701a      	strb	r2, [r3, #0]
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80073fa:	1c5a      	adds	r2, r3, #1
 80073fc:	68fb      	ldr	r3, [r7, #12]
 80073fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8007400:	68fb      	ldr	r3, [r7, #12]
 8007402:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007404:	b29b      	uxth	r3, r3
 8007406:	3b01      	subs	r3, #1
 8007408:	b29a      	uxth	r2, r3
 800740a:	68fb      	ldr	r3, [r7, #12]
 800740c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800740e:	e030      	b.n	8007472 <HAL_SPI_Transmit+0x220>
 8007410:	68fb      	ldr	r3, [r7, #12]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	689b      	ldr	r3, [r3, #8]
 8007416:	f003 0302 	and.w	r3, r3, #2
 800741a:	2b02      	cmp	r3, #2
 800741c:	d113      	bne.n	8007446 <HAL_SPI_Transmit+0x1f4>
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007422:	68fb      	ldr	r3, [r7, #12]
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	330c      	adds	r3, #12
 8007428:	7812      	ldrb	r2, [r2, #0]
 800742a:	701a      	strb	r2, [r3, #0]
 800742c:	68fb      	ldr	r3, [r7, #12]
 800742e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007430:	1c5a      	adds	r2, r3, #1
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	631a      	str	r2, [r3, #48]	@ 0x30
 8007436:	68fb      	ldr	r3, [r7, #12]
 8007438:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800743a:	b29b      	uxth	r3, r3
 800743c:	3b01      	subs	r3, #1
 800743e:	b29a      	uxth	r2, r3
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007444:	e015      	b.n	8007472 <HAL_SPI_Transmit+0x220>
 8007446:	f7fe fd8b 	bl	8005f60 <HAL_GetTick>
 800744a:	4602      	mov	r2, r0
 800744c:	69bb      	ldr	r3, [r7, #24]
 800744e:	1ad3      	subs	r3, r2, r3
 8007450:	683a      	ldr	r2, [r7, #0]
 8007452:	429a      	cmp	r2, r3
 8007454:	d803      	bhi.n	800745e <HAL_SPI_Transmit+0x20c>
 8007456:	683b      	ldr	r3, [r7, #0]
 8007458:	f1b3 3fff 	cmp.w	r3, #4294967295
 800745c:	d102      	bne.n	8007464 <HAL_SPI_Transmit+0x212>
 800745e:	683b      	ldr	r3, [r7, #0]
 8007460:	2b00      	cmp	r3, #0
 8007462:	d106      	bne.n	8007472 <HAL_SPI_Transmit+0x220>
 8007464:	2303      	movs	r3, #3
 8007466:	77fb      	strb	r3, [r7, #31]
 8007468:	68fb      	ldr	r3, [r7, #12]
 800746a:	2201      	movs	r2, #1
 800746c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007470:	e029      	b.n	80074c6 <HAL_SPI_Transmit+0x274>
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007476:	b29b      	uxth	r3, r3
 8007478:	2b00      	cmp	r3, #0
 800747a:	d1c9      	bne.n	8007410 <HAL_SPI_Transmit+0x1be>
 800747c:	69ba      	ldr	r2, [r7, #24]
 800747e:	6839      	ldr	r1, [r7, #0]
 8007480:	68f8      	ldr	r0, [r7, #12]
 8007482:	f000 fa61 	bl	8007948 <SPI_EndRxTxTransaction>
 8007486:	4603      	mov	r3, r0
 8007488:	2b00      	cmp	r3, #0
 800748a:	d002      	beq.n	8007492 <HAL_SPI_Transmit+0x240>
 800748c:	68fb      	ldr	r3, [r7, #12]
 800748e:	2220      	movs	r2, #32
 8007490:	655a      	str	r2, [r3, #84]	@ 0x54
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	689b      	ldr	r3, [r3, #8]
 8007496:	2b00      	cmp	r3, #0
 8007498:	d10a      	bne.n	80074b0 <HAL_SPI_Transmit+0x25e>
 800749a:	2300      	movs	r3, #0
 800749c:	613b      	str	r3, [r7, #16]
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	68db      	ldr	r3, [r3, #12]
 80074a4:	613b      	str	r3, [r7, #16]
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	689b      	ldr	r3, [r3, #8]
 80074ac:	613b      	str	r3, [r7, #16]
 80074ae:	693b      	ldr	r3, [r7, #16]
 80074b0:	68fb      	ldr	r3, [r7, #12]
 80074b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d002      	beq.n	80074be <HAL_SPI_Transmit+0x26c>
 80074b8:	2301      	movs	r3, #1
 80074ba:	77fb      	strb	r3, [r7, #31]
 80074bc:	e003      	b.n	80074c6 <HAL_SPI_Transmit+0x274>
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	2201      	movs	r2, #1
 80074c2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80074c6:	68fb      	ldr	r3, [r7, #12]
 80074c8:	2200      	movs	r2, #0
 80074ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80074ce:	7ffb      	ldrb	r3, [r7, #31]
 80074d0:	4618      	mov	r0, r3
 80074d2:	3720      	adds	r7, #32
 80074d4:	46bd      	mov	sp, r7
 80074d6:	bd80      	pop	{r7, pc}

080074d8 <HAL_SPI_TransmitReceive>:
 80074d8:	b580      	push	{r7, lr}
 80074da:	b08c      	sub	sp, #48	@ 0x30
 80074dc:	af00      	add	r7, sp, #0
 80074de:	60f8      	str	r0, [r7, #12]
 80074e0:	60b9      	str	r1, [r7, #8]
 80074e2:	607a      	str	r2, [r7, #4]
 80074e4:	807b      	strh	r3, [r7, #2]
 80074e6:	2301      	movs	r3, #1
 80074e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80074ea:	2300      	movs	r3, #0
 80074ec:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80074f6:	2b01      	cmp	r3, #1
 80074f8:	d101      	bne.n	80074fe <HAL_SPI_TransmitReceive+0x26>
 80074fa:	2302      	movs	r3, #2
 80074fc:	e198      	b.n	8007830 <HAL_SPI_TransmitReceive+0x358>
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	2201      	movs	r2, #1
 8007502:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007506:	f7fe fd2b 	bl	8005f60 <HAL_GetTick>
 800750a:	6278      	str	r0, [r7, #36]	@ 0x24
 800750c:	68fb      	ldr	r3, [r7, #12]
 800750e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007512:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	685b      	ldr	r3, [r3, #4]
 800751a:	61fb      	str	r3, [r7, #28]
 800751c:	887b      	ldrh	r3, [r7, #2]
 800751e:	837b      	strh	r3, [r7, #26]
 8007520:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8007524:	2b01      	cmp	r3, #1
 8007526:	d00f      	beq.n	8007548 <HAL_SPI_TransmitReceive+0x70>
 8007528:	69fb      	ldr	r3, [r7, #28]
 800752a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800752e:	d107      	bne.n	8007540 <HAL_SPI_TransmitReceive+0x68>
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	689b      	ldr	r3, [r3, #8]
 8007534:	2b00      	cmp	r3, #0
 8007536:	d103      	bne.n	8007540 <HAL_SPI_TransmitReceive+0x68>
 8007538:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800753c:	2b04      	cmp	r3, #4
 800753e:	d003      	beq.n	8007548 <HAL_SPI_TransmitReceive+0x70>
 8007540:	2302      	movs	r3, #2
 8007542:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007546:	e16d      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 8007548:	68bb      	ldr	r3, [r7, #8]
 800754a:	2b00      	cmp	r3, #0
 800754c:	d005      	beq.n	800755a <HAL_SPI_TransmitReceive+0x82>
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	2b00      	cmp	r3, #0
 8007552:	d002      	beq.n	800755a <HAL_SPI_TransmitReceive+0x82>
 8007554:	887b      	ldrh	r3, [r7, #2]
 8007556:	2b00      	cmp	r3, #0
 8007558:	d103      	bne.n	8007562 <HAL_SPI_TransmitReceive+0x8a>
 800755a:	2301      	movs	r3, #1
 800755c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8007560:	e160      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007568:	b2db      	uxtb	r3, r3
 800756a:	2b04      	cmp	r3, #4
 800756c:	d003      	beq.n	8007576 <HAL_SPI_TransmitReceive+0x9e>
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	2205      	movs	r2, #5
 8007572:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	2200      	movs	r2, #0
 800757a:	655a      	str	r2, [r3, #84]	@ 0x54
 800757c:	68fb      	ldr	r3, [r7, #12]
 800757e:	687a      	ldr	r2, [r7, #4]
 8007580:	639a      	str	r2, [r3, #56]	@ 0x38
 8007582:	68fb      	ldr	r3, [r7, #12]
 8007584:	887a      	ldrh	r2, [r7, #2]
 8007586:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007588:	68fb      	ldr	r3, [r7, #12]
 800758a:	887a      	ldrh	r2, [r7, #2]
 800758c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	68ba      	ldr	r2, [r7, #8]
 8007592:	631a      	str	r2, [r3, #48]	@ 0x30
 8007594:	68fb      	ldr	r3, [r7, #12]
 8007596:	887a      	ldrh	r2, [r7, #2]
 8007598:	86da      	strh	r2, [r3, #54]	@ 0x36
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	887a      	ldrh	r2, [r7, #2]
 800759e:	869a      	strh	r2, [r3, #52]	@ 0x34
 80075a0:	68fb      	ldr	r3, [r7, #12]
 80075a2:	2200      	movs	r2, #0
 80075a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	2200      	movs	r2, #0
 80075aa:	645a      	str	r2, [r3, #68]	@ 0x44
 80075ac:	68fb      	ldr	r3, [r7, #12]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80075b6:	2b40      	cmp	r3, #64	@ 0x40
 80075b8:	d007      	beq.n	80075ca <HAL_SPI_TransmitReceive+0xf2>
 80075ba:	68fb      	ldr	r3, [r7, #12]
 80075bc:	681b      	ldr	r3, [r3, #0]
 80075be:	681a      	ldr	r2, [r3, #0]
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80075c8:	601a      	str	r2, [r3, #0]
 80075ca:	68fb      	ldr	r3, [r7, #12]
 80075cc:	68db      	ldr	r3, [r3, #12]
 80075ce:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80075d2:	d17c      	bne.n	80076ce <HAL_SPI_TransmitReceive+0x1f6>
 80075d4:	68fb      	ldr	r3, [r7, #12]
 80075d6:	685b      	ldr	r3, [r3, #4]
 80075d8:	2b00      	cmp	r3, #0
 80075da:	d002      	beq.n	80075e2 <HAL_SPI_TransmitReceive+0x10a>
 80075dc:	8b7b      	ldrh	r3, [r7, #26]
 80075de:	2b01      	cmp	r3, #1
 80075e0:	d16a      	bne.n	80076b8 <HAL_SPI_TransmitReceive+0x1e0>
 80075e2:	68fb      	ldr	r3, [r7, #12]
 80075e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80075e6:	881a      	ldrh	r2, [r3, #0]
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	60da      	str	r2, [r3, #12]
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80075f2:	1c9a      	adds	r2, r3, #2
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80075f8:	68fb      	ldr	r3, [r7, #12]
 80075fa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80075fc:	b29b      	uxth	r3, r3
 80075fe:	3b01      	subs	r3, #1
 8007600:	b29a      	uxth	r2, r3
 8007602:	68fb      	ldr	r3, [r7, #12]
 8007604:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007606:	e057      	b.n	80076b8 <HAL_SPI_TransmitReceive+0x1e0>
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	689b      	ldr	r3, [r3, #8]
 800760e:	f003 0302 	and.w	r3, r3, #2
 8007612:	2b02      	cmp	r3, #2
 8007614:	d11b      	bne.n	800764e <HAL_SPI_TransmitReceive+0x176>
 8007616:	68fb      	ldr	r3, [r7, #12]
 8007618:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800761a:	b29b      	uxth	r3, r3
 800761c:	2b00      	cmp	r3, #0
 800761e:	d016      	beq.n	800764e <HAL_SPI_TransmitReceive+0x176>
 8007620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8007622:	2b01      	cmp	r3, #1
 8007624:	d113      	bne.n	800764e <HAL_SPI_TransmitReceive+0x176>
 8007626:	68fb      	ldr	r3, [r7, #12]
 8007628:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800762a:	881a      	ldrh	r2, [r3, #0]
 800762c:	68fb      	ldr	r3, [r7, #12]
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	60da      	str	r2, [r3, #12]
 8007632:	68fb      	ldr	r3, [r7, #12]
 8007634:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007636:	1c9a      	adds	r2, r3, #2
 8007638:	68fb      	ldr	r3, [r7, #12]
 800763a:	631a      	str	r2, [r3, #48]	@ 0x30
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007640:	b29b      	uxth	r3, r3
 8007642:	3b01      	subs	r3, #1
 8007644:	b29a      	uxth	r2, r3
 8007646:	68fb      	ldr	r3, [r7, #12]
 8007648:	86da      	strh	r2, [r3, #54]	@ 0x36
 800764a:	2300      	movs	r3, #0
 800764c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800764e:	68fb      	ldr	r3, [r7, #12]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	689b      	ldr	r3, [r3, #8]
 8007654:	f003 0301 	and.w	r3, r3, #1
 8007658:	2b01      	cmp	r3, #1
 800765a:	d119      	bne.n	8007690 <HAL_SPI_TransmitReceive+0x1b8>
 800765c:	68fb      	ldr	r3, [r7, #12]
 800765e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007660:	b29b      	uxth	r3, r3
 8007662:	2b00      	cmp	r3, #0
 8007664:	d014      	beq.n	8007690 <HAL_SPI_TransmitReceive+0x1b8>
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	68da      	ldr	r2, [r3, #12]
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007670:	b292      	uxth	r2, r2
 8007672:	801a      	strh	r2, [r3, #0]
 8007674:	68fb      	ldr	r3, [r7, #12]
 8007676:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007678:	1c9a      	adds	r2, r3, #2
 800767a:	68fb      	ldr	r3, [r7, #12]
 800767c:	639a      	str	r2, [r3, #56]	@ 0x38
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007682:	b29b      	uxth	r3, r3
 8007684:	3b01      	subs	r3, #1
 8007686:	b29a      	uxth	r2, r3
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800768c:	2301      	movs	r3, #1
 800768e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007690:	f7fe fc66 	bl	8005f60 <HAL_GetTick>
 8007694:	4602      	mov	r2, r0
 8007696:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007698:	1ad3      	subs	r3, r2, r3
 800769a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800769c:	429a      	cmp	r2, r3
 800769e:	d80b      	bhi.n	80076b8 <HAL_SPI_TransmitReceive+0x1e0>
 80076a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80076a2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80076a6:	d007      	beq.n	80076b8 <HAL_SPI_TransmitReceive+0x1e0>
 80076a8:	2303      	movs	r3, #3
 80076aa:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	2201      	movs	r2, #1
 80076b2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80076b6:	e0b5      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 80076b8:	68fb      	ldr	r3, [r7, #12]
 80076ba:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80076bc:	b29b      	uxth	r3, r3
 80076be:	2b00      	cmp	r3, #0
 80076c0:	d1a2      	bne.n	8007608 <HAL_SPI_TransmitReceive+0x130>
 80076c2:	68fb      	ldr	r3, [r7, #12]
 80076c4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80076c6:	b29b      	uxth	r3, r3
 80076c8:	2b00      	cmp	r3, #0
 80076ca:	d19d      	bne.n	8007608 <HAL_SPI_TransmitReceive+0x130>
 80076cc:	e080      	b.n	80077d0 <HAL_SPI_TransmitReceive+0x2f8>
 80076ce:	68fb      	ldr	r3, [r7, #12]
 80076d0:	685b      	ldr	r3, [r3, #4]
 80076d2:	2b00      	cmp	r3, #0
 80076d4:	d002      	beq.n	80076dc <HAL_SPI_TransmitReceive+0x204>
 80076d6:	8b7b      	ldrh	r3, [r7, #26]
 80076d8:	2b01      	cmp	r3, #1
 80076da:	d16f      	bne.n	80077bc <HAL_SPI_TransmitReceive+0x2e4>
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80076e0:	68fb      	ldr	r3, [r7, #12]
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	330c      	adds	r3, #12
 80076e6:	7812      	ldrb	r2, [r2, #0]
 80076e8:	701a      	strb	r2, [r3, #0]
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80076ee:	1c5a      	adds	r2, r3, #1
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80076f4:	68fb      	ldr	r3, [r7, #12]
 80076f6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80076f8:	b29b      	uxth	r3, r3
 80076fa:	3b01      	subs	r3, #1
 80076fc:	b29a      	uxth	r2, r3
 80076fe:	68fb      	ldr	r3, [r7, #12]
 8007700:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007702:	e05b      	b.n	80077bc <HAL_SPI_TransmitReceive+0x2e4>
 8007704:	68fb      	ldr	r3, [r7, #12]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	689b      	ldr	r3, [r3, #8]
 800770a:	f003 0302 	and.w	r3, r3, #2
 800770e:	2b02      	cmp	r3, #2
 8007710:	d11c      	bne.n	800774c <HAL_SPI_TransmitReceive+0x274>
 8007712:	68fb      	ldr	r3, [r7, #12]
 8007714:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007716:	b29b      	uxth	r3, r3
 8007718:	2b00      	cmp	r3, #0
 800771a:	d017      	beq.n	800774c <HAL_SPI_TransmitReceive+0x274>
 800771c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800771e:	2b01      	cmp	r3, #1
 8007720:	d114      	bne.n	800774c <HAL_SPI_TransmitReceive+0x274>
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007726:	68fb      	ldr	r3, [r7, #12]
 8007728:	681b      	ldr	r3, [r3, #0]
 800772a:	330c      	adds	r3, #12
 800772c:	7812      	ldrb	r2, [r2, #0]
 800772e:	701a      	strb	r2, [r3, #0]
 8007730:	68fb      	ldr	r3, [r7, #12]
 8007732:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007734:	1c5a      	adds	r2, r3, #1
 8007736:	68fb      	ldr	r3, [r7, #12]
 8007738:	631a      	str	r2, [r3, #48]	@ 0x30
 800773a:	68fb      	ldr	r3, [r7, #12]
 800773c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800773e:	b29b      	uxth	r3, r3
 8007740:	3b01      	subs	r3, #1
 8007742:	b29a      	uxth	r2, r3
 8007744:	68fb      	ldr	r3, [r7, #12]
 8007746:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007748:	2300      	movs	r3, #0
 800774a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	689b      	ldr	r3, [r3, #8]
 8007752:	f003 0301 	and.w	r3, r3, #1
 8007756:	2b01      	cmp	r3, #1
 8007758:	d119      	bne.n	800778e <HAL_SPI_TransmitReceive+0x2b6>
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800775e:	b29b      	uxth	r3, r3
 8007760:	2b00      	cmp	r3, #0
 8007762:	d014      	beq.n	800778e <HAL_SPI_TransmitReceive+0x2b6>
 8007764:	68fb      	ldr	r3, [r7, #12]
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	68da      	ldr	r2, [r3, #12]
 800776a:	68fb      	ldr	r3, [r7, #12]
 800776c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800776e:	b2d2      	uxtb	r2, r2
 8007770:	701a      	strb	r2, [r3, #0]
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007776:	1c5a      	adds	r2, r3, #1
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	639a      	str	r2, [r3, #56]	@ 0x38
 800777c:	68fb      	ldr	r3, [r7, #12]
 800777e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007780:	b29b      	uxth	r3, r3
 8007782:	3b01      	subs	r3, #1
 8007784:	b29a      	uxth	r2, r3
 8007786:	68fb      	ldr	r3, [r7, #12]
 8007788:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800778a:	2301      	movs	r3, #1
 800778c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800778e:	f7fe fbe7 	bl	8005f60 <HAL_GetTick>
 8007792:	4602      	mov	r2, r0
 8007794:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007796:	1ad3      	subs	r3, r2, r3
 8007798:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800779a:	429a      	cmp	r2, r3
 800779c:	d803      	bhi.n	80077a6 <HAL_SPI_TransmitReceive+0x2ce>
 800779e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80077a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077a4:	d102      	bne.n	80077ac <HAL_SPI_TransmitReceive+0x2d4>
 80077a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d107      	bne.n	80077bc <HAL_SPI_TransmitReceive+0x2e4>
 80077ac:	2303      	movs	r3, #3
 80077ae:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80077b2:	68fb      	ldr	r3, [r7, #12]
 80077b4:	2201      	movs	r2, #1
 80077b6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80077ba:	e033      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 80077bc:	68fb      	ldr	r3, [r7, #12]
 80077be:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80077c0:	b29b      	uxth	r3, r3
 80077c2:	2b00      	cmp	r3, #0
 80077c4:	d19e      	bne.n	8007704 <HAL_SPI_TransmitReceive+0x22c>
 80077c6:	68fb      	ldr	r3, [r7, #12]
 80077c8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80077ca:	b29b      	uxth	r3, r3
 80077cc:	2b00      	cmp	r3, #0
 80077ce:	d199      	bne.n	8007704 <HAL_SPI_TransmitReceive+0x22c>
 80077d0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80077d2:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80077d4:	68f8      	ldr	r0, [r7, #12]
 80077d6:	f000 f8b7 	bl	8007948 <SPI_EndRxTxTransaction>
 80077da:	4603      	mov	r3, r0
 80077dc:	2b00      	cmp	r3, #0
 80077de:	d006      	beq.n	80077ee <HAL_SPI_TransmitReceive+0x316>
 80077e0:	2301      	movs	r3, #1
 80077e2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80077e6:	68fb      	ldr	r3, [r7, #12]
 80077e8:	2220      	movs	r2, #32
 80077ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80077ec:	e01a      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	689b      	ldr	r3, [r3, #8]
 80077f2:	2b00      	cmp	r3, #0
 80077f4:	d10a      	bne.n	800780c <HAL_SPI_TransmitReceive+0x334>
 80077f6:	2300      	movs	r3, #0
 80077f8:	617b      	str	r3, [r7, #20]
 80077fa:	68fb      	ldr	r3, [r7, #12]
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	68db      	ldr	r3, [r3, #12]
 8007800:	617b      	str	r3, [r7, #20]
 8007802:	68fb      	ldr	r3, [r7, #12]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	689b      	ldr	r3, [r3, #8]
 8007808:	617b      	str	r3, [r7, #20]
 800780a:	697b      	ldr	r3, [r7, #20]
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007810:	2b00      	cmp	r3, #0
 8007812:	d003      	beq.n	800781c <HAL_SPI_TransmitReceive+0x344>
 8007814:	2301      	movs	r3, #1
 8007816:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800781a:	e003      	b.n	8007824 <HAL_SPI_TransmitReceive+0x34c>
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	2201      	movs	r2, #1
 8007820:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	2200      	movs	r2, #0
 8007828:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800782c:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8007830:	4618      	mov	r0, r3
 8007832:	3730      	adds	r7, #48	@ 0x30
 8007834:	46bd      	mov	sp, r7
 8007836:	bd80      	pop	{r7, pc}

08007838 <SPI_WaitFlagStateUntilTimeout>:
 8007838:	b580      	push	{r7, lr}
 800783a:	b088      	sub	sp, #32
 800783c:	af00      	add	r7, sp, #0
 800783e:	60f8      	str	r0, [r7, #12]
 8007840:	60b9      	str	r1, [r7, #8]
 8007842:	603b      	str	r3, [r7, #0]
 8007844:	4613      	mov	r3, r2
 8007846:	71fb      	strb	r3, [r7, #7]
 8007848:	f7fe fb8a 	bl	8005f60 <HAL_GetTick>
 800784c:	4602      	mov	r2, r0
 800784e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007850:	1a9b      	subs	r3, r3, r2
 8007852:	683a      	ldr	r2, [r7, #0]
 8007854:	4413      	add	r3, r2
 8007856:	61fb      	str	r3, [r7, #28]
 8007858:	f7fe fb82 	bl	8005f60 <HAL_GetTick>
 800785c:	61b8      	str	r0, [r7, #24]
 800785e:	4b39      	ldr	r3, [pc, #228]	@ (8007944 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007860:	681b      	ldr	r3, [r3, #0]
 8007862:	015b      	lsls	r3, r3, #5
 8007864:	0d1b      	lsrs	r3, r3, #20
 8007866:	69fa      	ldr	r2, [r7, #28]
 8007868:	fb02 f303 	mul.w	r3, r2, r3
 800786c:	617b      	str	r3, [r7, #20]
 800786e:	e054      	b.n	800791a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007870:	683b      	ldr	r3, [r7, #0]
 8007872:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007876:	d050      	beq.n	800791a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007878:	f7fe fb72 	bl	8005f60 <HAL_GetTick>
 800787c:	4602      	mov	r2, r0
 800787e:	69bb      	ldr	r3, [r7, #24]
 8007880:	1ad3      	subs	r3, r2, r3
 8007882:	69fa      	ldr	r2, [r7, #28]
 8007884:	429a      	cmp	r2, r3
 8007886:	d902      	bls.n	800788e <SPI_WaitFlagStateUntilTimeout+0x56>
 8007888:	69fb      	ldr	r3, [r7, #28]
 800788a:	2b00      	cmp	r3, #0
 800788c:	d13d      	bne.n	800790a <SPI_WaitFlagStateUntilTimeout+0xd2>
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	685a      	ldr	r2, [r3, #4]
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	681b      	ldr	r3, [r3, #0]
 8007898:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800789c:	605a      	str	r2, [r3, #4]
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	685b      	ldr	r3, [r3, #4]
 80078a2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80078a6:	d111      	bne.n	80078cc <SPI_WaitFlagStateUntilTimeout+0x94>
 80078a8:	68fb      	ldr	r3, [r7, #12]
 80078aa:	689b      	ldr	r3, [r3, #8]
 80078ac:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80078b0:	d004      	beq.n	80078bc <SPI_WaitFlagStateUntilTimeout+0x84>
 80078b2:	68fb      	ldr	r3, [r7, #12]
 80078b4:	689b      	ldr	r3, [r3, #8]
 80078b6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80078ba:	d107      	bne.n	80078cc <SPI_WaitFlagStateUntilTimeout+0x94>
 80078bc:	68fb      	ldr	r3, [r7, #12]
 80078be:	681b      	ldr	r3, [r3, #0]
 80078c0:	681a      	ldr	r2, [r3, #0]
 80078c2:	68fb      	ldr	r3, [r7, #12]
 80078c4:	681b      	ldr	r3, [r3, #0]
 80078c6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80078ca:	601a      	str	r2, [r3, #0]
 80078cc:	68fb      	ldr	r3, [r7, #12]
 80078ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80078d0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80078d4:	d10f      	bne.n	80078f6 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	681a      	ldr	r2, [r3, #0]
 80078dc:	68fb      	ldr	r3, [r7, #12]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80078e4:	601a      	str	r2, [r3, #0]
 80078e6:	68fb      	ldr	r3, [r7, #12]
 80078e8:	681b      	ldr	r3, [r3, #0]
 80078ea:	681a      	ldr	r2, [r3, #0]
 80078ec:	68fb      	ldr	r3, [r7, #12]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80078f4:	601a      	str	r2, [r3, #0]
 80078f6:	68fb      	ldr	r3, [r7, #12]
 80078f8:	2201      	movs	r2, #1
 80078fa:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80078fe:	68fb      	ldr	r3, [r7, #12]
 8007900:	2200      	movs	r2, #0
 8007902:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007906:	2303      	movs	r3, #3
 8007908:	e017      	b.n	800793a <SPI_WaitFlagStateUntilTimeout+0x102>
 800790a:	697b      	ldr	r3, [r7, #20]
 800790c:	2b00      	cmp	r3, #0
 800790e:	d101      	bne.n	8007914 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8007910:	2300      	movs	r3, #0
 8007912:	61fb      	str	r3, [r7, #28]
 8007914:	697b      	ldr	r3, [r7, #20]
 8007916:	3b01      	subs	r3, #1
 8007918:	617b      	str	r3, [r7, #20]
 800791a:	68fb      	ldr	r3, [r7, #12]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	689a      	ldr	r2, [r3, #8]
 8007920:	68bb      	ldr	r3, [r7, #8]
 8007922:	4013      	ands	r3, r2
 8007924:	68ba      	ldr	r2, [r7, #8]
 8007926:	429a      	cmp	r2, r3
 8007928:	bf0c      	ite	eq
 800792a:	2301      	moveq	r3, #1
 800792c:	2300      	movne	r3, #0
 800792e:	b2db      	uxtb	r3, r3
 8007930:	461a      	mov	r2, r3
 8007932:	79fb      	ldrb	r3, [r7, #7]
 8007934:	429a      	cmp	r2, r3
 8007936:	d19b      	bne.n	8007870 <SPI_WaitFlagStateUntilTimeout+0x38>
 8007938:	2300      	movs	r3, #0
 800793a:	4618      	mov	r0, r3
 800793c:	3720      	adds	r7, #32
 800793e:	46bd      	mov	sp, r7
 8007940:	bd80      	pop	{r7, pc}
 8007942:	bf00      	nop
 8007944:	20016a7c 	.word	0x20016a7c

08007948 <SPI_EndRxTxTransaction>:
 8007948:	b580      	push	{r7, lr}
 800794a:	b088      	sub	sp, #32
 800794c:	af02      	add	r7, sp, #8
 800794e:	60f8      	str	r0, [r7, #12]
 8007950:	60b9      	str	r1, [r7, #8]
 8007952:	607a      	str	r2, [r7, #4]
 8007954:	687b      	ldr	r3, [r7, #4]
 8007956:	9300      	str	r3, [sp, #0]
 8007958:	68bb      	ldr	r3, [r7, #8]
 800795a:	2201      	movs	r2, #1
 800795c:	2102      	movs	r1, #2
 800795e:	68f8      	ldr	r0, [r7, #12]
 8007960:	f7ff ff6a 	bl	8007838 <SPI_WaitFlagStateUntilTimeout>
 8007964:	4603      	mov	r3, r0
 8007966:	2b00      	cmp	r3, #0
 8007968:	d007      	beq.n	800797a <SPI_EndRxTxTransaction+0x32>
 800796a:	68fb      	ldr	r3, [r7, #12]
 800796c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800796e:	f043 0220 	orr.w	r2, r3, #32
 8007972:	68fb      	ldr	r3, [r7, #12]
 8007974:	655a      	str	r2, [r3, #84]	@ 0x54
 8007976:	2303      	movs	r3, #3
 8007978:	e032      	b.n	80079e0 <SPI_EndRxTxTransaction+0x98>
 800797a:	4b1b      	ldr	r3, [pc, #108]	@ (80079e8 <SPI_EndRxTxTransaction+0xa0>)
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	4a1b      	ldr	r2, [pc, #108]	@ (80079ec <SPI_EndRxTxTransaction+0xa4>)
 8007980:	fba2 2303 	umull	r2, r3, r2, r3
 8007984:	0d5b      	lsrs	r3, r3, #21
 8007986:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800798a:	fb02 f303 	mul.w	r3, r2, r3
 800798e:	617b      	str	r3, [r7, #20]
 8007990:	68fb      	ldr	r3, [r7, #12]
 8007992:	685b      	ldr	r3, [r3, #4]
 8007994:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007998:	d112      	bne.n	80079c0 <SPI_EndRxTxTransaction+0x78>
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	9300      	str	r3, [sp, #0]
 800799e:	68bb      	ldr	r3, [r7, #8]
 80079a0:	2200      	movs	r2, #0
 80079a2:	2180      	movs	r1, #128	@ 0x80
 80079a4:	68f8      	ldr	r0, [r7, #12]
 80079a6:	f7ff ff47 	bl	8007838 <SPI_WaitFlagStateUntilTimeout>
 80079aa:	4603      	mov	r3, r0
 80079ac:	2b00      	cmp	r3, #0
 80079ae:	d016      	beq.n	80079de <SPI_EndRxTxTransaction+0x96>
 80079b0:	68fb      	ldr	r3, [r7, #12]
 80079b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80079b4:	f043 0220 	orr.w	r2, r3, #32
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	655a      	str	r2, [r3, #84]	@ 0x54
 80079bc:	2303      	movs	r3, #3
 80079be:	e00f      	b.n	80079e0 <SPI_EndRxTxTransaction+0x98>
 80079c0:	697b      	ldr	r3, [r7, #20]
 80079c2:	2b00      	cmp	r3, #0
 80079c4:	d00a      	beq.n	80079dc <SPI_EndRxTxTransaction+0x94>
 80079c6:	697b      	ldr	r3, [r7, #20]
 80079c8:	3b01      	subs	r3, #1
 80079ca:	617b      	str	r3, [r7, #20]
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	689b      	ldr	r3, [r3, #8]
 80079d2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80079d6:	2b80      	cmp	r3, #128	@ 0x80
 80079d8:	d0f2      	beq.n	80079c0 <SPI_EndRxTxTransaction+0x78>
 80079da:	e000      	b.n	80079de <SPI_EndRxTxTransaction+0x96>
 80079dc:	bf00      	nop
 80079de:	2300      	movs	r3, #0
 80079e0:	4618      	mov	r0, r3
 80079e2:	3718      	adds	r7, #24
 80079e4:	46bd      	mov	sp, r7
 80079e6:	bd80      	pop	{r7, pc}
 80079e8:	20016a7c 	.word	0x20016a7c
 80079ec:	165e9f81 	.word	0x165e9f81

080079f0 <HAL_TIM_PWM_Init>:
 80079f0:	b580      	push	{r7, lr}
 80079f2:	b082      	sub	sp, #8
 80079f4:	af00      	add	r7, sp, #0
 80079f6:	6078      	str	r0, [r7, #4]
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	2b00      	cmp	r3, #0
 80079fc:	d101      	bne.n	8007a02 <HAL_TIM_PWM_Init+0x12>
 80079fe:	2301      	movs	r3, #1
 8007a00:	e041      	b.n	8007a86 <HAL_TIM_PWM_Init+0x96>
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007a08:	b2db      	uxtb	r3, r3
 8007a0a:	2b00      	cmp	r3, #0
 8007a0c:	d106      	bne.n	8007a1c <HAL_TIM_PWM_Init+0x2c>
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	2200      	movs	r2, #0
 8007a12:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007a16:	6878      	ldr	r0, [r7, #4]
 8007a18:	f7fe f866 	bl	8005ae8 <HAL_TIM_PWM_MspInit>
 8007a1c:	687b      	ldr	r3, [r7, #4]
 8007a1e:	2202      	movs	r2, #2
 8007a20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	681a      	ldr	r2, [r3, #0]
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	3304      	adds	r3, #4
 8007a2c:	4619      	mov	r1, r3
 8007a2e:	4610      	mov	r0, r2
 8007a30:	f000 f9b8 	bl	8007da4 <TIM_Base_SetConfig>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	2201      	movs	r2, #1
 8007a38:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	2201      	movs	r2, #1
 8007a40:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	2201      	movs	r2, #1
 8007a48:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	2201      	movs	r2, #1
 8007a50:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	2201      	movs	r2, #1
 8007a58:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	2201      	movs	r2, #1
 8007a60:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	2201      	movs	r2, #1
 8007a68:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	2201      	movs	r2, #1
 8007a70:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	2201      	movs	r2, #1
 8007a78:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	2201      	movs	r2, #1
 8007a80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007a84:	2300      	movs	r3, #0
 8007a86:	4618      	mov	r0, r3
 8007a88:	3708      	adds	r7, #8
 8007a8a:	46bd      	mov	sp, r7
 8007a8c:	bd80      	pop	{r7, pc}
	...

08007a90 <HAL_TIM_PWM_Start>:
 8007a90:	b580      	push	{r7, lr}
 8007a92:	b084      	sub	sp, #16
 8007a94:	af00      	add	r7, sp, #0
 8007a96:	6078      	str	r0, [r7, #4]
 8007a98:	6039      	str	r1, [r7, #0]
 8007a9a:	683b      	ldr	r3, [r7, #0]
 8007a9c:	2b00      	cmp	r3, #0
 8007a9e:	d109      	bne.n	8007ab4 <HAL_TIM_PWM_Start+0x24>
 8007aa0:	687b      	ldr	r3, [r7, #4]
 8007aa2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007aa6:	b2db      	uxtb	r3, r3
 8007aa8:	2b01      	cmp	r3, #1
 8007aaa:	bf14      	ite	ne
 8007aac:	2301      	movne	r3, #1
 8007aae:	2300      	moveq	r3, #0
 8007ab0:	b2db      	uxtb	r3, r3
 8007ab2:	e022      	b.n	8007afa <HAL_TIM_PWM_Start+0x6a>
 8007ab4:	683b      	ldr	r3, [r7, #0]
 8007ab6:	2b04      	cmp	r3, #4
 8007ab8:	d109      	bne.n	8007ace <HAL_TIM_PWM_Start+0x3e>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007ac0:	b2db      	uxtb	r3, r3
 8007ac2:	2b01      	cmp	r3, #1
 8007ac4:	bf14      	ite	ne
 8007ac6:	2301      	movne	r3, #1
 8007ac8:	2300      	moveq	r3, #0
 8007aca:	b2db      	uxtb	r3, r3
 8007acc:	e015      	b.n	8007afa <HAL_TIM_PWM_Start+0x6a>
 8007ace:	683b      	ldr	r3, [r7, #0]
 8007ad0:	2b08      	cmp	r3, #8
 8007ad2:	d109      	bne.n	8007ae8 <HAL_TIM_PWM_Start+0x58>
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8007ada:	b2db      	uxtb	r3, r3
 8007adc:	2b01      	cmp	r3, #1
 8007ade:	bf14      	ite	ne
 8007ae0:	2301      	movne	r3, #1
 8007ae2:	2300      	moveq	r3, #0
 8007ae4:	b2db      	uxtb	r3, r3
 8007ae6:	e008      	b.n	8007afa <HAL_TIM_PWM_Start+0x6a>
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007aee:	b2db      	uxtb	r3, r3
 8007af0:	2b01      	cmp	r3, #1
 8007af2:	bf14      	ite	ne
 8007af4:	2301      	movne	r3, #1
 8007af6:	2300      	moveq	r3, #0
 8007af8:	b2db      	uxtb	r3, r3
 8007afa:	2b00      	cmp	r3, #0
 8007afc:	d001      	beq.n	8007b02 <HAL_TIM_PWM_Start+0x72>
 8007afe:	2301      	movs	r3, #1
 8007b00:	e07c      	b.n	8007bfc <HAL_TIM_PWM_Start+0x16c>
 8007b02:	683b      	ldr	r3, [r7, #0]
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	d104      	bne.n	8007b12 <HAL_TIM_PWM_Start+0x82>
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	2202      	movs	r2, #2
 8007b0c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007b10:	e013      	b.n	8007b3a <HAL_TIM_PWM_Start+0xaa>
 8007b12:	683b      	ldr	r3, [r7, #0]
 8007b14:	2b04      	cmp	r3, #4
 8007b16:	d104      	bne.n	8007b22 <HAL_TIM_PWM_Start+0x92>
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	2202      	movs	r2, #2
 8007b1c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007b20:	e00b      	b.n	8007b3a <HAL_TIM_PWM_Start+0xaa>
 8007b22:	683b      	ldr	r3, [r7, #0]
 8007b24:	2b08      	cmp	r3, #8
 8007b26:	d104      	bne.n	8007b32 <HAL_TIM_PWM_Start+0xa2>
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	2202      	movs	r2, #2
 8007b2c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007b30:	e003      	b.n	8007b3a <HAL_TIM_PWM_Start+0xaa>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	2202      	movs	r2, #2
 8007b36:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007b3a:	687b      	ldr	r3, [r7, #4]
 8007b3c:	681b      	ldr	r3, [r3, #0]
 8007b3e:	2201      	movs	r2, #1
 8007b40:	6839      	ldr	r1, [r7, #0]
 8007b42:	4618      	mov	r0, r3
 8007b44:	f000 fb8a 	bl	800825c <TIM_CCxChannelCmd>
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	4a2d      	ldr	r2, [pc, #180]	@ (8007c04 <HAL_TIM_PWM_Start+0x174>)
 8007b4e:	4293      	cmp	r3, r2
 8007b50:	d004      	beq.n	8007b5c <HAL_TIM_PWM_Start+0xcc>
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	681b      	ldr	r3, [r3, #0]
 8007b56:	4a2c      	ldr	r2, [pc, #176]	@ (8007c08 <HAL_TIM_PWM_Start+0x178>)
 8007b58:	4293      	cmp	r3, r2
 8007b5a:	d101      	bne.n	8007b60 <HAL_TIM_PWM_Start+0xd0>
 8007b5c:	2301      	movs	r3, #1
 8007b5e:	e000      	b.n	8007b62 <HAL_TIM_PWM_Start+0xd2>
 8007b60:	2300      	movs	r3, #0
 8007b62:	2b00      	cmp	r3, #0
 8007b64:	d007      	beq.n	8007b76 <HAL_TIM_PWM_Start+0xe6>
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007b74:	645a      	str	r2, [r3, #68]	@ 0x44
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	4a22      	ldr	r2, [pc, #136]	@ (8007c04 <HAL_TIM_PWM_Start+0x174>)
 8007b7c:	4293      	cmp	r3, r2
 8007b7e:	d022      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007b88:	d01d      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	681b      	ldr	r3, [r3, #0]
 8007b8e:	4a1f      	ldr	r2, [pc, #124]	@ (8007c0c <HAL_TIM_PWM_Start+0x17c>)
 8007b90:	4293      	cmp	r3, r2
 8007b92:	d018      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	4a1d      	ldr	r2, [pc, #116]	@ (8007c10 <HAL_TIM_PWM_Start+0x180>)
 8007b9a:	4293      	cmp	r3, r2
 8007b9c:	d013      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	4a1c      	ldr	r2, [pc, #112]	@ (8007c14 <HAL_TIM_PWM_Start+0x184>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	d00e      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	4a16      	ldr	r2, [pc, #88]	@ (8007c08 <HAL_TIM_PWM_Start+0x178>)
 8007bae:	4293      	cmp	r3, r2
 8007bb0:	d009      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	4a18      	ldr	r2, [pc, #96]	@ (8007c18 <HAL_TIM_PWM_Start+0x188>)
 8007bb8:	4293      	cmp	r3, r2
 8007bba:	d004      	beq.n	8007bc6 <HAL_TIM_PWM_Start+0x136>
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	4a16      	ldr	r2, [pc, #88]	@ (8007c1c <HAL_TIM_PWM_Start+0x18c>)
 8007bc2:	4293      	cmp	r3, r2
 8007bc4:	d111      	bne.n	8007bea <HAL_TIM_PWM_Start+0x15a>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	689b      	ldr	r3, [r3, #8]
 8007bcc:	f003 0307 	and.w	r3, r3, #7
 8007bd0:	60fb      	str	r3, [r7, #12]
 8007bd2:	68fb      	ldr	r3, [r7, #12]
 8007bd4:	2b06      	cmp	r3, #6
 8007bd6:	d010      	beq.n	8007bfa <HAL_TIM_PWM_Start+0x16a>
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	681a      	ldr	r2, [r3, #0]
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	f042 0201 	orr.w	r2, r2, #1
 8007be6:	601a      	str	r2, [r3, #0]
 8007be8:	e007      	b.n	8007bfa <HAL_TIM_PWM_Start+0x16a>
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	681b      	ldr	r3, [r3, #0]
 8007bee:	681a      	ldr	r2, [r3, #0]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	f042 0201 	orr.w	r2, r2, #1
 8007bf8:	601a      	str	r2, [r3, #0]
 8007bfa:	2300      	movs	r3, #0
 8007bfc:	4618      	mov	r0, r3
 8007bfe:	3710      	adds	r7, #16
 8007c00:	46bd      	mov	sp, r7
 8007c02:	bd80      	pop	{r7, pc}
 8007c04:	40010000 	.word	0x40010000
 8007c08:	40010400 	.word	0x40010400
 8007c0c:	40000400 	.word	0x40000400
 8007c10:	40000800 	.word	0x40000800
 8007c14:	40000c00 	.word	0x40000c00
 8007c18:	40014000 	.word	0x40014000
 8007c1c:	40001800 	.word	0x40001800

08007c20 <HAL_TIM_PWM_ConfigChannel>:
 8007c20:	b580      	push	{r7, lr}
 8007c22:	b086      	sub	sp, #24
 8007c24:	af00      	add	r7, sp, #0
 8007c26:	60f8      	str	r0, [r7, #12]
 8007c28:	60b9      	str	r1, [r7, #8]
 8007c2a:	607a      	str	r2, [r7, #4]
 8007c2c:	2300      	movs	r3, #0
 8007c2e:	75fb      	strb	r3, [r7, #23]
 8007c30:	68fb      	ldr	r3, [r7, #12]
 8007c32:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007c36:	2b01      	cmp	r3, #1
 8007c38:	d101      	bne.n	8007c3e <HAL_TIM_PWM_ConfigChannel+0x1e>
 8007c3a:	2302      	movs	r3, #2
 8007c3c:	e0ae      	b.n	8007d9c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	2201      	movs	r2, #1
 8007c42:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	2b0c      	cmp	r3, #12
 8007c4a:	f200 809f 	bhi.w	8007d8c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8007c4e:	a201      	add	r2, pc, #4	@ (adr r2, 8007c54 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007c50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007c54:	08007c89 	.word	0x08007c89
 8007c58:	08007d8d 	.word	0x08007d8d
 8007c5c:	08007d8d 	.word	0x08007d8d
 8007c60:	08007d8d 	.word	0x08007d8d
 8007c64:	08007cc9 	.word	0x08007cc9
 8007c68:	08007d8d 	.word	0x08007d8d
 8007c6c:	08007d8d 	.word	0x08007d8d
 8007c70:	08007d8d 	.word	0x08007d8d
 8007c74:	08007d0b 	.word	0x08007d0b
 8007c78:	08007d8d 	.word	0x08007d8d
 8007c7c:	08007d8d 	.word	0x08007d8d
 8007c80:	08007d8d 	.word	0x08007d8d
 8007c84:	08007d4b 	.word	0x08007d4b
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	68b9      	ldr	r1, [r7, #8]
 8007c8e:	4618      	mov	r0, r3
 8007c90:	f000 f934 	bl	8007efc <TIM_OC1_SetConfig>
 8007c94:	68fb      	ldr	r3, [r7, #12]
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	699a      	ldr	r2, [r3, #24]
 8007c9a:	68fb      	ldr	r3, [r7, #12]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	f042 0208 	orr.w	r2, r2, #8
 8007ca2:	619a      	str	r2, [r3, #24]
 8007ca4:	68fb      	ldr	r3, [r7, #12]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	699a      	ldr	r2, [r3, #24]
 8007caa:	68fb      	ldr	r3, [r7, #12]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	f022 0204 	bic.w	r2, r2, #4
 8007cb2:	619a      	str	r2, [r3, #24]
 8007cb4:	68fb      	ldr	r3, [r7, #12]
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	6999      	ldr	r1, [r3, #24]
 8007cba:	68bb      	ldr	r3, [r7, #8]
 8007cbc:	691a      	ldr	r2, [r3, #16]
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	430a      	orrs	r2, r1
 8007cc4:	619a      	str	r2, [r3, #24]
 8007cc6:	e064      	b.n	8007d92 <HAL_TIM_PWM_ConfigChannel+0x172>
 8007cc8:	68fb      	ldr	r3, [r7, #12]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	68b9      	ldr	r1, [r7, #8]
 8007cce:	4618      	mov	r0, r3
 8007cd0:	f000 f984 	bl	8007fdc <TIM_OC2_SetConfig>
 8007cd4:	68fb      	ldr	r3, [r7, #12]
 8007cd6:	681b      	ldr	r3, [r3, #0]
 8007cd8:	699a      	ldr	r2, [r3, #24]
 8007cda:	68fb      	ldr	r3, [r7, #12]
 8007cdc:	681b      	ldr	r3, [r3, #0]
 8007cde:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007ce2:	619a      	str	r2, [r3, #24]
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	681b      	ldr	r3, [r3, #0]
 8007ce8:	699a      	ldr	r2, [r3, #24]
 8007cea:	68fb      	ldr	r3, [r7, #12]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007cf2:	619a      	str	r2, [r3, #24]
 8007cf4:	68fb      	ldr	r3, [r7, #12]
 8007cf6:	681b      	ldr	r3, [r3, #0]
 8007cf8:	6999      	ldr	r1, [r3, #24]
 8007cfa:	68bb      	ldr	r3, [r7, #8]
 8007cfc:	691b      	ldr	r3, [r3, #16]
 8007cfe:	021a      	lsls	r2, r3, #8
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	681b      	ldr	r3, [r3, #0]
 8007d04:	430a      	orrs	r2, r1
 8007d06:	619a      	str	r2, [r3, #24]
 8007d08:	e043      	b.n	8007d92 <HAL_TIM_PWM_ConfigChannel+0x172>
 8007d0a:	68fb      	ldr	r3, [r7, #12]
 8007d0c:	681b      	ldr	r3, [r3, #0]
 8007d0e:	68b9      	ldr	r1, [r7, #8]
 8007d10:	4618      	mov	r0, r3
 8007d12:	f000 f9d9 	bl	80080c8 <TIM_OC3_SetConfig>
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	69da      	ldr	r2, [r3, #28]
 8007d1c:	68fb      	ldr	r3, [r7, #12]
 8007d1e:	681b      	ldr	r3, [r3, #0]
 8007d20:	f042 0208 	orr.w	r2, r2, #8
 8007d24:	61da      	str	r2, [r3, #28]
 8007d26:	68fb      	ldr	r3, [r7, #12]
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	69da      	ldr	r2, [r3, #28]
 8007d2c:	68fb      	ldr	r3, [r7, #12]
 8007d2e:	681b      	ldr	r3, [r3, #0]
 8007d30:	f022 0204 	bic.w	r2, r2, #4
 8007d34:	61da      	str	r2, [r3, #28]
 8007d36:	68fb      	ldr	r3, [r7, #12]
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	69d9      	ldr	r1, [r3, #28]
 8007d3c:	68bb      	ldr	r3, [r7, #8]
 8007d3e:	691a      	ldr	r2, [r3, #16]
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	681b      	ldr	r3, [r3, #0]
 8007d44:	430a      	orrs	r2, r1
 8007d46:	61da      	str	r2, [r3, #28]
 8007d48:	e023      	b.n	8007d92 <HAL_TIM_PWM_ConfigChannel+0x172>
 8007d4a:	68fb      	ldr	r3, [r7, #12]
 8007d4c:	681b      	ldr	r3, [r3, #0]
 8007d4e:	68b9      	ldr	r1, [r7, #8]
 8007d50:	4618      	mov	r0, r3
 8007d52:	f000 fa2d 	bl	80081b0 <TIM_OC4_SetConfig>
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	681b      	ldr	r3, [r3, #0]
 8007d5a:	69da      	ldr	r2, [r3, #28]
 8007d5c:	68fb      	ldr	r3, [r7, #12]
 8007d5e:	681b      	ldr	r3, [r3, #0]
 8007d60:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007d64:	61da      	str	r2, [r3, #28]
 8007d66:	68fb      	ldr	r3, [r7, #12]
 8007d68:	681b      	ldr	r3, [r3, #0]
 8007d6a:	69da      	ldr	r2, [r3, #28]
 8007d6c:	68fb      	ldr	r3, [r7, #12]
 8007d6e:	681b      	ldr	r3, [r3, #0]
 8007d70:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007d74:	61da      	str	r2, [r3, #28]
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	69d9      	ldr	r1, [r3, #28]
 8007d7c:	68bb      	ldr	r3, [r7, #8]
 8007d7e:	691b      	ldr	r3, [r3, #16]
 8007d80:	021a      	lsls	r2, r3, #8
 8007d82:	68fb      	ldr	r3, [r7, #12]
 8007d84:	681b      	ldr	r3, [r3, #0]
 8007d86:	430a      	orrs	r2, r1
 8007d88:	61da      	str	r2, [r3, #28]
 8007d8a:	e002      	b.n	8007d92 <HAL_TIM_PWM_ConfigChannel+0x172>
 8007d8c:	2301      	movs	r3, #1
 8007d8e:	75fb      	strb	r3, [r7, #23]
 8007d90:	bf00      	nop
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	2200      	movs	r2, #0
 8007d96:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007d9a:	7dfb      	ldrb	r3, [r7, #23]
 8007d9c:	4618      	mov	r0, r3
 8007d9e:	3718      	adds	r7, #24
 8007da0:	46bd      	mov	sp, r7
 8007da2:	bd80      	pop	{r7, pc}

08007da4 <TIM_Base_SetConfig>:
 8007da4:	b480      	push	{r7}
 8007da6:	b085      	sub	sp, #20
 8007da8:	af00      	add	r7, sp, #0
 8007daa:	6078      	str	r0, [r7, #4]
 8007dac:	6039      	str	r1, [r7, #0]
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	60fb      	str	r3, [r7, #12]
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	4a46      	ldr	r2, [pc, #280]	@ (8007ed0 <TIM_Base_SetConfig+0x12c>)
 8007db8:	4293      	cmp	r3, r2
 8007dba:	d013      	beq.n	8007de4 <TIM_Base_SetConfig+0x40>
 8007dbc:	687b      	ldr	r3, [r7, #4]
 8007dbe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007dc2:	d00f      	beq.n	8007de4 <TIM_Base_SetConfig+0x40>
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	4a43      	ldr	r2, [pc, #268]	@ (8007ed4 <TIM_Base_SetConfig+0x130>)
 8007dc8:	4293      	cmp	r3, r2
 8007dca:	d00b      	beq.n	8007de4 <TIM_Base_SetConfig+0x40>
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	4a42      	ldr	r2, [pc, #264]	@ (8007ed8 <TIM_Base_SetConfig+0x134>)
 8007dd0:	4293      	cmp	r3, r2
 8007dd2:	d007      	beq.n	8007de4 <TIM_Base_SetConfig+0x40>
 8007dd4:	687b      	ldr	r3, [r7, #4]
 8007dd6:	4a41      	ldr	r2, [pc, #260]	@ (8007edc <TIM_Base_SetConfig+0x138>)
 8007dd8:	4293      	cmp	r3, r2
 8007dda:	d003      	beq.n	8007de4 <TIM_Base_SetConfig+0x40>
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	4a40      	ldr	r2, [pc, #256]	@ (8007ee0 <TIM_Base_SetConfig+0x13c>)
 8007de0:	4293      	cmp	r3, r2
 8007de2:	d108      	bne.n	8007df6 <TIM_Base_SetConfig+0x52>
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007dea:	60fb      	str	r3, [r7, #12]
 8007dec:	683b      	ldr	r3, [r7, #0]
 8007dee:	685b      	ldr	r3, [r3, #4]
 8007df0:	68fa      	ldr	r2, [r7, #12]
 8007df2:	4313      	orrs	r3, r2
 8007df4:	60fb      	str	r3, [r7, #12]
 8007df6:	687b      	ldr	r3, [r7, #4]
 8007df8:	4a35      	ldr	r2, [pc, #212]	@ (8007ed0 <TIM_Base_SetConfig+0x12c>)
 8007dfa:	4293      	cmp	r3, r2
 8007dfc:	d02b      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007e04:	d027      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	4a32      	ldr	r2, [pc, #200]	@ (8007ed4 <TIM_Base_SetConfig+0x130>)
 8007e0a:	4293      	cmp	r3, r2
 8007e0c:	d023      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	4a31      	ldr	r2, [pc, #196]	@ (8007ed8 <TIM_Base_SetConfig+0x134>)
 8007e12:	4293      	cmp	r3, r2
 8007e14:	d01f      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	4a30      	ldr	r2, [pc, #192]	@ (8007edc <TIM_Base_SetConfig+0x138>)
 8007e1a:	4293      	cmp	r3, r2
 8007e1c:	d01b      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	4a2f      	ldr	r2, [pc, #188]	@ (8007ee0 <TIM_Base_SetConfig+0x13c>)
 8007e22:	4293      	cmp	r3, r2
 8007e24:	d017      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e26:	687b      	ldr	r3, [r7, #4]
 8007e28:	4a2e      	ldr	r2, [pc, #184]	@ (8007ee4 <TIM_Base_SetConfig+0x140>)
 8007e2a:	4293      	cmp	r3, r2
 8007e2c:	d013      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	4a2d      	ldr	r2, [pc, #180]	@ (8007ee8 <TIM_Base_SetConfig+0x144>)
 8007e32:	4293      	cmp	r3, r2
 8007e34:	d00f      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	4a2c      	ldr	r2, [pc, #176]	@ (8007eec <TIM_Base_SetConfig+0x148>)
 8007e3a:	4293      	cmp	r3, r2
 8007e3c:	d00b      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	4a2b      	ldr	r2, [pc, #172]	@ (8007ef0 <TIM_Base_SetConfig+0x14c>)
 8007e42:	4293      	cmp	r3, r2
 8007e44:	d007      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	4a2a      	ldr	r2, [pc, #168]	@ (8007ef4 <TIM_Base_SetConfig+0x150>)
 8007e4a:	4293      	cmp	r3, r2
 8007e4c:	d003      	beq.n	8007e56 <TIM_Base_SetConfig+0xb2>
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	4a29      	ldr	r2, [pc, #164]	@ (8007ef8 <TIM_Base_SetConfig+0x154>)
 8007e52:	4293      	cmp	r3, r2
 8007e54:	d108      	bne.n	8007e68 <TIM_Base_SetConfig+0xc4>
 8007e56:	68fb      	ldr	r3, [r7, #12]
 8007e58:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007e5c:	60fb      	str	r3, [r7, #12]
 8007e5e:	683b      	ldr	r3, [r7, #0]
 8007e60:	68db      	ldr	r3, [r3, #12]
 8007e62:	68fa      	ldr	r2, [r7, #12]
 8007e64:	4313      	orrs	r3, r2
 8007e66:	60fb      	str	r3, [r7, #12]
 8007e68:	68fb      	ldr	r3, [r7, #12]
 8007e6a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007e6e:	683b      	ldr	r3, [r7, #0]
 8007e70:	695b      	ldr	r3, [r3, #20]
 8007e72:	4313      	orrs	r3, r2
 8007e74:	60fb      	str	r3, [r7, #12]
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	68fa      	ldr	r2, [r7, #12]
 8007e7a:	601a      	str	r2, [r3, #0]
 8007e7c:	683b      	ldr	r3, [r7, #0]
 8007e7e:	689a      	ldr	r2, [r3, #8]
 8007e80:	687b      	ldr	r3, [r7, #4]
 8007e82:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007e84:	683b      	ldr	r3, [r7, #0]
 8007e86:	681a      	ldr	r2, [r3, #0]
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	4a10      	ldr	r2, [pc, #64]	@ (8007ed0 <TIM_Base_SetConfig+0x12c>)
 8007e90:	4293      	cmp	r3, r2
 8007e92:	d003      	beq.n	8007e9c <TIM_Base_SetConfig+0xf8>
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	4a12      	ldr	r2, [pc, #72]	@ (8007ee0 <TIM_Base_SetConfig+0x13c>)
 8007e98:	4293      	cmp	r3, r2
 8007e9a:	d103      	bne.n	8007ea4 <TIM_Base_SetConfig+0x100>
 8007e9c:	683b      	ldr	r3, [r7, #0]
 8007e9e:	691a      	ldr	r2, [r3, #16]
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	631a      	str	r2, [r3, #48]	@ 0x30
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	2201      	movs	r2, #1
 8007ea8:	615a      	str	r2, [r3, #20]
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	691b      	ldr	r3, [r3, #16]
 8007eae:	f003 0301 	and.w	r3, r3, #1
 8007eb2:	2b01      	cmp	r3, #1
 8007eb4:	d105      	bne.n	8007ec2 <TIM_Base_SetConfig+0x11e>
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	691b      	ldr	r3, [r3, #16]
 8007eba:	f023 0201 	bic.w	r2, r3, #1
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	611a      	str	r2, [r3, #16]
 8007ec2:	bf00      	nop
 8007ec4:	3714      	adds	r7, #20
 8007ec6:	46bd      	mov	sp, r7
 8007ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ecc:	4770      	bx	lr
 8007ece:	bf00      	nop
 8007ed0:	40010000 	.word	0x40010000
 8007ed4:	40000400 	.word	0x40000400
 8007ed8:	40000800 	.word	0x40000800
 8007edc:	40000c00 	.word	0x40000c00
 8007ee0:	40010400 	.word	0x40010400
 8007ee4:	40014000 	.word	0x40014000
 8007ee8:	40014400 	.word	0x40014400
 8007eec:	40014800 	.word	0x40014800
 8007ef0:	40001800 	.word	0x40001800
 8007ef4:	40001c00 	.word	0x40001c00
 8007ef8:	40002000 	.word	0x40002000

08007efc <TIM_OC1_SetConfig>:
 8007efc:	b480      	push	{r7}
 8007efe:	b087      	sub	sp, #28
 8007f00:	af00      	add	r7, sp, #0
 8007f02:	6078      	str	r0, [r7, #4]
 8007f04:	6039      	str	r1, [r7, #0]
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	6a1b      	ldr	r3, [r3, #32]
 8007f0a:	617b      	str	r3, [r7, #20]
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	6a1b      	ldr	r3, [r3, #32]
 8007f10:	f023 0201 	bic.w	r2, r3, #1
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	621a      	str	r2, [r3, #32]
 8007f18:	687b      	ldr	r3, [r7, #4]
 8007f1a:	685b      	ldr	r3, [r3, #4]
 8007f1c:	613b      	str	r3, [r7, #16]
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	699b      	ldr	r3, [r3, #24]
 8007f22:	60fb      	str	r3, [r7, #12]
 8007f24:	68fb      	ldr	r3, [r7, #12]
 8007f26:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007f2a:	60fb      	str	r3, [r7, #12]
 8007f2c:	68fb      	ldr	r3, [r7, #12]
 8007f2e:	f023 0303 	bic.w	r3, r3, #3
 8007f32:	60fb      	str	r3, [r7, #12]
 8007f34:	683b      	ldr	r3, [r7, #0]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	68fa      	ldr	r2, [r7, #12]
 8007f3a:	4313      	orrs	r3, r2
 8007f3c:	60fb      	str	r3, [r7, #12]
 8007f3e:	697b      	ldr	r3, [r7, #20]
 8007f40:	f023 0302 	bic.w	r3, r3, #2
 8007f44:	617b      	str	r3, [r7, #20]
 8007f46:	683b      	ldr	r3, [r7, #0]
 8007f48:	689b      	ldr	r3, [r3, #8]
 8007f4a:	697a      	ldr	r2, [r7, #20]
 8007f4c:	4313      	orrs	r3, r2
 8007f4e:	617b      	str	r3, [r7, #20]
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	4a20      	ldr	r2, [pc, #128]	@ (8007fd4 <TIM_OC1_SetConfig+0xd8>)
 8007f54:	4293      	cmp	r3, r2
 8007f56:	d003      	beq.n	8007f60 <TIM_OC1_SetConfig+0x64>
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	4a1f      	ldr	r2, [pc, #124]	@ (8007fd8 <TIM_OC1_SetConfig+0xdc>)
 8007f5c:	4293      	cmp	r3, r2
 8007f5e:	d10c      	bne.n	8007f7a <TIM_OC1_SetConfig+0x7e>
 8007f60:	697b      	ldr	r3, [r7, #20]
 8007f62:	f023 0308 	bic.w	r3, r3, #8
 8007f66:	617b      	str	r3, [r7, #20]
 8007f68:	683b      	ldr	r3, [r7, #0]
 8007f6a:	68db      	ldr	r3, [r3, #12]
 8007f6c:	697a      	ldr	r2, [r7, #20]
 8007f6e:	4313      	orrs	r3, r2
 8007f70:	617b      	str	r3, [r7, #20]
 8007f72:	697b      	ldr	r3, [r7, #20]
 8007f74:	f023 0304 	bic.w	r3, r3, #4
 8007f78:	617b      	str	r3, [r7, #20]
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	4a15      	ldr	r2, [pc, #84]	@ (8007fd4 <TIM_OC1_SetConfig+0xd8>)
 8007f7e:	4293      	cmp	r3, r2
 8007f80:	d003      	beq.n	8007f8a <TIM_OC1_SetConfig+0x8e>
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	4a14      	ldr	r2, [pc, #80]	@ (8007fd8 <TIM_OC1_SetConfig+0xdc>)
 8007f86:	4293      	cmp	r3, r2
 8007f88:	d111      	bne.n	8007fae <TIM_OC1_SetConfig+0xb2>
 8007f8a:	693b      	ldr	r3, [r7, #16]
 8007f8c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007f90:	613b      	str	r3, [r7, #16]
 8007f92:	693b      	ldr	r3, [r7, #16]
 8007f94:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007f98:	613b      	str	r3, [r7, #16]
 8007f9a:	683b      	ldr	r3, [r7, #0]
 8007f9c:	695b      	ldr	r3, [r3, #20]
 8007f9e:	693a      	ldr	r2, [r7, #16]
 8007fa0:	4313      	orrs	r3, r2
 8007fa2:	613b      	str	r3, [r7, #16]
 8007fa4:	683b      	ldr	r3, [r7, #0]
 8007fa6:	699b      	ldr	r3, [r3, #24]
 8007fa8:	693a      	ldr	r2, [r7, #16]
 8007faa:	4313      	orrs	r3, r2
 8007fac:	613b      	str	r3, [r7, #16]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	693a      	ldr	r2, [r7, #16]
 8007fb2:	605a      	str	r2, [r3, #4]
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	68fa      	ldr	r2, [r7, #12]
 8007fb8:	619a      	str	r2, [r3, #24]
 8007fba:	683b      	ldr	r3, [r7, #0]
 8007fbc:	685a      	ldr	r2, [r3, #4]
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	635a      	str	r2, [r3, #52]	@ 0x34
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	697a      	ldr	r2, [r7, #20]
 8007fc6:	621a      	str	r2, [r3, #32]
 8007fc8:	bf00      	nop
 8007fca:	371c      	adds	r7, #28
 8007fcc:	46bd      	mov	sp, r7
 8007fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fd2:	4770      	bx	lr
 8007fd4:	40010000 	.word	0x40010000
 8007fd8:	40010400 	.word	0x40010400

08007fdc <TIM_OC2_SetConfig>:
 8007fdc:	b480      	push	{r7}
 8007fde:	b087      	sub	sp, #28
 8007fe0:	af00      	add	r7, sp, #0
 8007fe2:	6078      	str	r0, [r7, #4]
 8007fe4:	6039      	str	r1, [r7, #0]
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	6a1b      	ldr	r3, [r3, #32]
 8007fea:	617b      	str	r3, [r7, #20]
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	6a1b      	ldr	r3, [r3, #32]
 8007ff0:	f023 0210 	bic.w	r2, r3, #16
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	621a      	str	r2, [r3, #32]
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	685b      	ldr	r3, [r3, #4]
 8007ffc:	613b      	str	r3, [r7, #16]
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	699b      	ldr	r3, [r3, #24]
 8008002:	60fb      	str	r3, [r7, #12]
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800800a:	60fb      	str	r3, [r7, #12]
 800800c:	68fb      	ldr	r3, [r7, #12]
 800800e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008012:	60fb      	str	r3, [r7, #12]
 8008014:	683b      	ldr	r3, [r7, #0]
 8008016:	681b      	ldr	r3, [r3, #0]
 8008018:	021b      	lsls	r3, r3, #8
 800801a:	68fa      	ldr	r2, [r7, #12]
 800801c:	4313      	orrs	r3, r2
 800801e:	60fb      	str	r3, [r7, #12]
 8008020:	697b      	ldr	r3, [r7, #20]
 8008022:	f023 0320 	bic.w	r3, r3, #32
 8008026:	617b      	str	r3, [r7, #20]
 8008028:	683b      	ldr	r3, [r7, #0]
 800802a:	689b      	ldr	r3, [r3, #8]
 800802c:	011b      	lsls	r3, r3, #4
 800802e:	697a      	ldr	r2, [r7, #20]
 8008030:	4313      	orrs	r3, r2
 8008032:	617b      	str	r3, [r7, #20]
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	4a22      	ldr	r2, [pc, #136]	@ (80080c0 <TIM_OC2_SetConfig+0xe4>)
 8008038:	4293      	cmp	r3, r2
 800803a:	d003      	beq.n	8008044 <TIM_OC2_SetConfig+0x68>
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	4a21      	ldr	r2, [pc, #132]	@ (80080c4 <TIM_OC2_SetConfig+0xe8>)
 8008040:	4293      	cmp	r3, r2
 8008042:	d10d      	bne.n	8008060 <TIM_OC2_SetConfig+0x84>
 8008044:	697b      	ldr	r3, [r7, #20]
 8008046:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800804a:	617b      	str	r3, [r7, #20]
 800804c:	683b      	ldr	r3, [r7, #0]
 800804e:	68db      	ldr	r3, [r3, #12]
 8008050:	011b      	lsls	r3, r3, #4
 8008052:	697a      	ldr	r2, [r7, #20]
 8008054:	4313      	orrs	r3, r2
 8008056:	617b      	str	r3, [r7, #20]
 8008058:	697b      	ldr	r3, [r7, #20]
 800805a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800805e:	617b      	str	r3, [r7, #20]
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	4a17      	ldr	r2, [pc, #92]	@ (80080c0 <TIM_OC2_SetConfig+0xe4>)
 8008064:	4293      	cmp	r3, r2
 8008066:	d003      	beq.n	8008070 <TIM_OC2_SetConfig+0x94>
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	4a16      	ldr	r2, [pc, #88]	@ (80080c4 <TIM_OC2_SetConfig+0xe8>)
 800806c:	4293      	cmp	r3, r2
 800806e:	d113      	bne.n	8008098 <TIM_OC2_SetConfig+0xbc>
 8008070:	693b      	ldr	r3, [r7, #16]
 8008072:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008076:	613b      	str	r3, [r7, #16]
 8008078:	693b      	ldr	r3, [r7, #16]
 800807a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800807e:	613b      	str	r3, [r7, #16]
 8008080:	683b      	ldr	r3, [r7, #0]
 8008082:	695b      	ldr	r3, [r3, #20]
 8008084:	009b      	lsls	r3, r3, #2
 8008086:	693a      	ldr	r2, [r7, #16]
 8008088:	4313      	orrs	r3, r2
 800808a:	613b      	str	r3, [r7, #16]
 800808c:	683b      	ldr	r3, [r7, #0]
 800808e:	699b      	ldr	r3, [r3, #24]
 8008090:	009b      	lsls	r3, r3, #2
 8008092:	693a      	ldr	r2, [r7, #16]
 8008094:	4313      	orrs	r3, r2
 8008096:	613b      	str	r3, [r7, #16]
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	693a      	ldr	r2, [r7, #16]
 800809c:	605a      	str	r2, [r3, #4]
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	68fa      	ldr	r2, [r7, #12]
 80080a2:	619a      	str	r2, [r3, #24]
 80080a4:	683b      	ldr	r3, [r7, #0]
 80080a6:	685a      	ldr	r2, [r3, #4]
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	639a      	str	r2, [r3, #56]	@ 0x38
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	697a      	ldr	r2, [r7, #20]
 80080b0:	621a      	str	r2, [r3, #32]
 80080b2:	bf00      	nop
 80080b4:	371c      	adds	r7, #28
 80080b6:	46bd      	mov	sp, r7
 80080b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080bc:	4770      	bx	lr
 80080be:	bf00      	nop
 80080c0:	40010000 	.word	0x40010000
 80080c4:	40010400 	.word	0x40010400

080080c8 <TIM_OC3_SetConfig>:
 80080c8:	b480      	push	{r7}
 80080ca:	b087      	sub	sp, #28
 80080cc:	af00      	add	r7, sp, #0
 80080ce:	6078      	str	r0, [r7, #4]
 80080d0:	6039      	str	r1, [r7, #0]
 80080d2:	687b      	ldr	r3, [r7, #4]
 80080d4:	6a1b      	ldr	r3, [r3, #32]
 80080d6:	617b      	str	r3, [r7, #20]
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	6a1b      	ldr	r3, [r3, #32]
 80080dc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	621a      	str	r2, [r3, #32]
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	685b      	ldr	r3, [r3, #4]
 80080e8:	613b      	str	r3, [r7, #16]
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	69db      	ldr	r3, [r3, #28]
 80080ee:	60fb      	str	r3, [r7, #12]
 80080f0:	68fb      	ldr	r3, [r7, #12]
 80080f2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80080f6:	60fb      	str	r3, [r7, #12]
 80080f8:	68fb      	ldr	r3, [r7, #12]
 80080fa:	f023 0303 	bic.w	r3, r3, #3
 80080fe:	60fb      	str	r3, [r7, #12]
 8008100:	683b      	ldr	r3, [r7, #0]
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	68fa      	ldr	r2, [r7, #12]
 8008106:	4313      	orrs	r3, r2
 8008108:	60fb      	str	r3, [r7, #12]
 800810a:	697b      	ldr	r3, [r7, #20]
 800810c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8008110:	617b      	str	r3, [r7, #20]
 8008112:	683b      	ldr	r3, [r7, #0]
 8008114:	689b      	ldr	r3, [r3, #8]
 8008116:	021b      	lsls	r3, r3, #8
 8008118:	697a      	ldr	r2, [r7, #20]
 800811a:	4313      	orrs	r3, r2
 800811c:	617b      	str	r3, [r7, #20]
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	4a21      	ldr	r2, [pc, #132]	@ (80081a8 <TIM_OC3_SetConfig+0xe0>)
 8008122:	4293      	cmp	r3, r2
 8008124:	d003      	beq.n	800812e <TIM_OC3_SetConfig+0x66>
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	4a20      	ldr	r2, [pc, #128]	@ (80081ac <TIM_OC3_SetConfig+0xe4>)
 800812a:	4293      	cmp	r3, r2
 800812c:	d10d      	bne.n	800814a <TIM_OC3_SetConfig+0x82>
 800812e:	697b      	ldr	r3, [r7, #20]
 8008130:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008134:	617b      	str	r3, [r7, #20]
 8008136:	683b      	ldr	r3, [r7, #0]
 8008138:	68db      	ldr	r3, [r3, #12]
 800813a:	021b      	lsls	r3, r3, #8
 800813c:	697a      	ldr	r2, [r7, #20]
 800813e:	4313      	orrs	r3, r2
 8008140:	617b      	str	r3, [r7, #20]
 8008142:	697b      	ldr	r3, [r7, #20]
 8008144:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008148:	617b      	str	r3, [r7, #20]
 800814a:	687b      	ldr	r3, [r7, #4]
 800814c:	4a16      	ldr	r2, [pc, #88]	@ (80081a8 <TIM_OC3_SetConfig+0xe0>)
 800814e:	4293      	cmp	r3, r2
 8008150:	d003      	beq.n	800815a <TIM_OC3_SetConfig+0x92>
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	4a15      	ldr	r2, [pc, #84]	@ (80081ac <TIM_OC3_SetConfig+0xe4>)
 8008156:	4293      	cmp	r3, r2
 8008158:	d113      	bne.n	8008182 <TIM_OC3_SetConfig+0xba>
 800815a:	693b      	ldr	r3, [r7, #16]
 800815c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8008160:	613b      	str	r3, [r7, #16]
 8008162:	693b      	ldr	r3, [r7, #16]
 8008164:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8008168:	613b      	str	r3, [r7, #16]
 800816a:	683b      	ldr	r3, [r7, #0]
 800816c:	695b      	ldr	r3, [r3, #20]
 800816e:	011b      	lsls	r3, r3, #4
 8008170:	693a      	ldr	r2, [r7, #16]
 8008172:	4313      	orrs	r3, r2
 8008174:	613b      	str	r3, [r7, #16]
 8008176:	683b      	ldr	r3, [r7, #0]
 8008178:	699b      	ldr	r3, [r3, #24]
 800817a:	011b      	lsls	r3, r3, #4
 800817c:	693a      	ldr	r2, [r7, #16]
 800817e:	4313      	orrs	r3, r2
 8008180:	613b      	str	r3, [r7, #16]
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	693a      	ldr	r2, [r7, #16]
 8008186:	605a      	str	r2, [r3, #4]
 8008188:	687b      	ldr	r3, [r7, #4]
 800818a:	68fa      	ldr	r2, [r7, #12]
 800818c:	61da      	str	r2, [r3, #28]
 800818e:	683b      	ldr	r3, [r7, #0]
 8008190:	685a      	ldr	r2, [r3, #4]
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	697a      	ldr	r2, [r7, #20]
 800819a:	621a      	str	r2, [r3, #32]
 800819c:	bf00      	nop
 800819e:	371c      	adds	r7, #28
 80081a0:	46bd      	mov	sp, r7
 80081a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081a6:	4770      	bx	lr
 80081a8:	40010000 	.word	0x40010000
 80081ac:	40010400 	.word	0x40010400

080081b0 <TIM_OC4_SetConfig>:
 80081b0:	b480      	push	{r7}
 80081b2:	b087      	sub	sp, #28
 80081b4:	af00      	add	r7, sp, #0
 80081b6:	6078      	str	r0, [r7, #4]
 80081b8:	6039      	str	r1, [r7, #0]
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	6a1b      	ldr	r3, [r3, #32]
 80081be:	613b      	str	r3, [r7, #16]
 80081c0:	687b      	ldr	r3, [r7, #4]
 80081c2:	6a1b      	ldr	r3, [r3, #32]
 80081c4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	621a      	str	r2, [r3, #32]
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	685b      	ldr	r3, [r3, #4]
 80081d0:	617b      	str	r3, [r7, #20]
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	69db      	ldr	r3, [r3, #28]
 80081d6:	60fb      	str	r3, [r7, #12]
 80081d8:	68fb      	ldr	r3, [r7, #12]
 80081da:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80081de:	60fb      	str	r3, [r7, #12]
 80081e0:	68fb      	ldr	r3, [r7, #12]
 80081e2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80081e6:	60fb      	str	r3, [r7, #12]
 80081e8:	683b      	ldr	r3, [r7, #0]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	021b      	lsls	r3, r3, #8
 80081ee:	68fa      	ldr	r2, [r7, #12]
 80081f0:	4313      	orrs	r3, r2
 80081f2:	60fb      	str	r3, [r7, #12]
 80081f4:	693b      	ldr	r3, [r7, #16]
 80081f6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80081fa:	613b      	str	r3, [r7, #16]
 80081fc:	683b      	ldr	r3, [r7, #0]
 80081fe:	689b      	ldr	r3, [r3, #8]
 8008200:	031b      	lsls	r3, r3, #12
 8008202:	693a      	ldr	r2, [r7, #16]
 8008204:	4313      	orrs	r3, r2
 8008206:	613b      	str	r3, [r7, #16]
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	4a12      	ldr	r2, [pc, #72]	@ (8008254 <TIM_OC4_SetConfig+0xa4>)
 800820c:	4293      	cmp	r3, r2
 800820e:	d003      	beq.n	8008218 <TIM_OC4_SetConfig+0x68>
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	4a11      	ldr	r2, [pc, #68]	@ (8008258 <TIM_OC4_SetConfig+0xa8>)
 8008214:	4293      	cmp	r3, r2
 8008216:	d109      	bne.n	800822c <TIM_OC4_SetConfig+0x7c>
 8008218:	697b      	ldr	r3, [r7, #20]
 800821a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800821e:	617b      	str	r3, [r7, #20]
 8008220:	683b      	ldr	r3, [r7, #0]
 8008222:	695b      	ldr	r3, [r3, #20]
 8008224:	019b      	lsls	r3, r3, #6
 8008226:	697a      	ldr	r2, [r7, #20]
 8008228:	4313      	orrs	r3, r2
 800822a:	617b      	str	r3, [r7, #20]
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	697a      	ldr	r2, [r7, #20]
 8008230:	605a      	str	r2, [r3, #4]
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	68fa      	ldr	r2, [r7, #12]
 8008236:	61da      	str	r2, [r3, #28]
 8008238:	683b      	ldr	r3, [r7, #0]
 800823a:	685a      	ldr	r2, [r3, #4]
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	641a      	str	r2, [r3, #64]	@ 0x40
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	693a      	ldr	r2, [r7, #16]
 8008244:	621a      	str	r2, [r3, #32]
 8008246:	bf00      	nop
 8008248:	371c      	adds	r7, #28
 800824a:	46bd      	mov	sp, r7
 800824c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008250:	4770      	bx	lr
 8008252:	bf00      	nop
 8008254:	40010000 	.word	0x40010000
 8008258:	40010400 	.word	0x40010400

0800825c <TIM_CCxChannelCmd>:
 800825c:	b480      	push	{r7}
 800825e:	b087      	sub	sp, #28
 8008260:	af00      	add	r7, sp, #0
 8008262:	60f8      	str	r0, [r7, #12]
 8008264:	60b9      	str	r1, [r7, #8]
 8008266:	607a      	str	r2, [r7, #4]
 8008268:	68bb      	ldr	r3, [r7, #8]
 800826a:	f003 031f 	and.w	r3, r3, #31
 800826e:	2201      	movs	r2, #1
 8008270:	fa02 f303 	lsl.w	r3, r2, r3
 8008274:	617b      	str	r3, [r7, #20]
 8008276:	68fb      	ldr	r3, [r7, #12]
 8008278:	6a1a      	ldr	r2, [r3, #32]
 800827a:	697b      	ldr	r3, [r7, #20]
 800827c:	43db      	mvns	r3, r3
 800827e:	401a      	ands	r2, r3
 8008280:	68fb      	ldr	r3, [r7, #12]
 8008282:	621a      	str	r2, [r3, #32]
 8008284:	68fb      	ldr	r3, [r7, #12]
 8008286:	6a1a      	ldr	r2, [r3, #32]
 8008288:	68bb      	ldr	r3, [r7, #8]
 800828a:	f003 031f 	and.w	r3, r3, #31
 800828e:	6879      	ldr	r1, [r7, #4]
 8008290:	fa01 f303 	lsl.w	r3, r1, r3
 8008294:	431a      	orrs	r2, r3
 8008296:	68fb      	ldr	r3, [r7, #12]
 8008298:	621a      	str	r2, [r3, #32]
 800829a:	bf00      	nop
 800829c:	371c      	adds	r7, #28
 800829e:	46bd      	mov	sp, r7
 80082a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082a4:	4770      	bx	lr
	...

080082a8 <HAL_TIMEx_MasterConfigSynchronization>:
 80082a8:	b480      	push	{r7}
 80082aa:	b085      	sub	sp, #20
 80082ac:	af00      	add	r7, sp, #0
 80082ae:	6078      	str	r0, [r7, #4]
 80082b0:	6039      	str	r1, [r7, #0]
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80082b8:	2b01      	cmp	r3, #1
 80082ba:	d101      	bne.n	80082c0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80082bc:	2302      	movs	r3, #2
 80082be:	e05a      	b.n	8008376 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	2201      	movs	r2, #1
 80082c4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	2202      	movs	r2, #2
 80082cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	685b      	ldr	r3, [r3, #4]
 80082d6:	60fb      	str	r3, [r7, #12]
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	681b      	ldr	r3, [r3, #0]
 80082dc:	689b      	ldr	r3, [r3, #8]
 80082de:	60bb      	str	r3, [r7, #8]
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80082e6:	60fb      	str	r3, [r7, #12]
 80082e8:	683b      	ldr	r3, [r7, #0]
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	68fa      	ldr	r2, [r7, #12]
 80082ee:	4313      	orrs	r3, r2
 80082f0:	60fb      	str	r3, [r7, #12]
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	681b      	ldr	r3, [r3, #0]
 80082f6:	68fa      	ldr	r2, [r7, #12]
 80082f8:	605a      	str	r2, [r3, #4]
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	4a21      	ldr	r2, [pc, #132]	@ (8008384 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8008300:	4293      	cmp	r3, r2
 8008302:	d022      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800830c:	d01d      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	681b      	ldr	r3, [r3, #0]
 8008312:	4a1d      	ldr	r2, [pc, #116]	@ (8008388 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8008314:	4293      	cmp	r3, r2
 8008316:	d018      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	681b      	ldr	r3, [r3, #0]
 800831c:	4a1b      	ldr	r2, [pc, #108]	@ (800838c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800831e:	4293      	cmp	r3, r2
 8008320:	d013      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	681b      	ldr	r3, [r3, #0]
 8008326:	4a1a      	ldr	r2, [pc, #104]	@ (8008390 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8008328:	4293      	cmp	r3, r2
 800832a:	d00e      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	681b      	ldr	r3, [r3, #0]
 8008330:	4a18      	ldr	r2, [pc, #96]	@ (8008394 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8008332:	4293      	cmp	r3, r2
 8008334:	d009      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008336:	687b      	ldr	r3, [r7, #4]
 8008338:	681b      	ldr	r3, [r3, #0]
 800833a:	4a17      	ldr	r2, [pc, #92]	@ (8008398 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800833c:	4293      	cmp	r3, r2
 800833e:	d004      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	681b      	ldr	r3, [r3, #0]
 8008344:	4a15      	ldr	r2, [pc, #84]	@ (800839c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008346:	4293      	cmp	r3, r2
 8008348:	d10c      	bne.n	8008364 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800834a:	68bb      	ldr	r3, [r7, #8]
 800834c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008350:	60bb      	str	r3, [r7, #8]
 8008352:	683b      	ldr	r3, [r7, #0]
 8008354:	685b      	ldr	r3, [r3, #4]
 8008356:	68ba      	ldr	r2, [r7, #8]
 8008358:	4313      	orrs	r3, r2
 800835a:	60bb      	str	r3, [r7, #8]
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	681b      	ldr	r3, [r3, #0]
 8008360:	68ba      	ldr	r2, [r7, #8]
 8008362:	609a      	str	r2, [r3, #8]
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	2201      	movs	r2, #1
 8008368:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	2200      	movs	r2, #0
 8008370:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008374:	2300      	movs	r3, #0
 8008376:	4618      	mov	r0, r3
 8008378:	3714      	adds	r7, #20
 800837a:	46bd      	mov	sp, r7
 800837c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008380:	4770      	bx	lr
 8008382:	bf00      	nop
 8008384:	40010000 	.word	0x40010000
 8008388:	40000400 	.word	0x40000400
 800838c:	40000800 	.word	0x40000800
 8008390:	40000c00 	.word	0x40000c00
 8008394:	40010400 	.word	0x40010400
 8008398:	40014000 	.word	0x40014000
 800839c:	40001800 	.word	0x40001800

080083a0 <HAL_UART_Init>:
 80083a0:	b580      	push	{r7, lr}
 80083a2:	b082      	sub	sp, #8
 80083a4:	af00      	add	r7, sp, #0
 80083a6:	6078      	str	r0, [r7, #4]
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d101      	bne.n	80083b2 <HAL_UART_Init+0x12>
 80083ae:	2301      	movs	r3, #1
 80083b0:	e042      	b.n	8008438 <HAL_UART_Init+0x98>
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80083b8:	b2db      	uxtb	r3, r3
 80083ba:	2b00      	cmp	r3, #0
 80083bc:	d106      	bne.n	80083cc <HAL_UART_Init+0x2c>
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	2200      	movs	r2, #0
 80083c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80083c6:	6878      	ldr	r0, [r7, #4]
 80083c8:	f7fd fbe6 	bl	8005b98 <HAL_UART_MspInit>
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	2224      	movs	r2, #36	@ 0x24
 80083d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	68da      	ldr	r2, [r3, #12]
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	681b      	ldr	r3, [r3, #0]
 80083de:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80083e2:	60da      	str	r2, [r3, #12]
 80083e4:	6878      	ldr	r0, [r7, #4]
 80083e6:	f000 fdbd 	bl	8008f64 <UART_SetConfig>
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	681b      	ldr	r3, [r3, #0]
 80083ee:	691a      	ldr	r2, [r3, #16]
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	681b      	ldr	r3, [r3, #0]
 80083f4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80083f8:	611a      	str	r2, [r3, #16]
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	681b      	ldr	r3, [r3, #0]
 80083fe:	695a      	ldr	r2, [r3, #20]
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8008408:	615a      	str	r2, [r3, #20]
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	681b      	ldr	r3, [r3, #0]
 800840e:	68da      	ldr	r2, [r3, #12]
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008418:	60da      	str	r2, [r3, #12]
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	2200      	movs	r2, #0
 800841e:	645a      	str	r2, [r3, #68]	@ 0x44
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	2220      	movs	r2, #32
 8008424:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	2220      	movs	r2, #32
 800842c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008430:	687b      	ldr	r3, [r7, #4]
 8008432:	2200      	movs	r2, #0
 8008434:	635a      	str	r2, [r3, #52]	@ 0x34
 8008436:	2300      	movs	r3, #0
 8008438:	4618      	mov	r0, r3
 800843a:	3708      	adds	r7, #8
 800843c:	46bd      	mov	sp, r7
 800843e:	bd80      	pop	{r7, pc}

08008440 <HAL_UART_Transmit>:
 8008440:	b580      	push	{r7, lr}
 8008442:	b08a      	sub	sp, #40	@ 0x28
 8008444:	af02      	add	r7, sp, #8
 8008446:	60f8      	str	r0, [r7, #12]
 8008448:	60b9      	str	r1, [r7, #8]
 800844a:	603b      	str	r3, [r7, #0]
 800844c:	4613      	mov	r3, r2
 800844e:	80fb      	strh	r3, [r7, #6]
 8008450:	2300      	movs	r3, #0
 8008452:	617b      	str	r3, [r7, #20]
 8008454:	68fb      	ldr	r3, [r7, #12]
 8008456:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800845a:	b2db      	uxtb	r3, r3
 800845c:	2b20      	cmp	r3, #32
 800845e:	d175      	bne.n	800854c <HAL_UART_Transmit+0x10c>
 8008460:	68bb      	ldr	r3, [r7, #8]
 8008462:	2b00      	cmp	r3, #0
 8008464:	d002      	beq.n	800846c <HAL_UART_Transmit+0x2c>
 8008466:	88fb      	ldrh	r3, [r7, #6]
 8008468:	2b00      	cmp	r3, #0
 800846a:	d101      	bne.n	8008470 <HAL_UART_Transmit+0x30>
 800846c:	2301      	movs	r3, #1
 800846e:	e06e      	b.n	800854e <HAL_UART_Transmit+0x10e>
 8008470:	68fb      	ldr	r3, [r7, #12]
 8008472:	2200      	movs	r2, #0
 8008474:	645a      	str	r2, [r3, #68]	@ 0x44
 8008476:	68fb      	ldr	r3, [r7, #12]
 8008478:	2221      	movs	r2, #33	@ 0x21
 800847a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800847e:	f7fd fd6f 	bl	8005f60 <HAL_GetTick>
 8008482:	6178      	str	r0, [r7, #20]
 8008484:	68fb      	ldr	r3, [r7, #12]
 8008486:	88fa      	ldrh	r2, [r7, #6]
 8008488:	849a      	strh	r2, [r3, #36]	@ 0x24
 800848a:	68fb      	ldr	r3, [r7, #12]
 800848c:	88fa      	ldrh	r2, [r7, #6]
 800848e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	689b      	ldr	r3, [r3, #8]
 8008494:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008498:	d108      	bne.n	80084ac <HAL_UART_Transmit+0x6c>
 800849a:	68fb      	ldr	r3, [r7, #12]
 800849c:	691b      	ldr	r3, [r3, #16]
 800849e:	2b00      	cmp	r3, #0
 80084a0:	d104      	bne.n	80084ac <HAL_UART_Transmit+0x6c>
 80084a2:	2300      	movs	r3, #0
 80084a4:	61fb      	str	r3, [r7, #28]
 80084a6:	68bb      	ldr	r3, [r7, #8]
 80084a8:	61bb      	str	r3, [r7, #24]
 80084aa:	e003      	b.n	80084b4 <HAL_UART_Transmit+0x74>
 80084ac:	68bb      	ldr	r3, [r7, #8]
 80084ae:	61fb      	str	r3, [r7, #28]
 80084b0:	2300      	movs	r3, #0
 80084b2:	61bb      	str	r3, [r7, #24]
 80084b4:	e02e      	b.n	8008514 <HAL_UART_Transmit+0xd4>
 80084b6:	683b      	ldr	r3, [r7, #0]
 80084b8:	9300      	str	r3, [sp, #0]
 80084ba:	697b      	ldr	r3, [r7, #20]
 80084bc:	2200      	movs	r2, #0
 80084be:	2180      	movs	r1, #128	@ 0x80
 80084c0:	68f8      	ldr	r0, [r7, #12]
 80084c2:	f000 fb1f 	bl	8008b04 <UART_WaitOnFlagUntilTimeout>
 80084c6:	4603      	mov	r3, r0
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	d005      	beq.n	80084d8 <HAL_UART_Transmit+0x98>
 80084cc:	68fb      	ldr	r3, [r7, #12]
 80084ce:	2220      	movs	r2, #32
 80084d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80084d4:	2303      	movs	r3, #3
 80084d6:	e03a      	b.n	800854e <HAL_UART_Transmit+0x10e>
 80084d8:	69fb      	ldr	r3, [r7, #28]
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d10b      	bne.n	80084f6 <HAL_UART_Transmit+0xb6>
 80084de:	69bb      	ldr	r3, [r7, #24]
 80084e0:	881b      	ldrh	r3, [r3, #0]
 80084e2:	461a      	mov	r2, r3
 80084e4:	68fb      	ldr	r3, [r7, #12]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80084ec:	605a      	str	r2, [r3, #4]
 80084ee:	69bb      	ldr	r3, [r7, #24]
 80084f0:	3302      	adds	r3, #2
 80084f2:	61bb      	str	r3, [r7, #24]
 80084f4:	e007      	b.n	8008506 <HAL_UART_Transmit+0xc6>
 80084f6:	69fb      	ldr	r3, [r7, #28]
 80084f8:	781a      	ldrb	r2, [r3, #0]
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	681b      	ldr	r3, [r3, #0]
 80084fe:	605a      	str	r2, [r3, #4]
 8008500:	69fb      	ldr	r3, [r7, #28]
 8008502:	3301      	adds	r3, #1
 8008504:	61fb      	str	r3, [r7, #28]
 8008506:	68fb      	ldr	r3, [r7, #12]
 8008508:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800850a:	b29b      	uxth	r3, r3
 800850c:	3b01      	subs	r3, #1
 800850e:	b29a      	uxth	r2, r3
 8008510:	68fb      	ldr	r3, [r7, #12]
 8008512:	84da      	strh	r2, [r3, #38]	@ 0x26
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8008518:	b29b      	uxth	r3, r3
 800851a:	2b00      	cmp	r3, #0
 800851c:	d1cb      	bne.n	80084b6 <HAL_UART_Transmit+0x76>
 800851e:	683b      	ldr	r3, [r7, #0]
 8008520:	9300      	str	r3, [sp, #0]
 8008522:	697b      	ldr	r3, [r7, #20]
 8008524:	2200      	movs	r2, #0
 8008526:	2140      	movs	r1, #64	@ 0x40
 8008528:	68f8      	ldr	r0, [r7, #12]
 800852a:	f000 faeb 	bl	8008b04 <UART_WaitOnFlagUntilTimeout>
 800852e:	4603      	mov	r3, r0
 8008530:	2b00      	cmp	r3, #0
 8008532:	d005      	beq.n	8008540 <HAL_UART_Transmit+0x100>
 8008534:	68fb      	ldr	r3, [r7, #12]
 8008536:	2220      	movs	r2, #32
 8008538:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800853c:	2303      	movs	r3, #3
 800853e:	e006      	b.n	800854e <HAL_UART_Transmit+0x10e>
 8008540:	68fb      	ldr	r3, [r7, #12]
 8008542:	2220      	movs	r2, #32
 8008544:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008548:	2300      	movs	r3, #0
 800854a:	e000      	b.n	800854e <HAL_UART_Transmit+0x10e>
 800854c:	2302      	movs	r3, #2
 800854e:	4618      	mov	r0, r3
 8008550:	3720      	adds	r7, #32
 8008552:	46bd      	mov	sp, r7
 8008554:	bd80      	pop	{r7, pc}

08008556 <HAL_UART_Receive_IT>:
 8008556:	b580      	push	{r7, lr}
 8008558:	b084      	sub	sp, #16
 800855a:	af00      	add	r7, sp, #0
 800855c:	60f8      	str	r0, [r7, #12]
 800855e:	60b9      	str	r1, [r7, #8]
 8008560:	4613      	mov	r3, r2
 8008562:	80fb      	strh	r3, [r7, #6]
 8008564:	68fb      	ldr	r3, [r7, #12]
 8008566:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800856a:	b2db      	uxtb	r3, r3
 800856c:	2b20      	cmp	r3, #32
 800856e:	d112      	bne.n	8008596 <HAL_UART_Receive_IT+0x40>
 8008570:	68bb      	ldr	r3, [r7, #8]
 8008572:	2b00      	cmp	r3, #0
 8008574:	d002      	beq.n	800857c <HAL_UART_Receive_IT+0x26>
 8008576:	88fb      	ldrh	r3, [r7, #6]
 8008578:	2b00      	cmp	r3, #0
 800857a:	d101      	bne.n	8008580 <HAL_UART_Receive_IT+0x2a>
 800857c:	2301      	movs	r3, #1
 800857e:	e00b      	b.n	8008598 <HAL_UART_Receive_IT+0x42>
 8008580:	68fb      	ldr	r3, [r7, #12]
 8008582:	2200      	movs	r2, #0
 8008584:	631a      	str	r2, [r3, #48]	@ 0x30
 8008586:	88fb      	ldrh	r3, [r7, #6]
 8008588:	461a      	mov	r2, r3
 800858a:	68b9      	ldr	r1, [r7, #8]
 800858c:	68f8      	ldr	r0, [r7, #12]
 800858e:	f000 fb12 	bl	8008bb6 <UART_Start_Receive_IT>
 8008592:	4603      	mov	r3, r0
 8008594:	e000      	b.n	8008598 <HAL_UART_Receive_IT+0x42>
 8008596:	2302      	movs	r3, #2
 8008598:	4618      	mov	r0, r3
 800859a:	3710      	adds	r7, #16
 800859c:	46bd      	mov	sp, r7
 800859e:	bd80      	pop	{r7, pc}

080085a0 <HAL_UART_IRQHandler>:
 80085a0:	b580      	push	{r7, lr}
 80085a2:	b0ba      	sub	sp, #232	@ 0xe8
 80085a4:	af00      	add	r7, sp, #0
 80085a6:	6078      	str	r0, [r7, #4]
 80085a8:	687b      	ldr	r3, [r7, #4]
 80085aa:	681b      	ldr	r3, [r3, #0]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80085b2:	687b      	ldr	r3, [r7, #4]
 80085b4:	681b      	ldr	r3, [r3, #0]
 80085b6:	68db      	ldr	r3, [r3, #12]
 80085b8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	695b      	ldr	r3, [r3, #20]
 80085c2:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80085c6:	2300      	movs	r3, #0
 80085c8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80085cc:	2300      	movs	r3, #0
 80085ce:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80085d2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80085d6:	f003 030f 	and.w	r3, r3, #15
 80085da:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80085de:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80085e2:	2b00      	cmp	r3, #0
 80085e4:	d10f      	bne.n	8008606 <HAL_UART_IRQHandler+0x66>
 80085e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80085ea:	f003 0320 	and.w	r3, r3, #32
 80085ee:	2b00      	cmp	r3, #0
 80085f0:	d009      	beq.n	8008606 <HAL_UART_IRQHandler+0x66>
 80085f2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80085f6:	f003 0320 	and.w	r3, r3, #32
 80085fa:	2b00      	cmp	r3, #0
 80085fc:	d003      	beq.n	8008606 <HAL_UART_IRQHandler+0x66>
 80085fe:	6878      	ldr	r0, [r7, #4]
 8008600:	f000 fbf2 	bl	8008de8 <UART_Receive_IT>
 8008604:	e25b      	b.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008606:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800860a:	2b00      	cmp	r3, #0
 800860c:	f000 80de 	beq.w	80087cc <HAL_UART_IRQHandler+0x22c>
 8008610:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8008614:	f003 0301 	and.w	r3, r3, #1
 8008618:	2b00      	cmp	r3, #0
 800861a:	d106      	bne.n	800862a <HAL_UART_IRQHandler+0x8a>
 800861c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008620:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8008624:	2b00      	cmp	r3, #0
 8008626:	f000 80d1 	beq.w	80087cc <HAL_UART_IRQHandler+0x22c>
 800862a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800862e:	f003 0301 	and.w	r3, r3, #1
 8008632:	2b00      	cmp	r3, #0
 8008634:	d00b      	beq.n	800864e <HAL_UART_IRQHandler+0xae>
 8008636:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800863a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800863e:	2b00      	cmp	r3, #0
 8008640:	d005      	beq.n	800864e <HAL_UART_IRQHandler+0xae>
 8008642:	687b      	ldr	r3, [r7, #4]
 8008644:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008646:	f043 0201 	orr.w	r2, r3, #1
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	645a      	str	r2, [r3, #68]	@ 0x44
 800864e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008652:	f003 0304 	and.w	r3, r3, #4
 8008656:	2b00      	cmp	r3, #0
 8008658:	d00b      	beq.n	8008672 <HAL_UART_IRQHandler+0xd2>
 800865a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800865e:	f003 0301 	and.w	r3, r3, #1
 8008662:	2b00      	cmp	r3, #0
 8008664:	d005      	beq.n	8008672 <HAL_UART_IRQHandler+0xd2>
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800866a:	f043 0202 	orr.w	r2, r3, #2
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	645a      	str	r2, [r3, #68]	@ 0x44
 8008672:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008676:	f003 0302 	and.w	r3, r3, #2
 800867a:	2b00      	cmp	r3, #0
 800867c:	d00b      	beq.n	8008696 <HAL_UART_IRQHandler+0xf6>
 800867e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8008682:	f003 0301 	and.w	r3, r3, #1
 8008686:	2b00      	cmp	r3, #0
 8008688:	d005      	beq.n	8008696 <HAL_UART_IRQHandler+0xf6>
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800868e:	f043 0204 	orr.w	r2, r3, #4
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	645a      	str	r2, [r3, #68]	@ 0x44
 8008696:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800869a:	f003 0308 	and.w	r3, r3, #8
 800869e:	2b00      	cmp	r3, #0
 80086a0:	d011      	beq.n	80086c6 <HAL_UART_IRQHandler+0x126>
 80086a2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80086a6:	f003 0320 	and.w	r3, r3, #32
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d105      	bne.n	80086ba <HAL_UART_IRQHandler+0x11a>
 80086ae:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80086b2:	f003 0301 	and.w	r3, r3, #1
 80086b6:	2b00      	cmp	r3, #0
 80086b8:	d005      	beq.n	80086c6 <HAL_UART_IRQHandler+0x126>
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80086be:	f043 0208 	orr.w	r2, r3, #8
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80086ca:	2b00      	cmp	r3, #0
 80086cc:	f000 81f2 	beq.w	8008ab4 <HAL_UART_IRQHandler+0x514>
 80086d0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80086d4:	f003 0320 	and.w	r3, r3, #32
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d008      	beq.n	80086ee <HAL_UART_IRQHandler+0x14e>
 80086dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80086e0:	f003 0320 	and.w	r3, r3, #32
 80086e4:	2b00      	cmp	r3, #0
 80086e6:	d002      	beq.n	80086ee <HAL_UART_IRQHandler+0x14e>
 80086e8:	6878      	ldr	r0, [r7, #4]
 80086ea:	f000 fb7d 	bl	8008de8 <UART_Receive_IT>
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	695b      	ldr	r3, [r3, #20]
 80086f4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80086f8:	2b40      	cmp	r3, #64	@ 0x40
 80086fa:	bf0c      	ite	eq
 80086fc:	2301      	moveq	r3, #1
 80086fe:	2300      	movne	r3, #0
 8008700:	b2db      	uxtb	r3, r3
 8008702:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800870a:	f003 0308 	and.w	r3, r3, #8
 800870e:	2b00      	cmp	r3, #0
 8008710:	d103      	bne.n	800871a <HAL_UART_IRQHandler+0x17a>
 8008712:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8008716:	2b00      	cmp	r3, #0
 8008718:	d04f      	beq.n	80087ba <HAL_UART_IRQHandler+0x21a>
 800871a:	6878      	ldr	r0, [r7, #4]
 800871c:	f000 fa85 	bl	8008c2a <UART_EndRxTransfer>
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	695b      	ldr	r3, [r3, #20]
 8008726:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800872a:	2b40      	cmp	r3, #64	@ 0x40
 800872c:	d141      	bne.n	80087b2 <HAL_UART_IRQHandler+0x212>
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	3314      	adds	r3, #20
 8008734:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8008738:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800873c:	e853 3f00 	ldrex	r3, [r3]
 8008740:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008744:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8008748:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800874c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8008750:	687b      	ldr	r3, [r7, #4]
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	3314      	adds	r3, #20
 8008756:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800875a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800875e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8008762:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8008766:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800876a:	e841 2300 	strex	r3, r2, [r1]
 800876e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8008772:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8008776:	2b00      	cmp	r3, #0
 8008778:	d1d9      	bne.n	800872e <HAL_UART_IRQHandler+0x18e>
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800877e:	2b00      	cmp	r3, #0
 8008780:	d013      	beq.n	80087aa <HAL_UART_IRQHandler+0x20a>
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008786:	4a7e      	ldr	r2, [pc, #504]	@ (8008980 <HAL_UART_IRQHandler+0x3e0>)
 8008788:	651a      	str	r2, [r3, #80]	@ 0x50
 800878a:	687b      	ldr	r3, [r7, #4]
 800878c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800878e:	4618      	mov	r0, r3
 8008790:	f7fd fda4 	bl	80062dc <HAL_DMA_Abort_IT>
 8008794:	4603      	mov	r3, r0
 8008796:	2b00      	cmp	r3, #0
 8008798:	d016      	beq.n	80087c8 <HAL_UART_IRQHandler+0x228>
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800879e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80087a0:	687a      	ldr	r2, [r7, #4]
 80087a2:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80087a4:	4610      	mov	r0, r2
 80087a6:	4798      	blx	r3
 80087a8:	e00e      	b.n	80087c8 <HAL_UART_IRQHandler+0x228>
 80087aa:	6878      	ldr	r0, [r7, #4]
 80087ac:	f000 f994 	bl	8008ad8 <HAL_UART_ErrorCallback>
 80087b0:	e00a      	b.n	80087c8 <HAL_UART_IRQHandler+0x228>
 80087b2:	6878      	ldr	r0, [r7, #4]
 80087b4:	f000 f990 	bl	8008ad8 <HAL_UART_ErrorCallback>
 80087b8:	e006      	b.n	80087c8 <HAL_UART_IRQHandler+0x228>
 80087ba:	6878      	ldr	r0, [r7, #4]
 80087bc:	f000 f98c 	bl	8008ad8 <HAL_UART_ErrorCallback>
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	2200      	movs	r2, #0
 80087c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80087c6:	e175      	b.n	8008ab4 <HAL_UART_IRQHandler+0x514>
 80087c8:	bf00      	nop
 80087ca:	e173      	b.n	8008ab4 <HAL_UART_IRQHandler+0x514>
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80087d0:	2b01      	cmp	r3, #1
 80087d2:	f040 814f 	bne.w	8008a74 <HAL_UART_IRQHandler+0x4d4>
 80087d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80087da:	f003 0310 	and.w	r3, r3, #16
 80087de:	2b00      	cmp	r3, #0
 80087e0:	f000 8148 	beq.w	8008a74 <HAL_UART_IRQHandler+0x4d4>
 80087e4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80087e8:	f003 0310 	and.w	r3, r3, #16
 80087ec:	2b00      	cmp	r3, #0
 80087ee:	f000 8141 	beq.w	8008a74 <HAL_UART_IRQHandler+0x4d4>
 80087f2:	2300      	movs	r3, #0
 80087f4:	60bb      	str	r3, [r7, #8]
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	681b      	ldr	r3, [r3, #0]
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	60bb      	str	r3, [r7, #8]
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	685b      	ldr	r3, [r3, #4]
 8008804:	60bb      	str	r3, [r7, #8]
 8008806:	68bb      	ldr	r3, [r7, #8]
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	695b      	ldr	r3, [r3, #20]
 800880e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008812:	2b40      	cmp	r3, #64	@ 0x40
 8008814:	f040 80b6 	bne.w	8008984 <HAL_UART_IRQHandler+0x3e4>
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800881c:	681b      	ldr	r3, [r3, #0]
 800881e:	685b      	ldr	r3, [r3, #4]
 8008820:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8008824:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8008828:	2b00      	cmp	r3, #0
 800882a:	f000 8145 	beq.w	8008ab8 <HAL_UART_IRQHandler+0x518>
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8008832:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8008836:	429a      	cmp	r2, r3
 8008838:	f080 813e 	bcs.w	8008ab8 <HAL_UART_IRQHandler+0x518>
 800883c:	687b      	ldr	r3, [r7, #4]
 800883e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8008842:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008848:	69db      	ldr	r3, [r3, #28]
 800884a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800884e:	f000 8088 	beq.w	8008962 <HAL_UART_IRQHandler+0x3c2>
 8008852:	687b      	ldr	r3, [r7, #4]
 8008854:	681b      	ldr	r3, [r3, #0]
 8008856:	330c      	adds	r3, #12
 8008858:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800885c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8008860:	e853 3f00 	ldrex	r3, [r3]
 8008864:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8008868:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800886c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008870:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	330c      	adds	r3, #12
 800887a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800887e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8008882:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8008886:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800888a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800888e:	e841 2300 	strex	r3, r2, [r1]
 8008892:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8008896:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800889a:	2b00      	cmp	r3, #0
 800889c:	d1d9      	bne.n	8008852 <HAL_UART_IRQHandler+0x2b2>
 800889e:	687b      	ldr	r3, [r7, #4]
 80088a0:	681b      	ldr	r3, [r3, #0]
 80088a2:	3314      	adds	r3, #20
 80088a4:	677b      	str	r3, [r7, #116]	@ 0x74
 80088a6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80088a8:	e853 3f00 	ldrex	r3, [r3]
 80088ac:	673b      	str	r3, [r7, #112]	@ 0x70
 80088ae:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80088b0:	f023 0301 	bic.w	r3, r3, #1
 80088b4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	3314      	adds	r3, #20
 80088be:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80088c2:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80088c6:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80088c8:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80088ca:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80088ce:	e841 2300 	strex	r3, r2, [r1]
 80088d2:	67bb      	str	r3, [r7, #120]	@ 0x78
 80088d4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80088d6:	2b00      	cmp	r3, #0
 80088d8:	d1e1      	bne.n	800889e <HAL_UART_IRQHandler+0x2fe>
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	681b      	ldr	r3, [r3, #0]
 80088de:	3314      	adds	r3, #20
 80088e0:	663b      	str	r3, [r7, #96]	@ 0x60
 80088e2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80088e4:	e853 3f00 	ldrex	r3, [r3]
 80088e8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80088ea:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80088ec:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80088f0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	681b      	ldr	r3, [r3, #0]
 80088f8:	3314      	adds	r3, #20
 80088fa:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80088fe:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8008900:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008902:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8008904:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8008906:	e841 2300 	strex	r3, r2, [r1]
 800890a:	667b      	str	r3, [r7, #100]	@ 0x64
 800890c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800890e:	2b00      	cmp	r3, #0
 8008910:	d1e3      	bne.n	80088da <HAL_UART_IRQHandler+0x33a>
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	2220      	movs	r2, #32
 8008916:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	2200      	movs	r2, #0
 800891e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	681b      	ldr	r3, [r3, #0]
 8008924:	330c      	adds	r3, #12
 8008926:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008928:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800892a:	e853 3f00 	ldrex	r3, [r3]
 800892e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008930:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008932:	f023 0310 	bic.w	r3, r3, #16
 8008936:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	681b      	ldr	r3, [r3, #0]
 800893e:	330c      	adds	r3, #12
 8008940:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8008944:	65ba      	str	r2, [r7, #88]	@ 0x58
 8008946:	657b      	str	r3, [r7, #84]	@ 0x54
 8008948:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800894a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800894c:	e841 2300 	strex	r3, r2, [r1]
 8008950:	653b      	str	r3, [r7, #80]	@ 0x50
 8008952:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008954:	2b00      	cmp	r3, #0
 8008956:	d1e3      	bne.n	8008920 <HAL_UART_IRQHandler+0x380>
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800895c:	4618      	mov	r0, r3
 800895e:	f7fd fc4d 	bl	80061fc <HAL_DMA_Abort>
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	2202      	movs	r2, #2
 8008966:	635a      	str	r2, [r3, #52]	@ 0x34
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8008970:	b29b      	uxth	r3, r3
 8008972:	1ad3      	subs	r3, r2, r3
 8008974:	b29b      	uxth	r3, r3
 8008976:	4619      	mov	r1, r3
 8008978:	6878      	ldr	r0, [r7, #4]
 800897a:	f000 f8b7 	bl	8008aec <HAL_UARTEx_RxEventCallback>
 800897e:	e09b      	b.n	8008ab8 <HAL_UART_IRQHandler+0x518>
 8008980:	08008cf1 	.word	0x08008cf1
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800898c:	b29b      	uxth	r3, r3
 800898e:	1ad3      	subs	r3, r2, r3
 8008990:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8008998:	b29b      	uxth	r3, r3
 800899a:	2b00      	cmp	r3, #0
 800899c:	f000 808e 	beq.w	8008abc <HAL_UART_IRQHandler+0x51c>
 80089a0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80089a4:	2b00      	cmp	r3, #0
 80089a6:	f000 8089 	beq.w	8008abc <HAL_UART_IRQHandler+0x51c>
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	330c      	adds	r3, #12
 80089b0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80089b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089b4:	e853 3f00 	ldrex	r3, [r3]
 80089b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80089ba:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80089bc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80089c0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	330c      	adds	r3, #12
 80089ca:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80089ce:	647a      	str	r2, [r7, #68]	@ 0x44
 80089d0:	643b      	str	r3, [r7, #64]	@ 0x40
 80089d2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80089d4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80089d6:	e841 2300 	strex	r3, r2, [r1]
 80089da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80089dc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80089de:	2b00      	cmp	r3, #0
 80089e0:	d1e3      	bne.n	80089aa <HAL_UART_IRQHandler+0x40a>
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	681b      	ldr	r3, [r3, #0]
 80089e6:	3314      	adds	r3, #20
 80089e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80089ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80089ec:	e853 3f00 	ldrex	r3, [r3]
 80089f0:	623b      	str	r3, [r7, #32]
 80089f2:	6a3b      	ldr	r3, [r7, #32]
 80089f4:	f023 0301 	bic.w	r3, r3, #1
 80089f8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80089fc:	687b      	ldr	r3, [r7, #4]
 80089fe:	681b      	ldr	r3, [r3, #0]
 8008a00:	3314      	adds	r3, #20
 8008a02:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8008a06:	633a      	str	r2, [r7, #48]	@ 0x30
 8008a08:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a0a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008a0c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008a0e:	e841 2300 	strex	r3, r2, [r1]
 8008a12:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008a14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008a16:	2b00      	cmp	r3, #0
 8008a18:	d1e3      	bne.n	80089e2 <HAL_UART_IRQHandler+0x442>
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	2220      	movs	r2, #32
 8008a1e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	2200      	movs	r2, #0
 8008a26:	631a      	str	r2, [r3, #48]	@ 0x30
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	330c      	adds	r3, #12
 8008a2e:	613b      	str	r3, [r7, #16]
 8008a30:	693b      	ldr	r3, [r7, #16]
 8008a32:	e853 3f00 	ldrex	r3, [r3]
 8008a36:	60fb      	str	r3, [r7, #12]
 8008a38:	68fb      	ldr	r3, [r7, #12]
 8008a3a:	f023 0310 	bic.w	r3, r3, #16
 8008a3e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	681b      	ldr	r3, [r3, #0]
 8008a46:	330c      	adds	r3, #12
 8008a48:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8008a4c:	61fa      	str	r2, [r7, #28]
 8008a4e:	61bb      	str	r3, [r7, #24]
 8008a50:	69b9      	ldr	r1, [r7, #24]
 8008a52:	69fa      	ldr	r2, [r7, #28]
 8008a54:	e841 2300 	strex	r3, r2, [r1]
 8008a58:	617b      	str	r3, [r7, #20]
 8008a5a:	697b      	ldr	r3, [r7, #20]
 8008a5c:	2b00      	cmp	r3, #0
 8008a5e:	d1e3      	bne.n	8008a28 <HAL_UART_IRQHandler+0x488>
 8008a60:	687b      	ldr	r3, [r7, #4]
 8008a62:	2202      	movs	r2, #2
 8008a64:	635a      	str	r2, [r3, #52]	@ 0x34
 8008a66:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8008a6a:	4619      	mov	r1, r3
 8008a6c:	6878      	ldr	r0, [r7, #4]
 8008a6e:	f000 f83d 	bl	8008aec <HAL_UARTEx_RxEventCallback>
 8008a72:	e023      	b.n	8008abc <HAL_UART_IRQHandler+0x51c>
 8008a74:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008a78:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d009      	beq.n	8008a94 <HAL_UART_IRQHandler+0x4f4>
 8008a80:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008a84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008a88:	2b00      	cmp	r3, #0
 8008a8a:	d003      	beq.n	8008a94 <HAL_UART_IRQHandler+0x4f4>
 8008a8c:	6878      	ldr	r0, [r7, #4]
 8008a8e:	f000 f943 	bl	8008d18 <UART_Transmit_IT>
 8008a92:	e014      	b.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008a94:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008a98:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008a9c:	2b00      	cmp	r3, #0
 8008a9e:	d00e      	beq.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008aa0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008aa4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008aa8:	2b00      	cmp	r3, #0
 8008aaa:	d008      	beq.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008aac:	6878      	ldr	r0, [r7, #4]
 8008aae:	f000 f983 	bl	8008db8 <UART_EndTransmit_IT>
 8008ab2:	e004      	b.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008ab4:	bf00      	nop
 8008ab6:	e002      	b.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008ab8:	bf00      	nop
 8008aba:	e000      	b.n	8008abe <HAL_UART_IRQHandler+0x51e>
 8008abc:	bf00      	nop
 8008abe:	37e8      	adds	r7, #232	@ 0xe8
 8008ac0:	46bd      	mov	sp, r7
 8008ac2:	bd80      	pop	{r7, pc}

08008ac4 <HAL_UART_TxCpltCallback>:
 8008ac4:	b480      	push	{r7}
 8008ac6:	b083      	sub	sp, #12
 8008ac8:	af00      	add	r7, sp, #0
 8008aca:	6078      	str	r0, [r7, #4]
 8008acc:	bf00      	nop
 8008ace:	370c      	adds	r7, #12
 8008ad0:	46bd      	mov	sp, r7
 8008ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ad6:	4770      	bx	lr

08008ad8 <HAL_UART_ErrorCallback>:
 8008ad8:	b480      	push	{r7}
 8008ada:	b083      	sub	sp, #12
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]
 8008ae0:	bf00      	nop
 8008ae2:	370c      	adds	r7, #12
 8008ae4:	46bd      	mov	sp, r7
 8008ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aea:	4770      	bx	lr

08008aec <HAL_UARTEx_RxEventCallback>:
 8008aec:	b480      	push	{r7}
 8008aee:	b083      	sub	sp, #12
 8008af0:	af00      	add	r7, sp, #0
 8008af2:	6078      	str	r0, [r7, #4]
 8008af4:	460b      	mov	r3, r1
 8008af6:	807b      	strh	r3, [r7, #2]
 8008af8:	bf00      	nop
 8008afa:	370c      	adds	r7, #12
 8008afc:	46bd      	mov	sp, r7
 8008afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b02:	4770      	bx	lr

08008b04 <UART_WaitOnFlagUntilTimeout>:
 8008b04:	b580      	push	{r7, lr}
 8008b06:	b086      	sub	sp, #24
 8008b08:	af00      	add	r7, sp, #0
 8008b0a:	60f8      	str	r0, [r7, #12]
 8008b0c:	60b9      	str	r1, [r7, #8]
 8008b0e:	603b      	str	r3, [r7, #0]
 8008b10:	4613      	mov	r3, r2
 8008b12:	71fb      	strb	r3, [r7, #7]
 8008b14:	e03b      	b.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b16:	6a3b      	ldr	r3, [r7, #32]
 8008b18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008b1c:	d037      	beq.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b1e:	f7fd fa1f 	bl	8005f60 <HAL_GetTick>
 8008b22:	4602      	mov	r2, r0
 8008b24:	683b      	ldr	r3, [r7, #0]
 8008b26:	1ad3      	subs	r3, r2, r3
 8008b28:	6a3a      	ldr	r2, [r7, #32]
 8008b2a:	429a      	cmp	r2, r3
 8008b2c:	d302      	bcc.n	8008b34 <UART_WaitOnFlagUntilTimeout+0x30>
 8008b2e:	6a3b      	ldr	r3, [r7, #32]
 8008b30:	2b00      	cmp	r3, #0
 8008b32:	d101      	bne.n	8008b38 <UART_WaitOnFlagUntilTimeout+0x34>
 8008b34:	2303      	movs	r3, #3
 8008b36:	e03a      	b.n	8008bae <UART_WaitOnFlagUntilTimeout+0xaa>
 8008b38:	68fb      	ldr	r3, [r7, #12]
 8008b3a:	681b      	ldr	r3, [r3, #0]
 8008b3c:	68db      	ldr	r3, [r3, #12]
 8008b3e:	f003 0304 	and.w	r3, r3, #4
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	d023      	beq.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b46:	68bb      	ldr	r3, [r7, #8]
 8008b48:	2b80      	cmp	r3, #128	@ 0x80
 8008b4a:	d020      	beq.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b4c:	68bb      	ldr	r3, [r7, #8]
 8008b4e:	2b40      	cmp	r3, #64	@ 0x40
 8008b50:	d01d      	beq.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b52:	68fb      	ldr	r3, [r7, #12]
 8008b54:	681b      	ldr	r3, [r3, #0]
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	f003 0308 	and.w	r3, r3, #8
 8008b5c:	2b08      	cmp	r3, #8
 8008b5e:	d116      	bne.n	8008b8e <UART_WaitOnFlagUntilTimeout+0x8a>
 8008b60:	2300      	movs	r3, #0
 8008b62:	617b      	str	r3, [r7, #20]
 8008b64:	68fb      	ldr	r3, [r7, #12]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	617b      	str	r3, [r7, #20]
 8008b6c:	68fb      	ldr	r3, [r7, #12]
 8008b6e:	681b      	ldr	r3, [r3, #0]
 8008b70:	685b      	ldr	r3, [r3, #4]
 8008b72:	617b      	str	r3, [r7, #20]
 8008b74:	697b      	ldr	r3, [r7, #20]
 8008b76:	68f8      	ldr	r0, [r7, #12]
 8008b78:	f000 f857 	bl	8008c2a <UART_EndRxTransfer>
 8008b7c:	68fb      	ldr	r3, [r7, #12]
 8008b7e:	2208      	movs	r2, #8
 8008b80:	645a      	str	r2, [r3, #68]	@ 0x44
 8008b82:	68fb      	ldr	r3, [r7, #12]
 8008b84:	2200      	movs	r2, #0
 8008b86:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008b8a:	2301      	movs	r3, #1
 8008b8c:	e00f      	b.n	8008bae <UART_WaitOnFlagUntilTimeout+0xaa>
 8008b8e:	68fb      	ldr	r3, [r7, #12]
 8008b90:	681b      	ldr	r3, [r3, #0]
 8008b92:	681a      	ldr	r2, [r3, #0]
 8008b94:	68bb      	ldr	r3, [r7, #8]
 8008b96:	4013      	ands	r3, r2
 8008b98:	68ba      	ldr	r2, [r7, #8]
 8008b9a:	429a      	cmp	r2, r3
 8008b9c:	bf0c      	ite	eq
 8008b9e:	2301      	moveq	r3, #1
 8008ba0:	2300      	movne	r3, #0
 8008ba2:	b2db      	uxtb	r3, r3
 8008ba4:	461a      	mov	r2, r3
 8008ba6:	79fb      	ldrb	r3, [r7, #7]
 8008ba8:	429a      	cmp	r2, r3
 8008baa:	d0b4      	beq.n	8008b16 <UART_WaitOnFlagUntilTimeout+0x12>
 8008bac:	2300      	movs	r3, #0
 8008bae:	4618      	mov	r0, r3
 8008bb0:	3718      	adds	r7, #24
 8008bb2:	46bd      	mov	sp, r7
 8008bb4:	bd80      	pop	{r7, pc}

08008bb6 <UART_Start_Receive_IT>:
 8008bb6:	b480      	push	{r7}
 8008bb8:	b085      	sub	sp, #20
 8008bba:	af00      	add	r7, sp, #0
 8008bbc:	60f8      	str	r0, [r7, #12]
 8008bbe:	60b9      	str	r1, [r7, #8]
 8008bc0:	4613      	mov	r3, r2
 8008bc2:	80fb      	strh	r3, [r7, #6]
 8008bc4:	68fb      	ldr	r3, [r7, #12]
 8008bc6:	68ba      	ldr	r2, [r7, #8]
 8008bc8:	629a      	str	r2, [r3, #40]	@ 0x28
 8008bca:	68fb      	ldr	r3, [r7, #12]
 8008bcc:	88fa      	ldrh	r2, [r7, #6]
 8008bce:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8008bd0:	68fb      	ldr	r3, [r7, #12]
 8008bd2:	88fa      	ldrh	r2, [r7, #6]
 8008bd4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	2200      	movs	r2, #0
 8008bda:	645a      	str	r2, [r3, #68]	@ 0x44
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	2222      	movs	r2, #34	@ 0x22
 8008be0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008be4:	68fb      	ldr	r3, [r7, #12]
 8008be6:	691b      	ldr	r3, [r3, #16]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	d007      	beq.n	8008bfc <UART_Start_Receive_IT+0x46>
 8008bec:	68fb      	ldr	r3, [r7, #12]
 8008bee:	681b      	ldr	r3, [r3, #0]
 8008bf0:	68da      	ldr	r2, [r3, #12]
 8008bf2:	68fb      	ldr	r3, [r7, #12]
 8008bf4:	681b      	ldr	r3, [r3, #0]
 8008bf6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008bfa:	60da      	str	r2, [r3, #12]
 8008bfc:	68fb      	ldr	r3, [r7, #12]
 8008bfe:	681b      	ldr	r3, [r3, #0]
 8008c00:	695a      	ldr	r2, [r3, #20]
 8008c02:	68fb      	ldr	r3, [r7, #12]
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	f042 0201 	orr.w	r2, r2, #1
 8008c0a:	615a      	str	r2, [r3, #20]
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	681b      	ldr	r3, [r3, #0]
 8008c10:	68da      	ldr	r2, [r3, #12]
 8008c12:	68fb      	ldr	r3, [r7, #12]
 8008c14:	681b      	ldr	r3, [r3, #0]
 8008c16:	f042 0220 	orr.w	r2, r2, #32
 8008c1a:	60da      	str	r2, [r3, #12]
 8008c1c:	2300      	movs	r3, #0
 8008c1e:	4618      	mov	r0, r3
 8008c20:	3714      	adds	r7, #20
 8008c22:	46bd      	mov	sp, r7
 8008c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c28:	4770      	bx	lr

08008c2a <UART_EndRxTransfer>:
 8008c2a:	b480      	push	{r7}
 8008c2c:	b095      	sub	sp, #84	@ 0x54
 8008c2e:	af00      	add	r7, sp, #0
 8008c30:	6078      	str	r0, [r7, #4]
 8008c32:	687b      	ldr	r3, [r7, #4]
 8008c34:	681b      	ldr	r3, [r3, #0]
 8008c36:	330c      	adds	r3, #12
 8008c38:	637b      	str	r3, [r7, #52]	@ 0x34
 8008c3a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008c3c:	e853 3f00 	ldrex	r3, [r3]
 8008c40:	633b      	str	r3, [r7, #48]	@ 0x30
 8008c42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c44:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008c48:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	681b      	ldr	r3, [r3, #0]
 8008c4e:	330c      	adds	r3, #12
 8008c50:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8008c52:	643a      	str	r2, [r7, #64]	@ 0x40
 8008c54:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008c56:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8008c58:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8008c5a:	e841 2300 	strex	r3, r2, [r1]
 8008c5e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008c60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008c62:	2b00      	cmp	r3, #0
 8008c64:	d1e5      	bne.n	8008c32 <UART_EndRxTransfer+0x8>
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	681b      	ldr	r3, [r3, #0]
 8008c6a:	3314      	adds	r3, #20
 8008c6c:	623b      	str	r3, [r7, #32]
 8008c6e:	6a3b      	ldr	r3, [r7, #32]
 8008c70:	e853 3f00 	ldrex	r3, [r3]
 8008c74:	61fb      	str	r3, [r7, #28]
 8008c76:	69fb      	ldr	r3, [r7, #28]
 8008c78:	f023 0301 	bic.w	r3, r3, #1
 8008c7c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008c7e:	687b      	ldr	r3, [r7, #4]
 8008c80:	681b      	ldr	r3, [r3, #0]
 8008c82:	3314      	adds	r3, #20
 8008c84:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008c86:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8008c88:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008c8a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008c8c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008c8e:	e841 2300 	strex	r3, r2, [r1]
 8008c92:	627b      	str	r3, [r7, #36]	@ 0x24
 8008c94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008c96:	2b00      	cmp	r3, #0
 8008c98:	d1e5      	bne.n	8008c66 <UART_EndRxTransfer+0x3c>
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008c9e:	2b01      	cmp	r3, #1
 8008ca0:	d119      	bne.n	8008cd6 <UART_EndRxTransfer+0xac>
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	681b      	ldr	r3, [r3, #0]
 8008ca6:	330c      	adds	r3, #12
 8008ca8:	60fb      	str	r3, [r7, #12]
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	e853 3f00 	ldrex	r3, [r3]
 8008cb0:	60bb      	str	r3, [r7, #8]
 8008cb2:	68bb      	ldr	r3, [r7, #8]
 8008cb4:	f023 0310 	bic.w	r3, r3, #16
 8008cb8:	647b      	str	r3, [r7, #68]	@ 0x44
 8008cba:	687b      	ldr	r3, [r7, #4]
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	330c      	adds	r3, #12
 8008cc0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008cc2:	61ba      	str	r2, [r7, #24]
 8008cc4:	617b      	str	r3, [r7, #20]
 8008cc6:	6979      	ldr	r1, [r7, #20]
 8008cc8:	69ba      	ldr	r2, [r7, #24]
 8008cca:	e841 2300 	strex	r3, r2, [r1]
 8008cce:	613b      	str	r3, [r7, #16]
 8008cd0:	693b      	ldr	r3, [r7, #16]
 8008cd2:	2b00      	cmp	r3, #0
 8008cd4:	d1e5      	bne.n	8008ca2 <UART_EndRxTransfer+0x78>
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	2220      	movs	r2, #32
 8008cda:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	2200      	movs	r2, #0
 8008ce2:	631a      	str	r2, [r3, #48]	@ 0x30
 8008ce4:	bf00      	nop
 8008ce6:	3754      	adds	r7, #84	@ 0x54
 8008ce8:	46bd      	mov	sp, r7
 8008cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cee:	4770      	bx	lr

08008cf0 <UART_DMAAbortOnError>:
 8008cf0:	b580      	push	{r7, lr}
 8008cf2:	b084      	sub	sp, #16
 8008cf4:	af00      	add	r7, sp, #0
 8008cf6:	6078      	str	r0, [r7, #4]
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008cfc:	60fb      	str	r3, [r7, #12]
 8008cfe:	68fb      	ldr	r3, [r7, #12]
 8008d00:	2200      	movs	r2, #0
 8008d02:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	2200      	movs	r2, #0
 8008d08:	84da      	strh	r2, [r3, #38]	@ 0x26
 8008d0a:	68f8      	ldr	r0, [r7, #12]
 8008d0c:	f7ff fee4 	bl	8008ad8 <HAL_UART_ErrorCallback>
 8008d10:	bf00      	nop
 8008d12:	3710      	adds	r7, #16
 8008d14:	46bd      	mov	sp, r7
 8008d16:	bd80      	pop	{r7, pc}

08008d18 <UART_Transmit_IT>:
 8008d18:	b480      	push	{r7}
 8008d1a:	b085      	sub	sp, #20
 8008d1c:	af00      	add	r7, sp, #0
 8008d1e:	6078      	str	r0, [r7, #4]
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8008d26:	b2db      	uxtb	r3, r3
 8008d28:	2b21      	cmp	r3, #33	@ 0x21
 8008d2a:	d13e      	bne.n	8008daa <UART_Transmit_IT+0x92>
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	689b      	ldr	r3, [r3, #8]
 8008d30:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008d34:	d114      	bne.n	8008d60 <UART_Transmit_IT+0x48>
 8008d36:	687b      	ldr	r3, [r7, #4]
 8008d38:	691b      	ldr	r3, [r3, #16]
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d110      	bne.n	8008d60 <UART_Transmit_IT+0x48>
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	6a1b      	ldr	r3, [r3, #32]
 8008d42:	60fb      	str	r3, [r7, #12]
 8008d44:	68fb      	ldr	r3, [r7, #12]
 8008d46:	881b      	ldrh	r3, [r3, #0]
 8008d48:	461a      	mov	r2, r3
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	681b      	ldr	r3, [r3, #0]
 8008d4e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008d52:	605a      	str	r2, [r3, #4]
 8008d54:	687b      	ldr	r3, [r7, #4]
 8008d56:	6a1b      	ldr	r3, [r3, #32]
 8008d58:	1c9a      	adds	r2, r3, #2
 8008d5a:	687b      	ldr	r3, [r7, #4]
 8008d5c:	621a      	str	r2, [r3, #32]
 8008d5e:	e008      	b.n	8008d72 <UART_Transmit_IT+0x5a>
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	6a1b      	ldr	r3, [r3, #32]
 8008d64:	1c59      	adds	r1, r3, #1
 8008d66:	687a      	ldr	r2, [r7, #4]
 8008d68:	6211      	str	r1, [r2, #32]
 8008d6a:	781a      	ldrb	r2, [r3, #0]
 8008d6c:	687b      	ldr	r3, [r7, #4]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	605a      	str	r2, [r3, #4]
 8008d72:	687b      	ldr	r3, [r7, #4]
 8008d74:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8008d76:	b29b      	uxth	r3, r3
 8008d78:	3b01      	subs	r3, #1
 8008d7a:	b29b      	uxth	r3, r3
 8008d7c:	687a      	ldr	r2, [r7, #4]
 8008d7e:	4619      	mov	r1, r3
 8008d80:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8008d82:	2b00      	cmp	r3, #0
 8008d84:	d10f      	bne.n	8008da6 <UART_Transmit_IT+0x8e>
 8008d86:	687b      	ldr	r3, [r7, #4]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	68da      	ldr	r2, [r3, #12]
 8008d8c:	687b      	ldr	r3, [r7, #4]
 8008d8e:	681b      	ldr	r3, [r3, #0]
 8008d90:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8008d94:	60da      	str	r2, [r3, #12]
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	681b      	ldr	r3, [r3, #0]
 8008d9a:	68da      	ldr	r2, [r3, #12]
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8008da4:	60da      	str	r2, [r3, #12]
 8008da6:	2300      	movs	r3, #0
 8008da8:	e000      	b.n	8008dac <UART_Transmit_IT+0x94>
 8008daa:	2302      	movs	r3, #2
 8008dac:	4618      	mov	r0, r3
 8008dae:	3714      	adds	r7, #20
 8008db0:	46bd      	mov	sp, r7
 8008db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008db6:	4770      	bx	lr

08008db8 <UART_EndTransmit_IT>:
 8008db8:	b580      	push	{r7, lr}
 8008dba:	b082      	sub	sp, #8
 8008dbc:	af00      	add	r7, sp, #0
 8008dbe:	6078      	str	r0, [r7, #4]
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	681b      	ldr	r3, [r3, #0]
 8008dc4:	68da      	ldr	r2, [r3, #12]
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	681b      	ldr	r3, [r3, #0]
 8008dca:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008dce:	60da      	str	r2, [r3, #12]
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	2220      	movs	r2, #32
 8008dd4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008dd8:	6878      	ldr	r0, [r7, #4]
 8008dda:	f7ff fe73 	bl	8008ac4 <HAL_UART_TxCpltCallback>
 8008dde:	2300      	movs	r3, #0
 8008de0:	4618      	mov	r0, r3
 8008de2:	3708      	adds	r7, #8
 8008de4:	46bd      	mov	sp, r7
 8008de6:	bd80      	pop	{r7, pc}

08008de8 <UART_Receive_IT>:
 8008de8:	b580      	push	{r7, lr}
 8008dea:	b08c      	sub	sp, #48	@ 0x30
 8008dec:	af00      	add	r7, sp, #0
 8008dee:	6078      	str	r0, [r7, #4]
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8008df6:	b2db      	uxtb	r3, r3
 8008df8:	2b22      	cmp	r3, #34	@ 0x22
 8008dfa:	f040 80ae 	bne.w	8008f5a <UART_Receive_IT+0x172>
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	689b      	ldr	r3, [r3, #8]
 8008e02:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008e06:	d117      	bne.n	8008e38 <UART_Receive_IT+0x50>
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	691b      	ldr	r3, [r3, #16]
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d113      	bne.n	8008e38 <UART_Receive_IT+0x50>
 8008e10:	2300      	movs	r3, #0
 8008e12:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008e18:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	681b      	ldr	r3, [r3, #0]
 8008e1e:	685b      	ldr	r3, [r3, #4]
 8008e20:	b29b      	uxth	r3, r3
 8008e22:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e26:	b29a      	uxth	r2, r3
 8008e28:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e2a:	801a      	strh	r2, [r3, #0]
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008e30:	1c9a      	adds	r2, r3, #2
 8008e32:	687b      	ldr	r3, [r7, #4]
 8008e34:	629a      	str	r2, [r3, #40]	@ 0x28
 8008e36:	e026      	b.n	8008e86 <UART_Receive_IT+0x9e>
 8008e38:	687b      	ldr	r3, [r7, #4]
 8008e3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008e3c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008e3e:	2300      	movs	r3, #0
 8008e40:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	689b      	ldr	r3, [r3, #8]
 8008e46:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008e4a:	d007      	beq.n	8008e5c <UART_Receive_IT+0x74>
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	689b      	ldr	r3, [r3, #8]
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d10a      	bne.n	8008e6a <UART_Receive_IT+0x82>
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	691b      	ldr	r3, [r3, #16]
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d106      	bne.n	8008e6a <UART_Receive_IT+0x82>
 8008e5c:	687b      	ldr	r3, [r7, #4]
 8008e5e:	681b      	ldr	r3, [r3, #0]
 8008e60:	685b      	ldr	r3, [r3, #4]
 8008e62:	b2da      	uxtb	r2, r3
 8008e64:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008e66:	701a      	strb	r2, [r3, #0]
 8008e68:	e008      	b.n	8008e7c <UART_Receive_IT+0x94>
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	685b      	ldr	r3, [r3, #4]
 8008e70:	b2db      	uxtb	r3, r3
 8008e72:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008e76:	b2da      	uxtb	r2, r3
 8008e78:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008e7a:	701a      	strb	r2, [r3, #0]
 8008e7c:	687b      	ldr	r3, [r7, #4]
 8008e7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008e80:	1c5a      	adds	r2, r3, #1
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	629a      	str	r2, [r3, #40]	@ 0x28
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8008e8a:	b29b      	uxth	r3, r3
 8008e8c:	3b01      	subs	r3, #1
 8008e8e:	b29b      	uxth	r3, r3
 8008e90:	687a      	ldr	r2, [r7, #4]
 8008e92:	4619      	mov	r1, r3
 8008e94:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	d15d      	bne.n	8008f56 <UART_Receive_IT+0x16e>
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	681b      	ldr	r3, [r3, #0]
 8008e9e:	68da      	ldr	r2, [r3, #12]
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	681b      	ldr	r3, [r3, #0]
 8008ea4:	f022 0220 	bic.w	r2, r2, #32
 8008ea8:	60da      	str	r2, [r3, #12]
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	681b      	ldr	r3, [r3, #0]
 8008eae:	68da      	ldr	r2, [r3, #12]
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8008eb8:	60da      	str	r2, [r3, #12]
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	681b      	ldr	r3, [r3, #0]
 8008ebe:	695a      	ldr	r2, [r3, #20]
 8008ec0:	687b      	ldr	r3, [r7, #4]
 8008ec2:	681b      	ldr	r3, [r3, #0]
 8008ec4:	f022 0201 	bic.w	r2, r2, #1
 8008ec8:	615a      	str	r2, [r3, #20]
 8008eca:	687b      	ldr	r3, [r7, #4]
 8008ecc:	2220      	movs	r2, #32
 8008ece:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008ed2:	687b      	ldr	r3, [r7, #4]
 8008ed4:	2200      	movs	r2, #0
 8008ed6:	635a      	str	r2, [r3, #52]	@ 0x34
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8008edc:	2b01      	cmp	r3, #1
 8008ede:	d135      	bne.n	8008f4c <UART_Receive_IT+0x164>
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	2200      	movs	r2, #0
 8008ee4:	631a      	str	r2, [r3, #48]	@ 0x30
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	681b      	ldr	r3, [r3, #0]
 8008eea:	330c      	adds	r3, #12
 8008eec:	617b      	str	r3, [r7, #20]
 8008eee:	697b      	ldr	r3, [r7, #20]
 8008ef0:	e853 3f00 	ldrex	r3, [r3]
 8008ef4:	613b      	str	r3, [r7, #16]
 8008ef6:	693b      	ldr	r3, [r7, #16]
 8008ef8:	f023 0310 	bic.w	r3, r3, #16
 8008efc:	627b      	str	r3, [r7, #36]	@ 0x24
 8008efe:	687b      	ldr	r3, [r7, #4]
 8008f00:	681b      	ldr	r3, [r3, #0]
 8008f02:	330c      	adds	r3, #12
 8008f04:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008f06:	623a      	str	r2, [r7, #32]
 8008f08:	61fb      	str	r3, [r7, #28]
 8008f0a:	69f9      	ldr	r1, [r7, #28]
 8008f0c:	6a3a      	ldr	r2, [r7, #32]
 8008f0e:	e841 2300 	strex	r3, r2, [r1]
 8008f12:	61bb      	str	r3, [r7, #24]
 8008f14:	69bb      	ldr	r3, [r7, #24]
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	d1e5      	bne.n	8008ee6 <UART_Receive_IT+0xfe>
 8008f1a:	687b      	ldr	r3, [r7, #4]
 8008f1c:	681b      	ldr	r3, [r3, #0]
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	f003 0310 	and.w	r3, r3, #16
 8008f24:	2b10      	cmp	r3, #16
 8008f26:	d10a      	bne.n	8008f3e <UART_Receive_IT+0x156>
 8008f28:	2300      	movs	r3, #0
 8008f2a:	60fb      	str	r3, [r7, #12]
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	681b      	ldr	r3, [r3, #0]
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	60fb      	str	r3, [r7, #12]
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	685b      	ldr	r3, [r3, #4]
 8008f3a:	60fb      	str	r3, [r7, #12]
 8008f3c:	68fb      	ldr	r3, [r7, #12]
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8008f42:	4619      	mov	r1, r3
 8008f44:	6878      	ldr	r0, [r7, #4]
 8008f46:	f7ff fdd1 	bl	8008aec <HAL_UARTEx_RxEventCallback>
 8008f4a:	e002      	b.n	8008f52 <UART_Receive_IT+0x16a>
 8008f4c:	6878      	ldr	r0, [r7, #4]
 8008f4e:	f7fc f8af 	bl	80050b0 <HAL_UART_RxCpltCallback>
 8008f52:	2300      	movs	r3, #0
 8008f54:	e002      	b.n	8008f5c <UART_Receive_IT+0x174>
 8008f56:	2300      	movs	r3, #0
 8008f58:	e000      	b.n	8008f5c <UART_Receive_IT+0x174>
 8008f5a:	2302      	movs	r3, #2
 8008f5c:	4618      	mov	r0, r3
 8008f5e:	3730      	adds	r7, #48	@ 0x30
 8008f60:	46bd      	mov	sp, r7
 8008f62:	bd80      	pop	{r7, pc}

08008f64 <UART_SetConfig>:
 8008f64:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008f68:	b0c0      	sub	sp, #256	@ 0x100
 8008f6a:	af00      	add	r7, sp, #0
 8008f6c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8008f70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	691b      	ldr	r3, [r3, #16]
 8008f78:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8008f7c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008f80:	68d9      	ldr	r1, [r3, #12]
 8008f82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008f86:	681a      	ldr	r2, [r3, #0]
 8008f88:	ea40 0301 	orr.w	r3, r0, r1
 8008f8c:	6113      	str	r3, [r2, #16]
 8008f8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008f92:	689a      	ldr	r2, [r3, #8]
 8008f94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008f98:	691b      	ldr	r3, [r3, #16]
 8008f9a:	431a      	orrs	r2, r3
 8008f9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fa0:	695b      	ldr	r3, [r3, #20]
 8008fa2:	431a      	orrs	r2, r3
 8008fa4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fa8:	69db      	ldr	r3, [r3, #28]
 8008faa:	4313      	orrs	r3, r2
 8008fac:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8008fb0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	68db      	ldr	r3, [r3, #12]
 8008fb8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8008fbc:	f021 010c 	bic.w	r1, r1, #12
 8008fc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fc4:	681a      	ldr	r2, [r3, #0]
 8008fc6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8008fca:	430b      	orrs	r3, r1
 8008fcc:	60d3      	str	r3, [r2, #12]
 8008fce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fd2:	681b      	ldr	r3, [r3, #0]
 8008fd4:	695b      	ldr	r3, [r3, #20]
 8008fd6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8008fda:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fde:	6999      	ldr	r1, [r3, #24]
 8008fe0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008fe4:	681a      	ldr	r2, [r3, #0]
 8008fe6:	ea40 0301 	orr.w	r3, r0, r1
 8008fea:	6153      	str	r3, [r2, #20]
 8008fec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008ff0:	681a      	ldr	r2, [r3, #0]
 8008ff2:	4b8f      	ldr	r3, [pc, #572]	@ (8009230 <UART_SetConfig+0x2cc>)
 8008ff4:	429a      	cmp	r2, r3
 8008ff6:	d005      	beq.n	8009004 <UART_SetConfig+0xa0>
 8008ff8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8008ffc:	681a      	ldr	r2, [r3, #0]
 8008ffe:	4b8d      	ldr	r3, [pc, #564]	@ (8009234 <UART_SetConfig+0x2d0>)
 8009000:	429a      	cmp	r2, r3
 8009002:	d104      	bne.n	800900e <UART_SetConfig+0xaa>
 8009004:	f7fd fc40 	bl	8006888 <HAL_RCC_GetPCLK2Freq>
 8009008:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800900c:	e003      	b.n	8009016 <UART_SetConfig+0xb2>
 800900e:	f7fd fc27 	bl	8006860 <HAL_RCC_GetPCLK1Freq>
 8009012:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8009016:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800901a:	69db      	ldr	r3, [r3, #28]
 800901c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009020:	f040 810c 	bne.w	800923c <UART_SetConfig+0x2d8>
 8009024:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009028:	2200      	movs	r2, #0
 800902a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800902e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8009032:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8009036:	4622      	mov	r2, r4
 8009038:	462b      	mov	r3, r5
 800903a:	1891      	adds	r1, r2, r2
 800903c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800903e:	415b      	adcs	r3, r3
 8009040:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8009042:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8009046:	4621      	mov	r1, r4
 8009048:	eb12 0801 	adds.w	r8, r2, r1
 800904c:	4629      	mov	r1, r5
 800904e:	eb43 0901 	adc.w	r9, r3, r1
 8009052:	f04f 0200 	mov.w	r2, #0
 8009056:	f04f 0300 	mov.w	r3, #0
 800905a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800905e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8009062:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009066:	4690      	mov	r8, r2
 8009068:	4699      	mov	r9, r3
 800906a:	4623      	mov	r3, r4
 800906c:	eb18 0303 	adds.w	r3, r8, r3
 8009070:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8009074:	462b      	mov	r3, r5
 8009076:	eb49 0303 	adc.w	r3, r9, r3
 800907a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800907e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009082:	685b      	ldr	r3, [r3, #4]
 8009084:	2200      	movs	r2, #0
 8009086:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800908a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800908e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8009092:	460b      	mov	r3, r1
 8009094:	18db      	adds	r3, r3, r3
 8009096:	653b      	str	r3, [r7, #80]	@ 0x50
 8009098:	4613      	mov	r3, r2
 800909a:	eb42 0303 	adc.w	r3, r2, r3
 800909e:	657b      	str	r3, [r7, #84]	@ 0x54
 80090a0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80090a4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80090a8:	f7f7 fb16 	bl	80006d8 <__aeabi_uldivmod>
 80090ac:	4602      	mov	r2, r0
 80090ae:	460b      	mov	r3, r1
 80090b0:	4b61      	ldr	r3, [pc, #388]	@ (8009238 <UART_SetConfig+0x2d4>)
 80090b2:	fba3 2302 	umull	r2, r3, r3, r2
 80090b6:	095b      	lsrs	r3, r3, #5
 80090b8:	011c      	lsls	r4, r3, #4
 80090ba:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80090be:	2200      	movs	r2, #0
 80090c0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80090c4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80090c8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80090cc:	4642      	mov	r2, r8
 80090ce:	464b      	mov	r3, r9
 80090d0:	1891      	adds	r1, r2, r2
 80090d2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80090d4:	415b      	adcs	r3, r3
 80090d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80090d8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80090dc:	4641      	mov	r1, r8
 80090de:	eb12 0a01 	adds.w	sl, r2, r1
 80090e2:	4649      	mov	r1, r9
 80090e4:	eb43 0b01 	adc.w	fp, r3, r1
 80090e8:	f04f 0200 	mov.w	r2, #0
 80090ec:	f04f 0300 	mov.w	r3, #0
 80090f0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80090f4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80090f8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80090fc:	4692      	mov	sl, r2
 80090fe:	469b      	mov	fp, r3
 8009100:	4643      	mov	r3, r8
 8009102:	eb1a 0303 	adds.w	r3, sl, r3
 8009106:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800910a:	464b      	mov	r3, r9
 800910c:	eb4b 0303 	adc.w	r3, fp, r3
 8009110:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8009114:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009118:	685b      	ldr	r3, [r3, #4]
 800911a:	2200      	movs	r2, #0
 800911c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8009120:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8009124:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8009128:	460b      	mov	r3, r1
 800912a:	18db      	adds	r3, r3, r3
 800912c:	643b      	str	r3, [r7, #64]	@ 0x40
 800912e:	4613      	mov	r3, r2
 8009130:	eb42 0303 	adc.w	r3, r2, r3
 8009134:	647b      	str	r3, [r7, #68]	@ 0x44
 8009136:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800913a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800913e:	f7f7 facb 	bl	80006d8 <__aeabi_uldivmod>
 8009142:	4602      	mov	r2, r0
 8009144:	460b      	mov	r3, r1
 8009146:	4611      	mov	r1, r2
 8009148:	4b3b      	ldr	r3, [pc, #236]	@ (8009238 <UART_SetConfig+0x2d4>)
 800914a:	fba3 2301 	umull	r2, r3, r3, r1
 800914e:	095b      	lsrs	r3, r3, #5
 8009150:	2264      	movs	r2, #100	@ 0x64
 8009152:	fb02 f303 	mul.w	r3, r2, r3
 8009156:	1acb      	subs	r3, r1, r3
 8009158:	00db      	lsls	r3, r3, #3
 800915a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800915e:	4b36      	ldr	r3, [pc, #216]	@ (8009238 <UART_SetConfig+0x2d4>)
 8009160:	fba3 2302 	umull	r2, r3, r3, r2
 8009164:	095b      	lsrs	r3, r3, #5
 8009166:	005b      	lsls	r3, r3, #1
 8009168:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800916c:	441c      	add	r4, r3
 800916e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009172:	2200      	movs	r2, #0
 8009174:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8009178:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800917c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8009180:	4642      	mov	r2, r8
 8009182:	464b      	mov	r3, r9
 8009184:	1891      	adds	r1, r2, r2
 8009186:	63b9      	str	r1, [r7, #56]	@ 0x38
 8009188:	415b      	adcs	r3, r3
 800918a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800918c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8009190:	4641      	mov	r1, r8
 8009192:	1851      	adds	r1, r2, r1
 8009194:	6339      	str	r1, [r7, #48]	@ 0x30
 8009196:	4649      	mov	r1, r9
 8009198:	414b      	adcs	r3, r1
 800919a:	637b      	str	r3, [r7, #52]	@ 0x34
 800919c:	f04f 0200 	mov.w	r2, #0
 80091a0:	f04f 0300 	mov.w	r3, #0
 80091a4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80091a8:	4659      	mov	r1, fp
 80091aa:	00cb      	lsls	r3, r1, #3
 80091ac:	4651      	mov	r1, sl
 80091ae:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80091b2:	4651      	mov	r1, sl
 80091b4:	00ca      	lsls	r2, r1, #3
 80091b6:	4610      	mov	r0, r2
 80091b8:	4619      	mov	r1, r3
 80091ba:	4603      	mov	r3, r0
 80091bc:	4642      	mov	r2, r8
 80091be:	189b      	adds	r3, r3, r2
 80091c0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80091c4:	464b      	mov	r3, r9
 80091c6:	460a      	mov	r2, r1
 80091c8:	eb42 0303 	adc.w	r3, r2, r3
 80091cc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80091d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80091d4:	685b      	ldr	r3, [r3, #4]
 80091d6:	2200      	movs	r2, #0
 80091d8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80091dc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80091e0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80091e4:	460b      	mov	r3, r1
 80091e6:	18db      	adds	r3, r3, r3
 80091e8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80091ea:	4613      	mov	r3, r2
 80091ec:	eb42 0303 	adc.w	r3, r2, r3
 80091f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80091f2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80091f6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80091fa:	f7f7 fa6d 	bl	80006d8 <__aeabi_uldivmod>
 80091fe:	4602      	mov	r2, r0
 8009200:	460b      	mov	r3, r1
 8009202:	4b0d      	ldr	r3, [pc, #52]	@ (8009238 <UART_SetConfig+0x2d4>)
 8009204:	fba3 1302 	umull	r1, r3, r3, r2
 8009208:	095b      	lsrs	r3, r3, #5
 800920a:	2164      	movs	r1, #100	@ 0x64
 800920c:	fb01 f303 	mul.w	r3, r1, r3
 8009210:	1ad3      	subs	r3, r2, r3
 8009212:	00db      	lsls	r3, r3, #3
 8009214:	3332      	adds	r3, #50	@ 0x32
 8009216:	4a08      	ldr	r2, [pc, #32]	@ (8009238 <UART_SetConfig+0x2d4>)
 8009218:	fba2 2303 	umull	r2, r3, r2, r3
 800921c:	095b      	lsrs	r3, r3, #5
 800921e:	f003 0207 	and.w	r2, r3, #7
 8009222:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009226:	681b      	ldr	r3, [r3, #0]
 8009228:	4422      	add	r2, r4
 800922a:	609a      	str	r2, [r3, #8]
 800922c:	e106      	b.n	800943c <UART_SetConfig+0x4d8>
 800922e:	bf00      	nop
 8009230:	40011000 	.word	0x40011000
 8009234:	40011400 	.word	0x40011400
 8009238:	51eb851f 	.word	0x51eb851f
 800923c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009240:	2200      	movs	r2, #0
 8009242:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8009246:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800924a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800924e:	4642      	mov	r2, r8
 8009250:	464b      	mov	r3, r9
 8009252:	1891      	adds	r1, r2, r2
 8009254:	6239      	str	r1, [r7, #32]
 8009256:	415b      	adcs	r3, r3
 8009258:	627b      	str	r3, [r7, #36]	@ 0x24
 800925a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800925e:	4641      	mov	r1, r8
 8009260:	1854      	adds	r4, r2, r1
 8009262:	4649      	mov	r1, r9
 8009264:	eb43 0501 	adc.w	r5, r3, r1
 8009268:	f04f 0200 	mov.w	r2, #0
 800926c:	f04f 0300 	mov.w	r3, #0
 8009270:	00eb      	lsls	r3, r5, #3
 8009272:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8009276:	00e2      	lsls	r2, r4, #3
 8009278:	4614      	mov	r4, r2
 800927a:	461d      	mov	r5, r3
 800927c:	4643      	mov	r3, r8
 800927e:	18e3      	adds	r3, r4, r3
 8009280:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8009284:	464b      	mov	r3, r9
 8009286:	eb45 0303 	adc.w	r3, r5, r3
 800928a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800928e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009292:	685b      	ldr	r3, [r3, #4]
 8009294:	2200      	movs	r2, #0
 8009296:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800929a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800929e:	f04f 0200 	mov.w	r2, #0
 80092a2:	f04f 0300 	mov.w	r3, #0
 80092a6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80092aa:	4629      	mov	r1, r5
 80092ac:	008b      	lsls	r3, r1, #2
 80092ae:	4621      	mov	r1, r4
 80092b0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80092b4:	4621      	mov	r1, r4
 80092b6:	008a      	lsls	r2, r1, #2
 80092b8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80092bc:	f7f7 fa0c 	bl	80006d8 <__aeabi_uldivmod>
 80092c0:	4602      	mov	r2, r0
 80092c2:	460b      	mov	r3, r1
 80092c4:	4b60      	ldr	r3, [pc, #384]	@ (8009448 <UART_SetConfig+0x4e4>)
 80092c6:	fba3 2302 	umull	r2, r3, r3, r2
 80092ca:	095b      	lsrs	r3, r3, #5
 80092cc:	011c      	lsls	r4, r3, #4
 80092ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80092d2:	2200      	movs	r2, #0
 80092d4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80092d8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80092dc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80092e0:	4642      	mov	r2, r8
 80092e2:	464b      	mov	r3, r9
 80092e4:	1891      	adds	r1, r2, r2
 80092e6:	61b9      	str	r1, [r7, #24]
 80092e8:	415b      	adcs	r3, r3
 80092ea:	61fb      	str	r3, [r7, #28]
 80092ec:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80092f0:	4641      	mov	r1, r8
 80092f2:	1851      	adds	r1, r2, r1
 80092f4:	6139      	str	r1, [r7, #16]
 80092f6:	4649      	mov	r1, r9
 80092f8:	414b      	adcs	r3, r1
 80092fa:	617b      	str	r3, [r7, #20]
 80092fc:	f04f 0200 	mov.w	r2, #0
 8009300:	f04f 0300 	mov.w	r3, #0
 8009304:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8009308:	4659      	mov	r1, fp
 800930a:	00cb      	lsls	r3, r1, #3
 800930c:	4651      	mov	r1, sl
 800930e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8009312:	4651      	mov	r1, sl
 8009314:	00ca      	lsls	r2, r1, #3
 8009316:	4610      	mov	r0, r2
 8009318:	4619      	mov	r1, r3
 800931a:	4603      	mov	r3, r0
 800931c:	4642      	mov	r2, r8
 800931e:	189b      	adds	r3, r3, r2
 8009320:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8009324:	464b      	mov	r3, r9
 8009326:	460a      	mov	r2, r1
 8009328:	eb42 0303 	adc.w	r3, r2, r3
 800932c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009330:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009334:	685b      	ldr	r3, [r3, #4]
 8009336:	2200      	movs	r2, #0
 8009338:	67bb      	str	r3, [r7, #120]	@ 0x78
 800933a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800933c:	f04f 0200 	mov.w	r2, #0
 8009340:	f04f 0300 	mov.w	r3, #0
 8009344:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8009348:	4649      	mov	r1, r9
 800934a:	008b      	lsls	r3, r1, #2
 800934c:	4641      	mov	r1, r8
 800934e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8009352:	4641      	mov	r1, r8
 8009354:	008a      	lsls	r2, r1, #2
 8009356:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800935a:	f7f7 f9bd 	bl	80006d8 <__aeabi_uldivmod>
 800935e:	4602      	mov	r2, r0
 8009360:	460b      	mov	r3, r1
 8009362:	4611      	mov	r1, r2
 8009364:	4b38      	ldr	r3, [pc, #224]	@ (8009448 <UART_SetConfig+0x4e4>)
 8009366:	fba3 2301 	umull	r2, r3, r3, r1
 800936a:	095b      	lsrs	r3, r3, #5
 800936c:	2264      	movs	r2, #100	@ 0x64
 800936e:	fb02 f303 	mul.w	r3, r2, r3
 8009372:	1acb      	subs	r3, r1, r3
 8009374:	011b      	lsls	r3, r3, #4
 8009376:	3332      	adds	r3, #50	@ 0x32
 8009378:	4a33      	ldr	r2, [pc, #204]	@ (8009448 <UART_SetConfig+0x4e4>)
 800937a:	fba2 2303 	umull	r2, r3, r2, r3
 800937e:	095b      	lsrs	r3, r3, #5
 8009380:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8009384:	441c      	add	r4, r3
 8009386:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800938a:	2200      	movs	r2, #0
 800938c:	673b      	str	r3, [r7, #112]	@ 0x70
 800938e:	677a      	str	r2, [r7, #116]	@ 0x74
 8009390:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8009394:	4642      	mov	r2, r8
 8009396:	464b      	mov	r3, r9
 8009398:	1891      	adds	r1, r2, r2
 800939a:	60b9      	str	r1, [r7, #8]
 800939c:	415b      	adcs	r3, r3
 800939e:	60fb      	str	r3, [r7, #12]
 80093a0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80093a4:	4641      	mov	r1, r8
 80093a6:	1851      	adds	r1, r2, r1
 80093a8:	6039      	str	r1, [r7, #0]
 80093aa:	4649      	mov	r1, r9
 80093ac:	414b      	adcs	r3, r1
 80093ae:	607b      	str	r3, [r7, #4]
 80093b0:	f04f 0200 	mov.w	r2, #0
 80093b4:	f04f 0300 	mov.w	r3, #0
 80093b8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80093bc:	4659      	mov	r1, fp
 80093be:	00cb      	lsls	r3, r1, #3
 80093c0:	4651      	mov	r1, sl
 80093c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80093c6:	4651      	mov	r1, sl
 80093c8:	00ca      	lsls	r2, r1, #3
 80093ca:	4610      	mov	r0, r2
 80093cc:	4619      	mov	r1, r3
 80093ce:	4603      	mov	r3, r0
 80093d0:	4642      	mov	r2, r8
 80093d2:	189b      	adds	r3, r3, r2
 80093d4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80093d6:	464b      	mov	r3, r9
 80093d8:	460a      	mov	r2, r1
 80093da:	eb42 0303 	adc.w	r3, r2, r3
 80093de:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80093e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80093e4:	685b      	ldr	r3, [r3, #4]
 80093e6:	2200      	movs	r2, #0
 80093e8:	663b      	str	r3, [r7, #96]	@ 0x60
 80093ea:	667a      	str	r2, [r7, #100]	@ 0x64
 80093ec:	f04f 0200 	mov.w	r2, #0
 80093f0:	f04f 0300 	mov.w	r3, #0
 80093f4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80093f8:	4649      	mov	r1, r9
 80093fa:	008b      	lsls	r3, r1, #2
 80093fc:	4641      	mov	r1, r8
 80093fe:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8009402:	4641      	mov	r1, r8
 8009404:	008a      	lsls	r2, r1, #2
 8009406:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800940a:	f7f7 f965 	bl	80006d8 <__aeabi_uldivmod>
 800940e:	4602      	mov	r2, r0
 8009410:	460b      	mov	r3, r1
 8009412:	4b0d      	ldr	r3, [pc, #52]	@ (8009448 <UART_SetConfig+0x4e4>)
 8009414:	fba3 1302 	umull	r1, r3, r3, r2
 8009418:	095b      	lsrs	r3, r3, #5
 800941a:	2164      	movs	r1, #100	@ 0x64
 800941c:	fb01 f303 	mul.w	r3, r1, r3
 8009420:	1ad3      	subs	r3, r2, r3
 8009422:	011b      	lsls	r3, r3, #4
 8009424:	3332      	adds	r3, #50	@ 0x32
 8009426:	4a08      	ldr	r2, [pc, #32]	@ (8009448 <UART_SetConfig+0x4e4>)
 8009428:	fba2 2303 	umull	r2, r3, r2, r3
 800942c:	095b      	lsrs	r3, r3, #5
 800942e:	f003 020f 	and.w	r2, r3, #15
 8009432:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	4422      	add	r2, r4
 800943a:	609a      	str	r2, [r3, #8]
 800943c:	bf00      	nop
 800943e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8009442:	46bd      	mov	sp, r7
 8009444:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009448:	51eb851f 	.word	0x51eb851f

0800944c <MX_FATFS_Init>:
 800944c:	b580      	push	{r7, lr}
 800944e:	af00      	add	r7, sp, #0
 8009450:	4904      	ldr	r1, [pc, #16]	@ (8009464 <MX_FATFS_Init+0x18>)
 8009452:	4805      	ldr	r0, [pc, #20]	@ (8009468 <MX_FATFS_Init+0x1c>)
 8009454:	f002 fea4 	bl	800c1a0 <FATFS_LinkDriver>
 8009458:	4603      	mov	r3, r0
 800945a:	461a      	mov	r2, r3
 800945c:	4b03      	ldr	r3, [pc, #12]	@ (800946c <MX_FATFS_Init+0x20>)
 800945e:	701a      	strb	r2, [r3, #0]
 8009460:	bf00      	nop
 8009462:	bd80      	pop	{r7, pc}
 8009464:	2001cafc 	.word	0x2001cafc
 8009468:	20016a88 	.word	0x20016a88
 800946c:	2001caf8 	.word	0x2001caf8

08009470 <get_fattime>:
 8009470:	b480      	push	{r7}
 8009472:	af00      	add	r7, sp, #0
 8009474:	2300      	movs	r3, #0
 8009476:	4618      	mov	r0, r3
 8009478:	46bd      	mov	sp, r7
 800947a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800947e:	4770      	bx	lr

08009480 <USER_initialize>:
 8009480:	b580      	push	{r7, lr}
 8009482:	b082      	sub	sp, #8
 8009484:	af00      	add	r7, sp, #0
 8009486:	4603      	mov	r3, r0
 8009488:	71fb      	strb	r3, [r7, #7]
 800948a:	79fb      	ldrb	r3, [r7, #7]
 800948c:	4618      	mov	r0, r3
 800948e:	f7f7 fc4f 	bl	8000d30 <SD_disk_initialize>
 8009492:	bf00      	nop
 8009494:	4618      	mov	r0, r3
 8009496:	3708      	adds	r7, #8
 8009498:	46bd      	mov	sp, r7
 800949a:	bd80      	pop	{r7, pc}

0800949c <USER_status>:
 800949c:	b580      	push	{r7, lr}
 800949e:	b082      	sub	sp, #8
 80094a0:	af00      	add	r7, sp, #0
 80094a2:	4603      	mov	r3, r0
 80094a4:	71fb      	strb	r3, [r7, #7]
 80094a6:	79fb      	ldrb	r3, [r7, #7]
 80094a8:	4618      	mov	r0, r3
 80094aa:	f7f7 fd27 	bl	8000efc <SD_disk_status>
 80094ae:	bf00      	nop
 80094b0:	4618      	mov	r0, r3
 80094b2:	3708      	adds	r7, #8
 80094b4:	46bd      	mov	sp, r7
 80094b6:	bd80      	pop	{r7, pc}

080094b8 <USER_read>:
 80094b8:	b580      	push	{r7, lr}
 80094ba:	b084      	sub	sp, #16
 80094bc:	af00      	add	r7, sp, #0
 80094be:	60b9      	str	r1, [r7, #8]
 80094c0:	607a      	str	r2, [r7, #4]
 80094c2:	603b      	str	r3, [r7, #0]
 80094c4:	4603      	mov	r3, r0
 80094c6:	73fb      	strb	r3, [r7, #15]
 80094c8:	7bf8      	ldrb	r0, [r7, #15]
 80094ca:	683b      	ldr	r3, [r7, #0]
 80094cc:	687a      	ldr	r2, [r7, #4]
 80094ce:	68b9      	ldr	r1, [r7, #8]
 80094d0:	f7f7 fd2a 	bl	8000f28 <SD_disk_read>
 80094d4:	bf00      	nop
 80094d6:	4618      	mov	r0, r3
 80094d8:	3710      	adds	r7, #16
 80094da:	46bd      	mov	sp, r7
 80094dc:	bd80      	pop	{r7, pc}

080094de <USER_write>:
 80094de:	b580      	push	{r7, lr}
 80094e0:	b084      	sub	sp, #16
 80094e2:	af00      	add	r7, sp, #0
 80094e4:	60b9      	str	r1, [r7, #8]
 80094e6:	607a      	str	r2, [r7, #4]
 80094e8:	603b      	str	r3, [r7, #0]
 80094ea:	4603      	mov	r3, r0
 80094ec:	73fb      	strb	r3, [r7, #15]
 80094ee:	7bf8      	ldrb	r0, [r7, #15]
 80094f0:	683b      	ldr	r3, [r7, #0]
 80094f2:	687a      	ldr	r2, [r7, #4]
 80094f4:	68b9      	ldr	r1, [r7, #8]
 80094f6:	f7f7 fd81 	bl	8000ffc <SD_disk_write>
 80094fa:	bf00      	nop
 80094fc:	4618      	mov	r0, r3
 80094fe:	3710      	adds	r7, #16
 8009500:	46bd      	mov	sp, r7
 8009502:	bd80      	pop	{r7, pc}

08009504 <USER_ioctl>:
 8009504:	b580      	push	{r7, lr}
 8009506:	b082      	sub	sp, #8
 8009508:	af00      	add	r7, sp, #0
 800950a:	4603      	mov	r3, r0
 800950c:	603a      	str	r2, [r7, #0]
 800950e:	71fb      	strb	r3, [r7, #7]
 8009510:	460b      	mov	r3, r1
 8009512:	71bb      	strb	r3, [r7, #6]
 8009514:	79fb      	ldrb	r3, [r7, #7]
 8009516:	79b9      	ldrb	r1, [r7, #6]
 8009518:	683a      	ldr	r2, [r7, #0]
 800951a:	4618      	mov	r0, r3
 800951c:	f7f7 fdf2 	bl	8001104 <SD_disk_ioctl>
 8009520:	bf00      	nop
 8009522:	4618      	mov	r0, r3
 8009524:	3708      	adds	r7, #8
 8009526:	46bd      	mov	sp, r7
 8009528:	bd80      	pop	{r7, pc}
	...

0800952c <disk_status>:
 800952c:	b580      	push	{r7, lr}
 800952e:	b084      	sub	sp, #16
 8009530:	af00      	add	r7, sp, #0
 8009532:	4603      	mov	r3, r0
 8009534:	71fb      	strb	r3, [r7, #7]
 8009536:	79fb      	ldrb	r3, [r7, #7]
 8009538:	4a08      	ldr	r2, [pc, #32]	@ (800955c <disk_status+0x30>)
 800953a:	009b      	lsls	r3, r3, #2
 800953c:	4413      	add	r3, r2
 800953e:	685b      	ldr	r3, [r3, #4]
 8009540:	685b      	ldr	r3, [r3, #4]
 8009542:	79fa      	ldrb	r2, [r7, #7]
 8009544:	4905      	ldr	r1, [pc, #20]	@ (800955c <disk_status+0x30>)
 8009546:	440a      	add	r2, r1
 8009548:	7a12      	ldrb	r2, [r2, #8]
 800954a:	4610      	mov	r0, r2
 800954c:	4798      	blx	r3
 800954e:	4603      	mov	r3, r0
 8009550:	73fb      	strb	r3, [r7, #15]
 8009552:	7bfb      	ldrb	r3, [r7, #15]
 8009554:	4618      	mov	r0, r3
 8009556:	3710      	adds	r7, #16
 8009558:	46bd      	mov	sp, r7
 800955a:	bd80      	pop	{r7, pc}
 800955c:	2001cd28 	.word	0x2001cd28

08009560 <disk_initialize>:
 8009560:	b580      	push	{r7, lr}
 8009562:	b084      	sub	sp, #16
 8009564:	af00      	add	r7, sp, #0
 8009566:	4603      	mov	r3, r0
 8009568:	71fb      	strb	r3, [r7, #7]
 800956a:	2300      	movs	r3, #0
 800956c:	73fb      	strb	r3, [r7, #15]
 800956e:	79fb      	ldrb	r3, [r7, #7]
 8009570:	4a0e      	ldr	r2, [pc, #56]	@ (80095ac <disk_initialize+0x4c>)
 8009572:	5cd3      	ldrb	r3, [r2, r3]
 8009574:	2b00      	cmp	r3, #0
 8009576:	d114      	bne.n	80095a2 <disk_initialize+0x42>
 8009578:	79fb      	ldrb	r3, [r7, #7]
 800957a:	4a0c      	ldr	r2, [pc, #48]	@ (80095ac <disk_initialize+0x4c>)
 800957c:	009b      	lsls	r3, r3, #2
 800957e:	4413      	add	r3, r2
 8009580:	685b      	ldr	r3, [r3, #4]
 8009582:	681b      	ldr	r3, [r3, #0]
 8009584:	79fa      	ldrb	r2, [r7, #7]
 8009586:	4909      	ldr	r1, [pc, #36]	@ (80095ac <disk_initialize+0x4c>)
 8009588:	440a      	add	r2, r1
 800958a:	7a12      	ldrb	r2, [r2, #8]
 800958c:	4610      	mov	r0, r2
 800958e:	4798      	blx	r3
 8009590:	4603      	mov	r3, r0
 8009592:	73fb      	strb	r3, [r7, #15]
 8009594:	7bfb      	ldrb	r3, [r7, #15]
 8009596:	2b00      	cmp	r3, #0
 8009598:	d103      	bne.n	80095a2 <disk_initialize+0x42>
 800959a:	79fb      	ldrb	r3, [r7, #7]
 800959c:	4a03      	ldr	r2, [pc, #12]	@ (80095ac <disk_initialize+0x4c>)
 800959e:	2101      	movs	r1, #1
 80095a0:	54d1      	strb	r1, [r2, r3]
 80095a2:	7bfb      	ldrb	r3, [r7, #15]
 80095a4:	4618      	mov	r0, r3
 80095a6:	3710      	adds	r7, #16
 80095a8:	46bd      	mov	sp, r7
 80095aa:	bd80      	pop	{r7, pc}
 80095ac:	2001cd28 	.word	0x2001cd28

080095b0 <disk_read>:
 80095b0:	b590      	push	{r4, r7, lr}
 80095b2:	b087      	sub	sp, #28
 80095b4:	af00      	add	r7, sp, #0
 80095b6:	60b9      	str	r1, [r7, #8]
 80095b8:	607a      	str	r2, [r7, #4]
 80095ba:	603b      	str	r3, [r7, #0]
 80095bc:	4603      	mov	r3, r0
 80095be:	73fb      	strb	r3, [r7, #15]
 80095c0:	7bfb      	ldrb	r3, [r7, #15]
 80095c2:	4a0a      	ldr	r2, [pc, #40]	@ (80095ec <disk_read+0x3c>)
 80095c4:	009b      	lsls	r3, r3, #2
 80095c6:	4413      	add	r3, r2
 80095c8:	685b      	ldr	r3, [r3, #4]
 80095ca:	689c      	ldr	r4, [r3, #8]
 80095cc:	7bfb      	ldrb	r3, [r7, #15]
 80095ce:	4a07      	ldr	r2, [pc, #28]	@ (80095ec <disk_read+0x3c>)
 80095d0:	4413      	add	r3, r2
 80095d2:	7a18      	ldrb	r0, [r3, #8]
 80095d4:	683b      	ldr	r3, [r7, #0]
 80095d6:	687a      	ldr	r2, [r7, #4]
 80095d8:	68b9      	ldr	r1, [r7, #8]
 80095da:	47a0      	blx	r4
 80095dc:	4603      	mov	r3, r0
 80095de:	75fb      	strb	r3, [r7, #23]
 80095e0:	7dfb      	ldrb	r3, [r7, #23]
 80095e2:	4618      	mov	r0, r3
 80095e4:	371c      	adds	r7, #28
 80095e6:	46bd      	mov	sp, r7
 80095e8:	bd90      	pop	{r4, r7, pc}
 80095ea:	bf00      	nop
 80095ec:	2001cd28 	.word	0x2001cd28

080095f0 <disk_write>:
 80095f0:	b590      	push	{r4, r7, lr}
 80095f2:	b087      	sub	sp, #28
 80095f4:	af00      	add	r7, sp, #0
 80095f6:	60b9      	str	r1, [r7, #8]
 80095f8:	607a      	str	r2, [r7, #4]
 80095fa:	603b      	str	r3, [r7, #0]
 80095fc:	4603      	mov	r3, r0
 80095fe:	73fb      	strb	r3, [r7, #15]
 8009600:	7bfb      	ldrb	r3, [r7, #15]
 8009602:	4a0a      	ldr	r2, [pc, #40]	@ (800962c <disk_write+0x3c>)
 8009604:	009b      	lsls	r3, r3, #2
 8009606:	4413      	add	r3, r2
 8009608:	685b      	ldr	r3, [r3, #4]
 800960a:	68dc      	ldr	r4, [r3, #12]
 800960c:	7bfb      	ldrb	r3, [r7, #15]
 800960e:	4a07      	ldr	r2, [pc, #28]	@ (800962c <disk_write+0x3c>)
 8009610:	4413      	add	r3, r2
 8009612:	7a18      	ldrb	r0, [r3, #8]
 8009614:	683b      	ldr	r3, [r7, #0]
 8009616:	687a      	ldr	r2, [r7, #4]
 8009618:	68b9      	ldr	r1, [r7, #8]
 800961a:	47a0      	blx	r4
 800961c:	4603      	mov	r3, r0
 800961e:	75fb      	strb	r3, [r7, #23]
 8009620:	7dfb      	ldrb	r3, [r7, #23]
 8009622:	4618      	mov	r0, r3
 8009624:	371c      	adds	r7, #28
 8009626:	46bd      	mov	sp, r7
 8009628:	bd90      	pop	{r4, r7, pc}
 800962a:	bf00      	nop
 800962c:	2001cd28 	.word	0x2001cd28

08009630 <disk_ioctl>:
 8009630:	b580      	push	{r7, lr}
 8009632:	b084      	sub	sp, #16
 8009634:	af00      	add	r7, sp, #0
 8009636:	4603      	mov	r3, r0
 8009638:	603a      	str	r2, [r7, #0]
 800963a:	71fb      	strb	r3, [r7, #7]
 800963c:	460b      	mov	r3, r1
 800963e:	71bb      	strb	r3, [r7, #6]
 8009640:	79fb      	ldrb	r3, [r7, #7]
 8009642:	4a09      	ldr	r2, [pc, #36]	@ (8009668 <disk_ioctl+0x38>)
 8009644:	009b      	lsls	r3, r3, #2
 8009646:	4413      	add	r3, r2
 8009648:	685b      	ldr	r3, [r3, #4]
 800964a:	691b      	ldr	r3, [r3, #16]
 800964c:	79fa      	ldrb	r2, [r7, #7]
 800964e:	4906      	ldr	r1, [pc, #24]	@ (8009668 <disk_ioctl+0x38>)
 8009650:	440a      	add	r2, r1
 8009652:	7a10      	ldrb	r0, [r2, #8]
 8009654:	79b9      	ldrb	r1, [r7, #6]
 8009656:	683a      	ldr	r2, [r7, #0]
 8009658:	4798      	blx	r3
 800965a:	4603      	mov	r3, r0
 800965c:	73fb      	strb	r3, [r7, #15]
 800965e:	7bfb      	ldrb	r3, [r7, #15]
 8009660:	4618      	mov	r0, r3
 8009662:	3710      	adds	r7, #16
 8009664:	46bd      	mov	sp, r7
 8009666:	bd80      	pop	{r7, pc}
 8009668:	2001cd28 	.word	0x2001cd28

0800966c <ld_word>:
 800966c:	b480      	push	{r7}
 800966e:	b085      	sub	sp, #20
 8009670:	af00      	add	r7, sp, #0
 8009672:	6078      	str	r0, [r7, #4]
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	3301      	adds	r3, #1
 8009678:	781b      	ldrb	r3, [r3, #0]
 800967a:	81fb      	strh	r3, [r7, #14]
 800967c:	89fb      	ldrh	r3, [r7, #14]
 800967e:	021b      	lsls	r3, r3, #8
 8009680:	b21a      	sxth	r2, r3
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	781b      	ldrb	r3, [r3, #0]
 8009686:	b21b      	sxth	r3, r3
 8009688:	4313      	orrs	r3, r2
 800968a:	b21b      	sxth	r3, r3
 800968c:	81fb      	strh	r3, [r7, #14]
 800968e:	89fb      	ldrh	r3, [r7, #14]
 8009690:	4618      	mov	r0, r3
 8009692:	3714      	adds	r7, #20
 8009694:	46bd      	mov	sp, r7
 8009696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800969a:	4770      	bx	lr

0800969c <ld_dword>:
 800969c:	b480      	push	{r7}
 800969e:	b085      	sub	sp, #20
 80096a0:	af00      	add	r7, sp, #0
 80096a2:	6078      	str	r0, [r7, #4]
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	3303      	adds	r3, #3
 80096a8:	781b      	ldrb	r3, [r3, #0]
 80096aa:	60fb      	str	r3, [r7, #12]
 80096ac:	68fb      	ldr	r3, [r7, #12]
 80096ae:	021b      	lsls	r3, r3, #8
 80096b0:	687a      	ldr	r2, [r7, #4]
 80096b2:	3202      	adds	r2, #2
 80096b4:	7812      	ldrb	r2, [r2, #0]
 80096b6:	4313      	orrs	r3, r2
 80096b8:	60fb      	str	r3, [r7, #12]
 80096ba:	68fb      	ldr	r3, [r7, #12]
 80096bc:	021b      	lsls	r3, r3, #8
 80096be:	687a      	ldr	r2, [r7, #4]
 80096c0:	3201      	adds	r2, #1
 80096c2:	7812      	ldrb	r2, [r2, #0]
 80096c4:	4313      	orrs	r3, r2
 80096c6:	60fb      	str	r3, [r7, #12]
 80096c8:	68fb      	ldr	r3, [r7, #12]
 80096ca:	021b      	lsls	r3, r3, #8
 80096cc:	687a      	ldr	r2, [r7, #4]
 80096ce:	7812      	ldrb	r2, [r2, #0]
 80096d0:	4313      	orrs	r3, r2
 80096d2:	60fb      	str	r3, [r7, #12]
 80096d4:	68fb      	ldr	r3, [r7, #12]
 80096d6:	4618      	mov	r0, r3
 80096d8:	3714      	adds	r7, #20
 80096da:	46bd      	mov	sp, r7
 80096dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096e0:	4770      	bx	lr

080096e2 <st_word>:
 80096e2:	b480      	push	{r7}
 80096e4:	b083      	sub	sp, #12
 80096e6:	af00      	add	r7, sp, #0
 80096e8:	6078      	str	r0, [r7, #4]
 80096ea:	460b      	mov	r3, r1
 80096ec:	807b      	strh	r3, [r7, #2]
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	1c5a      	adds	r2, r3, #1
 80096f2:	607a      	str	r2, [r7, #4]
 80096f4:	887a      	ldrh	r2, [r7, #2]
 80096f6:	b2d2      	uxtb	r2, r2
 80096f8:	701a      	strb	r2, [r3, #0]
 80096fa:	887b      	ldrh	r3, [r7, #2]
 80096fc:	0a1b      	lsrs	r3, r3, #8
 80096fe:	807b      	strh	r3, [r7, #2]
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	1c5a      	adds	r2, r3, #1
 8009704:	607a      	str	r2, [r7, #4]
 8009706:	887a      	ldrh	r2, [r7, #2]
 8009708:	b2d2      	uxtb	r2, r2
 800970a:	701a      	strb	r2, [r3, #0]
 800970c:	bf00      	nop
 800970e:	370c      	adds	r7, #12
 8009710:	46bd      	mov	sp, r7
 8009712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009716:	4770      	bx	lr

08009718 <st_dword>:
 8009718:	b480      	push	{r7}
 800971a:	b083      	sub	sp, #12
 800971c:	af00      	add	r7, sp, #0
 800971e:	6078      	str	r0, [r7, #4]
 8009720:	6039      	str	r1, [r7, #0]
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	1c5a      	adds	r2, r3, #1
 8009726:	607a      	str	r2, [r7, #4]
 8009728:	683a      	ldr	r2, [r7, #0]
 800972a:	b2d2      	uxtb	r2, r2
 800972c:	701a      	strb	r2, [r3, #0]
 800972e:	683b      	ldr	r3, [r7, #0]
 8009730:	0a1b      	lsrs	r3, r3, #8
 8009732:	603b      	str	r3, [r7, #0]
 8009734:	687b      	ldr	r3, [r7, #4]
 8009736:	1c5a      	adds	r2, r3, #1
 8009738:	607a      	str	r2, [r7, #4]
 800973a:	683a      	ldr	r2, [r7, #0]
 800973c:	b2d2      	uxtb	r2, r2
 800973e:	701a      	strb	r2, [r3, #0]
 8009740:	683b      	ldr	r3, [r7, #0]
 8009742:	0a1b      	lsrs	r3, r3, #8
 8009744:	603b      	str	r3, [r7, #0]
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	1c5a      	adds	r2, r3, #1
 800974a:	607a      	str	r2, [r7, #4]
 800974c:	683a      	ldr	r2, [r7, #0]
 800974e:	b2d2      	uxtb	r2, r2
 8009750:	701a      	strb	r2, [r3, #0]
 8009752:	683b      	ldr	r3, [r7, #0]
 8009754:	0a1b      	lsrs	r3, r3, #8
 8009756:	603b      	str	r3, [r7, #0]
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	1c5a      	adds	r2, r3, #1
 800975c:	607a      	str	r2, [r7, #4]
 800975e:	683a      	ldr	r2, [r7, #0]
 8009760:	b2d2      	uxtb	r2, r2
 8009762:	701a      	strb	r2, [r3, #0]
 8009764:	bf00      	nop
 8009766:	370c      	adds	r7, #12
 8009768:	46bd      	mov	sp, r7
 800976a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800976e:	4770      	bx	lr

08009770 <mem_cpy>:
 8009770:	b480      	push	{r7}
 8009772:	b087      	sub	sp, #28
 8009774:	af00      	add	r7, sp, #0
 8009776:	60f8      	str	r0, [r7, #12]
 8009778:	60b9      	str	r1, [r7, #8]
 800977a:	607a      	str	r2, [r7, #4]
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	617b      	str	r3, [r7, #20]
 8009780:	68bb      	ldr	r3, [r7, #8]
 8009782:	613b      	str	r3, [r7, #16]
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	2b00      	cmp	r3, #0
 8009788:	d00d      	beq.n	80097a6 <mem_cpy+0x36>
 800978a:	693a      	ldr	r2, [r7, #16]
 800978c:	1c53      	adds	r3, r2, #1
 800978e:	613b      	str	r3, [r7, #16]
 8009790:	697b      	ldr	r3, [r7, #20]
 8009792:	1c59      	adds	r1, r3, #1
 8009794:	6179      	str	r1, [r7, #20]
 8009796:	7812      	ldrb	r2, [r2, #0]
 8009798:	701a      	strb	r2, [r3, #0]
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	3b01      	subs	r3, #1
 800979e:	607b      	str	r3, [r7, #4]
 80097a0:	687b      	ldr	r3, [r7, #4]
 80097a2:	2b00      	cmp	r3, #0
 80097a4:	d1f1      	bne.n	800978a <mem_cpy+0x1a>
 80097a6:	bf00      	nop
 80097a8:	371c      	adds	r7, #28
 80097aa:	46bd      	mov	sp, r7
 80097ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097b0:	4770      	bx	lr

080097b2 <mem_set>:
 80097b2:	b480      	push	{r7}
 80097b4:	b087      	sub	sp, #28
 80097b6:	af00      	add	r7, sp, #0
 80097b8:	60f8      	str	r0, [r7, #12]
 80097ba:	60b9      	str	r1, [r7, #8]
 80097bc:	607a      	str	r2, [r7, #4]
 80097be:	68fb      	ldr	r3, [r7, #12]
 80097c0:	617b      	str	r3, [r7, #20]
 80097c2:	697b      	ldr	r3, [r7, #20]
 80097c4:	1c5a      	adds	r2, r3, #1
 80097c6:	617a      	str	r2, [r7, #20]
 80097c8:	68ba      	ldr	r2, [r7, #8]
 80097ca:	b2d2      	uxtb	r2, r2
 80097cc:	701a      	strb	r2, [r3, #0]
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	3b01      	subs	r3, #1
 80097d2:	607b      	str	r3, [r7, #4]
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	d1f3      	bne.n	80097c2 <mem_set+0x10>
 80097da:	bf00      	nop
 80097dc:	bf00      	nop
 80097de:	371c      	adds	r7, #28
 80097e0:	46bd      	mov	sp, r7
 80097e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e6:	4770      	bx	lr

080097e8 <mem_cmp>:
 80097e8:	b480      	push	{r7}
 80097ea:	b089      	sub	sp, #36	@ 0x24
 80097ec:	af00      	add	r7, sp, #0
 80097ee:	60f8      	str	r0, [r7, #12]
 80097f0:	60b9      	str	r1, [r7, #8]
 80097f2:	607a      	str	r2, [r7, #4]
 80097f4:	68fb      	ldr	r3, [r7, #12]
 80097f6:	61fb      	str	r3, [r7, #28]
 80097f8:	68bb      	ldr	r3, [r7, #8]
 80097fa:	61bb      	str	r3, [r7, #24]
 80097fc:	2300      	movs	r3, #0
 80097fe:	617b      	str	r3, [r7, #20]
 8009800:	69fb      	ldr	r3, [r7, #28]
 8009802:	1c5a      	adds	r2, r3, #1
 8009804:	61fa      	str	r2, [r7, #28]
 8009806:	781b      	ldrb	r3, [r3, #0]
 8009808:	4619      	mov	r1, r3
 800980a:	69bb      	ldr	r3, [r7, #24]
 800980c:	1c5a      	adds	r2, r3, #1
 800980e:	61ba      	str	r2, [r7, #24]
 8009810:	781b      	ldrb	r3, [r3, #0]
 8009812:	1acb      	subs	r3, r1, r3
 8009814:	617b      	str	r3, [r7, #20]
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	3b01      	subs	r3, #1
 800981a:	607b      	str	r3, [r7, #4]
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	2b00      	cmp	r3, #0
 8009820:	d002      	beq.n	8009828 <mem_cmp+0x40>
 8009822:	697b      	ldr	r3, [r7, #20]
 8009824:	2b00      	cmp	r3, #0
 8009826:	d0eb      	beq.n	8009800 <mem_cmp+0x18>
 8009828:	697b      	ldr	r3, [r7, #20]
 800982a:	4618      	mov	r0, r3
 800982c:	3724      	adds	r7, #36	@ 0x24
 800982e:	46bd      	mov	sp, r7
 8009830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009834:	4770      	bx	lr

08009836 <chk_chr>:
 8009836:	b480      	push	{r7}
 8009838:	b083      	sub	sp, #12
 800983a:	af00      	add	r7, sp, #0
 800983c:	6078      	str	r0, [r7, #4]
 800983e:	6039      	str	r1, [r7, #0]
 8009840:	e002      	b.n	8009848 <chk_chr+0x12>
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	3301      	adds	r3, #1
 8009846:	607b      	str	r3, [r7, #4]
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	781b      	ldrb	r3, [r3, #0]
 800984c:	2b00      	cmp	r3, #0
 800984e:	d005      	beq.n	800985c <chk_chr+0x26>
 8009850:	687b      	ldr	r3, [r7, #4]
 8009852:	781b      	ldrb	r3, [r3, #0]
 8009854:	461a      	mov	r2, r3
 8009856:	683b      	ldr	r3, [r7, #0]
 8009858:	4293      	cmp	r3, r2
 800985a:	d1f2      	bne.n	8009842 <chk_chr+0xc>
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	781b      	ldrb	r3, [r3, #0]
 8009860:	4618      	mov	r0, r3
 8009862:	370c      	adds	r7, #12
 8009864:	46bd      	mov	sp, r7
 8009866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986a:	4770      	bx	lr

0800986c <chk_lock>:
 800986c:	b480      	push	{r7}
 800986e:	b085      	sub	sp, #20
 8009870:	af00      	add	r7, sp, #0
 8009872:	6078      	str	r0, [r7, #4]
 8009874:	6039      	str	r1, [r7, #0]
 8009876:	2300      	movs	r3, #0
 8009878:	60bb      	str	r3, [r7, #8]
 800987a:	68bb      	ldr	r3, [r7, #8]
 800987c:	60fb      	str	r3, [r7, #12]
 800987e:	e029      	b.n	80098d4 <chk_lock+0x68>
 8009880:	4a27      	ldr	r2, [pc, #156]	@ (8009920 <chk_lock+0xb4>)
 8009882:	68fb      	ldr	r3, [r7, #12]
 8009884:	011b      	lsls	r3, r3, #4
 8009886:	4413      	add	r3, r2
 8009888:	681b      	ldr	r3, [r3, #0]
 800988a:	2b00      	cmp	r3, #0
 800988c:	d01d      	beq.n	80098ca <chk_lock+0x5e>
 800988e:	4a24      	ldr	r2, [pc, #144]	@ (8009920 <chk_lock+0xb4>)
 8009890:	68fb      	ldr	r3, [r7, #12]
 8009892:	011b      	lsls	r3, r3, #4
 8009894:	4413      	add	r3, r2
 8009896:	681a      	ldr	r2, [r3, #0]
 8009898:	687b      	ldr	r3, [r7, #4]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	429a      	cmp	r2, r3
 800989e:	d116      	bne.n	80098ce <chk_lock+0x62>
 80098a0:	4a1f      	ldr	r2, [pc, #124]	@ (8009920 <chk_lock+0xb4>)
 80098a2:	68fb      	ldr	r3, [r7, #12]
 80098a4:	011b      	lsls	r3, r3, #4
 80098a6:	4413      	add	r3, r2
 80098a8:	3304      	adds	r3, #4
 80098aa:	681a      	ldr	r2, [r3, #0]
 80098ac:	687b      	ldr	r3, [r7, #4]
 80098ae:	689b      	ldr	r3, [r3, #8]
 80098b0:	429a      	cmp	r2, r3
 80098b2:	d10c      	bne.n	80098ce <chk_lock+0x62>
 80098b4:	4a1a      	ldr	r2, [pc, #104]	@ (8009920 <chk_lock+0xb4>)
 80098b6:	68fb      	ldr	r3, [r7, #12]
 80098b8:	011b      	lsls	r3, r3, #4
 80098ba:	4413      	add	r3, r2
 80098bc:	3308      	adds	r3, #8
 80098be:	681a      	ldr	r2, [r3, #0]
 80098c0:	687b      	ldr	r3, [r7, #4]
 80098c2:	695b      	ldr	r3, [r3, #20]
 80098c4:	429a      	cmp	r2, r3
 80098c6:	d102      	bne.n	80098ce <chk_lock+0x62>
 80098c8:	e007      	b.n	80098da <chk_lock+0x6e>
 80098ca:	2301      	movs	r3, #1
 80098cc:	60bb      	str	r3, [r7, #8]
 80098ce:	68fb      	ldr	r3, [r7, #12]
 80098d0:	3301      	adds	r3, #1
 80098d2:	60fb      	str	r3, [r7, #12]
 80098d4:	68fb      	ldr	r3, [r7, #12]
 80098d6:	2b01      	cmp	r3, #1
 80098d8:	d9d2      	bls.n	8009880 <chk_lock+0x14>
 80098da:	68fb      	ldr	r3, [r7, #12]
 80098dc:	2b02      	cmp	r3, #2
 80098de:	d109      	bne.n	80098f4 <chk_lock+0x88>
 80098e0:	68bb      	ldr	r3, [r7, #8]
 80098e2:	2b00      	cmp	r3, #0
 80098e4:	d102      	bne.n	80098ec <chk_lock+0x80>
 80098e6:	683b      	ldr	r3, [r7, #0]
 80098e8:	2b02      	cmp	r3, #2
 80098ea:	d101      	bne.n	80098f0 <chk_lock+0x84>
 80098ec:	2300      	movs	r3, #0
 80098ee:	e010      	b.n	8009912 <chk_lock+0xa6>
 80098f0:	2312      	movs	r3, #18
 80098f2:	e00e      	b.n	8009912 <chk_lock+0xa6>
 80098f4:	683b      	ldr	r3, [r7, #0]
 80098f6:	2b00      	cmp	r3, #0
 80098f8:	d108      	bne.n	800990c <chk_lock+0xa0>
 80098fa:	4a09      	ldr	r2, [pc, #36]	@ (8009920 <chk_lock+0xb4>)
 80098fc:	68fb      	ldr	r3, [r7, #12]
 80098fe:	011b      	lsls	r3, r3, #4
 8009900:	4413      	add	r3, r2
 8009902:	330c      	adds	r3, #12
 8009904:	881b      	ldrh	r3, [r3, #0]
 8009906:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800990a:	d101      	bne.n	8009910 <chk_lock+0xa4>
 800990c:	2310      	movs	r3, #16
 800990e:	e000      	b.n	8009912 <chk_lock+0xa6>
 8009910:	2300      	movs	r3, #0
 8009912:	4618      	mov	r0, r3
 8009914:	3714      	adds	r7, #20
 8009916:	46bd      	mov	sp, r7
 8009918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991c:	4770      	bx	lr
 800991e:	bf00      	nop
 8009920:	2001cb08 	.word	0x2001cb08

08009924 <enq_lock>:
 8009924:	b480      	push	{r7}
 8009926:	b083      	sub	sp, #12
 8009928:	af00      	add	r7, sp, #0
 800992a:	2300      	movs	r3, #0
 800992c:	607b      	str	r3, [r7, #4]
 800992e:	e002      	b.n	8009936 <enq_lock+0x12>
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	3301      	adds	r3, #1
 8009934:	607b      	str	r3, [r7, #4]
 8009936:	687b      	ldr	r3, [r7, #4]
 8009938:	2b01      	cmp	r3, #1
 800993a:	d806      	bhi.n	800994a <enq_lock+0x26>
 800993c:	4a09      	ldr	r2, [pc, #36]	@ (8009964 <enq_lock+0x40>)
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	011b      	lsls	r3, r3, #4
 8009942:	4413      	add	r3, r2
 8009944:	681b      	ldr	r3, [r3, #0]
 8009946:	2b00      	cmp	r3, #0
 8009948:	d1f2      	bne.n	8009930 <enq_lock+0xc>
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	2b02      	cmp	r3, #2
 800994e:	bf14      	ite	ne
 8009950:	2301      	movne	r3, #1
 8009952:	2300      	moveq	r3, #0
 8009954:	b2db      	uxtb	r3, r3
 8009956:	4618      	mov	r0, r3
 8009958:	370c      	adds	r7, #12
 800995a:	46bd      	mov	sp, r7
 800995c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009960:	4770      	bx	lr
 8009962:	bf00      	nop
 8009964:	2001cb08 	.word	0x2001cb08

08009968 <inc_lock>:
 8009968:	b480      	push	{r7}
 800996a:	b085      	sub	sp, #20
 800996c:	af00      	add	r7, sp, #0
 800996e:	6078      	str	r0, [r7, #4]
 8009970:	6039      	str	r1, [r7, #0]
 8009972:	2300      	movs	r3, #0
 8009974:	60fb      	str	r3, [r7, #12]
 8009976:	e01f      	b.n	80099b8 <inc_lock+0x50>
 8009978:	4a41      	ldr	r2, [pc, #260]	@ (8009a80 <inc_lock+0x118>)
 800997a:	68fb      	ldr	r3, [r7, #12]
 800997c:	011b      	lsls	r3, r3, #4
 800997e:	4413      	add	r3, r2
 8009980:	681a      	ldr	r2, [r3, #0]
 8009982:	687b      	ldr	r3, [r7, #4]
 8009984:	681b      	ldr	r3, [r3, #0]
 8009986:	429a      	cmp	r2, r3
 8009988:	d113      	bne.n	80099b2 <inc_lock+0x4a>
 800998a:	4a3d      	ldr	r2, [pc, #244]	@ (8009a80 <inc_lock+0x118>)
 800998c:	68fb      	ldr	r3, [r7, #12]
 800998e:	011b      	lsls	r3, r3, #4
 8009990:	4413      	add	r3, r2
 8009992:	3304      	adds	r3, #4
 8009994:	681a      	ldr	r2, [r3, #0]
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	689b      	ldr	r3, [r3, #8]
 800999a:	429a      	cmp	r2, r3
 800999c:	d109      	bne.n	80099b2 <inc_lock+0x4a>
 800999e:	4a38      	ldr	r2, [pc, #224]	@ (8009a80 <inc_lock+0x118>)
 80099a0:	68fb      	ldr	r3, [r7, #12]
 80099a2:	011b      	lsls	r3, r3, #4
 80099a4:	4413      	add	r3, r2
 80099a6:	3308      	adds	r3, #8
 80099a8:	681a      	ldr	r2, [r3, #0]
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	695b      	ldr	r3, [r3, #20]
 80099ae:	429a      	cmp	r2, r3
 80099b0:	d006      	beq.n	80099c0 <inc_lock+0x58>
 80099b2:	68fb      	ldr	r3, [r7, #12]
 80099b4:	3301      	adds	r3, #1
 80099b6:	60fb      	str	r3, [r7, #12]
 80099b8:	68fb      	ldr	r3, [r7, #12]
 80099ba:	2b01      	cmp	r3, #1
 80099bc:	d9dc      	bls.n	8009978 <inc_lock+0x10>
 80099be:	e000      	b.n	80099c2 <inc_lock+0x5a>
 80099c0:	bf00      	nop
 80099c2:	68fb      	ldr	r3, [r7, #12]
 80099c4:	2b02      	cmp	r3, #2
 80099c6:	d132      	bne.n	8009a2e <inc_lock+0xc6>
 80099c8:	2300      	movs	r3, #0
 80099ca:	60fb      	str	r3, [r7, #12]
 80099cc:	e002      	b.n	80099d4 <inc_lock+0x6c>
 80099ce:	68fb      	ldr	r3, [r7, #12]
 80099d0:	3301      	adds	r3, #1
 80099d2:	60fb      	str	r3, [r7, #12]
 80099d4:	68fb      	ldr	r3, [r7, #12]
 80099d6:	2b01      	cmp	r3, #1
 80099d8:	d806      	bhi.n	80099e8 <inc_lock+0x80>
 80099da:	4a29      	ldr	r2, [pc, #164]	@ (8009a80 <inc_lock+0x118>)
 80099dc:	68fb      	ldr	r3, [r7, #12]
 80099de:	011b      	lsls	r3, r3, #4
 80099e0:	4413      	add	r3, r2
 80099e2:	681b      	ldr	r3, [r3, #0]
 80099e4:	2b00      	cmp	r3, #0
 80099e6:	d1f2      	bne.n	80099ce <inc_lock+0x66>
 80099e8:	68fb      	ldr	r3, [r7, #12]
 80099ea:	2b02      	cmp	r3, #2
 80099ec:	d101      	bne.n	80099f2 <inc_lock+0x8a>
 80099ee:	2300      	movs	r3, #0
 80099f0:	e040      	b.n	8009a74 <inc_lock+0x10c>
 80099f2:	687b      	ldr	r3, [r7, #4]
 80099f4:	681a      	ldr	r2, [r3, #0]
 80099f6:	4922      	ldr	r1, [pc, #136]	@ (8009a80 <inc_lock+0x118>)
 80099f8:	68fb      	ldr	r3, [r7, #12]
 80099fa:	011b      	lsls	r3, r3, #4
 80099fc:	440b      	add	r3, r1
 80099fe:	601a      	str	r2, [r3, #0]
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	689a      	ldr	r2, [r3, #8]
 8009a04:	491e      	ldr	r1, [pc, #120]	@ (8009a80 <inc_lock+0x118>)
 8009a06:	68fb      	ldr	r3, [r7, #12]
 8009a08:	011b      	lsls	r3, r3, #4
 8009a0a:	440b      	add	r3, r1
 8009a0c:	3304      	adds	r3, #4
 8009a0e:	601a      	str	r2, [r3, #0]
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	695a      	ldr	r2, [r3, #20]
 8009a14:	491a      	ldr	r1, [pc, #104]	@ (8009a80 <inc_lock+0x118>)
 8009a16:	68fb      	ldr	r3, [r7, #12]
 8009a18:	011b      	lsls	r3, r3, #4
 8009a1a:	440b      	add	r3, r1
 8009a1c:	3308      	adds	r3, #8
 8009a1e:	601a      	str	r2, [r3, #0]
 8009a20:	4a17      	ldr	r2, [pc, #92]	@ (8009a80 <inc_lock+0x118>)
 8009a22:	68fb      	ldr	r3, [r7, #12]
 8009a24:	011b      	lsls	r3, r3, #4
 8009a26:	4413      	add	r3, r2
 8009a28:	330c      	adds	r3, #12
 8009a2a:	2200      	movs	r2, #0
 8009a2c:	801a      	strh	r2, [r3, #0]
 8009a2e:	683b      	ldr	r3, [r7, #0]
 8009a30:	2b00      	cmp	r3, #0
 8009a32:	d009      	beq.n	8009a48 <inc_lock+0xe0>
 8009a34:	4a12      	ldr	r2, [pc, #72]	@ (8009a80 <inc_lock+0x118>)
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	011b      	lsls	r3, r3, #4
 8009a3a:	4413      	add	r3, r2
 8009a3c:	330c      	adds	r3, #12
 8009a3e:	881b      	ldrh	r3, [r3, #0]
 8009a40:	2b00      	cmp	r3, #0
 8009a42:	d001      	beq.n	8009a48 <inc_lock+0xe0>
 8009a44:	2300      	movs	r3, #0
 8009a46:	e015      	b.n	8009a74 <inc_lock+0x10c>
 8009a48:	683b      	ldr	r3, [r7, #0]
 8009a4a:	2b00      	cmp	r3, #0
 8009a4c:	d108      	bne.n	8009a60 <inc_lock+0xf8>
 8009a4e:	4a0c      	ldr	r2, [pc, #48]	@ (8009a80 <inc_lock+0x118>)
 8009a50:	68fb      	ldr	r3, [r7, #12]
 8009a52:	011b      	lsls	r3, r3, #4
 8009a54:	4413      	add	r3, r2
 8009a56:	330c      	adds	r3, #12
 8009a58:	881b      	ldrh	r3, [r3, #0]
 8009a5a:	3301      	adds	r3, #1
 8009a5c:	b29a      	uxth	r2, r3
 8009a5e:	e001      	b.n	8009a64 <inc_lock+0xfc>
 8009a60:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8009a64:	4906      	ldr	r1, [pc, #24]	@ (8009a80 <inc_lock+0x118>)
 8009a66:	68fb      	ldr	r3, [r7, #12]
 8009a68:	011b      	lsls	r3, r3, #4
 8009a6a:	440b      	add	r3, r1
 8009a6c:	330c      	adds	r3, #12
 8009a6e:	801a      	strh	r2, [r3, #0]
 8009a70:	68fb      	ldr	r3, [r7, #12]
 8009a72:	3301      	adds	r3, #1
 8009a74:	4618      	mov	r0, r3
 8009a76:	3714      	adds	r7, #20
 8009a78:	46bd      	mov	sp, r7
 8009a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a7e:	4770      	bx	lr
 8009a80:	2001cb08 	.word	0x2001cb08

08009a84 <dec_lock>:
 8009a84:	b480      	push	{r7}
 8009a86:	b085      	sub	sp, #20
 8009a88:	af00      	add	r7, sp, #0
 8009a8a:	6078      	str	r0, [r7, #4]
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	3b01      	subs	r3, #1
 8009a90:	607b      	str	r3, [r7, #4]
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	2b01      	cmp	r3, #1
 8009a96:	d825      	bhi.n	8009ae4 <dec_lock+0x60>
 8009a98:	4a17      	ldr	r2, [pc, #92]	@ (8009af8 <dec_lock+0x74>)
 8009a9a:	687b      	ldr	r3, [r7, #4]
 8009a9c:	011b      	lsls	r3, r3, #4
 8009a9e:	4413      	add	r3, r2
 8009aa0:	330c      	adds	r3, #12
 8009aa2:	881b      	ldrh	r3, [r3, #0]
 8009aa4:	81fb      	strh	r3, [r7, #14]
 8009aa6:	89fb      	ldrh	r3, [r7, #14]
 8009aa8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009aac:	d101      	bne.n	8009ab2 <dec_lock+0x2e>
 8009aae:	2300      	movs	r3, #0
 8009ab0:	81fb      	strh	r3, [r7, #14]
 8009ab2:	89fb      	ldrh	r3, [r7, #14]
 8009ab4:	2b00      	cmp	r3, #0
 8009ab6:	d002      	beq.n	8009abe <dec_lock+0x3a>
 8009ab8:	89fb      	ldrh	r3, [r7, #14]
 8009aba:	3b01      	subs	r3, #1
 8009abc:	81fb      	strh	r3, [r7, #14]
 8009abe:	4a0e      	ldr	r2, [pc, #56]	@ (8009af8 <dec_lock+0x74>)
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	011b      	lsls	r3, r3, #4
 8009ac4:	4413      	add	r3, r2
 8009ac6:	330c      	adds	r3, #12
 8009ac8:	89fa      	ldrh	r2, [r7, #14]
 8009aca:	801a      	strh	r2, [r3, #0]
 8009acc:	89fb      	ldrh	r3, [r7, #14]
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	d105      	bne.n	8009ade <dec_lock+0x5a>
 8009ad2:	4a09      	ldr	r2, [pc, #36]	@ (8009af8 <dec_lock+0x74>)
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	011b      	lsls	r3, r3, #4
 8009ad8:	4413      	add	r3, r2
 8009ada:	2200      	movs	r2, #0
 8009adc:	601a      	str	r2, [r3, #0]
 8009ade:	2300      	movs	r3, #0
 8009ae0:	737b      	strb	r3, [r7, #13]
 8009ae2:	e001      	b.n	8009ae8 <dec_lock+0x64>
 8009ae4:	2302      	movs	r3, #2
 8009ae6:	737b      	strb	r3, [r7, #13]
 8009ae8:	7b7b      	ldrb	r3, [r7, #13]
 8009aea:	4618      	mov	r0, r3
 8009aec:	3714      	adds	r7, #20
 8009aee:	46bd      	mov	sp, r7
 8009af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af4:	4770      	bx	lr
 8009af6:	bf00      	nop
 8009af8:	2001cb08 	.word	0x2001cb08

08009afc <clear_lock>:
 8009afc:	b480      	push	{r7}
 8009afe:	b085      	sub	sp, #20
 8009b00:	af00      	add	r7, sp, #0
 8009b02:	6078      	str	r0, [r7, #4]
 8009b04:	2300      	movs	r3, #0
 8009b06:	60fb      	str	r3, [r7, #12]
 8009b08:	e010      	b.n	8009b2c <clear_lock+0x30>
 8009b0a:	4a0d      	ldr	r2, [pc, #52]	@ (8009b40 <clear_lock+0x44>)
 8009b0c:	68fb      	ldr	r3, [r7, #12]
 8009b0e:	011b      	lsls	r3, r3, #4
 8009b10:	4413      	add	r3, r2
 8009b12:	681b      	ldr	r3, [r3, #0]
 8009b14:	687a      	ldr	r2, [r7, #4]
 8009b16:	429a      	cmp	r2, r3
 8009b18:	d105      	bne.n	8009b26 <clear_lock+0x2a>
 8009b1a:	4a09      	ldr	r2, [pc, #36]	@ (8009b40 <clear_lock+0x44>)
 8009b1c:	68fb      	ldr	r3, [r7, #12]
 8009b1e:	011b      	lsls	r3, r3, #4
 8009b20:	4413      	add	r3, r2
 8009b22:	2200      	movs	r2, #0
 8009b24:	601a      	str	r2, [r3, #0]
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	3301      	adds	r3, #1
 8009b2a:	60fb      	str	r3, [r7, #12]
 8009b2c:	68fb      	ldr	r3, [r7, #12]
 8009b2e:	2b01      	cmp	r3, #1
 8009b30:	d9eb      	bls.n	8009b0a <clear_lock+0xe>
 8009b32:	bf00      	nop
 8009b34:	bf00      	nop
 8009b36:	3714      	adds	r7, #20
 8009b38:	46bd      	mov	sp, r7
 8009b3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3e:	4770      	bx	lr
 8009b40:	2001cb08 	.word	0x2001cb08

08009b44 <sync_window>:
 8009b44:	b580      	push	{r7, lr}
 8009b46:	b086      	sub	sp, #24
 8009b48:	af00      	add	r7, sp, #0
 8009b4a:	6078      	str	r0, [r7, #4]
 8009b4c:	2300      	movs	r3, #0
 8009b4e:	73fb      	strb	r3, [r7, #15]
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	78db      	ldrb	r3, [r3, #3]
 8009b54:	2b00      	cmp	r3, #0
 8009b56:	d034      	beq.n	8009bc2 <sync_window+0x7e>
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009b5c:	617b      	str	r3, [r7, #20]
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	7858      	ldrb	r0, [r3, #1]
 8009b62:	687b      	ldr	r3, [r7, #4]
 8009b64:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009b68:	2301      	movs	r3, #1
 8009b6a:	697a      	ldr	r2, [r7, #20]
 8009b6c:	f7ff fd40 	bl	80095f0 <disk_write>
 8009b70:	4603      	mov	r3, r0
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d002      	beq.n	8009b7c <sync_window+0x38>
 8009b76:	2301      	movs	r3, #1
 8009b78:	73fb      	strb	r3, [r7, #15]
 8009b7a:	e022      	b.n	8009bc2 <sync_window+0x7e>
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	2200      	movs	r2, #0
 8009b80:	70da      	strb	r2, [r3, #3]
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b86:	697a      	ldr	r2, [r7, #20]
 8009b88:	1ad2      	subs	r2, r2, r3
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	6a1b      	ldr	r3, [r3, #32]
 8009b8e:	429a      	cmp	r2, r3
 8009b90:	d217      	bcs.n	8009bc2 <sync_window+0x7e>
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	789b      	ldrb	r3, [r3, #2]
 8009b96:	613b      	str	r3, [r7, #16]
 8009b98:	e010      	b.n	8009bbc <sync_window+0x78>
 8009b9a:	687b      	ldr	r3, [r7, #4]
 8009b9c:	6a1b      	ldr	r3, [r3, #32]
 8009b9e:	697a      	ldr	r2, [r7, #20]
 8009ba0:	4413      	add	r3, r2
 8009ba2:	617b      	str	r3, [r7, #20]
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	7858      	ldrb	r0, [r3, #1]
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009bae:	2301      	movs	r3, #1
 8009bb0:	697a      	ldr	r2, [r7, #20]
 8009bb2:	f7ff fd1d 	bl	80095f0 <disk_write>
 8009bb6:	693b      	ldr	r3, [r7, #16]
 8009bb8:	3b01      	subs	r3, #1
 8009bba:	613b      	str	r3, [r7, #16]
 8009bbc:	693b      	ldr	r3, [r7, #16]
 8009bbe:	2b01      	cmp	r3, #1
 8009bc0:	d8eb      	bhi.n	8009b9a <sync_window+0x56>
 8009bc2:	7bfb      	ldrb	r3, [r7, #15]
 8009bc4:	4618      	mov	r0, r3
 8009bc6:	3718      	adds	r7, #24
 8009bc8:	46bd      	mov	sp, r7
 8009bca:	bd80      	pop	{r7, pc}

08009bcc <move_window>:
 8009bcc:	b580      	push	{r7, lr}
 8009bce:	b084      	sub	sp, #16
 8009bd0:	af00      	add	r7, sp, #0
 8009bd2:	6078      	str	r0, [r7, #4]
 8009bd4:	6039      	str	r1, [r7, #0]
 8009bd6:	2300      	movs	r3, #0
 8009bd8:	73fb      	strb	r3, [r7, #15]
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009bde:	683a      	ldr	r2, [r7, #0]
 8009be0:	429a      	cmp	r2, r3
 8009be2:	d01b      	beq.n	8009c1c <move_window+0x50>
 8009be4:	6878      	ldr	r0, [r7, #4]
 8009be6:	f7ff ffad 	bl	8009b44 <sync_window>
 8009bea:	4603      	mov	r3, r0
 8009bec:	73fb      	strb	r3, [r7, #15]
 8009bee:	7bfb      	ldrb	r3, [r7, #15]
 8009bf0:	2b00      	cmp	r3, #0
 8009bf2:	d113      	bne.n	8009c1c <move_window+0x50>
 8009bf4:	687b      	ldr	r3, [r7, #4]
 8009bf6:	7858      	ldrb	r0, [r3, #1]
 8009bf8:	687b      	ldr	r3, [r7, #4]
 8009bfa:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009bfe:	2301      	movs	r3, #1
 8009c00:	683a      	ldr	r2, [r7, #0]
 8009c02:	f7ff fcd5 	bl	80095b0 <disk_read>
 8009c06:	4603      	mov	r3, r0
 8009c08:	2b00      	cmp	r3, #0
 8009c0a:	d004      	beq.n	8009c16 <move_window+0x4a>
 8009c0c:	f04f 33ff 	mov.w	r3, #4294967295
 8009c10:	603b      	str	r3, [r7, #0]
 8009c12:	2301      	movs	r3, #1
 8009c14:	73fb      	strb	r3, [r7, #15]
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	683a      	ldr	r2, [r7, #0]
 8009c1a:	635a      	str	r2, [r3, #52]	@ 0x34
 8009c1c:	7bfb      	ldrb	r3, [r7, #15]
 8009c1e:	4618      	mov	r0, r3
 8009c20:	3710      	adds	r7, #16
 8009c22:	46bd      	mov	sp, r7
 8009c24:	bd80      	pop	{r7, pc}
	...

08009c28 <sync_fs>:
 8009c28:	b580      	push	{r7, lr}
 8009c2a:	b084      	sub	sp, #16
 8009c2c:	af00      	add	r7, sp, #0
 8009c2e:	6078      	str	r0, [r7, #4]
 8009c30:	6878      	ldr	r0, [r7, #4]
 8009c32:	f7ff ff87 	bl	8009b44 <sync_window>
 8009c36:	4603      	mov	r3, r0
 8009c38:	73fb      	strb	r3, [r7, #15]
 8009c3a:	7bfb      	ldrb	r3, [r7, #15]
 8009c3c:	2b00      	cmp	r3, #0
 8009c3e:	d159      	bne.n	8009cf4 <sync_fs+0xcc>
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	781b      	ldrb	r3, [r3, #0]
 8009c44:	2b03      	cmp	r3, #3
 8009c46:	d149      	bne.n	8009cdc <sync_fs+0xb4>
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	791b      	ldrb	r3, [r3, #4]
 8009c4c:	2b01      	cmp	r3, #1
 8009c4e:	d145      	bne.n	8009cdc <sync_fs+0xb4>
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	899b      	ldrh	r3, [r3, #12]
 8009c5a:	461a      	mov	r2, r3
 8009c5c:	2100      	movs	r1, #0
 8009c5e:	f7ff fda8 	bl	80097b2 <mem_set>
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	3338      	adds	r3, #56	@ 0x38
 8009c66:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 8009c6a:	f64a 2155 	movw	r1, #43605	@ 0xaa55
 8009c6e:	4618      	mov	r0, r3
 8009c70:	f7ff fd37 	bl	80096e2 <st_word>
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	3338      	adds	r3, #56	@ 0x38
 8009c78:	4921      	ldr	r1, [pc, #132]	@ (8009d00 <sync_fs+0xd8>)
 8009c7a:	4618      	mov	r0, r3
 8009c7c:	f7ff fd4c 	bl	8009718 <st_dword>
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	3338      	adds	r3, #56	@ 0x38
 8009c84:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 8009c88:	491e      	ldr	r1, [pc, #120]	@ (8009d04 <sync_fs+0xdc>)
 8009c8a:	4618      	mov	r0, r3
 8009c8c:	f7ff fd44 	bl	8009718 <st_dword>
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	3338      	adds	r3, #56	@ 0x38
 8009c94:	f503 72f4 	add.w	r2, r3, #488	@ 0x1e8
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	699b      	ldr	r3, [r3, #24]
 8009c9c:	4619      	mov	r1, r3
 8009c9e:	4610      	mov	r0, r2
 8009ca0:	f7ff fd3a 	bl	8009718 <st_dword>
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	3338      	adds	r3, #56	@ 0x38
 8009ca8:	f503 72f6 	add.w	r2, r3, #492	@ 0x1ec
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	695b      	ldr	r3, [r3, #20]
 8009cb0:	4619      	mov	r1, r3
 8009cb2:	4610      	mov	r0, r2
 8009cb4:	f7ff fd30 	bl	8009718 <st_dword>
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009cbc:	1c5a      	adds	r2, r3, #1
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	635a      	str	r2, [r3, #52]	@ 0x34
 8009cc2:	687b      	ldr	r3, [r7, #4]
 8009cc4:	7858      	ldrb	r0, [r3, #1]
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009cd0:	2301      	movs	r3, #1
 8009cd2:	f7ff fc8d 	bl	80095f0 <disk_write>
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	2200      	movs	r2, #0
 8009cda:	711a      	strb	r2, [r3, #4]
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	785b      	ldrb	r3, [r3, #1]
 8009ce0:	2200      	movs	r2, #0
 8009ce2:	2100      	movs	r1, #0
 8009ce4:	4618      	mov	r0, r3
 8009ce6:	f7ff fca3 	bl	8009630 <disk_ioctl>
 8009cea:	4603      	mov	r3, r0
 8009cec:	2b00      	cmp	r3, #0
 8009cee:	d001      	beq.n	8009cf4 <sync_fs+0xcc>
 8009cf0:	2301      	movs	r3, #1
 8009cf2:	73fb      	strb	r3, [r7, #15]
 8009cf4:	7bfb      	ldrb	r3, [r7, #15]
 8009cf6:	4618      	mov	r0, r3
 8009cf8:	3710      	adds	r7, #16
 8009cfa:	46bd      	mov	sp, r7
 8009cfc:	bd80      	pop	{r7, pc}
 8009cfe:	bf00      	nop
 8009d00:	41615252 	.word	0x41615252
 8009d04:	61417272 	.word	0x61417272

08009d08 <clust2sect>:
 8009d08:	b480      	push	{r7}
 8009d0a:	b083      	sub	sp, #12
 8009d0c:	af00      	add	r7, sp, #0
 8009d0e:	6078      	str	r0, [r7, #4]
 8009d10:	6039      	str	r1, [r7, #0]
 8009d12:	683b      	ldr	r3, [r7, #0]
 8009d14:	3b02      	subs	r3, #2
 8009d16:	603b      	str	r3, [r7, #0]
 8009d18:	687b      	ldr	r3, [r7, #4]
 8009d1a:	69db      	ldr	r3, [r3, #28]
 8009d1c:	3b02      	subs	r3, #2
 8009d1e:	683a      	ldr	r2, [r7, #0]
 8009d20:	429a      	cmp	r2, r3
 8009d22:	d301      	bcc.n	8009d28 <clust2sect+0x20>
 8009d24:	2300      	movs	r3, #0
 8009d26:	e008      	b.n	8009d3a <clust2sect+0x32>
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	895b      	ldrh	r3, [r3, #10]
 8009d2c:	461a      	mov	r2, r3
 8009d2e:	683b      	ldr	r3, [r7, #0]
 8009d30:	fb03 f202 	mul.w	r2, r3, r2
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009d38:	4413      	add	r3, r2
 8009d3a:	4618      	mov	r0, r3
 8009d3c:	370c      	adds	r7, #12
 8009d3e:	46bd      	mov	sp, r7
 8009d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d44:	4770      	bx	lr

08009d46 <get_fat>:
 8009d46:	b580      	push	{r7, lr}
 8009d48:	b086      	sub	sp, #24
 8009d4a:	af00      	add	r7, sp, #0
 8009d4c:	6078      	str	r0, [r7, #4]
 8009d4e:	6039      	str	r1, [r7, #0]
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	613b      	str	r3, [r7, #16]
 8009d56:	683b      	ldr	r3, [r7, #0]
 8009d58:	2b01      	cmp	r3, #1
 8009d5a:	d904      	bls.n	8009d66 <get_fat+0x20>
 8009d5c:	693b      	ldr	r3, [r7, #16]
 8009d5e:	69db      	ldr	r3, [r3, #28]
 8009d60:	683a      	ldr	r2, [r7, #0]
 8009d62:	429a      	cmp	r2, r3
 8009d64:	d302      	bcc.n	8009d6c <get_fat+0x26>
 8009d66:	2301      	movs	r3, #1
 8009d68:	617b      	str	r3, [r7, #20]
 8009d6a:	e0ba      	b.n	8009ee2 <get_fat+0x19c>
 8009d6c:	f04f 33ff 	mov.w	r3, #4294967295
 8009d70:	617b      	str	r3, [r7, #20]
 8009d72:	693b      	ldr	r3, [r7, #16]
 8009d74:	781b      	ldrb	r3, [r3, #0]
 8009d76:	2b03      	cmp	r3, #3
 8009d78:	f000 8082 	beq.w	8009e80 <get_fat+0x13a>
 8009d7c:	2b03      	cmp	r3, #3
 8009d7e:	f300 80a6 	bgt.w	8009ece <get_fat+0x188>
 8009d82:	2b01      	cmp	r3, #1
 8009d84:	d002      	beq.n	8009d8c <get_fat+0x46>
 8009d86:	2b02      	cmp	r3, #2
 8009d88:	d055      	beq.n	8009e36 <get_fat+0xf0>
 8009d8a:	e0a0      	b.n	8009ece <get_fat+0x188>
 8009d8c:	683b      	ldr	r3, [r7, #0]
 8009d8e:	60fb      	str	r3, [r7, #12]
 8009d90:	68fb      	ldr	r3, [r7, #12]
 8009d92:	085b      	lsrs	r3, r3, #1
 8009d94:	68fa      	ldr	r2, [r7, #12]
 8009d96:	4413      	add	r3, r2
 8009d98:	60fb      	str	r3, [r7, #12]
 8009d9a:	693b      	ldr	r3, [r7, #16]
 8009d9c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009d9e:	693b      	ldr	r3, [r7, #16]
 8009da0:	899b      	ldrh	r3, [r3, #12]
 8009da2:	4619      	mov	r1, r3
 8009da4:	68fb      	ldr	r3, [r7, #12]
 8009da6:	fbb3 f3f1 	udiv	r3, r3, r1
 8009daa:	4413      	add	r3, r2
 8009dac:	4619      	mov	r1, r3
 8009dae:	6938      	ldr	r0, [r7, #16]
 8009db0:	f7ff ff0c 	bl	8009bcc <move_window>
 8009db4:	4603      	mov	r3, r0
 8009db6:	2b00      	cmp	r3, #0
 8009db8:	f040 808c 	bne.w	8009ed4 <get_fat+0x18e>
 8009dbc:	68fb      	ldr	r3, [r7, #12]
 8009dbe:	1c5a      	adds	r2, r3, #1
 8009dc0:	60fa      	str	r2, [r7, #12]
 8009dc2:	693a      	ldr	r2, [r7, #16]
 8009dc4:	8992      	ldrh	r2, [r2, #12]
 8009dc6:	fbb3 f1f2 	udiv	r1, r3, r2
 8009dca:	fb01 f202 	mul.w	r2, r1, r2
 8009dce:	1a9b      	subs	r3, r3, r2
 8009dd0:	693a      	ldr	r2, [r7, #16]
 8009dd2:	4413      	add	r3, r2
 8009dd4:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8009dd8:	60bb      	str	r3, [r7, #8]
 8009dda:	693b      	ldr	r3, [r7, #16]
 8009ddc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009dde:	693b      	ldr	r3, [r7, #16]
 8009de0:	899b      	ldrh	r3, [r3, #12]
 8009de2:	4619      	mov	r1, r3
 8009de4:	68fb      	ldr	r3, [r7, #12]
 8009de6:	fbb3 f3f1 	udiv	r3, r3, r1
 8009dea:	4413      	add	r3, r2
 8009dec:	4619      	mov	r1, r3
 8009dee:	6938      	ldr	r0, [r7, #16]
 8009df0:	f7ff feec 	bl	8009bcc <move_window>
 8009df4:	4603      	mov	r3, r0
 8009df6:	2b00      	cmp	r3, #0
 8009df8:	d16e      	bne.n	8009ed8 <get_fat+0x192>
 8009dfa:	693b      	ldr	r3, [r7, #16]
 8009dfc:	899b      	ldrh	r3, [r3, #12]
 8009dfe:	461a      	mov	r2, r3
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	fbb3 f1f2 	udiv	r1, r3, r2
 8009e06:	fb01 f202 	mul.w	r2, r1, r2
 8009e0a:	1a9b      	subs	r3, r3, r2
 8009e0c:	693a      	ldr	r2, [r7, #16]
 8009e0e:	4413      	add	r3, r2
 8009e10:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8009e14:	021b      	lsls	r3, r3, #8
 8009e16:	68ba      	ldr	r2, [r7, #8]
 8009e18:	4313      	orrs	r3, r2
 8009e1a:	60bb      	str	r3, [r7, #8]
 8009e1c:	683b      	ldr	r3, [r7, #0]
 8009e1e:	f003 0301 	and.w	r3, r3, #1
 8009e22:	2b00      	cmp	r3, #0
 8009e24:	d002      	beq.n	8009e2c <get_fat+0xe6>
 8009e26:	68bb      	ldr	r3, [r7, #8]
 8009e28:	091b      	lsrs	r3, r3, #4
 8009e2a:	e002      	b.n	8009e32 <get_fat+0xec>
 8009e2c:	68bb      	ldr	r3, [r7, #8]
 8009e2e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009e32:	617b      	str	r3, [r7, #20]
 8009e34:	e055      	b.n	8009ee2 <get_fat+0x19c>
 8009e36:	693b      	ldr	r3, [r7, #16]
 8009e38:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009e3a:	693b      	ldr	r3, [r7, #16]
 8009e3c:	899b      	ldrh	r3, [r3, #12]
 8009e3e:	085b      	lsrs	r3, r3, #1
 8009e40:	b29b      	uxth	r3, r3
 8009e42:	4619      	mov	r1, r3
 8009e44:	683b      	ldr	r3, [r7, #0]
 8009e46:	fbb3 f3f1 	udiv	r3, r3, r1
 8009e4a:	4413      	add	r3, r2
 8009e4c:	4619      	mov	r1, r3
 8009e4e:	6938      	ldr	r0, [r7, #16]
 8009e50:	f7ff febc 	bl	8009bcc <move_window>
 8009e54:	4603      	mov	r3, r0
 8009e56:	2b00      	cmp	r3, #0
 8009e58:	d140      	bne.n	8009edc <get_fat+0x196>
 8009e5a:	693b      	ldr	r3, [r7, #16]
 8009e5c:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009e60:	683b      	ldr	r3, [r7, #0]
 8009e62:	005b      	lsls	r3, r3, #1
 8009e64:	693a      	ldr	r2, [r7, #16]
 8009e66:	8992      	ldrh	r2, [r2, #12]
 8009e68:	fbb3 f0f2 	udiv	r0, r3, r2
 8009e6c:	fb00 f202 	mul.w	r2, r0, r2
 8009e70:	1a9b      	subs	r3, r3, r2
 8009e72:	440b      	add	r3, r1
 8009e74:	4618      	mov	r0, r3
 8009e76:	f7ff fbf9 	bl	800966c <ld_word>
 8009e7a:	4603      	mov	r3, r0
 8009e7c:	617b      	str	r3, [r7, #20]
 8009e7e:	e030      	b.n	8009ee2 <get_fat+0x19c>
 8009e80:	693b      	ldr	r3, [r7, #16]
 8009e82:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009e84:	693b      	ldr	r3, [r7, #16]
 8009e86:	899b      	ldrh	r3, [r3, #12]
 8009e88:	089b      	lsrs	r3, r3, #2
 8009e8a:	b29b      	uxth	r3, r3
 8009e8c:	4619      	mov	r1, r3
 8009e8e:	683b      	ldr	r3, [r7, #0]
 8009e90:	fbb3 f3f1 	udiv	r3, r3, r1
 8009e94:	4413      	add	r3, r2
 8009e96:	4619      	mov	r1, r3
 8009e98:	6938      	ldr	r0, [r7, #16]
 8009e9a:	f7ff fe97 	bl	8009bcc <move_window>
 8009e9e:	4603      	mov	r3, r0
 8009ea0:	2b00      	cmp	r3, #0
 8009ea2:	d11d      	bne.n	8009ee0 <get_fat+0x19a>
 8009ea4:	693b      	ldr	r3, [r7, #16]
 8009ea6:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009eaa:	683b      	ldr	r3, [r7, #0]
 8009eac:	009b      	lsls	r3, r3, #2
 8009eae:	693a      	ldr	r2, [r7, #16]
 8009eb0:	8992      	ldrh	r2, [r2, #12]
 8009eb2:	fbb3 f0f2 	udiv	r0, r3, r2
 8009eb6:	fb00 f202 	mul.w	r2, r0, r2
 8009eba:	1a9b      	subs	r3, r3, r2
 8009ebc:	440b      	add	r3, r1
 8009ebe:	4618      	mov	r0, r3
 8009ec0:	f7ff fbec 	bl	800969c <ld_dword>
 8009ec4:	4603      	mov	r3, r0
 8009ec6:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8009eca:	617b      	str	r3, [r7, #20]
 8009ecc:	e009      	b.n	8009ee2 <get_fat+0x19c>
 8009ece:	2301      	movs	r3, #1
 8009ed0:	617b      	str	r3, [r7, #20]
 8009ed2:	e006      	b.n	8009ee2 <get_fat+0x19c>
 8009ed4:	bf00      	nop
 8009ed6:	e004      	b.n	8009ee2 <get_fat+0x19c>
 8009ed8:	bf00      	nop
 8009eda:	e002      	b.n	8009ee2 <get_fat+0x19c>
 8009edc:	bf00      	nop
 8009ede:	e000      	b.n	8009ee2 <get_fat+0x19c>
 8009ee0:	bf00      	nop
 8009ee2:	697b      	ldr	r3, [r7, #20]
 8009ee4:	4618      	mov	r0, r3
 8009ee6:	3718      	adds	r7, #24
 8009ee8:	46bd      	mov	sp, r7
 8009eea:	bd80      	pop	{r7, pc}

08009eec <put_fat>:
 8009eec:	b590      	push	{r4, r7, lr}
 8009eee:	b089      	sub	sp, #36	@ 0x24
 8009ef0:	af00      	add	r7, sp, #0
 8009ef2:	60f8      	str	r0, [r7, #12]
 8009ef4:	60b9      	str	r1, [r7, #8]
 8009ef6:	607a      	str	r2, [r7, #4]
 8009ef8:	2302      	movs	r3, #2
 8009efa:	77fb      	strb	r3, [r7, #31]
 8009efc:	68bb      	ldr	r3, [r7, #8]
 8009efe:	2b01      	cmp	r3, #1
 8009f00:	f240 8109 	bls.w	800a116 <put_fat+0x22a>
 8009f04:	68fb      	ldr	r3, [r7, #12]
 8009f06:	69db      	ldr	r3, [r3, #28]
 8009f08:	68ba      	ldr	r2, [r7, #8]
 8009f0a:	429a      	cmp	r2, r3
 8009f0c:	f080 8103 	bcs.w	800a116 <put_fat+0x22a>
 8009f10:	68fb      	ldr	r3, [r7, #12]
 8009f12:	781b      	ldrb	r3, [r3, #0]
 8009f14:	2b03      	cmp	r3, #3
 8009f16:	f000 80b6 	beq.w	800a086 <put_fat+0x19a>
 8009f1a:	2b03      	cmp	r3, #3
 8009f1c:	f300 80fb 	bgt.w	800a116 <put_fat+0x22a>
 8009f20:	2b01      	cmp	r3, #1
 8009f22:	d003      	beq.n	8009f2c <put_fat+0x40>
 8009f24:	2b02      	cmp	r3, #2
 8009f26:	f000 8083 	beq.w	800a030 <put_fat+0x144>
 8009f2a:	e0f4      	b.n	800a116 <put_fat+0x22a>
 8009f2c:	68bb      	ldr	r3, [r7, #8]
 8009f2e:	61bb      	str	r3, [r7, #24]
 8009f30:	69bb      	ldr	r3, [r7, #24]
 8009f32:	085b      	lsrs	r3, r3, #1
 8009f34:	69ba      	ldr	r2, [r7, #24]
 8009f36:	4413      	add	r3, r2
 8009f38:	61bb      	str	r3, [r7, #24]
 8009f3a:	68fb      	ldr	r3, [r7, #12]
 8009f3c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	899b      	ldrh	r3, [r3, #12]
 8009f42:	4619      	mov	r1, r3
 8009f44:	69bb      	ldr	r3, [r7, #24]
 8009f46:	fbb3 f3f1 	udiv	r3, r3, r1
 8009f4a:	4413      	add	r3, r2
 8009f4c:	4619      	mov	r1, r3
 8009f4e:	68f8      	ldr	r0, [r7, #12]
 8009f50:	f7ff fe3c 	bl	8009bcc <move_window>
 8009f54:	4603      	mov	r3, r0
 8009f56:	77fb      	strb	r3, [r7, #31]
 8009f58:	7ffb      	ldrb	r3, [r7, #31]
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	f040 80d4 	bne.w	800a108 <put_fat+0x21c>
 8009f60:	68fb      	ldr	r3, [r7, #12]
 8009f62:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009f66:	69bb      	ldr	r3, [r7, #24]
 8009f68:	1c5a      	adds	r2, r3, #1
 8009f6a:	61ba      	str	r2, [r7, #24]
 8009f6c:	68fa      	ldr	r2, [r7, #12]
 8009f6e:	8992      	ldrh	r2, [r2, #12]
 8009f70:	fbb3 f0f2 	udiv	r0, r3, r2
 8009f74:	fb00 f202 	mul.w	r2, r0, r2
 8009f78:	1a9b      	subs	r3, r3, r2
 8009f7a:	440b      	add	r3, r1
 8009f7c:	617b      	str	r3, [r7, #20]
 8009f7e:	68bb      	ldr	r3, [r7, #8]
 8009f80:	f003 0301 	and.w	r3, r3, #1
 8009f84:	2b00      	cmp	r3, #0
 8009f86:	d00d      	beq.n	8009fa4 <put_fat+0xb8>
 8009f88:	697b      	ldr	r3, [r7, #20]
 8009f8a:	781b      	ldrb	r3, [r3, #0]
 8009f8c:	b25b      	sxtb	r3, r3
 8009f8e:	f003 030f 	and.w	r3, r3, #15
 8009f92:	b25a      	sxtb	r2, r3
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	b2db      	uxtb	r3, r3
 8009f98:	011b      	lsls	r3, r3, #4
 8009f9a:	b25b      	sxtb	r3, r3
 8009f9c:	4313      	orrs	r3, r2
 8009f9e:	b25b      	sxtb	r3, r3
 8009fa0:	b2db      	uxtb	r3, r3
 8009fa2:	e001      	b.n	8009fa8 <put_fat+0xbc>
 8009fa4:	687b      	ldr	r3, [r7, #4]
 8009fa6:	b2db      	uxtb	r3, r3
 8009fa8:	697a      	ldr	r2, [r7, #20]
 8009faa:	7013      	strb	r3, [r2, #0]
 8009fac:	68fb      	ldr	r3, [r7, #12]
 8009fae:	2201      	movs	r2, #1
 8009fb0:	70da      	strb	r2, [r3, #3]
 8009fb2:	68fb      	ldr	r3, [r7, #12]
 8009fb4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009fb6:	68fb      	ldr	r3, [r7, #12]
 8009fb8:	899b      	ldrh	r3, [r3, #12]
 8009fba:	4619      	mov	r1, r3
 8009fbc:	69bb      	ldr	r3, [r7, #24]
 8009fbe:	fbb3 f3f1 	udiv	r3, r3, r1
 8009fc2:	4413      	add	r3, r2
 8009fc4:	4619      	mov	r1, r3
 8009fc6:	68f8      	ldr	r0, [r7, #12]
 8009fc8:	f7ff fe00 	bl	8009bcc <move_window>
 8009fcc:	4603      	mov	r3, r0
 8009fce:	77fb      	strb	r3, [r7, #31]
 8009fd0:	7ffb      	ldrb	r3, [r7, #31]
 8009fd2:	2b00      	cmp	r3, #0
 8009fd4:	f040 809a 	bne.w	800a10c <put_fat+0x220>
 8009fd8:	68fb      	ldr	r3, [r7, #12]
 8009fda:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 8009fde:	68fb      	ldr	r3, [r7, #12]
 8009fe0:	899b      	ldrh	r3, [r3, #12]
 8009fe2:	461a      	mov	r2, r3
 8009fe4:	69bb      	ldr	r3, [r7, #24]
 8009fe6:	fbb3 f0f2 	udiv	r0, r3, r2
 8009fea:	fb00 f202 	mul.w	r2, r0, r2
 8009fee:	1a9b      	subs	r3, r3, r2
 8009ff0:	440b      	add	r3, r1
 8009ff2:	617b      	str	r3, [r7, #20]
 8009ff4:	68bb      	ldr	r3, [r7, #8]
 8009ff6:	f003 0301 	and.w	r3, r3, #1
 8009ffa:	2b00      	cmp	r3, #0
 8009ffc:	d003      	beq.n	800a006 <put_fat+0x11a>
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	091b      	lsrs	r3, r3, #4
 800a002:	b2db      	uxtb	r3, r3
 800a004:	e00e      	b.n	800a024 <put_fat+0x138>
 800a006:	697b      	ldr	r3, [r7, #20]
 800a008:	781b      	ldrb	r3, [r3, #0]
 800a00a:	b25b      	sxtb	r3, r3
 800a00c:	f023 030f 	bic.w	r3, r3, #15
 800a010:	b25a      	sxtb	r2, r3
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	0a1b      	lsrs	r3, r3, #8
 800a016:	b25b      	sxtb	r3, r3
 800a018:	f003 030f 	and.w	r3, r3, #15
 800a01c:	b25b      	sxtb	r3, r3
 800a01e:	4313      	orrs	r3, r2
 800a020:	b25b      	sxtb	r3, r3
 800a022:	b2db      	uxtb	r3, r3
 800a024:	697a      	ldr	r2, [r7, #20]
 800a026:	7013      	strb	r3, [r2, #0]
 800a028:	68fb      	ldr	r3, [r7, #12]
 800a02a:	2201      	movs	r2, #1
 800a02c:	70da      	strb	r2, [r3, #3]
 800a02e:	e072      	b.n	800a116 <put_fat+0x22a>
 800a030:	68fb      	ldr	r3, [r7, #12]
 800a032:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a034:	68fb      	ldr	r3, [r7, #12]
 800a036:	899b      	ldrh	r3, [r3, #12]
 800a038:	085b      	lsrs	r3, r3, #1
 800a03a:	b29b      	uxth	r3, r3
 800a03c:	4619      	mov	r1, r3
 800a03e:	68bb      	ldr	r3, [r7, #8]
 800a040:	fbb3 f3f1 	udiv	r3, r3, r1
 800a044:	4413      	add	r3, r2
 800a046:	4619      	mov	r1, r3
 800a048:	68f8      	ldr	r0, [r7, #12]
 800a04a:	f7ff fdbf 	bl	8009bcc <move_window>
 800a04e:	4603      	mov	r3, r0
 800a050:	77fb      	strb	r3, [r7, #31]
 800a052:	7ffb      	ldrb	r3, [r7, #31]
 800a054:	2b00      	cmp	r3, #0
 800a056:	d15b      	bne.n	800a110 <put_fat+0x224>
 800a058:	68fb      	ldr	r3, [r7, #12]
 800a05a:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800a05e:	68bb      	ldr	r3, [r7, #8]
 800a060:	005b      	lsls	r3, r3, #1
 800a062:	68fa      	ldr	r2, [r7, #12]
 800a064:	8992      	ldrh	r2, [r2, #12]
 800a066:	fbb3 f0f2 	udiv	r0, r3, r2
 800a06a:	fb00 f202 	mul.w	r2, r0, r2
 800a06e:	1a9b      	subs	r3, r3, r2
 800a070:	440b      	add	r3, r1
 800a072:	687a      	ldr	r2, [r7, #4]
 800a074:	b292      	uxth	r2, r2
 800a076:	4611      	mov	r1, r2
 800a078:	4618      	mov	r0, r3
 800a07a:	f7ff fb32 	bl	80096e2 <st_word>
 800a07e:	68fb      	ldr	r3, [r7, #12]
 800a080:	2201      	movs	r2, #1
 800a082:	70da      	strb	r2, [r3, #3]
 800a084:	e047      	b.n	800a116 <put_fat+0x22a>
 800a086:	68fb      	ldr	r3, [r7, #12]
 800a088:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a08a:	68fb      	ldr	r3, [r7, #12]
 800a08c:	899b      	ldrh	r3, [r3, #12]
 800a08e:	089b      	lsrs	r3, r3, #2
 800a090:	b29b      	uxth	r3, r3
 800a092:	4619      	mov	r1, r3
 800a094:	68bb      	ldr	r3, [r7, #8]
 800a096:	fbb3 f3f1 	udiv	r3, r3, r1
 800a09a:	4413      	add	r3, r2
 800a09c:	4619      	mov	r1, r3
 800a09e:	68f8      	ldr	r0, [r7, #12]
 800a0a0:	f7ff fd94 	bl	8009bcc <move_window>
 800a0a4:	4603      	mov	r3, r0
 800a0a6:	77fb      	strb	r3, [r7, #31]
 800a0a8:	7ffb      	ldrb	r3, [r7, #31]
 800a0aa:	2b00      	cmp	r3, #0
 800a0ac:	d132      	bne.n	800a114 <put_fat+0x228>
 800a0ae:	687b      	ldr	r3, [r7, #4]
 800a0b0:	f023 4470 	bic.w	r4, r3, #4026531840	@ 0xf0000000
 800a0b4:	68fb      	ldr	r3, [r7, #12]
 800a0b6:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800a0ba:	68bb      	ldr	r3, [r7, #8]
 800a0bc:	009b      	lsls	r3, r3, #2
 800a0be:	68fa      	ldr	r2, [r7, #12]
 800a0c0:	8992      	ldrh	r2, [r2, #12]
 800a0c2:	fbb3 f0f2 	udiv	r0, r3, r2
 800a0c6:	fb00 f202 	mul.w	r2, r0, r2
 800a0ca:	1a9b      	subs	r3, r3, r2
 800a0cc:	440b      	add	r3, r1
 800a0ce:	4618      	mov	r0, r3
 800a0d0:	f7ff fae4 	bl	800969c <ld_dword>
 800a0d4:	4603      	mov	r3, r0
 800a0d6:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 800a0da:	4323      	orrs	r3, r4
 800a0dc:	607b      	str	r3, [r7, #4]
 800a0de:	68fb      	ldr	r3, [r7, #12]
 800a0e0:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800a0e4:	68bb      	ldr	r3, [r7, #8]
 800a0e6:	009b      	lsls	r3, r3, #2
 800a0e8:	68fa      	ldr	r2, [r7, #12]
 800a0ea:	8992      	ldrh	r2, [r2, #12]
 800a0ec:	fbb3 f0f2 	udiv	r0, r3, r2
 800a0f0:	fb00 f202 	mul.w	r2, r0, r2
 800a0f4:	1a9b      	subs	r3, r3, r2
 800a0f6:	440b      	add	r3, r1
 800a0f8:	6879      	ldr	r1, [r7, #4]
 800a0fa:	4618      	mov	r0, r3
 800a0fc:	f7ff fb0c 	bl	8009718 <st_dword>
 800a100:	68fb      	ldr	r3, [r7, #12]
 800a102:	2201      	movs	r2, #1
 800a104:	70da      	strb	r2, [r3, #3]
 800a106:	e006      	b.n	800a116 <put_fat+0x22a>
 800a108:	bf00      	nop
 800a10a:	e004      	b.n	800a116 <put_fat+0x22a>
 800a10c:	bf00      	nop
 800a10e:	e002      	b.n	800a116 <put_fat+0x22a>
 800a110:	bf00      	nop
 800a112:	e000      	b.n	800a116 <put_fat+0x22a>
 800a114:	bf00      	nop
 800a116:	7ffb      	ldrb	r3, [r7, #31]
 800a118:	4618      	mov	r0, r3
 800a11a:	3724      	adds	r7, #36	@ 0x24
 800a11c:	46bd      	mov	sp, r7
 800a11e:	bd90      	pop	{r4, r7, pc}

0800a120 <remove_chain>:
 800a120:	b580      	push	{r7, lr}
 800a122:	b088      	sub	sp, #32
 800a124:	af00      	add	r7, sp, #0
 800a126:	60f8      	str	r0, [r7, #12]
 800a128:	60b9      	str	r1, [r7, #8]
 800a12a:	607a      	str	r2, [r7, #4]
 800a12c:	2300      	movs	r3, #0
 800a12e:	77fb      	strb	r3, [r7, #31]
 800a130:	68fb      	ldr	r3, [r7, #12]
 800a132:	681b      	ldr	r3, [r3, #0]
 800a134:	61bb      	str	r3, [r7, #24]
 800a136:	68bb      	ldr	r3, [r7, #8]
 800a138:	2b01      	cmp	r3, #1
 800a13a:	d904      	bls.n	800a146 <remove_chain+0x26>
 800a13c:	69bb      	ldr	r3, [r7, #24]
 800a13e:	69db      	ldr	r3, [r3, #28]
 800a140:	68ba      	ldr	r2, [r7, #8]
 800a142:	429a      	cmp	r2, r3
 800a144:	d301      	bcc.n	800a14a <remove_chain+0x2a>
 800a146:	2302      	movs	r3, #2
 800a148:	e04b      	b.n	800a1e2 <remove_chain+0xc2>
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	2b00      	cmp	r3, #0
 800a14e:	d00c      	beq.n	800a16a <remove_chain+0x4a>
 800a150:	f04f 32ff 	mov.w	r2, #4294967295
 800a154:	6879      	ldr	r1, [r7, #4]
 800a156:	69b8      	ldr	r0, [r7, #24]
 800a158:	f7ff fec8 	bl	8009eec <put_fat>
 800a15c:	4603      	mov	r3, r0
 800a15e:	77fb      	strb	r3, [r7, #31]
 800a160:	7ffb      	ldrb	r3, [r7, #31]
 800a162:	2b00      	cmp	r3, #0
 800a164:	d001      	beq.n	800a16a <remove_chain+0x4a>
 800a166:	7ffb      	ldrb	r3, [r7, #31]
 800a168:	e03b      	b.n	800a1e2 <remove_chain+0xc2>
 800a16a:	68b9      	ldr	r1, [r7, #8]
 800a16c:	68f8      	ldr	r0, [r7, #12]
 800a16e:	f7ff fdea 	bl	8009d46 <get_fat>
 800a172:	6178      	str	r0, [r7, #20]
 800a174:	697b      	ldr	r3, [r7, #20]
 800a176:	2b00      	cmp	r3, #0
 800a178:	d031      	beq.n	800a1de <remove_chain+0xbe>
 800a17a:	697b      	ldr	r3, [r7, #20]
 800a17c:	2b01      	cmp	r3, #1
 800a17e:	d101      	bne.n	800a184 <remove_chain+0x64>
 800a180:	2302      	movs	r3, #2
 800a182:	e02e      	b.n	800a1e2 <remove_chain+0xc2>
 800a184:	697b      	ldr	r3, [r7, #20]
 800a186:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a18a:	d101      	bne.n	800a190 <remove_chain+0x70>
 800a18c:	2301      	movs	r3, #1
 800a18e:	e028      	b.n	800a1e2 <remove_chain+0xc2>
 800a190:	2200      	movs	r2, #0
 800a192:	68b9      	ldr	r1, [r7, #8]
 800a194:	69b8      	ldr	r0, [r7, #24]
 800a196:	f7ff fea9 	bl	8009eec <put_fat>
 800a19a:	4603      	mov	r3, r0
 800a19c:	77fb      	strb	r3, [r7, #31]
 800a19e:	7ffb      	ldrb	r3, [r7, #31]
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	d001      	beq.n	800a1a8 <remove_chain+0x88>
 800a1a4:	7ffb      	ldrb	r3, [r7, #31]
 800a1a6:	e01c      	b.n	800a1e2 <remove_chain+0xc2>
 800a1a8:	69bb      	ldr	r3, [r7, #24]
 800a1aa:	699a      	ldr	r2, [r3, #24]
 800a1ac:	69bb      	ldr	r3, [r7, #24]
 800a1ae:	69db      	ldr	r3, [r3, #28]
 800a1b0:	3b02      	subs	r3, #2
 800a1b2:	429a      	cmp	r2, r3
 800a1b4:	d20b      	bcs.n	800a1ce <remove_chain+0xae>
 800a1b6:	69bb      	ldr	r3, [r7, #24]
 800a1b8:	699b      	ldr	r3, [r3, #24]
 800a1ba:	1c5a      	adds	r2, r3, #1
 800a1bc:	69bb      	ldr	r3, [r7, #24]
 800a1be:	619a      	str	r2, [r3, #24]
 800a1c0:	69bb      	ldr	r3, [r7, #24]
 800a1c2:	791b      	ldrb	r3, [r3, #4]
 800a1c4:	f043 0301 	orr.w	r3, r3, #1
 800a1c8:	b2da      	uxtb	r2, r3
 800a1ca:	69bb      	ldr	r3, [r7, #24]
 800a1cc:	711a      	strb	r2, [r3, #4]
 800a1ce:	697b      	ldr	r3, [r7, #20]
 800a1d0:	60bb      	str	r3, [r7, #8]
 800a1d2:	69bb      	ldr	r3, [r7, #24]
 800a1d4:	69db      	ldr	r3, [r3, #28]
 800a1d6:	68ba      	ldr	r2, [r7, #8]
 800a1d8:	429a      	cmp	r2, r3
 800a1da:	d3c6      	bcc.n	800a16a <remove_chain+0x4a>
 800a1dc:	e000      	b.n	800a1e0 <remove_chain+0xc0>
 800a1de:	bf00      	nop
 800a1e0:	2300      	movs	r3, #0
 800a1e2:	4618      	mov	r0, r3
 800a1e4:	3720      	adds	r7, #32
 800a1e6:	46bd      	mov	sp, r7
 800a1e8:	bd80      	pop	{r7, pc}

0800a1ea <create_chain>:
 800a1ea:	b580      	push	{r7, lr}
 800a1ec:	b088      	sub	sp, #32
 800a1ee:	af00      	add	r7, sp, #0
 800a1f0:	6078      	str	r0, [r7, #4]
 800a1f2:	6039      	str	r1, [r7, #0]
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	681b      	ldr	r3, [r3, #0]
 800a1f8:	613b      	str	r3, [r7, #16]
 800a1fa:	683b      	ldr	r3, [r7, #0]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	d10d      	bne.n	800a21c <create_chain+0x32>
 800a200:	693b      	ldr	r3, [r7, #16]
 800a202:	695b      	ldr	r3, [r3, #20]
 800a204:	61bb      	str	r3, [r7, #24]
 800a206:	69bb      	ldr	r3, [r7, #24]
 800a208:	2b00      	cmp	r3, #0
 800a20a:	d004      	beq.n	800a216 <create_chain+0x2c>
 800a20c:	693b      	ldr	r3, [r7, #16]
 800a20e:	69db      	ldr	r3, [r3, #28]
 800a210:	69ba      	ldr	r2, [r7, #24]
 800a212:	429a      	cmp	r2, r3
 800a214:	d31b      	bcc.n	800a24e <create_chain+0x64>
 800a216:	2301      	movs	r3, #1
 800a218:	61bb      	str	r3, [r7, #24]
 800a21a:	e018      	b.n	800a24e <create_chain+0x64>
 800a21c:	6839      	ldr	r1, [r7, #0]
 800a21e:	6878      	ldr	r0, [r7, #4]
 800a220:	f7ff fd91 	bl	8009d46 <get_fat>
 800a224:	60f8      	str	r0, [r7, #12]
 800a226:	68fb      	ldr	r3, [r7, #12]
 800a228:	2b01      	cmp	r3, #1
 800a22a:	d801      	bhi.n	800a230 <create_chain+0x46>
 800a22c:	2301      	movs	r3, #1
 800a22e:	e070      	b.n	800a312 <create_chain+0x128>
 800a230:	68fb      	ldr	r3, [r7, #12]
 800a232:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a236:	d101      	bne.n	800a23c <create_chain+0x52>
 800a238:	68fb      	ldr	r3, [r7, #12]
 800a23a:	e06a      	b.n	800a312 <create_chain+0x128>
 800a23c:	693b      	ldr	r3, [r7, #16]
 800a23e:	69db      	ldr	r3, [r3, #28]
 800a240:	68fa      	ldr	r2, [r7, #12]
 800a242:	429a      	cmp	r2, r3
 800a244:	d201      	bcs.n	800a24a <create_chain+0x60>
 800a246:	68fb      	ldr	r3, [r7, #12]
 800a248:	e063      	b.n	800a312 <create_chain+0x128>
 800a24a:	683b      	ldr	r3, [r7, #0]
 800a24c:	61bb      	str	r3, [r7, #24]
 800a24e:	69bb      	ldr	r3, [r7, #24]
 800a250:	61fb      	str	r3, [r7, #28]
 800a252:	69fb      	ldr	r3, [r7, #28]
 800a254:	3301      	adds	r3, #1
 800a256:	61fb      	str	r3, [r7, #28]
 800a258:	693b      	ldr	r3, [r7, #16]
 800a25a:	69db      	ldr	r3, [r3, #28]
 800a25c:	69fa      	ldr	r2, [r7, #28]
 800a25e:	429a      	cmp	r2, r3
 800a260:	d307      	bcc.n	800a272 <create_chain+0x88>
 800a262:	2302      	movs	r3, #2
 800a264:	61fb      	str	r3, [r7, #28]
 800a266:	69fa      	ldr	r2, [r7, #28]
 800a268:	69bb      	ldr	r3, [r7, #24]
 800a26a:	429a      	cmp	r2, r3
 800a26c:	d901      	bls.n	800a272 <create_chain+0x88>
 800a26e:	2300      	movs	r3, #0
 800a270:	e04f      	b.n	800a312 <create_chain+0x128>
 800a272:	69f9      	ldr	r1, [r7, #28]
 800a274:	6878      	ldr	r0, [r7, #4]
 800a276:	f7ff fd66 	bl	8009d46 <get_fat>
 800a27a:	60f8      	str	r0, [r7, #12]
 800a27c:	68fb      	ldr	r3, [r7, #12]
 800a27e:	2b00      	cmp	r3, #0
 800a280:	d00e      	beq.n	800a2a0 <create_chain+0xb6>
 800a282:	68fb      	ldr	r3, [r7, #12]
 800a284:	2b01      	cmp	r3, #1
 800a286:	d003      	beq.n	800a290 <create_chain+0xa6>
 800a288:	68fb      	ldr	r3, [r7, #12]
 800a28a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a28e:	d101      	bne.n	800a294 <create_chain+0xaa>
 800a290:	68fb      	ldr	r3, [r7, #12]
 800a292:	e03e      	b.n	800a312 <create_chain+0x128>
 800a294:	69fa      	ldr	r2, [r7, #28]
 800a296:	69bb      	ldr	r3, [r7, #24]
 800a298:	429a      	cmp	r2, r3
 800a29a:	d1da      	bne.n	800a252 <create_chain+0x68>
 800a29c:	2300      	movs	r3, #0
 800a29e:	e038      	b.n	800a312 <create_chain+0x128>
 800a2a0:	bf00      	nop
 800a2a2:	f04f 32ff 	mov.w	r2, #4294967295
 800a2a6:	69f9      	ldr	r1, [r7, #28]
 800a2a8:	6938      	ldr	r0, [r7, #16]
 800a2aa:	f7ff fe1f 	bl	8009eec <put_fat>
 800a2ae:	4603      	mov	r3, r0
 800a2b0:	75fb      	strb	r3, [r7, #23]
 800a2b2:	7dfb      	ldrb	r3, [r7, #23]
 800a2b4:	2b00      	cmp	r3, #0
 800a2b6:	d109      	bne.n	800a2cc <create_chain+0xe2>
 800a2b8:	683b      	ldr	r3, [r7, #0]
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	d006      	beq.n	800a2cc <create_chain+0xe2>
 800a2be:	69fa      	ldr	r2, [r7, #28]
 800a2c0:	6839      	ldr	r1, [r7, #0]
 800a2c2:	6938      	ldr	r0, [r7, #16]
 800a2c4:	f7ff fe12 	bl	8009eec <put_fat>
 800a2c8:	4603      	mov	r3, r0
 800a2ca:	75fb      	strb	r3, [r7, #23]
 800a2cc:	7dfb      	ldrb	r3, [r7, #23]
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	d116      	bne.n	800a300 <create_chain+0x116>
 800a2d2:	693b      	ldr	r3, [r7, #16]
 800a2d4:	69fa      	ldr	r2, [r7, #28]
 800a2d6:	615a      	str	r2, [r3, #20]
 800a2d8:	693b      	ldr	r3, [r7, #16]
 800a2da:	699a      	ldr	r2, [r3, #24]
 800a2dc:	693b      	ldr	r3, [r7, #16]
 800a2de:	69db      	ldr	r3, [r3, #28]
 800a2e0:	3b02      	subs	r3, #2
 800a2e2:	429a      	cmp	r2, r3
 800a2e4:	d804      	bhi.n	800a2f0 <create_chain+0x106>
 800a2e6:	693b      	ldr	r3, [r7, #16]
 800a2e8:	699b      	ldr	r3, [r3, #24]
 800a2ea:	1e5a      	subs	r2, r3, #1
 800a2ec:	693b      	ldr	r3, [r7, #16]
 800a2ee:	619a      	str	r2, [r3, #24]
 800a2f0:	693b      	ldr	r3, [r7, #16]
 800a2f2:	791b      	ldrb	r3, [r3, #4]
 800a2f4:	f043 0301 	orr.w	r3, r3, #1
 800a2f8:	b2da      	uxtb	r2, r3
 800a2fa:	693b      	ldr	r3, [r7, #16]
 800a2fc:	711a      	strb	r2, [r3, #4]
 800a2fe:	e007      	b.n	800a310 <create_chain+0x126>
 800a300:	7dfb      	ldrb	r3, [r7, #23]
 800a302:	2b01      	cmp	r3, #1
 800a304:	d102      	bne.n	800a30c <create_chain+0x122>
 800a306:	f04f 33ff 	mov.w	r3, #4294967295
 800a30a:	e000      	b.n	800a30e <create_chain+0x124>
 800a30c:	2301      	movs	r3, #1
 800a30e:	61fb      	str	r3, [r7, #28]
 800a310:	69fb      	ldr	r3, [r7, #28]
 800a312:	4618      	mov	r0, r3
 800a314:	3720      	adds	r7, #32
 800a316:	46bd      	mov	sp, r7
 800a318:	bd80      	pop	{r7, pc}

0800a31a <clmt_clust>:
 800a31a:	b480      	push	{r7}
 800a31c:	b087      	sub	sp, #28
 800a31e:	af00      	add	r7, sp, #0
 800a320:	6078      	str	r0, [r7, #4]
 800a322:	6039      	str	r1, [r7, #0]
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	60fb      	str	r3, [r7, #12]
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a32e:	3304      	adds	r3, #4
 800a330:	613b      	str	r3, [r7, #16]
 800a332:	68fb      	ldr	r3, [r7, #12]
 800a334:	899b      	ldrh	r3, [r3, #12]
 800a336:	461a      	mov	r2, r3
 800a338:	683b      	ldr	r3, [r7, #0]
 800a33a:	fbb3 f3f2 	udiv	r3, r3, r2
 800a33e:	68fa      	ldr	r2, [r7, #12]
 800a340:	8952      	ldrh	r2, [r2, #10]
 800a342:	fbb3 f3f2 	udiv	r3, r3, r2
 800a346:	617b      	str	r3, [r7, #20]
 800a348:	693b      	ldr	r3, [r7, #16]
 800a34a:	1d1a      	adds	r2, r3, #4
 800a34c:	613a      	str	r2, [r7, #16]
 800a34e:	681b      	ldr	r3, [r3, #0]
 800a350:	60bb      	str	r3, [r7, #8]
 800a352:	68bb      	ldr	r3, [r7, #8]
 800a354:	2b00      	cmp	r3, #0
 800a356:	d101      	bne.n	800a35c <clmt_clust+0x42>
 800a358:	2300      	movs	r3, #0
 800a35a:	e010      	b.n	800a37e <clmt_clust+0x64>
 800a35c:	697a      	ldr	r2, [r7, #20]
 800a35e:	68bb      	ldr	r3, [r7, #8]
 800a360:	429a      	cmp	r2, r3
 800a362:	d307      	bcc.n	800a374 <clmt_clust+0x5a>
 800a364:	697a      	ldr	r2, [r7, #20]
 800a366:	68bb      	ldr	r3, [r7, #8]
 800a368:	1ad3      	subs	r3, r2, r3
 800a36a:	617b      	str	r3, [r7, #20]
 800a36c:	693b      	ldr	r3, [r7, #16]
 800a36e:	3304      	adds	r3, #4
 800a370:	613b      	str	r3, [r7, #16]
 800a372:	e7e9      	b.n	800a348 <clmt_clust+0x2e>
 800a374:	bf00      	nop
 800a376:	693b      	ldr	r3, [r7, #16]
 800a378:	681a      	ldr	r2, [r3, #0]
 800a37a:	697b      	ldr	r3, [r7, #20]
 800a37c:	4413      	add	r3, r2
 800a37e:	4618      	mov	r0, r3
 800a380:	371c      	adds	r7, #28
 800a382:	46bd      	mov	sp, r7
 800a384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a388:	4770      	bx	lr

0800a38a <dir_sdi>:
 800a38a:	b580      	push	{r7, lr}
 800a38c:	b086      	sub	sp, #24
 800a38e:	af00      	add	r7, sp, #0
 800a390:	6078      	str	r0, [r7, #4]
 800a392:	6039      	str	r1, [r7, #0]
 800a394:	687b      	ldr	r3, [r7, #4]
 800a396:	681b      	ldr	r3, [r3, #0]
 800a398:	613b      	str	r3, [r7, #16]
 800a39a:	683b      	ldr	r3, [r7, #0]
 800a39c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800a3a0:	d204      	bcs.n	800a3ac <dir_sdi+0x22>
 800a3a2:	683b      	ldr	r3, [r7, #0]
 800a3a4:	f003 031f 	and.w	r3, r3, #31
 800a3a8:	2b00      	cmp	r3, #0
 800a3aa:	d001      	beq.n	800a3b0 <dir_sdi+0x26>
 800a3ac:	2302      	movs	r3, #2
 800a3ae:	e071      	b.n	800a494 <dir_sdi+0x10a>
 800a3b0:	687b      	ldr	r3, [r7, #4]
 800a3b2:	683a      	ldr	r2, [r7, #0]
 800a3b4:	615a      	str	r2, [r3, #20]
 800a3b6:	687b      	ldr	r3, [r7, #4]
 800a3b8:	689b      	ldr	r3, [r3, #8]
 800a3ba:	617b      	str	r3, [r7, #20]
 800a3bc:	697b      	ldr	r3, [r7, #20]
 800a3be:	2b00      	cmp	r3, #0
 800a3c0:	d106      	bne.n	800a3d0 <dir_sdi+0x46>
 800a3c2:	693b      	ldr	r3, [r7, #16]
 800a3c4:	781b      	ldrb	r3, [r3, #0]
 800a3c6:	2b02      	cmp	r3, #2
 800a3c8:	d902      	bls.n	800a3d0 <dir_sdi+0x46>
 800a3ca:	693b      	ldr	r3, [r7, #16]
 800a3cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a3ce:	617b      	str	r3, [r7, #20]
 800a3d0:	697b      	ldr	r3, [r7, #20]
 800a3d2:	2b00      	cmp	r3, #0
 800a3d4:	d10c      	bne.n	800a3f0 <dir_sdi+0x66>
 800a3d6:	683b      	ldr	r3, [r7, #0]
 800a3d8:	095b      	lsrs	r3, r3, #5
 800a3da:	693a      	ldr	r2, [r7, #16]
 800a3dc:	8912      	ldrh	r2, [r2, #8]
 800a3de:	4293      	cmp	r3, r2
 800a3e0:	d301      	bcc.n	800a3e6 <dir_sdi+0x5c>
 800a3e2:	2302      	movs	r3, #2
 800a3e4:	e056      	b.n	800a494 <dir_sdi+0x10a>
 800a3e6:	693b      	ldr	r3, [r7, #16]
 800a3e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	61da      	str	r2, [r3, #28]
 800a3ee:	e02d      	b.n	800a44c <dir_sdi+0xc2>
 800a3f0:	693b      	ldr	r3, [r7, #16]
 800a3f2:	895b      	ldrh	r3, [r3, #10]
 800a3f4:	461a      	mov	r2, r3
 800a3f6:	693b      	ldr	r3, [r7, #16]
 800a3f8:	899b      	ldrh	r3, [r3, #12]
 800a3fa:	fb02 f303 	mul.w	r3, r2, r3
 800a3fe:	60fb      	str	r3, [r7, #12]
 800a400:	e019      	b.n	800a436 <dir_sdi+0xac>
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	6979      	ldr	r1, [r7, #20]
 800a406:	4618      	mov	r0, r3
 800a408:	f7ff fc9d 	bl	8009d46 <get_fat>
 800a40c:	6178      	str	r0, [r7, #20]
 800a40e:	697b      	ldr	r3, [r7, #20]
 800a410:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a414:	d101      	bne.n	800a41a <dir_sdi+0x90>
 800a416:	2301      	movs	r3, #1
 800a418:	e03c      	b.n	800a494 <dir_sdi+0x10a>
 800a41a:	697b      	ldr	r3, [r7, #20]
 800a41c:	2b01      	cmp	r3, #1
 800a41e:	d904      	bls.n	800a42a <dir_sdi+0xa0>
 800a420:	693b      	ldr	r3, [r7, #16]
 800a422:	69db      	ldr	r3, [r3, #28]
 800a424:	697a      	ldr	r2, [r7, #20]
 800a426:	429a      	cmp	r2, r3
 800a428:	d301      	bcc.n	800a42e <dir_sdi+0xa4>
 800a42a:	2302      	movs	r3, #2
 800a42c:	e032      	b.n	800a494 <dir_sdi+0x10a>
 800a42e:	683a      	ldr	r2, [r7, #0]
 800a430:	68fb      	ldr	r3, [r7, #12]
 800a432:	1ad3      	subs	r3, r2, r3
 800a434:	603b      	str	r3, [r7, #0]
 800a436:	683a      	ldr	r2, [r7, #0]
 800a438:	68fb      	ldr	r3, [r7, #12]
 800a43a:	429a      	cmp	r2, r3
 800a43c:	d2e1      	bcs.n	800a402 <dir_sdi+0x78>
 800a43e:	6979      	ldr	r1, [r7, #20]
 800a440:	6938      	ldr	r0, [r7, #16]
 800a442:	f7ff fc61 	bl	8009d08 <clust2sect>
 800a446:	4602      	mov	r2, r0
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	61da      	str	r2, [r3, #28]
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	697a      	ldr	r2, [r7, #20]
 800a450:	619a      	str	r2, [r3, #24]
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	69db      	ldr	r3, [r3, #28]
 800a456:	2b00      	cmp	r3, #0
 800a458:	d101      	bne.n	800a45e <dir_sdi+0xd4>
 800a45a:	2302      	movs	r3, #2
 800a45c:	e01a      	b.n	800a494 <dir_sdi+0x10a>
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	69da      	ldr	r2, [r3, #28]
 800a462:	693b      	ldr	r3, [r7, #16]
 800a464:	899b      	ldrh	r3, [r3, #12]
 800a466:	4619      	mov	r1, r3
 800a468:	683b      	ldr	r3, [r7, #0]
 800a46a:	fbb3 f3f1 	udiv	r3, r3, r1
 800a46e:	441a      	add	r2, r3
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	61da      	str	r2, [r3, #28]
 800a474:	693b      	ldr	r3, [r7, #16]
 800a476:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800a47a:	693b      	ldr	r3, [r7, #16]
 800a47c:	899b      	ldrh	r3, [r3, #12]
 800a47e:	461a      	mov	r2, r3
 800a480:	683b      	ldr	r3, [r7, #0]
 800a482:	fbb3 f0f2 	udiv	r0, r3, r2
 800a486:	fb00 f202 	mul.w	r2, r0, r2
 800a48a:	1a9b      	subs	r3, r3, r2
 800a48c:	18ca      	adds	r2, r1, r3
 800a48e:	687b      	ldr	r3, [r7, #4]
 800a490:	621a      	str	r2, [r3, #32]
 800a492:	2300      	movs	r3, #0
 800a494:	4618      	mov	r0, r3
 800a496:	3718      	adds	r7, #24
 800a498:	46bd      	mov	sp, r7
 800a49a:	bd80      	pop	{r7, pc}

0800a49c <dir_next>:
 800a49c:	b580      	push	{r7, lr}
 800a49e:	b086      	sub	sp, #24
 800a4a0:	af00      	add	r7, sp, #0
 800a4a2:	6078      	str	r0, [r7, #4]
 800a4a4:	6039      	str	r1, [r7, #0]
 800a4a6:	687b      	ldr	r3, [r7, #4]
 800a4a8:	681b      	ldr	r3, [r3, #0]
 800a4aa:	60fb      	str	r3, [r7, #12]
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	695b      	ldr	r3, [r3, #20]
 800a4b0:	3320      	adds	r3, #32
 800a4b2:	60bb      	str	r3, [r7, #8]
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	69db      	ldr	r3, [r3, #28]
 800a4b8:	2b00      	cmp	r3, #0
 800a4ba:	d003      	beq.n	800a4c4 <dir_next+0x28>
 800a4bc:	68bb      	ldr	r3, [r7, #8]
 800a4be:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800a4c2:	d301      	bcc.n	800a4c8 <dir_next+0x2c>
 800a4c4:	2304      	movs	r3, #4
 800a4c6:	e0bb      	b.n	800a640 <dir_next+0x1a4>
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	899b      	ldrh	r3, [r3, #12]
 800a4cc:	461a      	mov	r2, r3
 800a4ce:	68bb      	ldr	r3, [r7, #8]
 800a4d0:	fbb3 f1f2 	udiv	r1, r3, r2
 800a4d4:	fb01 f202 	mul.w	r2, r1, r2
 800a4d8:	1a9b      	subs	r3, r3, r2
 800a4da:	2b00      	cmp	r3, #0
 800a4dc:	f040 809d 	bne.w	800a61a <dir_next+0x17e>
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	69db      	ldr	r3, [r3, #28]
 800a4e4:	1c5a      	adds	r2, r3, #1
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	61da      	str	r2, [r3, #28]
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	699b      	ldr	r3, [r3, #24]
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	d10b      	bne.n	800a50a <dir_next+0x6e>
 800a4f2:	68bb      	ldr	r3, [r7, #8]
 800a4f4:	095b      	lsrs	r3, r3, #5
 800a4f6:	68fa      	ldr	r2, [r7, #12]
 800a4f8:	8912      	ldrh	r2, [r2, #8]
 800a4fa:	4293      	cmp	r3, r2
 800a4fc:	f0c0 808d 	bcc.w	800a61a <dir_next+0x17e>
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	2200      	movs	r2, #0
 800a504:	61da      	str	r2, [r3, #28]
 800a506:	2304      	movs	r3, #4
 800a508:	e09a      	b.n	800a640 <dir_next+0x1a4>
 800a50a:	68fb      	ldr	r3, [r7, #12]
 800a50c:	899b      	ldrh	r3, [r3, #12]
 800a50e:	461a      	mov	r2, r3
 800a510:	68bb      	ldr	r3, [r7, #8]
 800a512:	fbb3 f3f2 	udiv	r3, r3, r2
 800a516:	68fa      	ldr	r2, [r7, #12]
 800a518:	8952      	ldrh	r2, [r2, #10]
 800a51a:	3a01      	subs	r2, #1
 800a51c:	4013      	ands	r3, r2
 800a51e:	2b00      	cmp	r3, #0
 800a520:	d17b      	bne.n	800a61a <dir_next+0x17e>
 800a522:	687a      	ldr	r2, [r7, #4]
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	699b      	ldr	r3, [r3, #24]
 800a528:	4619      	mov	r1, r3
 800a52a:	4610      	mov	r0, r2
 800a52c:	f7ff fc0b 	bl	8009d46 <get_fat>
 800a530:	6178      	str	r0, [r7, #20]
 800a532:	697b      	ldr	r3, [r7, #20]
 800a534:	2b01      	cmp	r3, #1
 800a536:	d801      	bhi.n	800a53c <dir_next+0xa0>
 800a538:	2302      	movs	r3, #2
 800a53a:	e081      	b.n	800a640 <dir_next+0x1a4>
 800a53c:	697b      	ldr	r3, [r7, #20]
 800a53e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a542:	d101      	bne.n	800a548 <dir_next+0xac>
 800a544:	2301      	movs	r3, #1
 800a546:	e07b      	b.n	800a640 <dir_next+0x1a4>
 800a548:	68fb      	ldr	r3, [r7, #12]
 800a54a:	69db      	ldr	r3, [r3, #28]
 800a54c:	697a      	ldr	r2, [r7, #20]
 800a54e:	429a      	cmp	r2, r3
 800a550:	d359      	bcc.n	800a606 <dir_next+0x16a>
 800a552:	683b      	ldr	r3, [r7, #0]
 800a554:	2b00      	cmp	r3, #0
 800a556:	d104      	bne.n	800a562 <dir_next+0xc6>
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	2200      	movs	r2, #0
 800a55c:	61da      	str	r2, [r3, #28]
 800a55e:	2304      	movs	r3, #4
 800a560:	e06e      	b.n	800a640 <dir_next+0x1a4>
 800a562:	687a      	ldr	r2, [r7, #4]
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	699b      	ldr	r3, [r3, #24]
 800a568:	4619      	mov	r1, r3
 800a56a:	4610      	mov	r0, r2
 800a56c:	f7ff fe3d 	bl	800a1ea <create_chain>
 800a570:	6178      	str	r0, [r7, #20]
 800a572:	697b      	ldr	r3, [r7, #20]
 800a574:	2b00      	cmp	r3, #0
 800a576:	d101      	bne.n	800a57c <dir_next+0xe0>
 800a578:	2307      	movs	r3, #7
 800a57a:	e061      	b.n	800a640 <dir_next+0x1a4>
 800a57c:	697b      	ldr	r3, [r7, #20]
 800a57e:	2b01      	cmp	r3, #1
 800a580:	d101      	bne.n	800a586 <dir_next+0xea>
 800a582:	2302      	movs	r3, #2
 800a584:	e05c      	b.n	800a640 <dir_next+0x1a4>
 800a586:	697b      	ldr	r3, [r7, #20]
 800a588:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a58c:	d101      	bne.n	800a592 <dir_next+0xf6>
 800a58e:	2301      	movs	r3, #1
 800a590:	e056      	b.n	800a640 <dir_next+0x1a4>
 800a592:	68f8      	ldr	r0, [r7, #12]
 800a594:	f7ff fad6 	bl	8009b44 <sync_window>
 800a598:	4603      	mov	r3, r0
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d001      	beq.n	800a5a2 <dir_next+0x106>
 800a59e:	2301      	movs	r3, #1
 800a5a0:	e04e      	b.n	800a640 <dir_next+0x1a4>
 800a5a2:	68fb      	ldr	r3, [r7, #12]
 800a5a4:	f103 0038 	add.w	r0, r3, #56	@ 0x38
 800a5a8:	68fb      	ldr	r3, [r7, #12]
 800a5aa:	899b      	ldrh	r3, [r3, #12]
 800a5ac:	461a      	mov	r2, r3
 800a5ae:	2100      	movs	r1, #0
 800a5b0:	f7ff f8ff 	bl	80097b2 <mem_set>
 800a5b4:	2300      	movs	r3, #0
 800a5b6:	613b      	str	r3, [r7, #16]
 800a5b8:	6979      	ldr	r1, [r7, #20]
 800a5ba:	68f8      	ldr	r0, [r7, #12]
 800a5bc:	f7ff fba4 	bl	8009d08 <clust2sect>
 800a5c0:	4602      	mov	r2, r0
 800a5c2:	68fb      	ldr	r3, [r7, #12]
 800a5c4:	635a      	str	r2, [r3, #52]	@ 0x34
 800a5c6:	e012      	b.n	800a5ee <dir_next+0x152>
 800a5c8:	68fb      	ldr	r3, [r7, #12]
 800a5ca:	2201      	movs	r2, #1
 800a5cc:	70da      	strb	r2, [r3, #3]
 800a5ce:	68f8      	ldr	r0, [r7, #12]
 800a5d0:	f7ff fab8 	bl	8009b44 <sync_window>
 800a5d4:	4603      	mov	r3, r0
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d001      	beq.n	800a5de <dir_next+0x142>
 800a5da:	2301      	movs	r3, #1
 800a5dc:	e030      	b.n	800a640 <dir_next+0x1a4>
 800a5de:	693b      	ldr	r3, [r7, #16]
 800a5e0:	3301      	adds	r3, #1
 800a5e2:	613b      	str	r3, [r7, #16]
 800a5e4:	68fb      	ldr	r3, [r7, #12]
 800a5e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a5e8:	1c5a      	adds	r2, r3, #1
 800a5ea:	68fb      	ldr	r3, [r7, #12]
 800a5ec:	635a      	str	r2, [r3, #52]	@ 0x34
 800a5ee:	68fb      	ldr	r3, [r7, #12]
 800a5f0:	895b      	ldrh	r3, [r3, #10]
 800a5f2:	461a      	mov	r2, r3
 800a5f4:	693b      	ldr	r3, [r7, #16]
 800a5f6:	4293      	cmp	r3, r2
 800a5f8:	d3e6      	bcc.n	800a5c8 <dir_next+0x12c>
 800a5fa:	68fb      	ldr	r3, [r7, #12]
 800a5fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a5fe:	693b      	ldr	r3, [r7, #16]
 800a600:	1ad2      	subs	r2, r2, r3
 800a602:	68fb      	ldr	r3, [r7, #12]
 800a604:	635a      	str	r2, [r3, #52]	@ 0x34
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	697a      	ldr	r2, [r7, #20]
 800a60a:	619a      	str	r2, [r3, #24]
 800a60c:	6979      	ldr	r1, [r7, #20]
 800a60e:	68f8      	ldr	r0, [r7, #12]
 800a610:	f7ff fb7a 	bl	8009d08 <clust2sect>
 800a614:	4602      	mov	r2, r0
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	61da      	str	r2, [r3, #28]
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	68ba      	ldr	r2, [r7, #8]
 800a61e:	615a      	str	r2, [r3, #20]
 800a620:	68fb      	ldr	r3, [r7, #12]
 800a622:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800a626:	68fb      	ldr	r3, [r7, #12]
 800a628:	899b      	ldrh	r3, [r3, #12]
 800a62a:	461a      	mov	r2, r3
 800a62c:	68bb      	ldr	r3, [r7, #8]
 800a62e:	fbb3 f0f2 	udiv	r0, r3, r2
 800a632:	fb00 f202 	mul.w	r2, r0, r2
 800a636:	1a9b      	subs	r3, r3, r2
 800a638:	18ca      	adds	r2, r1, r3
 800a63a:	687b      	ldr	r3, [r7, #4]
 800a63c:	621a      	str	r2, [r3, #32]
 800a63e:	2300      	movs	r3, #0
 800a640:	4618      	mov	r0, r3
 800a642:	3718      	adds	r7, #24
 800a644:	46bd      	mov	sp, r7
 800a646:	bd80      	pop	{r7, pc}

0800a648 <dir_alloc>:
 800a648:	b580      	push	{r7, lr}
 800a64a:	b086      	sub	sp, #24
 800a64c:	af00      	add	r7, sp, #0
 800a64e:	6078      	str	r0, [r7, #4]
 800a650:	6039      	str	r1, [r7, #0]
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	681b      	ldr	r3, [r3, #0]
 800a656:	60fb      	str	r3, [r7, #12]
 800a658:	2100      	movs	r1, #0
 800a65a:	6878      	ldr	r0, [r7, #4]
 800a65c:	f7ff fe95 	bl	800a38a <dir_sdi>
 800a660:	4603      	mov	r3, r0
 800a662:	75fb      	strb	r3, [r7, #23]
 800a664:	7dfb      	ldrb	r3, [r7, #23]
 800a666:	2b00      	cmp	r3, #0
 800a668:	d12b      	bne.n	800a6c2 <dir_alloc+0x7a>
 800a66a:	2300      	movs	r3, #0
 800a66c:	613b      	str	r3, [r7, #16]
 800a66e:	687b      	ldr	r3, [r7, #4]
 800a670:	69db      	ldr	r3, [r3, #28]
 800a672:	4619      	mov	r1, r3
 800a674:	68f8      	ldr	r0, [r7, #12]
 800a676:	f7ff faa9 	bl	8009bcc <move_window>
 800a67a:	4603      	mov	r3, r0
 800a67c:	75fb      	strb	r3, [r7, #23]
 800a67e:	7dfb      	ldrb	r3, [r7, #23]
 800a680:	2b00      	cmp	r3, #0
 800a682:	d11d      	bne.n	800a6c0 <dir_alloc+0x78>
 800a684:	687b      	ldr	r3, [r7, #4]
 800a686:	6a1b      	ldr	r3, [r3, #32]
 800a688:	781b      	ldrb	r3, [r3, #0]
 800a68a:	2be5      	cmp	r3, #229	@ 0xe5
 800a68c:	d004      	beq.n	800a698 <dir_alloc+0x50>
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	6a1b      	ldr	r3, [r3, #32]
 800a692:	781b      	ldrb	r3, [r3, #0]
 800a694:	2b00      	cmp	r3, #0
 800a696:	d107      	bne.n	800a6a8 <dir_alloc+0x60>
 800a698:	693b      	ldr	r3, [r7, #16]
 800a69a:	3301      	adds	r3, #1
 800a69c:	613b      	str	r3, [r7, #16]
 800a69e:	693a      	ldr	r2, [r7, #16]
 800a6a0:	683b      	ldr	r3, [r7, #0]
 800a6a2:	429a      	cmp	r2, r3
 800a6a4:	d102      	bne.n	800a6ac <dir_alloc+0x64>
 800a6a6:	e00c      	b.n	800a6c2 <dir_alloc+0x7a>
 800a6a8:	2300      	movs	r3, #0
 800a6aa:	613b      	str	r3, [r7, #16]
 800a6ac:	2101      	movs	r1, #1
 800a6ae:	6878      	ldr	r0, [r7, #4]
 800a6b0:	f7ff fef4 	bl	800a49c <dir_next>
 800a6b4:	4603      	mov	r3, r0
 800a6b6:	75fb      	strb	r3, [r7, #23]
 800a6b8:	7dfb      	ldrb	r3, [r7, #23]
 800a6ba:	2b00      	cmp	r3, #0
 800a6bc:	d0d7      	beq.n	800a66e <dir_alloc+0x26>
 800a6be:	e000      	b.n	800a6c2 <dir_alloc+0x7a>
 800a6c0:	bf00      	nop
 800a6c2:	7dfb      	ldrb	r3, [r7, #23]
 800a6c4:	2b04      	cmp	r3, #4
 800a6c6:	d101      	bne.n	800a6cc <dir_alloc+0x84>
 800a6c8:	2307      	movs	r3, #7
 800a6ca:	75fb      	strb	r3, [r7, #23]
 800a6cc:	7dfb      	ldrb	r3, [r7, #23]
 800a6ce:	4618      	mov	r0, r3
 800a6d0:	3718      	adds	r7, #24
 800a6d2:	46bd      	mov	sp, r7
 800a6d4:	bd80      	pop	{r7, pc}

0800a6d6 <ld_clust>:
 800a6d6:	b580      	push	{r7, lr}
 800a6d8:	b084      	sub	sp, #16
 800a6da:	af00      	add	r7, sp, #0
 800a6dc:	6078      	str	r0, [r7, #4]
 800a6de:	6039      	str	r1, [r7, #0]
 800a6e0:	683b      	ldr	r3, [r7, #0]
 800a6e2:	331a      	adds	r3, #26
 800a6e4:	4618      	mov	r0, r3
 800a6e6:	f7fe ffc1 	bl	800966c <ld_word>
 800a6ea:	4603      	mov	r3, r0
 800a6ec:	60fb      	str	r3, [r7, #12]
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	781b      	ldrb	r3, [r3, #0]
 800a6f2:	2b03      	cmp	r3, #3
 800a6f4:	d109      	bne.n	800a70a <ld_clust+0x34>
 800a6f6:	683b      	ldr	r3, [r7, #0]
 800a6f8:	3314      	adds	r3, #20
 800a6fa:	4618      	mov	r0, r3
 800a6fc:	f7fe ffb6 	bl	800966c <ld_word>
 800a700:	4603      	mov	r3, r0
 800a702:	041b      	lsls	r3, r3, #16
 800a704:	68fa      	ldr	r2, [r7, #12]
 800a706:	4313      	orrs	r3, r2
 800a708:	60fb      	str	r3, [r7, #12]
 800a70a:	68fb      	ldr	r3, [r7, #12]
 800a70c:	4618      	mov	r0, r3
 800a70e:	3710      	adds	r7, #16
 800a710:	46bd      	mov	sp, r7
 800a712:	bd80      	pop	{r7, pc}

0800a714 <st_clust>:
 800a714:	b580      	push	{r7, lr}
 800a716:	b084      	sub	sp, #16
 800a718:	af00      	add	r7, sp, #0
 800a71a:	60f8      	str	r0, [r7, #12]
 800a71c:	60b9      	str	r1, [r7, #8]
 800a71e:	607a      	str	r2, [r7, #4]
 800a720:	68bb      	ldr	r3, [r7, #8]
 800a722:	331a      	adds	r3, #26
 800a724:	687a      	ldr	r2, [r7, #4]
 800a726:	b292      	uxth	r2, r2
 800a728:	4611      	mov	r1, r2
 800a72a:	4618      	mov	r0, r3
 800a72c:	f7fe ffd9 	bl	80096e2 <st_word>
 800a730:	68fb      	ldr	r3, [r7, #12]
 800a732:	781b      	ldrb	r3, [r3, #0]
 800a734:	2b03      	cmp	r3, #3
 800a736:	d109      	bne.n	800a74c <st_clust+0x38>
 800a738:	68bb      	ldr	r3, [r7, #8]
 800a73a:	f103 0214 	add.w	r2, r3, #20
 800a73e:	687b      	ldr	r3, [r7, #4]
 800a740:	0c1b      	lsrs	r3, r3, #16
 800a742:	b29b      	uxth	r3, r3
 800a744:	4619      	mov	r1, r3
 800a746:	4610      	mov	r0, r2
 800a748:	f7fe ffcb 	bl	80096e2 <st_word>
 800a74c:	bf00      	nop
 800a74e:	3710      	adds	r7, #16
 800a750:	46bd      	mov	sp, r7
 800a752:	bd80      	pop	{r7, pc}

0800a754 <cmp_lfn>:
 800a754:	b590      	push	{r4, r7, lr}
 800a756:	b087      	sub	sp, #28
 800a758:	af00      	add	r7, sp, #0
 800a75a:	6078      	str	r0, [r7, #4]
 800a75c:	6039      	str	r1, [r7, #0]
 800a75e:	683b      	ldr	r3, [r7, #0]
 800a760:	331a      	adds	r3, #26
 800a762:	4618      	mov	r0, r3
 800a764:	f7fe ff82 	bl	800966c <ld_word>
 800a768:	4603      	mov	r3, r0
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d001      	beq.n	800a772 <cmp_lfn+0x1e>
 800a76e:	2300      	movs	r3, #0
 800a770:	e059      	b.n	800a826 <cmp_lfn+0xd2>
 800a772:	683b      	ldr	r3, [r7, #0]
 800a774:	781b      	ldrb	r3, [r3, #0]
 800a776:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800a77a:	1e5a      	subs	r2, r3, #1
 800a77c:	4613      	mov	r3, r2
 800a77e:	005b      	lsls	r3, r3, #1
 800a780:	4413      	add	r3, r2
 800a782:	009b      	lsls	r3, r3, #2
 800a784:	4413      	add	r3, r2
 800a786:	617b      	str	r3, [r7, #20]
 800a788:	2301      	movs	r3, #1
 800a78a:	81fb      	strh	r3, [r7, #14]
 800a78c:	2300      	movs	r3, #0
 800a78e:	613b      	str	r3, [r7, #16]
 800a790:	e033      	b.n	800a7fa <cmp_lfn+0xa6>
 800a792:	4a27      	ldr	r2, [pc, #156]	@ (800a830 <cmp_lfn+0xdc>)
 800a794:	693b      	ldr	r3, [r7, #16]
 800a796:	4413      	add	r3, r2
 800a798:	781b      	ldrb	r3, [r3, #0]
 800a79a:	461a      	mov	r2, r3
 800a79c:	683b      	ldr	r3, [r7, #0]
 800a79e:	4413      	add	r3, r2
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	f7fe ff63 	bl	800966c <ld_word>
 800a7a6:	4603      	mov	r3, r0
 800a7a8:	81bb      	strh	r3, [r7, #12]
 800a7aa:	89fb      	ldrh	r3, [r7, #14]
 800a7ac:	2b00      	cmp	r3, #0
 800a7ae:	d01a      	beq.n	800a7e6 <cmp_lfn+0x92>
 800a7b0:	697b      	ldr	r3, [r7, #20]
 800a7b2:	2bfe      	cmp	r3, #254	@ 0xfe
 800a7b4:	d812      	bhi.n	800a7dc <cmp_lfn+0x88>
 800a7b6:	89bb      	ldrh	r3, [r7, #12]
 800a7b8:	4618      	mov	r0, r3
 800a7ba:	f001 fd3d 	bl	800c238 <ff_wtoupper>
 800a7be:	4603      	mov	r3, r0
 800a7c0:	461c      	mov	r4, r3
 800a7c2:	697b      	ldr	r3, [r7, #20]
 800a7c4:	1c5a      	adds	r2, r3, #1
 800a7c6:	617a      	str	r2, [r7, #20]
 800a7c8:	005b      	lsls	r3, r3, #1
 800a7ca:	687a      	ldr	r2, [r7, #4]
 800a7cc:	4413      	add	r3, r2
 800a7ce:	881b      	ldrh	r3, [r3, #0]
 800a7d0:	4618      	mov	r0, r3
 800a7d2:	f001 fd31 	bl	800c238 <ff_wtoupper>
 800a7d6:	4603      	mov	r3, r0
 800a7d8:	429c      	cmp	r4, r3
 800a7da:	d001      	beq.n	800a7e0 <cmp_lfn+0x8c>
 800a7dc:	2300      	movs	r3, #0
 800a7de:	e022      	b.n	800a826 <cmp_lfn+0xd2>
 800a7e0:	89bb      	ldrh	r3, [r7, #12]
 800a7e2:	81fb      	strh	r3, [r7, #14]
 800a7e4:	e006      	b.n	800a7f4 <cmp_lfn+0xa0>
 800a7e6:	89bb      	ldrh	r3, [r7, #12]
 800a7e8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a7ec:	4293      	cmp	r3, r2
 800a7ee:	d001      	beq.n	800a7f4 <cmp_lfn+0xa0>
 800a7f0:	2300      	movs	r3, #0
 800a7f2:	e018      	b.n	800a826 <cmp_lfn+0xd2>
 800a7f4:	693b      	ldr	r3, [r7, #16]
 800a7f6:	3301      	adds	r3, #1
 800a7f8:	613b      	str	r3, [r7, #16]
 800a7fa:	693b      	ldr	r3, [r7, #16]
 800a7fc:	2b0c      	cmp	r3, #12
 800a7fe:	d9c8      	bls.n	800a792 <cmp_lfn+0x3e>
 800a800:	683b      	ldr	r3, [r7, #0]
 800a802:	781b      	ldrb	r3, [r3, #0]
 800a804:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a808:	2b00      	cmp	r3, #0
 800a80a:	d00b      	beq.n	800a824 <cmp_lfn+0xd0>
 800a80c:	89fb      	ldrh	r3, [r7, #14]
 800a80e:	2b00      	cmp	r3, #0
 800a810:	d008      	beq.n	800a824 <cmp_lfn+0xd0>
 800a812:	697b      	ldr	r3, [r7, #20]
 800a814:	005b      	lsls	r3, r3, #1
 800a816:	687a      	ldr	r2, [r7, #4]
 800a818:	4413      	add	r3, r2
 800a81a:	881b      	ldrh	r3, [r3, #0]
 800a81c:	2b00      	cmp	r3, #0
 800a81e:	d001      	beq.n	800a824 <cmp_lfn+0xd0>
 800a820:	2300      	movs	r3, #0
 800a822:	e000      	b.n	800a826 <cmp_lfn+0xd2>
 800a824:	2301      	movs	r3, #1
 800a826:	4618      	mov	r0, r3
 800a828:	371c      	adds	r7, #28
 800a82a:	46bd      	mov	sp, r7
 800a82c:	bd90      	pop	{r4, r7, pc}
 800a82e:	bf00      	nop
 800a830:	0800ce38 	.word	0x0800ce38

0800a834 <put_lfn>:
 800a834:	b580      	push	{r7, lr}
 800a836:	b088      	sub	sp, #32
 800a838:	af00      	add	r7, sp, #0
 800a83a:	60f8      	str	r0, [r7, #12]
 800a83c:	60b9      	str	r1, [r7, #8]
 800a83e:	4611      	mov	r1, r2
 800a840:	461a      	mov	r2, r3
 800a842:	460b      	mov	r3, r1
 800a844:	71fb      	strb	r3, [r7, #7]
 800a846:	4613      	mov	r3, r2
 800a848:	71bb      	strb	r3, [r7, #6]
 800a84a:	68bb      	ldr	r3, [r7, #8]
 800a84c:	330d      	adds	r3, #13
 800a84e:	79ba      	ldrb	r2, [r7, #6]
 800a850:	701a      	strb	r2, [r3, #0]
 800a852:	68bb      	ldr	r3, [r7, #8]
 800a854:	330b      	adds	r3, #11
 800a856:	220f      	movs	r2, #15
 800a858:	701a      	strb	r2, [r3, #0]
 800a85a:	68bb      	ldr	r3, [r7, #8]
 800a85c:	330c      	adds	r3, #12
 800a85e:	2200      	movs	r2, #0
 800a860:	701a      	strb	r2, [r3, #0]
 800a862:	68bb      	ldr	r3, [r7, #8]
 800a864:	331a      	adds	r3, #26
 800a866:	2100      	movs	r1, #0
 800a868:	4618      	mov	r0, r3
 800a86a:	f7fe ff3a 	bl	80096e2 <st_word>
 800a86e:	79fb      	ldrb	r3, [r7, #7]
 800a870:	1e5a      	subs	r2, r3, #1
 800a872:	4613      	mov	r3, r2
 800a874:	005b      	lsls	r3, r3, #1
 800a876:	4413      	add	r3, r2
 800a878:	009b      	lsls	r3, r3, #2
 800a87a:	4413      	add	r3, r2
 800a87c:	61fb      	str	r3, [r7, #28]
 800a87e:	2300      	movs	r3, #0
 800a880:	82fb      	strh	r3, [r7, #22]
 800a882:	2300      	movs	r3, #0
 800a884:	61bb      	str	r3, [r7, #24]
 800a886:	8afb      	ldrh	r3, [r7, #22]
 800a888:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a88c:	4293      	cmp	r3, r2
 800a88e:	d007      	beq.n	800a8a0 <put_lfn+0x6c>
 800a890:	69fb      	ldr	r3, [r7, #28]
 800a892:	1c5a      	adds	r2, r3, #1
 800a894:	61fa      	str	r2, [r7, #28]
 800a896:	005b      	lsls	r3, r3, #1
 800a898:	68fa      	ldr	r2, [r7, #12]
 800a89a:	4413      	add	r3, r2
 800a89c:	881b      	ldrh	r3, [r3, #0]
 800a89e:	82fb      	strh	r3, [r7, #22]
 800a8a0:	4a17      	ldr	r2, [pc, #92]	@ (800a900 <put_lfn+0xcc>)
 800a8a2:	69bb      	ldr	r3, [r7, #24]
 800a8a4:	4413      	add	r3, r2
 800a8a6:	781b      	ldrb	r3, [r3, #0]
 800a8a8:	461a      	mov	r2, r3
 800a8aa:	68bb      	ldr	r3, [r7, #8]
 800a8ac:	4413      	add	r3, r2
 800a8ae:	8afa      	ldrh	r2, [r7, #22]
 800a8b0:	4611      	mov	r1, r2
 800a8b2:	4618      	mov	r0, r3
 800a8b4:	f7fe ff15 	bl	80096e2 <st_word>
 800a8b8:	8afb      	ldrh	r3, [r7, #22]
 800a8ba:	2b00      	cmp	r3, #0
 800a8bc:	d102      	bne.n	800a8c4 <put_lfn+0x90>
 800a8be:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a8c2:	82fb      	strh	r3, [r7, #22]
 800a8c4:	69bb      	ldr	r3, [r7, #24]
 800a8c6:	3301      	adds	r3, #1
 800a8c8:	61bb      	str	r3, [r7, #24]
 800a8ca:	69bb      	ldr	r3, [r7, #24]
 800a8cc:	2b0c      	cmp	r3, #12
 800a8ce:	d9da      	bls.n	800a886 <put_lfn+0x52>
 800a8d0:	8afb      	ldrh	r3, [r7, #22]
 800a8d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a8d6:	4293      	cmp	r3, r2
 800a8d8:	d006      	beq.n	800a8e8 <put_lfn+0xb4>
 800a8da:	69fb      	ldr	r3, [r7, #28]
 800a8dc:	005b      	lsls	r3, r3, #1
 800a8de:	68fa      	ldr	r2, [r7, #12]
 800a8e0:	4413      	add	r3, r2
 800a8e2:	881b      	ldrh	r3, [r3, #0]
 800a8e4:	2b00      	cmp	r3, #0
 800a8e6:	d103      	bne.n	800a8f0 <put_lfn+0xbc>
 800a8e8:	79fb      	ldrb	r3, [r7, #7]
 800a8ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800a8ee:	71fb      	strb	r3, [r7, #7]
 800a8f0:	68bb      	ldr	r3, [r7, #8]
 800a8f2:	79fa      	ldrb	r2, [r7, #7]
 800a8f4:	701a      	strb	r2, [r3, #0]
 800a8f6:	bf00      	nop
 800a8f8:	3720      	adds	r7, #32
 800a8fa:	46bd      	mov	sp, r7
 800a8fc:	bd80      	pop	{r7, pc}
 800a8fe:	bf00      	nop
 800a900:	0800ce38 	.word	0x0800ce38

0800a904 <gen_numname>:
 800a904:	b580      	push	{r7, lr}
 800a906:	b08c      	sub	sp, #48	@ 0x30
 800a908:	af00      	add	r7, sp, #0
 800a90a:	60f8      	str	r0, [r7, #12]
 800a90c:	60b9      	str	r1, [r7, #8]
 800a90e:	607a      	str	r2, [r7, #4]
 800a910:	603b      	str	r3, [r7, #0]
 800a912:	220b      	movs	r2, #11
 800a914:	68b9      	ldr	r1, [r7, #8]
 800a916:	68f8      	ldr	r0, [r7, #12]
 800a918:	f7fe ff2a 	bl	8009770 <mem_cpy>
 800a91c:	683b      	ldr	r3, [r7, #0]
 800a91e:	2b05      	cmp	r3, #5
 800a920:	d92b      	bls.n	800a97a <gen_numname+0x76>
 800a922:	683b      	ldr	r3, [r7, #0]
 800a924:	61fb      	str	r3, [r7, #28]
 800a926:	e022      	b.n	800a96e <gen_numname+0x6a>
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	1c9a      	adds	r2, r3, #2
 800a92c:	607a      	str	r2, [r7, #4]
 800a92e:	881b      	ldrh	r3, [r3, #0]
 800a930:	847b      	strh	r3, [r7, #34]	@ 0x22
 800a932:	2300      	movs	r3, #0
 800a934:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a936:	e017      	b.n	800a968 <gen_numname+0x64>
 800a938:	69fb      	ldr	r3, [r7, #28]
 800a93a:	005a      	lsls	r2, r3, #1
 800a93c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800a93e:	f003 0301 	and.w	r3, r3, #1
 800a942:	4413      	add	r3, r2
 800a944:	61fb      	str	r3, [r7, #28]
 800a946:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800a948:	085b      	lsrs	r3, r3, #1
 800a94a:	847b      	strh	r3, [r7, #34]	@ 0x22
 800a94c:	69fb      	ldr	r3, [r7, #28]
 800a94e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800a952:	2b00      	cmp	r3, #0
 800a954:	d005      	beq.n	800a962 <gen_numname+0x5e>
 800a956:	69fb      	ldr	r3, [r7, #28]
 800a958:	f483 3388 	eor.w	r3, r3, #69632	@ 0x11000
 800a95c:	f083 0321 	eor.w	r3, r3, #33	@ 0x21
 800a960:	61fb      	str	r3, [r7, #28]
 800a962:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a964:	3301      	adds	r3, #1
 800a966:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a968:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a96a:	2b0f      	cmp	r3, #15
 800a96c:	d9e4      	bls.n	800a938 <gen_numname+0x34>
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	881b      	ldrh	r3, [r3, #0]
 800a972:	2b00      	cmp	r3, #0
 800a974:	d1d8      	bne.n	800a928 <gen_numname+0x24>
 800a976:	69fb      	ldr	r3, [r7, #28]
 800a978:	603b      	str	r3, [r7, #0]
 800a97a:	2307      	movs	r3, #7
 800a97c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a97e:	683b      	ldr	r3, [r7, #0]
 800a980:	b2db      	uxtb	r3, r3
 800a982:	f003 030f 	and.w	r3, r3, #15
 800a986:	b2db      	uxtb	r3, r3
 800a988:	3330      	adds	r3, #48	@ 0x30
 800a98a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800a98e:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800a992:	2b39      	cmp	r3, #57	@ 0x39
 800a994:	d904      	bls.n	800a9a0 <gen_numname+0x9c>
 800a996:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800a99a:	3307      	adds	r3, #7
 800a99c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800a9a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9a2:	1e5a      	subs	r2, r3, #1
 800a9a4:	62ba      	str	r2, [r7, #40]	@ 0x28
 800a9a6:	3330      	adds	r3, #48	@ 0x30
 800a9a8:	443b      	add	r3, r7
 800a9aa:	f897 202f 	ldrb.w	r2, [r7, #47]	@ 0x2f
 800a9ae:	f803 2c1c 	strb.w	r2, [r3, #-28]
 800a9b2:	683b      	ldr	r3, [r7, #0]
 800a9b4:	091b      	lsrs	r3, r3, #4
 800a9b6:	603b      	str	r3, [r7, #0]
 800a9b8:	683b      	ldr	r3, [r7, #0]
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	d1df      	bne.n	800a97e <gen_numname+0x7a>
 800a9be:	f107 0214 	add.w	r2, r7, #20
 800a9c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9c4:	4413      	add	r3, r2
 800a9c6:	227e      	movs	r2, #126	@ 0x7e
 800a9c8:	701a      	strb	r2, [r3, #0]
 800a9ca:	2300      	movs	r3, #0
 800a9cc:	627b      	str	r3, [r7, #36]	@ 0x24
 800a9ce:	e002      	b.n	800a9d6 <gen_numname+0xd2>
 800a9d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9d2:	3301      	adds	r3, #1
 800a9d4:	627b      	str	r3, [r7, #36]	@ 0x24
 800a9d6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a9d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9da:	429a      	cmp	r2, r3
 800a9dc:	d205      	bcs.n	800a9ea <gen_numname+0xe6>
 800a9de:	68fa      	ldr	r2, [r7, #12]
 800a9e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a9e2:	4413      	add	r3, r2
 800a9e4:	781b      	ldrb	r3, [r3, #0]
 800a9e6:	2b20      	cmp	r3, #32
 800a9e8:	d1f2      	bne.n	800a9d0 <gen_numname+0xcc>
 800a9ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9ec:	2b07      	cmp	r3, #7
 800a9ee:	d807      	bhi.n	800aa00 <gen_numname+0xfc>
 800a9f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a9f2:	1c5a      	adds	r2, r3, #1
 800a9f4:	62ba      	str	r2, [r7, #40]	@ 0x28
 800a9f6:	3330      	adds	r3, #48	@ 0x30
 800a9f8:	443b      	add	r3, r7
 800a9fa:	f813 1c1c 	ldrb.w	r1, [r3, #-28]
 800a9fe:	e000      	b.n	800aa02 <gen_numname+0xfe>
 800aa00:	2120      	movs	r1, #32
 800aa02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa04:	1c5a      	adds	r2, r3, #1
 800aa06:	627a      	str	r2, [r7, #36]	@ 0x24
 800aa08:	68fa      	ldr	r2, [r7, #12]
 800aa0a:	4413      	add	r3, r2
 800aa0c:	460a      	mov	r2, r1
 800aa0e:	701a      	strb	r2, [r3, #0]
 800aa10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa12:	2b07      	cmp	r3, #7
 800aa14:	d9e9      	bls.n	800a9ea <gen_numname+0xe6>
 800aa16:	bf00      	nop
 800aa18:	bf00      	nop
 800aa1a:	3730      	adds	r7, #48	@ 0x30
 800aa1c:	46bd      	mov	sp, r7
 800aa1e:	bd80      	pop	{r7, pc}

0800aa20 <sum_sfn>:
 800aa20:	b480      	push	{r7}
 800aa22:	b085      	sub	sp, #20
 800aa24:	af00      	add	r7, sp, #0
 800aa26:	6078      	str	r0, [r7, #4]
 800aa28:	2300      	movs	r3, #0
 800aa2a:	73fb      	strb	r3, [r7, #15]
 800aa2c:	230b      	movs	r3, #11
 800aa2e:	60bb      	str	r3, [r7, #8]
 800aa30:	7bfb      	ldrb	r3, [r7, #15]
 800aa32:	b2da      	uxtb	r2, r3
 800aa34:	0852      	lsrs	r2, r2, #1
 800aa36:	01db      	lsls	r3, r3, #7
 800aa38:	4313      	orrs	r3, r2
 800aa3a:	b2da      	uxtb	r2, r3
 800aa3c:	687b      	ldr	r3, [r7, #4]
 800aa3e:	1c59      	adds	r1, r3, #1
 800aa40:	6079      	str	r1, [r7, #4]
 800aa42:	781b      	ldrb	r3, [r3, #0]
 800aa44:	4413      	add	r3, r2
 800aa46:	73fb      	strb	r3, [r7, #15]
 800aa48:	68bb      	ldr	r3, [r7, #8]
 800aa4a:	3b01      	subs	r3, #1
 800aa4c:	60bb      	str	r3, [r7, #8]
 800aa4e:	68bb      	ldr	r3, [r7, #8]
 800aa50:	2b00      	cmp	r3, #0
 800aa52:	d1ed      	bne.n	800aa30 <sum_sfn+0x10>
 800aa54:	7bfb      	ldrb	r3, [r7, #15]
 800aa56:	4618      	mov	r0, r3
 800aa58:	3714      	adds	r7, #20
 800aa5a:	46bd      	mov	sp, r7
 800aa5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa60:	4770      	bx	lr

0800aa62 <dir_find>:
 800aa62:	b580      	push	{r7, lr}
 800aa64:	b086      	sub	sp, #24
 800aa66:	af00      	add	r7, sp, #0
 800aa68:	6078      	str	r0, [r7, #4]
 800aa6a:	687b      	ldr	r3, [r7, #4]
 800aa6c:	681b      	ldr	r3, [r3, #0]
 800aa6e:	613b      	str	r3, [r7, #16]
 800aa70:	2100      	movs	r1, #0
 800aa72:	6878      	ldr	r0, [r7, #4]
 800aa74:	f7ff fc89 	bl	800a38a <dir_sdi>
 800aa78:	4603      	mov	r3, r0
 800aa7a:	75fb      	strb	r3, [r7, #23]
 800aa7c:	7dfb      	ldrb	r3, [r7, #23]
 800aa7e:	2b00      	cmp	r3, #0
 800aa80:	d001      	beq.n	800aa86 <dir_find+0x24>
 800aa82:	7dfb      	ldrb	r3, [r7, #23]
 800aa84:	e0a9      	b.n	800abda <dir_find+0x178>
 800aa86:	23ff      	movs	r3, #255	@ 0xff
 800aa88:	753b      	strb	r3, [r7, #20]
 800aa8a:	7d3b      	ldrb	r3, [r7, #20]
 800aa8c:	757b      	strb	r3, [r7, #21]
 800aa8e:	687b      	ldr	r3, [r7, #4]
 800aa90:	f04f 32ff 	mov.w	r2, #4294967295
 800aa94:	631a      	str	r2, [r3, #48]	@ 0x30
 800aa96:	687b      	ldr	r3, [r7, #4]
 800aa98:	69db      	ldr	r3, [r3, #28]
 800aa9a:	4619      	mov	r1, r3
 800aa9c:	6938      	ldr	r0, [r7, #16]
 800aa9e:	f7ff f895 	bl	8009bcc <move_window>
 800aaa2:	4603      	mov	r3, r0
 800aaa4:	75fb      	strb	r3, [r7, #23]
 800aaa6:	7dfb      	ldrb	r3, [r7, #23]
 800aaa8:	2b00      	cmp	r3, #0
 800aaaa:	f040 8090 	bne.w	800abce <dir_find+0x16c>
 800aaae:	687b      	ldr	r3, [r7, #4]
 800aab0:	6a1b      	ldr	r3, [r3, #32]
 800aab2:	781b      	ldrb	r3, [r3, #0]
 800aab4:	75bb      	strb	r3, [r7, #22]
 800aab6:	7dbb      	ldrb	r3, [r7, #22]
 800aab8:	2b00      	cmp	r3, #0
 800aaba:	d102      	bne.n	800aac2 <dir_find+0x60>
 800aabc:	2304      	movs	r3, #4
 800aabe:	75fb      	strb	r3, [r7, #23]
 800aac0:	e08a      	b.n	800abd8 <dir_find+0x176>
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	6a1b      	ldr	r3, [r3, #32]
 800aac6:	330b      	adds	r3, #11
 800aac8:	781b      	ldrb	r3, [r3, #0]
 800aaca:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800aace:	73fb      	strb	r3, [r7, #15]
 800aad0:	687b      	ldr	r3, [r7, #4]
 800aad2:	7bfa      	ldrb	r2, [r7, #15]
 800aad4:	719a      	strb	r2, [r3, #6]
 800aad6:	7dbb      	ldrb	r3, [r7, #22]
 800aad8:	2be5      	cmp	r3, #229	@ 0xe5
 800aada:	d007      	beq.n	800aaec <dir_find+0x8a>
 800aadc:	7bfb      	ldrb	r3, [r7, #15]
 800aade:	f003 0308 	and.w	r3, r3, #8
 800aae2:	2b00      	cmp	r3, #0
 800aae4:	d009      	beq.n	800aafa <dir_find+0x98>
 800aae6:	7bfb      	ldrb	r3, [r7, #15]
 800aae8:	2b0f      	cmp	r3, #15
 800aaea:	d006      	beq.n	800aafa <dir_find+0x98>
 800aaec:	23ff      	movs	r3, #255	@ 0xff
 800aaee:	757b      	strb	r3, [r7, #21]
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	f04f 32ff 	mov.w	r2, #4294967295
 800aaf6:	631a      	str	r2, [r3, #48]	@ 0x30
 800aaf8:	e05e      	b.n	800abb8 <dir_find+0x156>
 800aafa:	7bfb      	ldrb	r3, [r7, #15]
 800aafc:	2b0f      	cmp	r3, #15
 800aafe:	d136      	bne.n	800ab6e <dir_find+0x10c>
 800ab00:	687b      	ldr	r3, [r7, #4]
 800ab02:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 800ab06:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ab0a:	2b00      	cmp	r3, #0
 800ab0c:	d154      	bne.n	800abb8 <dir_find+0x156>
 800ab0e:	7dbb      	ldrb	r3, [r7, #22]
 800ab10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ab14:	2b00      	cmp	r3, #0
 800ab16:	d00d      	beq.n	800ab34 <dir_find+0xd2>
 800ab18:	687b      	ldr	r3, [r7, #4]
 800ab1a:	6a1b      	ldr	r3, [r3, #32]
 800ab1c:	7b5b      	ldrb	r3, [r3, #13]
 800ab1e:	753b      	strb	r3, [r7, #20]
 800ab20:	7dbb      	ldrb	r3, [r7, #22]
 800ab22:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ab26:	75bb      	strb	r3, [r7, #22]
 800ab28:	7dbb      	ldrb	r3, [r7, #22]
 800ab2a:	757b      	strb	r3, [r7, #21]
 800ab2c:	687b      	ldr	r3, [r7, #4]
 800ab2e:	695a      	ldr	r2, [r3, #20]
 800ab30:	687b      	ldr	r3, [r7, #4]
 800ab32:	631a      	str	r2, [r3, #48]	@ 0x30
 800ab34:	7dba      	ldrb	r2, [r7, #22]
 800ab36:	7d7b      	ldrb	r3, [r7, #21]
 800ab38:	429a      	cmp	r2, r3
 800ab3a:	d115      	bne.n	800ab68 <dir_find+0x106>
 800ab3c:	687b      	ldr	r3, [r7, #4]
 800ab3e:	6a1b      	ldr	r3, [r3, #32]
 800ab40:	330d      	adds	r3, #13
 800ab42:	781b      	ldrb	r3, [r3, #0]
 800ab44:	7d3a      	ldrb	r2, [r7, #20]
 800ab46:	429a      	cmp	r2, r3
 800ab48:	d10e      	bne.n	800ab68 <dir_find+0x106>
 800ab4a:	693b      	ldr	r3, [r7, #16]
 800ab4c:	691a      	ldr	r2, [r3, #16]
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	6a1b      	ldr	r3, [r3, #32]
 800ab52:	4619      	mov	r1, r3
 800ab54:	4610      	mov	r0, r2
 800ab56:	f7ff fdfd 	bl	800a754 <cmp_lfn>
 800ab5a:	4603      	mov	r3, r0
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d003      	beq.n	800ab68 <dir_find+0x106>
 800ab60:	7d7b      	ldrb	r3, [r7, #21]
 800ab62:	3b01      	subs	r3, #1
 800ab64:	b2db      	uxtb	r3, r3
 800ab66:	e000      	b.n	800ab6a <dir_find+0x108>
 800ab68:	23ff      	movs	r3, #255	@ 0xff
 800ab6a:	757b      	strb	r3, [r7, #21]
 800ab6c:	e024      	b.n	800abb8 <dir_find+0x156>
 800ab6e:	7d7b      	ldrb	r3, [r7, #21]
 800ab70:	2b00      	cmp	r3, #0
 800ab72:	d109      	bne.n	800ab88 <dir_find+0x126>
 800ab74:	687b      	ldr	r3, [r7, #4]
 800ab76:	6a1b      	ldr	r3, [r3, #32]
 800ab78:	4618      	mov	r0, r3
 800ab7a:	f7ff ff51 	bl	800aa20 <sum_sfn>
 800ab7e:	4603      	mov	r3, r0
 800ab80:	461a      	mov	r2, r3
 800ab82:	7d3b      	ldrb	r3, [r7, #20]
 800ab84:	4293      	cmp	r3, r2
 800ab86:	d024      	beq.n	800abd2 <dir_find+0x170>
 800ab88:	687b      	ldr	r3, [r7, #4]
 800ab8a:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 800ab8e:	f003 0301 	and.w	r3, r3, #1
 800ab92:	2b00      	cmp	r3, #0
 800ab94:	d10a      	bne.n	800abac <dir_find+0x14a>
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	6a18      	ldr	r0, [r3, #32]
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	3324      	adds	r3, #36	@ 0x24
 800ab9e:	220b      	movs	r2, #11
 800aba0:	4619      	mov	r1, r3
 800aba2:	f7fe fe21 	bl	80097e8 <mem_cmp>
 800aba6:	4603      	mov	r3, r0
 800aba8:	2b00      	cmp	r3, #0
 800abaa:	d014      	beq.n	800abd6 <dir_find+0x174>
 800abac:	23ff      	movs	r3, #255	@ 0xff
 800abae:	757b      	strb	r3, [r7, #21]
 800abb0:	687b      	ldr	r3, [r7, #4]
 800abb2:	f04f 32ff 	mov.w	r2, #4294967295
 800abb6:	631a      	str	r2, [r3, #48]	@ 0x30
 800abb8:	2100      	movs	r1, #0
 800abba:	6878      	ldr	r0, [r7, #4]
 800abbc:	f7ff fc6e 	bl	800a49c <dir_next>
 800abc0:	4603      	mov	r3, r0
 800abc2:	75fb      	strb	r3, [r7, #23]
 800abc4:	7dfb      	ldrb	r3, [r7, #23]
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	f43f af65 	beq.w	800aa96 <dir_find+0x34>
 800abcc:	e004      	b.n	800abd8 <dir_find+0x176>
 800abce:	bf00      	nop
 800abd0:	e002      	b.n	800abd8 <dir_find+0x176>
 800abd2:	bf00      	nop
 800abd4:	e000      	b.n	800abd8 <dir_find+0x176>
 800abd6:	bf00      	nop
 800abd8:	7dfb      	ldrb	r3, [r7, #23]
 800abda:	4618      	mov	r0, r3
 800abdc:	3718      	adds	r7, #24
 800abde:	46bd      	mov	sp, r7
 800abe0:	bd80      	pop	{r7, pc}
	...

0800abe4 <dir_register>:
 800abe4:	b580      	push	{r7, lr}
 800abe6:	b08c      	sub	sp, #48	@ 0x30
 800abe8:	af00      	add	r7, sp, #0
 800abea:	6078      	str	r0, [r7, #4]
 800abec:	687b      	ldr	r3, [r7, #4]
 800abee:	681b      	ldr	r3, [r3, #0]
 800abf0:	61fb      	str	r3, [r7, #28]
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 800abf8:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 800abfc:	2b00      	cmp	r3, #0
 800abfe:	d001      	beq.n	800ac04 <dir_register+0x20>
 800ac00:	2306      	movs	r3, #6
 800ac02:	e0e0      	b.n	800adc6 <dir_register+0x1e2>
 800ac04:	2300      	movs	r3, #0
 800ac06:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac08:	e002      	b.n	800ac10 <dir_register+0x2c>
 800ac0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ac0c:	3301      	adds	r3, #1
 800ac0e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac10:	69fb      	ldr	r3, [r7, #28]
 800ac12:	691a      	ldr	r2, [r3, #16]
 800ac14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ac16:	005b      	lsls	r3, r3, #1
 800ac18:	4413      	add	r3, r2
 800ac1a:	881b      	ldrh	r3, [r3, #0]
 800ac1c:	2b00      	cmp	r3, #0
 800ac1e:	d1f4      	bne.n	800ac0a <dir_register+0x26>
 800ac20:	687b      	ldr	r3, [r7, #4]
 800ac22:	f103 0124 	add.w	r1, r3, #36	@ 0x24
 800ac26:	f107 030c 	add.w	r3, r7, #12
 800ac2a:	220c      	movs	r2, #12
 800ac2c:	4618      	mov	r0, r3
 800ac2e:	f7fe fd9f 	bl	8009770 <mem_cpy>
 800ac32:	7dfb      	ldrb	r3, [r7, #23]
 800ac34:	f003 0301 	and.w	r3, r3, #1
 800ac38:	2b00      	cmp	r3, #0
 800ac3a:	d032      	beq.n	800aca2 <dir_register+0xbe>
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	2240      	movs	r2, #64	@ 0x40
 800ac40:	f883 202f 	strb.w	r2, [r3, #47]	@ 0x2f
 800ac44:	2301      	movs	r3, #1
 800ac46:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ac48:	e016      	b.n	800ac78 <dir_register+0x94>
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	f103 0024 	add.w	r0, r3, #36	@ 0x24
 800ac50:	69fb      	ldr	r3, [r7, #28]
 800ac52:	691a      	ldr	r2, [r3, #16]
 800ac54:	f107 010c 	add.w	r1, r7, #12
 800ac58:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ac5a:	f7ff fe53 	bl	800a904 <gen_numname>
 800ac5e:	6878      	ldr	r0, [r7, #4]
 800ac60:	f7ff feff 	bl	800aa62 <dir_find>
 800ac64:	4603      	mov	r3, r0
 800ac66:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800ac6a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ac6e:	2b00      	cmp	r3, #0
 800ac70:	d106      	bne.n	800ac80 <dir_register+0x9c>
 800ac72:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ac74:	3301      	adds	r3, #1
 800ac76:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ac78:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ac7a:	2b63      	cmp	r3, #99	@ 0x63
 800ac7c:	d9e5      	bls.n	800ac4a <dir_register+0x66>
 800ac7e:	e000      	b.n	800ac82 <dir_register+0x9e>
 800ac80:	bf00      	nop
 800ac82:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ac84:	2b64      	cmp	r3, #100	@ 0x64
 800ac86:	d101      	bne.n	800ac8c <dir_register+0xa8>
 800ac88:	2307      	movs	r3, #7
 800ac8a:	e09c      	b.n	800adc6 <dir_register+0x1e2>
 800ac8c:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ac90:	2b04      	cmp	r3, #4
 800ac92:	d002      	beq.n	800ac9a <dir_register+0xb6>
 800ac94:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ac98:	e095      	b.n	800adc6 <dir_register+0x1e2>
 800ac9a:	7dfa      	ldrb	r2, [r7, #23]
 800ac9c:	687b      	ldr	r3, [r7, #4]
 800ac9e:	f883 202f 	strb.w	r2, [r3, #47]	@ 0x2f
 800aca2:	7dfb      	ldrb	r3, [r7, #23]
 800aca4:	f003 0302 	and.w	r3, r3, #2
 800aca8:	2b00      	cmp	r3, #0
 800acaa:	d007      	beq.n	800acbc <dir_register+0xd8>
 800acac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acae:	330c      	adds	r3, #12
 800acb0:	4a47      	ldr	r2, [pc, #284]	@ (800add0 <dir_register+0x1ec>)
 800acb2:	fba2 2303 	umull	r2, r3, r2, r3
 800acb6:	089b      	lsrs	r3, r3, #2
 800acb8:	3301      	adds	r3, #1
 800acba:	e000      	b.n	800acbe <dir_register+0xda>
 800acbc:	2301      	movs	r3, #1
 800acbe:	623b      	str	r3, [r7, #32]
 800acc0:	6a39      	ldr	r1, [r7, #32]
 800acc2:	6878      	ldr	r0, [r7, #4]
 800acc4:	f7ff fcc0 	bl	800a648 <dir_alloc>
 800acc8:	4603      	mov	r3, r0
 800acca:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800acce:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800acd2:	2b00      	cmp	r3, #0
 800acd4:	d148      	bne.n	800ad68 <dir_register+0x184>
 800acd6:	6a3b      	ldr	r3, [r7, #32]
 800acd8:	3b01      	subs	r3, #1
 800acda:	623b      	str	r3, [r7, #32]
 800acdc:	6a3b      	ldr	r3, [r7, #32]
 800acde:	2b00      	cmp	r3, #0
 800ace0:	d042      	beq.n	800ad68 <dir_register+0x184>
 800ace2:	687b      	ldr	r3, [r7, #4]
 800ace4:	695a      	ldr	r2, [r3, #20]
 800ace6:	6a3b      	ldr	r3, [r7, #32]
 800ace8:	015b      	lsls	r3, r3, #5
 800acea:	1ad3      	subs	r3, r2, r3
 800acec:	4619      	mov	r1, r3
 800acee:	6878      	ldr	r0, [r7, #4]
 800acf0:	f7ff fb4b 	bl	800a38a <dir_sdi>
 800acf4:	4603      	mov	r3, r0
 800acf6:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800acfa:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800acfe:	2b00      	cmp	r3, #0
 800ad00:	d132      	bne.n	800ad68 <dir_register+0x184>
 800ad02:	687b      	ldr	r3, [r7, #4]
 800ad04:	3324      	adds	r3, #36	@ 0x24
 800ad06:	4618      	mov	r0, r3
 800ad08:	f7ff fe8a 	bl	800aa20 <sum_sfn>
 800ad0c:	4603      	mov	r3, r0
 800ad0e:	76fb      	strb	r3, [r7, #27]
 800ad10:	687b      	ldr	r3, [r7, #4]
 800ad12:	69db      	ldr	r3, [r3, #28]
 800ad14:	4619      	mov	r1, r3
 800ad16:	69f8      	ldr	r0, [r7, #28]
 800ad18:	f7fe ff58 	bl	8009bcc <move_window>
 800ad1c:	4603      	mov	r3, r0
 800ad1e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800ad22:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d11d      	bne.n	800ad66 <dir_register+0x182>
 800ad2a:	69fb      	ldr	r3, [r7, #28]
 800ad2c:	6918      	ldr	r0, [r3, #16]
 800ad2e:	687b      	ldr	r3, [r7, #4]
 800ad30:	6a19      	ldr	r1, [r3, #32]
 800ad32:	6a3b      	ldr	r3, [r7, #32]
 800ad34:	b2da      	uxtb	r2, r3
 800ad36:	7efb      	ldrb	r3, [r7, #27]
 800ad38:	f7ff fd7c 	bl	800a834 <put_lfn>
 800ad3c:	69fb      	ldr	r3, [r7, #28]
 800ad3e:	2201      	movs	r2, #1
 800ad40:	70da      	strb	r2, [r3, #3]
 800ad42:	2100      	movs	r1, #0
 800ad44:	6878      	ldr	r0, [r7, #4]
 800ad46:	f7ff fba9 	bl	800a49c <dir_next>
 800ad4a:	4603      	mov	r3, r0
 800ad4c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800ad50:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	d107      	bne.n	800ad68 <dir_register+0x184>
 800ad58:	6a3b      	ldr	r3, [r7, #32]
 800ad5a:	3b01      	subs	r3, #1
 800ad5c:	623b      	str	r3, [r7, #32]
 800ad5e:	6a3b      	ldr	r3, [r7, #32]
 800ad60:	2b00      	cmp	r3, #0
 800ad62:	d1d5      	bne.n	800ad10 <dir_register+0x12c>
 800ad64:	e000      	b.n	800ad68 <dir_register+0x184>
 800ad66:	bf00      	nop
 800ad68:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ad6c:	2b00      	cmp	r3, #0
 800ad6e:	d128      	bne.n	800adc2 <dir_register+0x1de>
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	69db      	ldr	r3, [r3, #28]
 800ad74:	4619      	mov	r1, r3
 800ad76:	69f8      	ldr	r0, [r7, #28]
 800ad78:	f7fe ff28 	bl	8009bcc <move_window>
 800ad7c:	4603      	mov	r3, r0
 800ad7e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800ad82:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800ad86:	2b00      	cmp	r3, #0
 800ad88:	d11b      	bne.n	800adc2 <dir_register+0x1de>
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	6a1b      	ldr	r3, [r3, #32]
 800ad8e:	2220      	movs	r2, #32
 800ad90:	2100      	movs	r1, #0
 800ad92:	4618      	mov	r0, r3
 800ad94:	f7fe fd0d 	bl	80097b2 <mem_set>
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	6a18      	ldr	r0, [r3, #32]
 800ad9c:	687b      	ldr	r3, [r7, #4]
 800ad9e:	3324      	adds	r3, #36	@ 0x24
 800ada0:	220b      	movs	r2, #11
 800ada2:	4619      	mov	r1, r3
 800ada4:	f7fe fce4 	bl	8009770 <mem_cpy>
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	f893 202f 	ldrb.w	r2, [r3, #47]	@ 0x2f
 800adae:	687b      	ldr	r3, [r7, #4]
 800adb0:	6a1b      	ldr	r3, [r3, #32]
 800adb2:	330c      	adds	r3, #12
 800adb4:	f002 0218 	and.w	r2, r2, #24
 800adb8:	b2d2      	uxtb	r2, r2
 800adba:	701a      	strb	r2, [r3, #0]
 800adbc:	69fb      	ldr	r3, [r7, #28]
 800adbe:	2201      	movs	r2, #1
 800adc0:	70da      	strb	r2, [r3, #3]
 800adc2:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800adc6:	4618      	mov	r0, r3
 800adc8:	3730      	adds	r7, #48	@ 0x30
 800adca:	46bd      	mov	sp, r7
 800adcc:	bd80      	pop	{r7, pc}
 800adce:	bf00      	nop
 800add0:	4ec4ec4f 	.word	0x4ec4ec4f

0800add4 <create_name>:
 800add4:	b580      	push	{r7, lr}
 800add6:	b08a      	sub	sp, #40	@ 0x28
 800add8:	af00      	add	r7, sp, #0
 800adda:	6078      	str	r0, [r7, #4]
 800addc:	6039      	str	r1, [r7, #0]
 800adde:	683b      	ldr	r3, [r7, #0]
 800ade0:	681b      	ldr	r3, [r3, #0]
 800ade2:	613b      	str	r3, [r7, #16]
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	681b      	ldr	r3, [r3, #0]
 800ade8:	691b      	ldr	r3, [r3, #16]
 800adea:	60fb      	str	r3, [r7, #12]
 800adec:	2300      	movs	r3, #0
 800adee:	617b      	str	r3, [r7, #20]
 800adf0:	697b      	ldr	r3, [r7, #20]
 800adf2:	61bb      	str	r3, [r7, #24]
 800adf4:	69bb      	ldr	r3, [r7, #24]
 800adf6:	1c5a      	adds	r2, r3, #1
 800adf8:	61ba      	str	r2, [r7, #24]
 800adfa:	693a      	ldr	r2, [r7, #16]
 800adfc:	4413      	add	r3, r2
 800adfe:	781b      	ldrb	r3, [r3, #0]
 800ae00:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800ae02:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae04:	2b1f      	cmp	r3, #31
 800ae06:	d940      	bls.n	800ae8a <create_name+0xb6>
 800ae08:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae0a:	2b2f      	cmp	r3, #47	@ 0x2f
 800ae0c:	d006      	beq.n	800ae1c <create_name+0x48>
 800ae0e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae10:	2b5c      	cmp	r3, #92	@ 0x5c
 800ae12:	d110      	bne.n	800ae36 <create_name+0x62>
 800ae14:	e002      	b.n	800ae1c <create_name+0x48>
 800ae16:	69bb      	ldr	r3, [r7, #24]
 800ae18:	3301      	adds	r3, #1
 800ae1a:	61bb      	str	r3, [r7, #24]
 800ae1c:	693a      	ldr	r2, [r7, #16]
 800ae1e:	69bb      	ldr	r3, [r7, #24]
 800ae20:	4413      	add	r3, r2
 800ae22:	781b      	ldrb	r3, [r3, #0]
 800ae24:	2b2f      	cmp	r3, #47	@ 0x2f
 800ae26:	d0f6      	beq.n	800ae16 <create_name+0x42>
 800ae28:	693a      	ldr	r2, [r7, #16]
 800ae2a:	69bb      	ldr	r3, [r7, #24]
 800ae2c:	4413      	add	r3, r2
 800ae2e:	781b      	ldrb	r3, [r3, #0]
 800ae30:	2b5c      	cmp	r3, #92	@ 0x5c
 800ae32:	d0f0      	beq.n	800ae16 <create_name+0x42>
 800ae34:	e02a      	b.n	800ae8c <create_name+0xb8>
 800ae36:	697b      	ldr	r3, [r7, #20]
 800ae38:	2bfe      	cmp	r3, #254	@ 0xfe
 800ae3a:	d901      	bls.n	800ae40 <create_name+0x6c>
 800ae3c:	2306      	movs	r3, #6
 800ae3e:	e17d      	b.n	800b13c <create_name+0x368>
 800ae40:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae42:	b2db      	uxtb	r3, r3
 800ae44:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800ae46:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae48:	2101      	movs	r1, #1
 800ae4a:	4618      	mov	r0, r3
 800ae4c:	f001 f9b8 	bl	800c1c0 <ff_convert>
 800ae50:	4603      	mov	r3, r0
 800ae52:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800ae54:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae56:	2b00      	cmp	r3, #0
 800ae58:	d101      	bne.n	800ae5e <create_name+0x8a>
 800ae5a:	2306      	movs	r3, #6
 800ae5c:	e16e      	b.n	800b13c <create_name+0x368>
 800ae5e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae60:	2b7f      	cmp	r3, #127	@ 0x7f
 800ae62:	d809      	bhi.n	800ae78 <create_name+0xa4>
 800ae64:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae66:	4619      	mov	r1, r3
 800ae68:	488d      	ldr	r0, [pc, #564]	@ (800b0a0 <create_name+0x2cc>)
 800ae6a:	f7fe fce4 	bl	8009836 <chk_chr>
 800ae6e:	4603      	mov	r3, r0
 800ae70:	2b00      	cmp	r3, #0
 800ae72:	d001      	beq.n	800ae78 <create_name+0xa4>
 800ae74:	2306      	movs	r3, #6
 800ae76:	e161      	b.n	800b13c <create_name+0x368>
 800ae78:	697b      	ldr	r3, [r7, #20]
 800ae7a:	1c5a      	adds	r2, r3, #1
 800ae7c:	617a      	str	r2, [r7, #20]
 800ae7e:	005b      	lsls	r3, r3, #1
 800ae80:	68fa      	ldr	r2, [r7, #12]
 800ae82:	4413      	add	r3, r2
 800ae84:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800ae86:	801a      	strh	r2, [r3, #0]
 800ae88:	e7b4      	b.n	800adf4 <create_name+0x20>
 800ae8a:	bf00      	nop
 800ae8c:	693a      	ldr	r2, [r7, #16]
 800ae8e:	69bb      	ldr	r3, [r7, #24]
 800ae90:	441a      	add	r2, r3
 800ae92:	683b      	ldr	r3, [r7, #0]
 800ae94:	601a      	str	r2, [r3, #0]
 800ae96:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ae98:	2b1f      	cmp	r3, #31
 800ae9a:	d801      	bhi.n	800aea0 <create_name+0xcc>
 800ae9c:	2304      	movs	r3, #4
 800ae9e:	e000      	b.n	800aea2 <create_name+0xce>
 800aea0:	2300      	movs	r3, #0
 800aea2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800aea6:	e011      	b.n	800aecc <create_name+0xf8>
 800aea8:	697b      	ldr	r3, [r7, #20]
 800aeaa:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 800aeae:	3b01      	subs	r3, #1
 800aeb0:	005b      	lsls	r3, r3, #1
 800aeb2:	68fa      	ldr	r2, [r7, #12]
 800aeb4:	4413      	add	r3, r2
 800aeb6:	881b      	ldrh	r3, [r3, #0]
 800aeb8:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800aeba:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800aebc:	2b20      	cmp	r3, #32
 800aebe:	d002      	beq.n	800aec6 <create_name+0xf2>
 800aec0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800aec2:	2b2e      	cmp	r3, #46	@ 0x2e
 800aec4:	d106      	bne.n	800aed4 <create_name+0x100>
 800aec6:	697b      	ldr	r3, [r7, #20]
 800aec8:	3b01      	subs	r3, #1
 800aeca:	617b      	str	r3, [r7, #20]
 800aecc:	697b      	ldr	r3, [r7, #20]
 800aece:	2b00      	cmp	r3, #0
 800aed0:	d1ea      	bne.n	800aea8 <create_name+0xd4>
 800aed2:	e000      	b.n	800aed6 <create_name+0x102>
 800aed4:	bf00      	nop
 800aed6:	697b      	ldr	r3, [r7, #20]
 800aed8:	005b      	lsls	r3, r3, #1
 800aeda:	68fa      	ldr	r2, [r7, #12]
 800aedc:	4413      	add	r3, r2
 800aede:	2200      	movs	r2, #0
 800aee0:	801a      	strh	r2, [r3, #0]
 800aee2:	697b      	ldr	r3, [r7, #20]
 800aee4:	2b00      	cmp	r3, #0
 800aee6:	d101      	bne.n	800aeec <create_name+0x118>
 800aee8:	2306      	movs	r3, #6
 800aeea:	e127      	b.n	800b13c <create_name+0x368>
 800aeec:	687b      	ldr	r3, [r7, #4]
 800aeee:	3324      	adds	r3, #36	@ 0x24
 800aef0:	220b      	movs	r2, #11
 800aef2:	2120      	movs	r1, #32
 800aef4:	4618      	mov	r0, r3
 800aef6:	f7fe fc5c 	bl	80097b2 <mem_set>
 800aefa:	2300      	movs	r3, #0
 800aefc:	61bb      	str	r3, [r7, #24]
 800aefe:	e002      	b.n	800af06 <create_name+0x132>
 800af00:	69bb      	ldr	r3, [r7, #24]
 800af02:	3301      	adds	r3, #1
 800af04:	61bb      	str	r3, [r7, #24]
 800af06:	69bb      	ldr	r3, [r7, #24]
 800af08:	005b      	lsls	r3, r3, #1
 800af0a:	68fa      	ldr	r2, [r7, #12]
 800af0c:	4413      	add	r3, r2
 800af0e:	881b      	ldrh	r3, [r3, #0]
 800af10:	2b20      	cmp	r3, #32
 800af12:	d0f5      	beq.n	800af00 <create_name+0x12c>
 800af14:	69bb      	ldr	r3, [r7, #24]
 800af16:	005b      	lsls	r3, r3, #1
 800af18:	68fa      	ldr	r2, [r7, #12]
 800af1a:	4413      	add	r3, r2
 800af1c:	881b      	ldrh	r3, [r3, #0]
 800af1e:	2b2e      	cmp	r3, #46	@ 0x2e
 800af20:	d0ee      	beq.n	800af00 <create_name+0x12c>
 800af22:	69bb      	ldr	r3, [r7, #24]
 800af24:	2b00      	cmp	r3, #0
 800af26:	d009      	beq.n	800af3c <create_name+0x168>
 800af28:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800af2c:	f043 0303 	orr.w	r3, r3, #3
 800af30:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800af34:	e002      	b.n	800af3c <create_name+0x168>
 800af36:	697b      	ldr	r3, [r7, #20]
 800af38:	3b01      	subs	r3, #1
 800af3a:	617b      	str	r3, [r7, #20]
 800af3c:	697b      	ldr	r3, [r7, #20]
 800af3e:	2b00      	cmp	r3, #0
 800af40:	d009      	beq.n	800af56 <create_name+0x182>
 800af42:	697b      	ldr	r3, [r7, #20]
 800af44:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 800af48:	3b01      	subs	r3, #1
 800af4a:	005b      	lsls	r3, r3, #1
 800af4c:	68fa      	ldr	r2, [r7, #12]
 800af4e:	4413      	add	r3, r2
 800af50:	881b      	ldrh	r3, [r3, #0]
 800af52:	2b2e      	cmp	r3, #46	@ 0x2e
 800af54:	d1ef      	bne.n	800af36 <create_name+0x162>
 800af56:	2300      	movs	r3, #0
 800af58:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800af5c:	2300      	movs	r3, #0
 800af5e:	623b      	str	r3, [r7, #32]
 800af60:	2308      	movs	r3, #8
 800af62:	61fb      	str	r3, [r7, #28]
 800af64:	69bb      	ldr	r3, [r7, #24]
 800af66:	1c5a      	adds	r2, r3, #1
 800af68:	61ba      	str	r2, [r7, #24]
 800af6a:	005b      	lsls	r3, r3, #1
 800af6c:	68fa      	ldr	r2, [r7, #12]
 800af6e:	4413      	add	r3, r2
 800af70:	881b      	ldrh	r3, [r3, #0]
 800af72:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800af74:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800af76:	2b00      	cmp	r3, #0
 800af78:	f000 8090 	beq.w	800b09c <create_name+0x2c8>
 800af7c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800af7e:	2b20      	cmp	r3, #32
 800af80:	d006      	beq.n	800af90 <create_name+0x1bc>
 800af82:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800af84:	2b2e      	cmp	r3, #46	@ 0x2e
 800af86:	d10a      	bne.n	800af9e <create_name+0x1ca>
 800af88:	69ba      	ldr	r2, [r7, #24]
 800af8a:	697b      	ldr	r3, [r7, #20]
 800af8c:	429a      	cmp	r2, r3
 800af8e:	d006      	beq.n	800af9e <create_name+0x1ca>
 800af90:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800af94:	f043 0303 	orr.w	r3, r3, #3
 800af98:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800af9c:	e07d      	b.n	800b09a <create_name+0x2c6>
 800af9e:	6a3a      	ldr	r2, [r7, #32]
 800afa0:	69fb      	ldr	r3, [r7, #28]
 800afa2:	429a      	cmp	r2, r3
 800afa4:	d203      	bcs.n	800afae <create_name+0x1da>
 800afa6:	69ba      	ldr	r2, [r7, #24]
 800afa8:	697b      	ldr	r3, [r7, #20]
 800afaa:	429a      	cmp	r2, r3
 800afac:	d123      	bne.n	800aff6 <create_name+0x222>
 800afae:	69fb      	ldr	r3, [r7, #28]
 800afb0:	2b0b      	cmp	r3, #11
 800afb2:	d106      	bne.n	800afc2 <create_name+0x1ee>
 800afb4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800afb8:	f043 0303 	orr.w	r3, r3, #3
 800afbc:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800afc0:	e075      	b.n	800b0ae <create_name+0x2da>
 800afc2:	69ba      	ldr	r2, [r7, #24]
 800afc4:	697b      	ldr	r3, [r7, #20]
 800afc6:	429a      	cmp	r2, r3
 800afc8:	d005      	beq.n	800afd6 <create_name+0x202>
 800afca:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800afce:	f043 0303 	orr.w	r3, r3, #3
 800afd2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800afd6:	69ba      	ldr	r2, [r7, #24]
 800afd8:	697b      	ldr	r3, [r7, #20]
 800afda:	429a      	cmp	r2, r3
 800afdc:	d866      	bhi.n	800b0ac <create_name+0x2d8>
 800afde:	697b      	ldr	r3, [r7, #20]
 800afe0:	61bb      	str	r3, [r7, #24]
 800afe2:	2308      	movs	r3, #8
 800afe4:	623b      	str	r3, [r7, #32]
 800afe6:	230b      	movs	r3, #11
 800afe8:	61fb      	str	r3, [r7, #28]
 800afea:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800afee:	009b      	lsls	r3, r3, #2
 800aff0:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800aff4:	e051      	b.n	800b09a <create_name+0x2c6>
 800aff6:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800aff8:	2b7f      	cmp	r3, #127	@ 0x7f
 800affa:	d914      	bls.n	800b026 <create_name+0x252>
 800affc:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800affe:	2100      	movs	r1, #0
 800b000:	4618      	mov	r0, r3
 800b002:	f001 f8dd 	bl	800c1c0 <ff_convert>
 800b006:	4603      	mov	r3, r0
 800b008:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800b00a:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b00c:	2b00      	cmp	r3, #0
 800b00e:	d004      	beq.n	800b01a <create_name+0x246>
 800b010:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b012:	3b80      	subs	r3, #128	@ 0x80
 800b014:	4a23      	ldr	r2, [pc, #140]	@ (800b0a4 <create_name+0x2d0>)
 800b016:	5cd3      	ldrb	r3, [r2, r3]
 800b018:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800b01a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b01e:	f043 0302 	orr.w	r3, r3, #2
 800b022:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b026:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b028:	2b00      	cmp	r3, #0
 800b02a:	d007      	beq.n	800b03c <create_name+0x268>
 800b02c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b02e:	4619      	mov	r1, r3
 800b030:	481d      	ldr	r0, [pc, #116]	@ (800b0a8 <create_name+0x2d4>)
 800b032:	f7fe fc00 	bl	8009836 <chk_chr>
 800b036:	4603      	mov	r3, r0
 800b038:	2b00      	cmp	r3, #0
 800b03a:	d008      	beq.n	800b04e <create_name+0x27a>
 800b03c:	235f      	movs	r3, #95	@ 0x5f
 800b03e:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800b040:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b044:	f043 0303 	orr.w	r3, r3, #3
 800b048:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b04c:	e01b      	b.n	800b086 <create_name+0x2b2>
 800b04e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b050:	2b40      	cmp	r3, #64	@ 0x40
 800b052:	d909      	bls.n	800b068 <create_name+0x294>
 800b054:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b056:	2b5a      	cmp	r3, #90	@ 0x5a
 800b058:	d806      	bhi.n	800b068 <create_name+0x294>
 800b05a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b05e:	f043 0302 	orr.w	r3, r3, #2
 800b062:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b066:	e00e      	b.n	800b086 <create_name+0x2b2>
 800b068:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b06a:	2b60      	cmp	r3, #96	@ 0x60
 800b06c:	d90b      	bls.n	800b086 <create_name+0x2b2>
 800b06e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b070:	2b7a      	cmp	r3, #122	@ 0x7a
 800b072:	d808      	bhi.n	800b086 <create_name+0x2b2>
 800b074:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b078:	f043 0301 	orr.w	r3, r3, #1
 800b07c:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b080:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b082:	3b20      	subs	r3, #32
 800b084:	84bb      	strh	r3, [r7, #36]	@ 0x24
 800b086:	6a3b      	ldr	r3, [r7, #32]
 800b088:	1c5a      	adds	r2, r3, #1
 800b08a:	623a      	str	r2, [r7, #32]
 800b08c:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800b08e:	b2d1      	uxtb	r1, r2
 800b090:	687a      	ldr	r2, [r7, #4]
 800b092:	4413      	add	r3, r2
 800b094:	460a      	mov	r2, r1
 800b096:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800b09a:	e763      	b.n	800af64 <create_name+0x190>
 800b09c:	bf00      	nop
 800b09e:	e006      	b.n	800b0ae <create_name+0x2da>
 800b0a0:	0800cd58 	.word	0x0800cd58
 800b0a4:	0800cdb8 	.word	0x0800cdb8
 800b0a8:	0800cd64 	.word	0x0800cd64
 800b0ac:	bf00      	nop
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800b0b4:	2be5      	cmp	r3, #229	@ 0xe5
 800b0b6:	d103      	bne.n	800b0c0 <create_name+0x2ec>
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	2205      	movs	r2, #5
 800b0bc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800b0c0:	69fb      	ldr	r3, [r7, #28]
 800b0c2:	2b08      	cmp	r3, #8
 800b0c4:	d104      	bne.n	800b0d0 <create_name+0x2fc>
 800b0c6:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b0ca:	009b      	lsls	r3, r3, #2
 800b0cc:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b0d0:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b0d4:	f003 030c 	and.w	r3, r3, #12
 800b0d8:	2b0c      	cmp	r3, #12
 800b0da:	d005      	beq.n	800b0e8 <create_name+0x314>
 800b0dc:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b0e0:	f003 0303 	and.w	r3, r3, #3
 800b0e4:	2b03      	cmp	r3, #3
 800b0e6:	d105      	bne.n	800b0f4 <create_name+0x320>
 800b0e8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b0ec:	f043 0302 	orr.w	r3, r3, #2
 800b0f0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b0f4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b0f8:	f003 0302 	and.w	r3, r3, #2
 800b0fc:	2b00      	cmp	r3, #0
 800b0fe:	d117      	bne.n	800b130 <create_name+0x35c>
 800b100:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b104:	f003 0303 	and.w	r3, r3, #3
 800b108:	2b01      	cmp	r3, #1
 800b10a:	d105      	bne.n	800b118 <create_name+0x344>
 800b10c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b110:	f043 0310 	orr.w	r3, r3, #16
 800b114:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b118:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b11c:	f003 030c 	and.w	r3, r3, #12
 800b120:	2b04      	cmp	r3, #4
 800b122:	d105      	bne.n	800b130 <create_name+0x35c>
 800b124:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b128:	f043 0308 	orr.w	r3, r3, #8
 800b12c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800b130:	687b      	ldr	r3, [r7, #4]
 800b132:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800b136:	f883 202f 	strb.w	r2, [r3, #47]	@ 0x2f
 800b13a:	2300      	movs	r3, #0
 800b13c:	4618      	mov	r0, r3
 800b13e:	3728      	adds	r7, #40	@ 0x28
 800b140:	46bd      	mov	sp, r7
 800b142:	bd80      	pop	{r7, pc}

0800b144 <follow_path>:
 800b144:	b580      	push	{r7, lr}
 800b146:	b086      	sub	sp, #24
 800b148:	af00      	add	r7, sp, #0
 800b14a:	6078      	str	r0, [r7, #4]
 800b14c:	6039      	str	r1, [r7, #0]
 800b14e:	687b      	ldr	r3, [r7, #4]
 800b150:	613b      	str	r3, [r7, #16]
 800b152:	693b      	ldr	r3, [r7, #16]
 800b154:	681b      	ldr	r3, [r3, #0]
 800b156:	60fb      	str	r3, [r7, #12]
 800b158:	e002      	b.n	800b160 <follow_path+0x1c>
 800b15a:	683b      	ldr	r3, [r7, #0]
 800b15c:	3301      	adds	r3, #1
 800b15e:	603b      	str	r3, [r7, #0]
 800b160:	683b      	ldr	r3, [r7, #0]
 800b162:	781b      	ldrb	r3, [r3, #0]
 800b164:	2b2f      	cmp	r3, #47	@ 0x2f
 800b166:	d0f8      	beq.n	800b15a <follow_path+0x16>
 800b168:	683b      	ldr	r3, [r7, #0]
 800b16a:	781b      	ldrb	r3, [r3, #0]
 800b16c:	2b5c      	cmp	r3, #92	@ 0x5c
 800b16e:	d0f4      	beq.n	800b15a <follow_path+0x16>
 800b170:	693b      	ldr	r3, [r7, #16]
 800b172:	2200      	movs	r2, #0
 800b174:	609a      	str	r2, [r3, #8]
 800b176:	683b      	ldr	r3, [r7, #0]
 800b178:	781b      	ldrb	r3, [r3, #0]
 800b17a:	2b1f      	cmp	r3, #31
 800b17c:	d80a      	bhi.n	800b194 <follow_path+0x50>
 800b17e:	687b      	ldr	r3, [r7, #4]
 800b180:	2280      	movs	r2, #128	@ 0x80
 800b182:	f883 202f 	strb.w	r2, [r3, #47]	@ 0x2f
 800b186:	2100      	movs	r1, #0
 800b188:	6878      	ldr	r0, [r7, #4]
 800b18a:	f7ff f8fe 	bl	800a38a <dir_sdi>
 800b18e:	4603      	mov	r3, r0
 800b190:	75fb      	strb	r3, [r7, #23]
 800b192:	e048      	b.n	800b226 <follow_path+0xe2>
 800b194:	463b      	mov	r3, r7
 800b196:	4619      	mov	r1, r3
 800b198:	6878      	ldr	r0, [r7, #4]
 800b19a:	f7ff fe1b 	bl	800add4 <create_name>
 800b19e:	4603      	mov	r3, r0
 800b1a0:	75fb      	strb	r3, [r7, #23]
 800b1a2:	7dfb      	ldrb	r3, [r7, #23]
 800b1a4:	2b00      	cmp	r3, #0
 800b1a6:	d139      	bne.n	800b21c <follow_path+0xd8>
 800b1a8:	6878      	ldr	r0, [r7, #4]
 800b1aa:	f7ff fc5a 	bl	800aa62 <dir_find>
 800b1ae:	4603      	mov	r3, r0
 800b1b0:	75fb      	strb	r3, [r7, #23]
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
 800b1b8:	72fb      	strb	r3, [r7, #11]
 800b1ba:	7dfb      	ldrb	r3, [r7, #23]
 800b1bc:	2b00      	cmp	r3, #0
 800b1be:	d00a      	beq.n	800b1d6 <follow_path+0x92>
 800b1c0:	7dfb      	ldrb	r3, [r7, #23]
 800b1c2:	2b04      	cmp	r3, #4
 800b1c4:	d12c      	bne.n	800b220 <follow_path+0xdc>
 800b1c6:	7afb      	ldrb	r3, [r7, #11]
 800b1c8:	f003 0304 	and.w	r3, r3, #4
 800b1cc:	2b00      	cmp	r3, #0
 800b1ce:	d127      	bne.n	800b220 <follow_path+0xdc>
 800b1d0:	2305      	movs	r3, #5
 800b1d2:	75fb      	strb	r3, [r7, #23]
 800b1d4:	e024      	b.n	800b220 <follow_path+0xdc>
 800b1d6:	7afb      	ldrb	r3, [r7, #11]
 800b1d8:	f003 0304 	and.w	r3, r3, #4
 800b1dc:	2b00      	cmp	r3, #0
 800b1de:	d121      	bne.n	800b224 <follow_path+0xe0>
 800b1e0:	693b      	ldr	r3, [r7, #16]
 800b1e2:	799b      	ldrb	r3, [r3, #6]
 800b1e4:	f003 0310 	and.w	r3, r3, #16
 800b1e8:	2b00      	cmp	r3, #0
 800b1ea:	d102      	bne.n	800b1f2 <follow_path+0xae>
 800b1ec:	2305      	movs	r3, #5
 800b1ee:	75fb      	strb	r3, [r7, #23]
 800b1f0:	e019      	b.n	800b226 <follow_path+0xe2>
 800b1f2:	68fb      	ldr	r3, [r7, #12]
 800b1f4:	f103 0138 	add.w	r1, r3, #56	@ 0x38
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	695b      	ldr	r3, [r3, #20]
 800b1fc:	68fa      	ldr	r2, [r7, #12]
 800b1fe:	8992      	ldrh	r2, [r2, #12]
 800b200:	fbb3 f0f2 	udiv	r0, r3, r2
 800b204:	fb00 f202 	mul.w	r2, r0, r2
 800b208:	1a9b      	subs	r3, r3, r2
 800b20a:	440b      	add	r3, r1
 800b20c:	4619      	mov	r1, r3
 800b20e:	68f8      	ldr	r0, [r7, #12]
 800b210:	f7ff fa61 	bl	800a6d6 <ld_clust>
 800b214:	4602      	mov	r2, r0
 800b216:	693b      	ldr	r3, [r7, #16]
 800b218:	609a      	str	r2, [r3, #8]
 800b21a:	e7bb      	b.n	800b194 <follow_path+0x50>
 800b21c:	bf00      	nop
 800b21e:	e002      	b.n	800b226 <follow_path+0xe2>
 800b220:	bf00      	nop
 800b222:	e000      	b.n	800b226 <follow_path+0xe2>
 800b224:	bf00      	nop
 800b226:	7dfb      	ldrb	r3, [r7, #23]
 800b228:	4618      	mov	r0, r3
 800b22a:	3718      	adds	r7, #24
 800b22c:	46bd      	mov	sp, r7
 800b22e:	bd80      	pop	{r7, pc}

0800b230 <get_ldnumber>:
 800b230:	b480      	push	{r7}
 800b232:	b087      	sub	sp, #28
 800b234:	af00      	add	r7, sp, #0
 800b236:	6078      	str	r0, [r7, #4]
 800b238:	f04f 33ff 	mov.w	r3, #4294967295
 800b23c:	613b      	str	r3, [r7, #16]
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	681b      	ldr	r3, [r3, #0]
 800b242:	2b00      	cmp	r3, #0
 800b244:	d031      	beq.n	800b2aa <get_ldnumber+0x7a>
 800b246:	687b      	ldr	r3, [r7, #4]
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	617b      	str	r3, [r7, #20]
 800b24c:	e002      	b.n	800b254 <get_ldnumber+0x24>
 800b24e:	697b      	ldr	r3, [r7, #20]
 800b250:	3301      	adds	r3, #1
 800b252:	617b      	str	r3, [r7, #20]
 800b254:	697b      	ldr	r3, [r7, #20]
 800b256:	781b      	ldrb	r3, [r3, #0]
 800b258:	2b1f      	cmp	r3, #31
 800b25a:	d903      	bls.n	800b264 <get_ldnumber+0x34>
 800b25c:	697b      	ldr	r3, [r7, #20]
 800b25e:	781b      	ldrb	r3, [r3, #0]
 800b260:	2b3a      	cmp	r3, #58	@ 0x3a
 800b262:	d1f4      	bne.n	800b24e <get_ldnumber+0x1e>
 800b264:	697b      	ldr	r3, [r7, #20]
 800b266:	781b      	ldrb	r3, [r3, #0]
 800b268:	2b3a      	cmp	r3, #58	@ 0x3a
 800b26a:	d11c      	bne.n	800b2a6 <get_ldnumber+0x76>
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	681b      	ldr	r3, [r3, #0]
 800b270:	60fb      	str	r3, [r7, #12]
 800b272:	68fb      	ldr	r3, [r7, #12]
 800b274:	1c5a      	adds	r2, r3, #1
 800b276:	60fa      	str	r2, [r7, #12]
 800b278:	781b      	ldrb	r3, [r3, #0]
 800b27a:	3b30      	subs	r3, #48	@ 0x30
 800b27c:	60bb      	str	r3, [r7, #8]
 800b27e:	68bb      	ldr	r3, [r7, #8]
 800b280:	2b09      	cmp	r3, #9
 800b282:	d80e      	bhi.n	800b2a2 <get_ldnumber+0x72>
 800b284:	68fa      	ldr	r2, [r7, #12]
 800b286:	697b      	ldr	r3, [r7, #20]
 800b288:	429a      	cmp	r2, r3
 800b28a:	d10a      	bne.n	800b2a2 <get_ldnumber+0x72>
 800b28c:	68bb      	ldr	r3, [r7, #8]
 800b28e:	2b00      	cmp	r3, #0
 800b290:	d107      	bne.n	800b2a2 <get_ldnumber+0x72>
 800b292:	68bb      	ldr	r3, [r7, #8]
 800b294:	613b      	str	r3, [r7, #16]
 800b296:	697b      	ldr	r3, [r7, #20]
 800b298:	3301      	adds	r3, #1
 800b29a:	617b      	str	r3, [r7, #20]
 800b29c:	687b      	ldr	r3, [r7, #4]
 800b29e:	697a      	ldr	r2, [r7, #20]
 800b2a0:	601a      	str	r2, [r3, #0]
 800b2a2:	693b      	ldr	r3, [r7, #16]
 800b2a4:	e002      	b.n	800b2ac <get_ldnumber+0x7c>
 800b2a6:	2300      	movs	r3, #0
 800b2a8:	613b      	str	r3, [r7, #16]
 800b2aa:	693b      	ldr	r3, [r7, #16]
 800b2ac:	4618      	mov	r0, r3
 800b2ae:	371c      	adds	r7, #28
 800b2b0:	46bd      	mov	sp, r7
 800b2b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b6:	4770      	bx	lr

0800b2b8 <check_fs>:
 800b2b8:	b580      	push	{r7, lr}
 800b2ba:	b082      	sub	sp, #8
 800b2bc:	af00      	add	r7, sp, #0
 800b2be:	6078      	str	r0, [r7, #4]
 800b2c0:	6039      	str	r1, [r7, #0]
 800b2c2:	687b      	ldr	r3, [r7, #4]
 800b2c4:	2200      	movs	r2, #0
 800b2c6:	70da      	strb	r2, [r3, #3]
 800b2c8:	687b      	ldr	r3, [r7, #4]
 800b2ca:	f04f 32ff 	mov.w	r2, #4294967295
 800b2ce:	635a      	str	r2, [r3, #52]	@ 0x34
 800b2d0:	6839      	ldr	r1, [r7, #0]
 800b2d2:	6878      	ldr	r0, [r7, #4]
 800b2d4:	f7fe fc7a 	bl	8009bcc <move_window>
 800b2d8:	4603      	mov	r3, r0
 800b2da:	2b00      	cmp	r3, #0
 800b2dc:	d001      	beq.n	800b2e2 <check_fs+0x2a>
 800b2de:	2304      	movs	r3, #4
 800b2e0:	e038      	b.n	800b354 <check_fs+0x9c>
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	3338      	adds	r3, #56	@ 0x38
 800b2e6:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 800b2ea:	4618      	mov	r0, r3
 800b2ec:	f7fe f9be 	bl	800966c <ld_word>
 800b2f0:	4603      	mov	r3, r0
 800b2f2:	461a      	mov	r2, r3
 800b2f4:	f64a 2355 	movw	r3, #43605	@ 0xaa55
 800b2f8:	429a      	cmp	r2, r3
 800b2fa:	d001      	beq.n	800b300 <check_fs+0x48>
 800b2fc:	2303      	movs	r3, #3
 800b2fe:	e029      	b.n	800b354 <check_fs+0x9c>
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800b306:	2be9      	cmp	r3, #233	@ 0xe9
 800b308:	d009      	beq.n	800b31e <check_fs+0x66>
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800b310:	2beb      	cmp	r3, #235	@ 0xeb
 800b312:	d11e      	bne.n	800b352 <check_fs+0x9a>
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 800b31a:	2b90      	cmp	r3, #144	@ 0x90
 800b31c:	d119      	bne.n	800b352 <check_fs+0x9a>
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	3338      	adds	r3, #56	@ 0x38
 800b322:	3336      	adds	r3, #54	@ 0x36
 800b324:	4618      	mov	r0, r3
 800b326:	f7fe f9b9 	bl	800969c <ld_dword>
 800b32a:	4603      	mov	r3, r0
 800b32c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 800b330:	4a0a      	ldr	r2, [pc, #40]	@ (800b35c <check_fs+0xa4>)
 800b332:	4293      	cmp	r3, r2
 800b334:	d101      	bne.n	800b33a <check_fs+0x82>
 800b336:	2300      	movs	r3, #0
 800b338:	e00c      	b.n	800b354 <check_fs+0x9c>
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	3338      	adds	r3, #56	@ 0x38
 800b33e:	3352      	adds	r3, #82	@ 0x52
 800b340:	4618      	mov	r0, r3
 800b342:	f7fe f9ab 	bl	800969c <ld_dword>
 800b346:	4603      	mov	r3, r0
 800b348:	4a05      	ldr	r2, [pc, #20]	@ (800b360 <check_fs+0xa8>)
 800b34a:	4293      	cmp	r3, r2
 800b34c:	d101      	bne.n	800b352 <check_fs+0x9a>
 800b34e:	2300      	movs	r3, #0
 800b350:	e000      	b.n	800b354 <check_fs+0x9c>
 800b352:	2302      	movs	r3, #2
 800b354:	4618      	mov	r0, r3
 800b356:	3708      	adds	r7, #8
 800b358:	46bd      	mov	sp, r7
 800b35a:	bd80      	pop	{r7, pc}
 800b35c:	00544146 	.word	0x00544146
 800b360:	33544146 	.word	0x33544146

0800b364 <find_volume>:
 800b364:	b580      	push	{r7, lr}
 800b366:	b096      	sub	sp, #88	@ 0x58
 800b368:	af00      	add	r7, sp, #0
 800b36a:	60f8      	str	r0, [r7, #12]
 800b36c:	60b9      	str	r1, [r7, #8]
 800b36e:	4613      	mov	r3, r2
 800b370:	71fb      	strb	r3, [r7, #7]
 800b372:	68bb      	ldr	r3, [r7, #8]
 800b374:	2200      	movs	r2, #0
 800b376:	601a      	str	r2, [r3, #0]
 800b378:	68f8      	ldr	r0, [r7, #12]
 800b37a:	f7ff ff59 	bl	800b230 <get_ldnumber>
 800b37e:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800b380:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b382:	2b00      	cmp	r3, #0
 800b384:	da01      	bge.n	800b38a <find_volume+0x26>
 800b386:	230b      	movs	r3, #11
 800b388:	e265      	b.n	800b856 <find_volume+0x4f2>
 800b38a:	4a9f      	ldr	r2, [pc, #636]	@ (800b608 <find_volume+0x2a4>)
 800b38c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b38e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b392:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b394:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b396:	2b00      	cmp	r3, #0
 800b398:	d101      	bne.n	800b39e <find_volume+0x3a>
 800b39a:	230c      	movs	r3, #12
 800b39c:	e25b      	b.n	800b856 <find_volume+0x4f2>
 800b39e:	68bb      	ldr	r3, [r7, #8]
 800b3a0:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b3a2:	601a      	str	r2, [r3, #0]
 800b3a4:	79fb      	ldrb	r3, [r7, #7]
 800b3a6:	f023 0301 	bic.w	r3, r3, #1
 800b3aa:	71fb      	strb	r3, [r7, #7]
 800b3ac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b3ae:	781b      	ldrb	r3, [r3, #0]
 800b3b0:	2b00      	cmp	r3, #0
 800b3b2:	d01a      	beq.n	800b3ea <find_volume+0x86>
 800b3b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b3b6:	785b      	ldrb	r3, [r3, #1]
 800b3b8:	4618      	mov	r0, r3
 800b3ba:	f7fe f8b7 	bl	800952c <disk_status>
 800b3be:	4603      	mov	r3, r0
 800b3c0:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800b3c4:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800b3c8:	f003 0301 	and.w	r3, r3, #1
 800b3cc:	2b00      	cmp	r3, #0
 800b3ce:	d10c      	bne.n	800b3ea <find_volume+0x86>
 800b3d0:	79fb      	ldrb	r3, [r7, #7]
 800b3d2:	2b00      	cmp	r3, #0
 800b3d4:	d007      	beq.n	800b3e6 <find_volume+0x82>
 800b3d6:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800b3da:	f003 0304 	and.w	r3, r3, #4
 800b3de:	2b00      	cmp	r3, #0
 800b3e0:	d001      	beq.n	800b3e6 <find_volume+0x82>
 800b3e2:	230a      	movs	r3, #10
 800b3e4:	e237      	b.n	800b856 <find_volume+0x4f2>
 800b3e6:	2300      	movs	r3, #0
 800b3e8:	e235      	b.n	800b856 <find_volume+0x4f2>
 800b3ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b3ec:	2200      	movs	r2, #0
 800b3ee:	701a      	strb	r2, [r3, #0]
 800b3f0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b3f2:	b2da      	uxtb	r2, r3
 800b3f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b3f6:	705a      	strb	r2, [r3, #1]
 800b3f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b3fa:	785b      	ldrb	r3, [r3, #1]
 800b3fc:	4618      	mov	r0, r3
 800b3fe:	f7fe f8af 	bl	8009560 <disk_initialize>
 800b402:	4603      	mov	r3, r0
 800b404:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800b408:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800b40c:	f003 0301 	and.w	r3, r3, #1
 800b410:	2b00      	cmp	r3, #0
 800b412:	d001      	beq.n	800b418 <find_volume+0xb4>
 800b414:	2303      	movs	r3, #3
 800b416:	e21e      	b.n	800b856 <find_volume+0x4f2>
 800b418:	79fb      	ldrb	r3, [r7, #7]
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	d007      	beq.n	800b42e <find_volume+0xca>
 800b41e:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800b422:	f003 0304 	and.w	r3, r3, #4
 800b426:	2b00      	cmp	r3, #0
 800b428:	d001      	beq.n	800b42e <find_volume+0xca>
 800b42a:	230a      	movs	r3, #10
 800b42c:	e213      	b.n	800b856 <find_volume+0x4f2>
 800b42e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b430:	7858      	ldrb	r0, [r3, #1]
 800b432:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b434:	330c      	adds	r3, #12
 800b436:	461a      	mov	r2, r3
 800b438:	2102      	movs	r1, #2
 800b43a:	f7fe f8f9 	bl	8009630 <disk_ioctl>
 800b43e:	4603      	mov	r3, r0
 800b440:	2b00      	cmp	r3, #0
 800b442:	d001      	beq.n	800b448 <find_volume+0xe4>
 800b444:	2301      	movs	r3, #1
 800b446:	e206      	b.n	800b856 <find_volume+0x4f2>
 800b448:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b44a:	899b      	ldrh	r3, [r3, #12]
 800b44c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800b450:	d80d      	bhi.n	800b46e <find_volume+0x10a>
 800b452:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b454:	899b      	ldrh	r3, [r3, #12]
 800b456:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b45a:	d308      	bcc.n	800b46e <find_volume+0x10a>
 800b45c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b45e:	899b      	ldrh	r3, [r3, #12]
 800b460:	461a      	mov	r2, r3
 800b462:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b464:	899b      	ldrh	r3, [r3, #12]
 800b466:	3b01      	subs	r3, #1
 800b468:	4013      	ands	r3, r2
 800b46a:	2b00      	cmp	r3, #0
 800b46c:	d001      	beq.n	800b472 <find_volume+0x10e>
 800b46e:	2301      	movs	r3, #1
 800b470:	e1f1      	b.n	800b856 <find_volume+0x4f2>
 800b472:	2300      	movs	r3, #0
 800b474:	653b      	str	r3, [r7, #80]	@ 0x50
 800b476:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800b478:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800b47a:	f7ff ff1d 	bl	800b2b8 <check_fs>
 800b47e:	4603      	mov	r3, r0
 800b480:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800b484:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b488:	2b02      	cmp	r3, #2
 800b48a:	d149      	bne.n	800b520 <find_volume+0x1bc>
 800b48c:	2300      	movs	r3, #0
 800b48e:	643b      	str	r3, [r7, #64]	@ 0x40
 800b490:	e01e      	b.n	800b4d0 <find_volume+0x16c>
 800b492:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b494:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 800b498:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b49a:	011b      	lsls	r3, r3, #4
 800b49c:	f503 73df 	add.w	r3, r3, #446	@ 0x1be
 800b4a0:	4413      	add	r3, r2
 800b4a2:	633b      	str	r3, [r7, #48]	@ 0x30
 800b4a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b4a6:	3304      	adds	r3, #4
 800b4a8:	781b      	ldrb	r3, [r3, #0]
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d006      	beq.n	800b4bc <find_volume+0x158>
 800b4ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b4b0:	3308      	adds	r3, #8
 800b4b2:	4618      	mov	r0, r3
 800b4b4:	f7fe f8f2 	bl	800969c <ld_dword>
 800b4b8:	4602      	mov	r2, r0
 800b4ba:	e000      	b.n	800b4be <find_volume+0x15a>
 800b4bc:	2200      	movs	r2, #0
 800b4be:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4c0:	009b      	lsls	r3, r3, #2
 800b4c2:	3358      	adds	r3, #88	@ 0x58
 800b4c4:	443b      	add	r3, r7
 800b4c6:	f843 2c44 	str.w	r2, [r3, #-68]
 800b4ca:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4cc:	3301      	adds	r3, #1
 800b4ce:	643b      	str	r3, [r7, #64]	@ 0x40
 800b4d0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4d2:	2b03      	cmp	r3, #3
 800b4d4:	d9dd      	bls.n	800b492 <find_volume+0x12e>
 800b4d6:	2300      	movs	r3, #0
 800b4d8:	643b      	str	r3, [r7, #64]	@ 0x40
 800b4da:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4dc:	2b00      	cmp	r3, #0
 800b4de:	d002      	beq.n	800b4e6 <find_volume+0x182>
 800b4e0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4e2:	3b01      	subs	r3, #1
 800b4e4:	643b      	str	r3, [r7, #64]	@ 0x40
 800b4e6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b4e8:	009b      	lsls	r3, r3, #2
 800b4ea:	3358      	adds	r3, #88	@ 0x58
 800b4ec:	443b      	add	r3, r7
 800b4ee:	f853 3c44 	ldr.w	r3, [r3, #-68]
 800b4f2:	653b      	str	r3, [r7, #80]	@ 0x50
 800b4f4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b4f6:	2b00      	cmp	r3, #0
 800b4f8:	d005      	beq.n	800b506 <find_volume+0x1a2>
 800b4fa:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800b4fc:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800b4fe:	f7ff fedb 	bl	800b2b8 <check_fs>
 800b502:	4603      	mov	r3, r0
 800b504:	e000      	b.n	800b508 <find_volume+0x1a4>
 800b506:	2303      	movs	r3, #3
 800b508:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800b50c:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b510:	2b01      	cmp	r3, #1
 800b512:	d905      	bls.n	800b520 <find_volume+0x1bc>
 800b514:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b516:	3301      	adds	r3, #1
 800b518:	643b      	str	r3, [r7, #64]	@ 0x40
 800b51a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b51c:	2b03      	cmp	r3, #3
 800b51e:	d9e2      	bls.n	800b4e6 <find_volume+0x182>
 800b520:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b524:	2b04      	cmp	r3, #4
 800b526:	d101      	bne.n	800b52c <find_volume+0x1c8>
 800b528:	2301      	movs	r3, #1
 800b52a:	e194      	b.n	800b856 <find_volume+0x4f2>
 800b52c:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b530:	2b01      	cmp	r3, #1
 800b532:	d901      	bls.n	800b538 <find_volume+0x1d4>
 800b534:	230d      	movs	r3, #13
 800b536:	e18e      	b.n	800b856 <find_volume+0x4f2>
 800b538:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b53a:	3338      	adds	r3, #56	@ 0x38
 800b53c:	330b      	adds	r3, #11
 800b53e:	4618      	mov	r0, r3
 800b540:	f7fe f894 	bl	800966c <ld_word>
 800b544:	4603      	mov	r3, r0
 800b546:	461a      	mov	r2, r3
 800b548:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b54a:	899b      	ldrh	r3, [r3, #12]
 800b54c:	429a      	cmp	r2, r3
 800b54e:	d001      	beq.n	800b554 <find_volume+0x1f0>
 800b550:	230d      	movs	r3, #13
 800b552:	e180      	b.n	800b856 <find_volume+0x4f2>
 800b554:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b556:	3338      	adds	r3, #56	@ 0x38
 800b558:	3316      	adds	r3, #22
 800b55a:	4618      	mov	r0, r3
 800b55c:	f7fe f886 	bl	800966c <ld_word>
 800b560:	4603      	mov	r3, r0
 800b562:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b564:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b566:	2b00      	cmp	r3, #0
 800b568:	d106      	bne.n	800b578 <find_volume+0x214>
 800b56a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b56c:	3338      	adds	r3, #56	@ 0x38
 800b56e:	3324      	adds	r3, #36	@ 0x24
 800b570:	4618      	mov	r0, r3
 800b572:	f7fe f893 	bl	800969c <ld_dword>
 800b576:	64f8      	str	r0, [r7, #76]	@ 0x4c
 800b578:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b57a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800b57c:	621a      	str	r2, [r3, #32]
 800b57e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b580:	f893 2048 	ldrb.w	r2, [r3, #72]	@ 0x48
 800b584:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b586:	709a      	strb	r2, [r3, #2]
 800b588:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b58a:	789b      	ldrb	r3, [r3, #2]
 800b58c:	2b01      	cmp	r3, #1
 800b58e:	d005      	beq.n	800b59c <find_volume+0x238>
 800b590:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b592:	789b      	ldrb	r3, [r3, #2]
 800b594:	2b02      	cmp	r3, #2
 800b596:	d001      	beq.n	800b59c <find_volume+0x238>
 800b598:	230d      	movs	r3, #13
 800b59a:	e15c      	b.n	800b856 <find_volume+0x4f2>
 800b59c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b59e:	789b      	ldrb	r3, [r3, #2]
 800b5a0:	461a      	mov	r2, r3
 800b5a2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b5a4:	fb02 f303 	mul.w	r3, r2, r3
 800b5a8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b5aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5ac:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800b5b0:	461a      	mov	r2, r3
 800b5b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5b4:	815a      	strh	r2, [r3, #10]
 800b5b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5b8:	895b      	ldrh	r3, [r3, #10]
 800b5ba:	2b00      	cmp	r3, #0
 800b5bc:	d008      	beq.n	800b5d0 <find_volume+0x26c>
 800b5be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5c0:	895b      	ldrh	r3, [r3, #10]
 800b5c2:	461a      	mov	r2, r3
 800b5c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5c6:	895b      	ldrh	r3, [r3, #10]
 800b5c8:	3b01      	subs	r3, #1
 800b5ca:	4013      	ands	r3, r2
 800b5cc:	2b00      	cmp	r3, #0
 800b5ce:	d001      	beq.n	800b5d4 <find_volume+0x270>
 800b5d0:	230d      	movs	r3, #13
 800b5d2:	e140      	b.n	800b856 <find_volume+0x4f2>
 800b5d4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5d6:	3338      	adds	r3, #56	@ 0x38
 800b5d8:	3311      	adds	r3, #17
 800b5da:	4618      	mov	r0, r3
 800b5dc:	f7fe f846 	bl	800966c <ld_word>
 800b5e0:	4603      	mov	r3, r0
 800b5e2:	461a      	mov	r2, r3
 800b5e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5e6:	811a      	strh	r2, [r3, #8]
 800b5e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b5ea:	891b      	ldrh	r3, [r3, #8]
 800b5ec:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b5ee:	8992      	ldrh	r2, [r2, #12]
 800b5f0:	0952      	lsrs	r2, r2, #5
 800b5f2:	b292      	uxth	r2, r2
 800b5f4:	fbb3 f1f2 	udiv	r1, r3, r2
 800b5f8:	fb01 f202 	mul.w	r2, r1, r2
 800b5fc:	1a9b      	subs	r3, r3, r2
 800b5fe:	b29b      	uxth	r3, r3
 800b600:	2b00      	cmp	r3, #0
 800b602:	d003      	beq.n	800b60c <find_volume+0x2a8>
 800b604:	230d      	movs	r3, #13
 800b606:	e126      	b.n	800b856 <find_volume+0x4f2>
 800b608:	2001cb00 	.word	0x2001cb00
 800b60c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b60e:	3338      	adds	r3, #56	@ 0x38
 800b610:	3313      	adds	r3, #19
 800b612:	4618      	mov	r0, r3
 800b614:	f7fe f82a 	bl	800966c <ld_word>
 800b618:	4603      	mov	r3, r0
 800b61a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b61c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800b61e:	2b00      	cmp	r3, #0
 800b620:	d106      	bne.n	800b630 <find_volume+0x2cc>
 800b622:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b624:	3338      	adds	r3, #56	@ 0x38
 800b626:	3320      	adds	r3, #32
 800b628:	4618      	mov	r0, r3
 800b62a:	f7fe f837 	bl	800969c <ld_dword>
 800b62e:	64b8      	str	r0, [r7, #72]	@ 0x48
 800b630:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b632:	3338      	adds	r3, #56	@ 0x38
 800b634:	330e      	adds	r3, #14
 800b636:	4618      	mov	r0, r3
 800b638:	f7fe f818 	bl	800966c <ld_word>
 800b63c:	4603      	mov	r3, r0
 800b63e:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 800b640:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 800b642:	2b00      	cmp	r3, #0
 800b644:	d101      	bne.n	800b64a <find_volume+0x2e6>
 800b646:	230d      	movs	r3, #13
 800b648:	e105      	b.n	800b856 <find_volume+0x4f2>
 800b64a:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 800b64c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b64e:	4413      	add	r3, r2
 800b650:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b652:	8911      	ldrh	r1, [r2, #8]
 800b654:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b656:	8992      	ldrh	r2, [r2, #12]
 800b658:	0952      	lsrs	r2, r2, #5
 800b65a:	b292      	uxth	r2, r2
 800b65c:	fbb1 f2f2 	udiv	r2, r1, r2
 800b660:	b292      	uxth	r2, r2
 800b662:	4413      	add	r3, r2
 800b664:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b666:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b668:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b66a:	429a      	cmp	r2, r3
 800b66c:	d201      	bcs.n	800b672 <find_volume+0x30e>
 800b66e:	230d      	movs	r3, #13
 800b670:	e0f1      	b.n	800b856 <find_volume+0x4f2>
 800b672:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b674:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b676:	1ad3      	subs	r3, r2, r3
 800b678:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b67a:	8952      	ldrh	r2, [r2, #10]
 800b67c:	fbb3 f3f2 	udiv	r3, r3, r2
 800b680:	627b      	str	r3, [r7, #36]	@ 0x24
 800b682:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b684:	2b00      	cmp	r3, #0
 800b686:	d101      	bne.n	800b68c <find_volume+0x328>
 800b688:	230d      	movs	r3, #13
 800b68a:	e0e4      	b.n	800b856 <find_volume+0x4f2>
 800b68c:	2303      	movs	r3, #3
 800b68e:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800b692:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b694:	f64f 72f5 	movw	r2, #65525	@ 0xfff5
 800b698:	4293      	cmp	r3, r2
 800b69a:	d802      	bhi.n	800b6a2 <find_volume+0x33e>
 800b69c:	2302      	movs	r3, #2
 800b69e:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800b6a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6a4:	f640 72f5 	movw	r2, #4085	@ 0xff5
 800b6a8:	4293      	cmp	r3, r2
 800b6aa:	d802      	bhi.n	800b6b2 <find_volume+0x34e>
 800b6ac:	2301      	movs	r3, #1
 800b6ae:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800b6b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6b4:	1c9a      	adds	r2, r3, #2
 800b6b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6b8:	61da      	str	r2, [r3, #28]
 800b6ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6bc:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800b6be:	625a      	str	r2, [r3, #36]	@ 0x24
 800b6c0:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 800b6c2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b6c4:	441a      	add	r2, r3
 800b6c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6c8:	629a      	str	r2, [r3, #40]	@ 0x28
 800b6ca:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800b6cc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b6ce:	441a      	add	r2, r3
 800b6d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6d2:	631a      	str	r2, [r3, #48]	@ 0x30
 800b6d4:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b6d8:	2b03      	cmp	r3, #3
 800b6da:	d11e      	bne.n	800b71a <find_volume+0x3b6>
 800b6dc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6de:	3338      	adds	r3, #56	@ 0x38
 800b6e0:	332a      	adds	r3, #42	@ 0x2a
 800b6e2:	4618      	mov	r0, r3
 800b6e4:	f7fd ffc2 	bl	800966c <ld_word>
 800b6e8:	4603      	mov	r3, r0
 800b6ea:	2b00      	cmp	r3, #0
 800b6ec:	d001      	beq.n	800b6f2 <find_volume+0x38e>
 800b6ee:	230d      	movs	r3, #13
 800b6f0:	e0b1      	b.n	800b856 <find_volume+0x4f2>
 800b6f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6f4:	891b      	ldrh	r3, [r3, #8]
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	d001      	beq.n	800b6fe <find_volume+0x39a>
 800b6fa:	230d      	movs	r3, #13
 800b6fc:	e0ab      	b.n	800b856 <find_volume+0x4f2>
 800b6fe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b700:	3338      	adds	r3, #56	@ 0x38
 800b702:	332c      	adds	r3, #44	@ 0x2c
 800b704:	4618      	mov	r0, r3
 800b706:	f7fd ffc9 	bl	800969c <ld_dword>
 800b70a:	4602      	mov	r2, r0
 800b70c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b70e:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b710:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b712:	69db      	ldr	r3, [r3, #28]
 800b714:	009b      	lsls	r3, r3, #2
 800b716:	647b      	str	r3, [r7, #68]	@ 0x44
 800b718:	e01f      	b.n	800b75a <find_volume+0x3f6>
 800b71a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b71c:	891b      	ldrh	r3, [r3, #8]
 800b71e:	2b00      	cmp	r3, #0
 800b720:	d101      	bne.n	800b726 <find_volume+0x3c2>
 800b722:	230d      	movs	r3, #13
 800b724:	e097      	b.n	800b856 <find_volume+0x4f2>
 800b726:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b728:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b72a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b72c:	441a      	add	r2, r3
 800b72e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b730:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b732:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b736:	2b02      	cmp	r3, #2
 800b738:	d103      	bne.n	800b742 <find_volume+0x3de>
 800b73a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b73c:	69db      	ldr	r3, [r3, #28]
 800b73e:	005b      	lsls	r3, r3, #1
 800b740:	e00a      	b.n	800b758 <find_volume+0x3f4>
 800b742:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b744:	69da      	ldr	r2, [r3, #28]
 800b746:	4613      	mov	r3, r2
 800b748:	005b      	lsls	r3, r3, #1
 800b74a:	4413      	add	r3, r2
 800b74c:	085a      	lsrs	r2, r3, #1
 800b74e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b750:	69db      	ldr	r3, [r3, #28]
 800b752:	f003 0301 	and.w	r3, r3, #1
 800b756:	4413      	add	r3, r2
 800b758:	647b      	str	r3, [r7, #68]	@ 0x44
 800b75a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b75c:	6a1a      	ldr	r2, [r3, #32]
 800b75e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b760:	899b      	ldrh	r3, [r3, #12]
 800b762:	4619      	mov	r1, r3
 800b764:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b766:	440b      	add	r3, r1
 800b768:	3b01      	subs	r3, #1
 800b76a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800b76c:	8989      	ldrh	r1, [r1, #12]
 800b76e:	fbb3 f3f1 	udiv	r3, r3, r1
 800b772:	429a      	cmp	r2, r3
 800b774:	d201      	bcs.n	800b77a <find_volume+0x416>
 800b776:	230d      	movs	r3, #13
 800b778:	e06d      	b.n	800b856 <find_volume+0x4f2>
 800b77a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b77c:	f04f 32ff 	mov.w	r2, #4294967295
 800b780:	619a      	str	r2, [r3, #24]
 800b782:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b784:	699a      	ldr	r2, [r3, #24]
 800b786:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b788:	615a      	str	r2, [r3, #20]
 800b78a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b78c:	2280      	movs	r2, #128	@ 0x80
 800b78e:	711a      	strb	r2, [r3, #4]
 800b790:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800b794:	2b03      	cmp	r3, #3
 800b796:	d149      	bne.n	800b82c <find_volume+0x4c8>
 800b798:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b79a:	3338      	adds	r3, #56	@ 0x38
 800b79c:	3330      	adds	r3, #48	@ 0x30
 800b79e:	4618      	mov	r0, r3
 800b7a0:	f7fd ff64 	bl	800966c <ld_word>
 800b7a4:	4603      	mov	r3, r0
 800b7a6:	2b01      	cmp	r3, #1
 800b7a8:	d140      	bne.n	800b82c <find_volume+0x4c8>
 800b7aa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b7ac:	3301      	adds	r3, #1
 800b7ae:	4619      	mov	r1, r3
 800b7b0:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800b7b2:	f7fe fa0b 	bl	8009bcc <move_window>
 800b7b6:	4603      	mov	r3, r0
 800b7b8:	2b00      	cmp	r3, #0
 800b7ba:	d137      	bne.n	800b82c <find_volume+0x4c8>
 800b7bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b7be:	2200      	movs	r2, #0
 800b7c0:	711a      	strb	r2, [r3, #4]
 800b7c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b7c4:	3338      	adds	r3, #56	@ 0x38
 800b7c6:	f503 73ff 	add.w	r3, r3, #510	@ 0x1fe
 800b7ca:	4618      	mov	r0, r3
 800b7cc:	f7fd ff4e 	bl	800966c <ld_word>
 800b7d0:	4603      	mov	r3, r0
 800b7d2:	461a      	mov	r2, r3
 800b7d4:	f64a 2355 	movw	r3, #43605	@ 0xaa55
 800b7d8:	429a      	cmp	r2, r3
 800b7da:	d127      	bne.n	800b82c <find_volume+0x4c8>
 800b7dc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b7de:	3338      	adds	r3, #56	@ 0x38
 800b7e0:	4618      	mov	r0, r3
 800b7e2:	f7fd ff5b 	bl	800969c <ld_dword>
 800b7e6:	4603      	mov	r3, r0
 800b7e8:	4a1d      	ldr	r2, [pc, #116]	@ (800b860 <find_volume+0x4fc>)
 800b7ea:	4293      	cmp	r3, r2
 800b7ec:	d11e      	bne.n	800b82c <find_volume+0x4c8>
 800b7ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b7f0:	3338      	adds	r3, #56	@ 0x38
 800b7f2:	f503 73f2 	add.w	r3, r3, #484	@ 0x1e4
 800b7f6:	4618      	mov	r0, r3
 800b7f8:	f7fd ff50 	bl	800969c <ld_dword>
 800b7fc:	4603      	mov	r3, r0
 800b7fe:	4a19      	ldr	r2, [pc, #100]	@ (800b864 <find_volume+0x500>)
 800b800:	4293      	cmp	r3, r2
 800b802:	d113      	bne.n	800b82c <find_volume+0x4c8>
 800b804:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b806:	3338      	adds	r3, #56	@ 0x38
 800b808:	f503 73f4 	add.w	r3, r3, #488	@ 0x1e8
 800b80c:	4618      	mov	r0, r3
 800b80e:	f7fd ff45 	bl	800969c <ld_dword>
 800b812:	4602      	mov	r2, r0
 800b814:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b816:	619a      	str	r2, [r3, #24]
 800b818:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b81a:	3338      	adds	r3, #56	@ 0x38
 800b81c:	f503 73f6 	add.w	r3, r3, #492	@ 0x1ec
 800b820:	4618      	mov	r0, r3
 800b822:	f7fd ff3b 	bl	800969c <ld_dword>
 800b826:	4602      	mov	r2, r0
 800b828:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b82a:	615a      	str	r2, [r3, #20]
 800b82c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b82e:	f897 2057 	ldrb.w	r2, [r7, #87]	@ 0x57
 800b832:	701a      	strb	r2, [r3, #0]
 800b834:	4b0c      	ldr	r3, [pc, #48]	@ (800b868 <find_volume+0x504>)
 800b836:	881b      	ldrh	r3, [r3, #0]
 800b838:	3301      	adds	r3, #1
 800b83a:	b29a      	uxth	r2, r3
 800b83c:	4b0a      	ldr	r3, [pc, #40]	@ (800b868 <find_volume+0x504>)
 800b83e:	801a      	strh	r2, [r3, #0]
 800b840:	4b09      	ldr	r3, [pc, #36]	@ (800b868 <find_volume+0x504>)
 800b842:	881a      	ldrh	r2, [r3, #0]
 800b844:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b846:	80da      	strh	r2, [r3, #6]
 800b848:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b84a:	4a08      	ldr	r2, [pc, #32]	@ (800b86c <find_volume+0x508>)
 800b84c:	611a      	str	r2, [r3, #16]
 800b84e:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800b850:	f7fe f954 	bl	8009afc <clear_lock>
 800b854:	2300      	movs	r3, #0
 800b856:	4618      	mov	r0, r3
 800b858:	3758      	adds	r7, #88	@ 0x58
 800b85a:	46bd      	mov	sp, r7
 800b85c:	bd80      	pop	{r7, pc}
 800b85e:	bf00      	nop
 800b860:	41615252 	.word	0x41615252
 800b864:	61417272 	.word	0x61417272
 800b868:	2001cb04 	.word	0x2001cb04
 800b86c:	2001cb28 	.word	0x2001cb28

0800b870 <validate>:
 800b870:	b580      	push	{r7, lr}
 800b872:	b084      	sub	sp, #16
 800b874:	af00      	add	r7, sp, #0
 800b876:	6078      	str	r0, [r7, #4]
 800b878:	6039      	str	r1, [r7, #0]
 800b87a:	2309      	movs	r3, #9
 800b87c:	73fb      	strb	r3, [r7, #15]
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	2b00      	cmp	r3, #0
 800b882:	d01c      	beq.n	800b8be <validate+0x4e>
 800b884:	687b      	ldr	r3, [r7, #4]
 800b886:	681b      	ldr	r3, [r3, #0]
 800b888:	2b00      	cmp	r3, #0
 800b88a:	d018      	beq.n	800b8be <validate+0x4e>
 800b88c:	687b      	ldr	r3, [r7, #4]
 800b88e:	681b      	ldr	r3, [r3, #0]
 800b890:	781b      	ldrb	r3, [r3, #0]
 800b892:	2b00      	cmp	r3, #0
 800b894:	d013      	beq.n	800b8be <validate+0x4e>
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	889a      	ldrh	r2, [r3, #4]
 800b89a:	687b      	ldr	r3, [r7, #4]
 800b89c:	681b      	ldr	r3, [r3, #0]
 800b89e:	88db      	ldrh	r3, [r3, #6]
 800b8a0:	429a      	cmp	r2, r3
 800b8a2:	d10c      	bne.n	800b8be <validate+0x4e>
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	681b      	ldr	r3, [r3, #0]
 800b8a8:	785b      	ldrb	r3, [r3, #1]
 800b8aa:	4618      	mov	r0, r3
 800b8ac:	f7fd fe3e 	bl	800952c <disk_status>
 800b8b0:	4603      	mov	r3, r0
 800b8b2:	f003 0301 	and.w	r3, r3, #1
 800b8b6:	2b00      	cmp	r3, #0
 800b8b8:	d101      	bne.n	800b8be <validate+0x4e>
 800b8ba:	2300      	movs	r3, #0
 800b8bc:	73fb      	strb	r3, [r7, #15]
 800b8be:	7bfb      	ldrb	r3, [r7, #15]
 800b8c0:	2b00      	cmp	r3, #0
 800b8c2:	d102      	bne.n	800b8ca <validate+0x5a>
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	681b      	ldr	r3, [r3, #0]
 800b8c8:	e000      	b.n	800b8cc <validate+0x5c>
 800b8ca:	2300      	movs	r3, #0
 800b8cc:	683a      	ldr	r2, [r7, #0]
 800b8ce:	6013      	str	r3, [r2, #0]
 800b8d0:	7bfb      	ldrb	r3, [r7, #15]
 800b8d2:	4618      	mov	r0, r3
 800b8d4:	3710      	adds	r7, #16
 800b8d6:	46bd      	mov	sp, r7
 800b8d8:	bd80      	pop	{r7, pc}
	...

0800b8dc <f_mount>:
 800b8dc:	b580      	push	{r7, lr}
 800b8de:	b088      	sub	sp, #32
 800b8e0:	af00      	add	r7, sp, #0
 800b8e2:	60f8      	str	r0, [r7, #12]
 800b8e4:	60b9      	str	r1, [r7, #8]
 800b8e6:	4613      	mov	r3, r2
 800b8e8:	71fb      	strb	r3, [r7, #7]
 800b8ea:	68bb      	ldr	r3, [r7, #8]
 800b8ec:	613b      	str	r3, [r7, #16]
 800b8ee:	f107 0310 	add.w	r3, r7, #16
 800b8f2:	4618      	mov	r0, r3
 800b8f4:	f7ff fc9c 	bl	800b230 <get_ldnumber>
 800b8f8:	61f8      	str	r0, [r7, #28]
 800b8fa:	69fb      	ldr	r3, [r7, #28]
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	da01      	bge.n	800b904 <f_mount+0x28>
 800b900:	230b      	movs	r3, #11
 800b902:	e02b      	b.n	800b95c <f_mount+0x80>
 800b904:	4a17      	ldr	r2, [pc, #92]	@ (800b964 <f_mount+0x88>)
 800b906:	69fb      	ldr	r3, [r7, #28]
 800b908:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b90c:	61bb      	str	r3, [r7, #24]
 800b90e:	69bb      	ldr	r3, [r7, #24]
 800b910:	2b00      	cmp	r3, #0
 800b912:	d005      	beq.n	800b920 <f_mount+0x44>
 800b914:	69b8      	ldr	r0, [r7, #24]
 800b916:	f7fe f8f1 	bl	8009afc <clear_lock>
 800b91a:	69bb      	ldr	r3, [r7, #24]
 800b91c:	2200      	movs	r2, #0
 800b91e:	701a      	strb	r2, [r3, #0]
 800b920:	68fb      	ldr	r3, [r7, #12]
 800b922:	2b00      	cmp	r3, #0
 800b924:	d002      	beq.n	800b92c <f_mount+0x50>
 800b926:	68fb      	ldr	r3, [r7, #12]
 800b928:	2200      	movs	r2, #0
 800b92a:	701a      	strb	r2, [r3, #0]
 800b92c:	68fa      	ldr	r2, [r7, #12]
 800b92e:	490d      	ldr	r1, [pc, #52]	@ (800b964 <f_mount+0x88>)
 800b930:	69fb      	ldr	r3, [r7, #28]
 800b932:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800b936:	68fb      	ldr	r3, [r7, #12]
 800b938:	2b00      	cmp	r3, #0
 800b93a:	d002      	beq.n	800b942 <f_mount+0x66>
 800b93c:	79fb      	ldrb	r3, [r7, #7]
 800b93e:	2b01      	cmp	r3, #1
 800b940:	d001      	beq.n	800b946 <f_mount+0x6a>
 800b942:	2300      	movs	r3, #0
 800b944:	e00a      	b.n	800b95c <f_mount+0x80>
 800b946:	f107 010c 	add.w	r1, r7, #12
 800b94a:	f107 0308 	add.w	r3, r7, #8
 800b94e:	2200      	movs	r2, #0
 800b950:	4618      	mov	r0, r3
 800b952:	f7ff fd07 	bl	800b364 <find_volume>
 800b956:	4603      	mov	r3, r0
 800b958:	75fb      	strb	r3, [r7, #23]
 800b95a:	7dfb      	ldrb	r3, [r7, #23]
 800b95c:	4618      	mov	r0, r3
 800b95e:	3720      	adds	r7, #32
 800b960:	46bd      	mov	sp, r7
 800b962:	bd80      	pop	{r7, pc}
 800b964:	2001cb00 	.word	0x2001cb00

0800b968 <f_open>:
 800b968:	b580      	push	{r7, lr}
 800b96a:	b09a      	sub	sp, #104	@ 0x68
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	60f8      	str	r0, [r7, #12]
 800b970:	60b9      	str	r1, [r7, #8]
 800b972:	4613      	mov	r3, r2
 800b974:	71fb      	strb	r3, [r7, #7]
 800b976:	68fb      	ldr	r3, [r7, #12]
 800b978:	2b00      	cmp	r3, #0
 800b97a:	d101      	bne.n	800b980 <f_open+0x18>
 800b97c:	2309      	movs	r3, #9
 800b97e:	e1b7      	b.n	800bcf0 <f_open+0x388>
 800b980:	79fb      	ldrb	r3, [r7, #7]
 800b982:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800b986:	71fb      	strb	r3, [r7, #7]
 800b988:	79fa      	ldrb	r2, [r7, #7]
 800b98a:	f107 0114 	add.w	r1, r7, #20
 800b98e:	f107 0308 	add.w	r3, r7, #8
 800b992:	4618      	mov	r0, r3
 800b994:	f7ff fce6 	bl	800b364 <find_volume>
 800b998:	4603      	mov	r3, r0
 800b99a:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800b99e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800b9a2:	2b00      	cmp	r3, #0
 800b9a4:	f040 819b 	bne.w	800bcde <f_open+0x376>
 800b9a8:	697b      	ldr	r3, [r7, #20]
 800b9aa:	61bb      	str	r3, [r7, #24]
 800b9ac:	68ba      	ldr	r2, [r7, #8]
 800b9ae:	f107 0318 	add.w	r3, r7, #24
 800b9b2:	4611      	mov	r1, r2
 800b9b4:	4618      	mov	r0, r3
 800b9b6:	f7ff fbc5 	bl	800b144 <follow_path>
 800b9ba:	4603      	mov	r3, r0
 800b9bc:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800b9c0:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800b9c4:	2b00      	cmp	r3, #0
 800b9c6:	d118      	bne.n	800b9fa <f_open+0x92>
 800b9c8:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 800b9cc:	b25b      	sxtb	r3, r3
 800b9ce:	2b00      	cmp	r3, #0
 800b9d0:	da03      	bge.n	800b9da <f_open+0x72>
 800b9d2:	2306      	movs	r3, #6
 800b9d4:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800b9d8:	e00f      	b.n	800b9fa <f_open+0x92>
 800b9da:	79fb      	ldrb	r3, [r7, #7]
 800b9dc:	2b01      	cmp	r3, #1
 800b9de:	bf8c      	ite	hi
 800b9e0:	2301      	movhi	r3, #1
 800b9e2:	2300      	movls	r3, #0
 800b9e4:	b2db      	uxtb	r3, r3
 800b9e6:	461a      	mov	r2, r3
 800b9e8:	f107 0318 	add.w	r3, r7, #24
 800b9ec:	4611      	mov	r1, r2
 800b9ee:	4618      	mov	r0, r3
 800b9f0:	f7fd ff3c 	bl	800986c <chk_lock>
 800b9f4:	4603      	mov	r3, r0
 800b9f6:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800b9fa:	79fb      	ldrb	r3, [r7, #7]
 800b9fc:	f003 031c 	and.w	r3, r3, #28
 800ba00:	2b00      	cmp	r3, #0
 800ba02:	d07f      	beq.n	800bb04 <f_open+0x19c>
 800ba04:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800ba08:	2b00      	cmp	r3, #0
 800ba0a:	d017      	beq.n	800ba3c <f_open+0xd4>
 800ba0c:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800ba10:	2b04      	cmp	r3, #4
 800ba12:	d10e      	bne.n	800ba32 <f_open+0xca>
 800ba14:	f7fd ff86 	bl	8009924 <enq_lock>
 800ba18:	4603      	mov	r3, r0
 800ba1a:	2b00      	cmp	r3, #0
 800ba1c:	d006      	beq.n	800ba2c <f_open+0xc4>
 800ba1e:	f107 0318 	add.w	r3, r7, #24
 800ba22:	4618      	mov	r0, r3
 800ba24:	f7ff f8de 	bl	800abe4 <dir_register>
 800ba28:	4603      	mov	r3, r0
 800ba2a:	e000      	b.n	800ba2e <f_open+0xc6>
 800ba2c:	2312      	movs	r3, #18
 800ba2e:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800ba32:	79fb      	ldrb	r3, [r7, #7]
 800ba34:	f043 0308 	orr.w	r3, r3, #8
 800ba38:	71fb      	strb	r3, [r7, #7]
 800ba3a:	e010      	b.n	800ba5e <f_open+0xf6>
 800ba3c:	7fbb      	ldrb	r3, [r7, #30]
 800ba3e:	f003 0311 	and.w	r3, r3, #17
 800ba42:	2b00      	cmp	r3, #0
 800ba44:	d003      	beq.n	800ba4e <f_open+0xe6>
 800ba46:	2307      	movs	r3, #7
 800ba48:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800ba4c:	e007      	b.n	800ba5e <f_open+0xf6>
 800ba4e:	79fb      	ldrb	r3, [r7, #7]
 800ba50:	f003 0304 	and.w	r3, r3, #4
 800ba54:	2b00      	cmp	r3, #0
 800ba56:	d002      	beq.n	800ba5e <f_open+0xf6>
 800ba58:	2308      	movs	r3, #8
 800ba5a:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800ba5e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800ba62:	2b00      	cmp	r3, #0
 800ba64:	d168      	bne.n	800bb38 <f_open+0x1d0>
 800ba66:	79fb      	ldrb	r3, [r7, #7]
 800ba68:	f003 0308 	and.w	r3, r3, #8
 800ba6c:	2b00      	cmp	r3, #0
 800ba6e:	d063      	beq.n	800bb38 <f_open+0x1d0>
 800ba70:	f7fd fcfe 	bl	8009470 <get_fattime>
 800ba74:	65b8      	str	r0, [r7, #88]	@ 0x58
 800ba76:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ba78:	330e      	adds	r3, #14
 800ba7a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800ba7c:	4618      	mov	r0, r3
 800ba7e:	f7fd fe4b 	bl	8009718 <st_dword>
 800ba82:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ba84:	3316      	adds	r3, #22
 800ba86:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800ba88:	4618      	mov	r0, r3
 800ba8a:	f7fd fe45 	bl	8009718 <st_dword>
 800ba8e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ba90:	330b      	adds	r3, #11
 800ba92:	2220      	movs	r2, #32
 800ba94:	701a      	strb	r2, [r3, #0]
 800ba96:	697b      	ldr	r3, [r7, #20]
 800ba98:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800ba9a:	4611      	mov	r1, r2
 800ba9c:	4618      	mov	r0, r3
 800ba9e:	f7fe fe1a 	bl	800a6d6 <ld_clust>
 800baa2:	6578      	str	r0, [r7, #84]	@ 0x54
 800baa4:	697b      	ldr	r3, [r7, #20]
 800baa6:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800baa8:	2200      	movs	r2, #0
 800baaa:	4618      	mov	r0, r3
 800baac:	f7fe fe32 	bl	800a714 <st_clust>
 800bab0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bab2:	331c      	adds	r3, #28
 800bab4:	2100      	movs	r1, #0
 800bab6:	4618      	mov	r0, r3
 800bab8:	f7fd fe2e 	bl	8009718 <st_dword>
 800babc:	697b      	ldr	r3, [r7, #20]
 800babe:	2201      	movs	r2, #1
 800bac0:	70da      	strb	r2, [r3, #3]
 800bac2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800bac4:	2b00      	cmp	r3, #0
 800bac6:	d037      	beq.n	800bb38 <f_open+0x1d0>
 800bac8:	697b      	ldr	r3, [r7, #20]
 800baca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800bacc:	65bb      	str	r3, [r7, #88]	@ 0x58
 800bace:	f107 0318 	add.w	r3, r7, #24
 800bad2:	2200      	movs	r2, #0
 800bad4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800bad6:	4618      	mov	r0, r3
 800bad8:	f7fe fb22 	bl	800a120 <remove_chain>
 800badc:	4603      	mov	r3, r0
 800bade:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bae2:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bae6:	2b00      	cmp	r3, #0
 800bae8:	d126      	bne.n	800bb38 <f_open+0x1d0>
 800baea:	697b      	ldr	r3, [r7, #20]
 800baec:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800baee:	4618      	mov	r0, r3
 800baf0:	f7fe f86c 	bl	8009bcc <move_window>
 800baf4:	4603      	mov	r3, r0
 800baf6:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bafa:	697b      	ldr	r3, [r7, #20]
 800bafc:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800bafe:	3a01      	subs	r2, #1
 800bb00:	615a      	str	r2, [r3, #20]
 800bb02:	e019      	b.n	800bb38 <f_open+0x1d0>
 800bb04:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bb08:	2b00      	cmp	r3, #0
 800bb0a:	d115      	bne.n	800bb38 <f_open+0x1d0>
 800bb0c:	7fbb      	ldrb	r3, [r7, #30]
 800bb0e:	f003 0310 	and.w	r3, r3, #16
 800bb12:	2b00      	cmp	r3, #0
 800bb14:	d003      	beq.n	800bb1e <f_open+0x1b6>
 800bb16:	2304      	movs	r3, #4
 800bb18:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bb1c:	e00c      	b.n	800bb38 <f_open+0x1d0>
 800bb1e:	79fb      	ldrb	r3, [r7, #7]
 800bb20:	f003 0302 	and.w	r3, r3, #2
 800bb24:	2b00      	cmp	r3, #0
 800bb26:	d007      	beq.n	800bb38 <f_open+0x1d0>
 800bb28:	7fbb      	ldrb	r3, [r7, #30]
 800bb2a:	f003 0301 	and.w	r3, r3, #1
 800bb2e:	2b00      	cmp	r3, #0
 800bb30:	d002      	beq.n	800bb38 <f_open+0x1d0>
 800bb32:	2307      	movs	r3, #7
 800bb34:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bb38:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bb3c:	2b00      	cmp	r3, #0
 800bb3e:	d126      	bne.n	800bb8e <f_open+0x226>
 800bb40:	79fb      	ldrb	r3, [r7, #7]
 800bb42:	f003 0308 	and.w	r3, r3, #8
 800bb46:	2b00      	cmp	r3, #0
 800bb48:	d003      	beq.n	800bb52 <f_open+0x1ea>
 800bb4a:	79fb      	ldrb	r3, [r7, #7]
 800bb4c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800bb50:	71fb      	strb	r3, [r7, #7]
 800bb52:	697b      	ldr	r3, [r7, #20]
 800bb54:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800bb56:	68fb      	ldr	r3, [r7, #12]
 800bb58:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb5a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800bb5c:	68fb      	ldr	r3, [r7, #12]
 800bb5e:	629a      	str	r2, [r3, #40]	@ 0x28
 800bb60:	79fb      	ldrb	r3, [r7, #7]
 800bb62:	2b01      	cmp	r3, #1
 800bb64:	bf8c      	ite	hi
 800bb66:	2301      	movhi	r3, #1
 800bb68:	2300      	movls	r3, #0
 800bb6a:	b2db      	uxtb	r3, r3
 800bb6c:	461a      	mov	r2, r3
 800bb6e:	f107 0318 	add.w	r3, r7, #24
 800bb72:	4611      	mov	r1, r2
 800bb74:	4618      	mov	r0, r3
 800bb76:	f7fd fef7 	bl	8009968 <inc_lock>
 800bb7a:	4602      	mov	r2, r0
 800bb7c:	68fb      	ldr	r3, [r7, #12]
 800bb7e:	611a      	str	r2, [r3, #16]
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	691b      	ldr	r3, [r3, #16]
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	d102      	bne.n	800bb8e <f_open+0x226>
 800bb88:	2302      	movs	r3, #2
 800bb8a:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bb8e:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bb92:	2b00      	cmp	r3, #0
 800bb94:	f040 80a3 	bne.w	800bcde <f_open+0x376>
 800bb98:	697b      	ldr	r3, [r7, #20]
 800bb9a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800bb9c:	4611      	mov	r1, r2
 800bb9e:	4618      	mov	r0, r3
 800bba0:	f7fe fd99 	bl	800a6d6 <ld_clust>
 800bba4:	4602      	mov	r2, r0
 800bba6:	68fb      	ldr	r3, [r7, #12]
 800bba8:	609a      	str	r2, [r3, #8]
 800bbaa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bbac:	331c      	adds	r3, #28
 800bbae:	4618      	mov	r0, r3
 800bbb0:	f7fd fd74 	bl	800969c <ld_dword>
 800bbb4:	4602      	mov	r2, r0
 800bbb6:	68fb      	ldr	r3, [r7, #12]
 800bbb8:	60da      	str	r2, [r3, #12]
 800bbba:	68fb      	ldr	r3, [r7, #12]
 800bbbc:	2200      	movs	r2, #0
 800bbbe:	62da      	str	r2, [r3, #44]	@ 0x2c
 800bbc0:	697a      	ldr	r2, [r7, #20]
 800bbc2:	68fb      	ldr	r3, [r7, #12]
 800bbc4:	601a      	str	r2, [r3, #0]
 800bbc6:	697b      	ldr	r3, [r7, #20]
 800bbc8:	88da      	ldrh	r2, [r3, #6]
 800bbca:	68fb      	ldr	r3, [r7, #12]
 800bbcc:	809a      	strh	r2, [r3, #4]
 800bbce:	68fb      	ldr	r3, [r7, #12]
 800bbd0:	79fa      	ldrb	r2, [r7, #7]
 800bbd2:	751a      	strb	r2, [r3, #20]
 800bbd4:	68fb      	ldr	r3, [r7, #12]
 800bbd6:	2200      	movs	r2, #0
 800bbd8:	755a      	strb	r2, [r3, #21]
 800bbda:	68fb      	ldr	r3, [r7, #12]
 800bbdc:	2200      	movs	r2, #0
 800bbde:	621a      	str	r2, [r3, #32]
 800bbe0:	68fb      	ldr	r3, [r7, #12]
 800bbe2:	2200      	movs	r2, #0
 800bbe4:	619a      	str	r2, [r3, #24]
 800bbe6:	68fb      	ldr	r3, [r7, #12]
 800bbe8:	3330      	adds	r3, #48	@ 0x30
 800bbea:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800bbee:	2100      	movs	r1, #0
 800bbf0:	4618      	mov	r0, r3
 800bbf2:	f7fd fdde 	bl	80097b2 <mem_set>
 800bbf6:	79fb      	ldrb	r3, [r7, #7]
 800bbf8:	f003 0320 	and.w	r3, r3, #32
 800bbfc:	2b00      	cmp	r3, #0
 800bbfe:	d06e      	beq.n	800bcde <f_open+0x376>
 800bc00:	68fb      	ldr	r3, [r7, #12]
 800bc02:	68db      	ldr	r3, [r3, #12]
 800bc04:	2b00      	cmp	r3, #0
 800bc06:	d06a      	beq.n	800bcde <f_open+0x376>
 800bc08:	68fb      	ldr	r3, [r7, #12]
 800bc0a:	68da      	ldr	r2, [r3, #12]
 800bc0c:	68fb      	ldr	r3, [r7, #12]
 800bc0e:	619a      	str	r2, [r3, #24]
 800bc10:	697b      	ldr	r3, [r7, #20]
 800bc12:	895b      	ldrh	r3, [r3, #10]
 800bc14:	461a      	mov	r2, r3
 800bc16:	697b      	ldr	r3, [r7, #20]
 800bc18:	899b      	ldrh	r3, [r3, #12]
 800bc1a:	fb02 f303 	mul.w	r3, r2, r3
 800bc1e:	653b      	str	r3, [r7, #80]	@ 0x50
 800bc20:	68fb      	ldr	r3, [r7, #12]
 800bc22:	689b      	ldr	r3, [r3, #8]
 800bc24:	663b      	str	r3, [r7, #96]	@ 0x60
 800bc26:	68fb      	ldr	r3, [r7, #12]
 800bc28:	68db      	ldr	r3, [r3, #12]
 800bc2a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800bc2c:	e016      	b.n	800bc5c <f_open+0x2f4>
 800bc2e:	68fb      	ldr	r3, [r7, #12]
 800bc30:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 800bc32:	4618      	mov	r0, r3
 800bc34:	f7fe f887 	bl	8009d46 <get_fat>
 800bc38:	6638      	str	r0, [r7, #96]	@ 0x60
 800bc3a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800bc3c:	2b01      	cmp	r3, #1
 800bc3e:	d802      	bhi.n	800bc46 <f_open+0x2de>
 800bc40:	2302      	movs	r3, #2
 800bc42:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bc46:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800bc48:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bc4c:	d102      	bne.n	800bc54 <f_open+0x2ec>
 800bc4e:	2301      	movs	r3, #1
 800bc50:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bc54:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800bc56:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800bc58:	1ad3      	subs	r3, r2, r3
 800bc5a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800bc5c:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bc60:	2b00      	cmp	r3, #0
 800bc62:	d103      	bne.n	800bc6c <f_open+0x304>
 800bc64:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800bc66:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800bc68:	429a      	cmp	r2, r3
 800bc6a:	d8e0      	bhi.n	800bc2e <f_open+0x2c6>
 800bc6c:	68fb      	ldr	r3, [r7, #12]
 800bc6e:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800bc70:	61da      	str	r2, [r3, #28]
 800bc72:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bc76:	2b00      	cmp	r3, #0
 800bc78:	d131      	bne.n	800bcde <f_open+0x376>
 800bc7a:	697b      	ldr	r3, [r7, #20]
 800bc7c:	899b      	ldrh	r3, [r3, #12]
 800bc7e:	461a      	mov	r2, r3
 800bc80:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800bc82:	fbb3 f1f2 	udiv	r1, r3, r2
 800bc86:	fb01 f202 	mul.w	r2, r1, r2
 800bc8a:	1a9b      	subs	r3, r3, r2
 800bc8c:	2b00      	cmp	r3, #0
 800bc8e:	d026      	beq.n	800bcde <f_open+0x376>
 800bc90:	697b      	ldr	r3, [r7, #20]
 800bc92:	6e39      	ldr	r1, [r7, #96]	@ 0x60
 800bc94:	4618      	mov	r0, r3
 800bc96:	f7fe f837 	bl	8009d08 <clust2sect>
 800bc9a:	64f8      	str	r0, [r7, #76]	@ 0x4c
 800bc9c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bc9e:	2b00      	cmp	r3, #0
 800bca0:	d103      	bne.n	800bcaa <f_open+0x342>
 800bca2:	2302      	movs	r3, #2
 800bca4:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bca8:	e019      	b.n	800bcde <f_open+0x376>
 800bcaa:	697b      	ldr	r3, [r7, #20]
 800bcac:	899b      	ldrh	r3, [r3, #12]
 800bcae:	461a      	mov	r2, r3
 800bcb0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800bcb2:	fbb3 f2f2 	udiv	r2, r3, r2
 800bcb6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bcb8:	441a      	add	r2, r3
 800bcba:	68fb      	ldr	r3, [r7, #12]
 800bcbc:	621a      	str	r2, [r3, #32]
 800bcbe:	697b      	ldr	r3, [r7, #20]
 800bcc0:	7858      	ldrb	r0, [r3, #1]
 800bcc2:	68fb      	ldr	r3, [r7, #12]
 800bcc4:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bcc8:	68fb      	ldr	r3, [r7, #12]
 800bcca:	6a1a      	ldr	r2, [r3, #32]
 800bccc:	2301      	movs	r3, #1
 800bcce:	f7fd fc6f 	bl	80095b0 <disk_read>
 800bcd2:	4603      	mov	r3, r0
 800bcd4:	2b00      	cmp	r3, #0
 800bcd6:	d002      	beq.n	800bcde <f_open+0x376>
 800bcd8:	2301      	movs	r3, #1
 800bcda:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800bcde:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bce2:	2b00      	cmp	r3, #0
 800bce4:	d002      	beq.n	800bcec <f_open+0x384>
 800bce6:	68fb      	ldr	r3, [r7, #12]
 800bce8:	2200      	movs	r2, #0
 800bcea:	601a      	str	r2, [r3, #0]
 800bcec:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800bcf0:	4618      	mov	r0, r3
 800bcf2:	3768      	adds	r7, #104	@ 0x68
 800bcf4:	46bd      	mov	sp, r7
 800bcf6:	bd80      	pop	{r7, pc}

0800bcf8 <f_read>:
 800bcf8:	b580      	push	{r7, lr}
 800bcfa:	b08e      	sub	sp, #56	@ 0x38
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	60f8      	str	r0, [r7, #12]
 800bd00:	60b9      	str	r1, [r7, #8]
 800bd02:	607a      	str	r2, [r7, #4]
 800bd04:	603b      	str	r3, [r7, #0]
 800bd06:	68bb      	ldr	r3, [r7, #8]
 800bd08:	627b      	str	r3, [r7, #36]	@ 0x24
 800bd0a:	683b      	ldr	r3, [r7, #0]
 800bd0c:	2200      	movs	r2, #0
 800bd0e:	601a      	str	r2, [r3, #0]
 800bd10:	68fb      	ldr	r3, [r7, #12]
 800bd12:	f107 0214 	add.w	r2, r7, #20
 800bd16:	4611      	mov	r1, r2
 800bd18:	4618      	mov	r0, r3
 800bd1a:	f7ff fda9 	bl	800b870 <validate>
 800bd1e:	4603      	mov	r3, r0
 800bd20:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800bd24:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800bd28:	2b00      	cmp	r3, #0
 800bd2a:	d107      	bne.n	800bd3c <f_read+0x44>
 800bd2c:	68fb      	ldr	r3, [r7, #12]
 800bd2e:	7d5b      	ldrb	r3, [r3, #21]
 800bd30:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800bd34:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800bd38:	2b00      	cmp	r3, #0
 800bd3a:	d002      	beq.n	800bd42 <f_read+0x4a>
 800bd3c:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800bd40:	e135      	b.n	800bfae <f_read+0x2b6>
 800bd42:	68fb      	ldr	r3, [r7, #12]
 800bd44:	7d1b      	ldrb	r3, [r3, #20]
 800bd46:	f003 0301 	and.w	r3, r3, #1
 800bd4a:	2b00      	cmp	r3, #0
 800bd4c:	d101      	bne.n	800bd52 <f_read+0x5a>
 800bd4e:	2307      	movs	r3, #7
 800bd50:	e12d      	b.n	800bfae <f_read+0x2b6>
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	68da      	ldr	r2, [r3, #12]
 800bd56:	68fb      	ldr	r3, [r7, #12]
 800bd58:	699b      	ldr	r3, [r3, #24]
 800bd5a:	1ad3      	subs	r3, r2, r3
 800bd5c:	623b      	str	r3, [r7, #32]
 800bd5e:	687a      	ldr	r2, [r7, #4]
 800bd60:	6a3b      	ldr	r3, [r7, #32]
 800bd62:	429a      	cmp	r2, r3
 800bd64:	f240 811e 	bls.w	800bfa4 <f_read+0x2ac>
 800bd68:	6a3b      	ldr	r3, [r7, #32]
 800bd6a:	607b      	str	r3, [r7, #4]
 800bd6c:	e11a      	b.n	800bfa4 <f_read+0x2ac>
 800bd6e:	68fb      	ldr	r3, [r7, #12]
 800bd70:	699b      	ldr	r3, [r3, #24]
 800bd72:	697a      	ldr	r2, [r7, #20]
 800bd74:	8992      	ldrh	r2, [r2, #12]
 800bd76:	fbb3 f1f2 	udiv	r1, r3, r2
 800bd7a:	fb01 f202 	mul.w	r2, r1, r2
 800bd7e:	1a9b      	subs	r3, r3, r2
 800bd80:	2b00      	cmp	r3, #0
 800bd82:	f040 80d5 	bne.w	800bf30 <f_read+0x238>
 800bd86:	68fb      	ldr	r3, [r7, #12]
 800bd88:	699b      	ldr	r3, [r3, #24]
 800bd8a:	697a      	ldr	r2, [r7, #20]
 800bd8c:	8992      	ldrh	r2, [r2, #12]
 800bd8e:	fbb3 f3f2 	udiv	r3, r3, r2
 800bd92:	697a      	ldr	r2, [r7, #20]
 800bd94:	8952      	ldrh	r2, [r2, #10]
 800bd96:	3a01      	subs	r2, #1
 800bd98:	4013      	ands	r3, r2
 800bd9a:	61fb      	str	r3, [r7, #28]
 800bd9c:	69fb      	ldr	r3, [r7, #28]
 800bd9e:	2b00      	cmp	r3, #0
 800bda0:	d12f      	bne.n	800be02 <f_read+0x10a>
 800bda2:	68fb      	ldr	r3, [r7, #12]
 800bda4:	699b      	ldr	r3, [r3, #24]
 800bda6:	2b00      	cmp	r3, #0
 800bda8:	d103      	bne.n	800bdb2 <f_read+0xba>
 800bdaa:	68fb      	ldr	r3, [r7, #12]
 800bdac:	689b      	ldr	r3, [r3, #8]
 800bdae:	633b      	str	r3, [r7, #48]	@ 0x30
 800bdb0:	e013      	b.n	800bdda <f_read+0xe2>
 800bdb2:	68fb      	ldr	r3, [r7, #12]
 800bdb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bdb6:	2b00      	cmp	r3, #0
 800bdb8:	d007      	beq.n	800bdca <f_read+0xd2>
 800bdba:	68fb      	ldr	r3, [r7, #12]
 800bdbc:	699b      	ldr	r3, [r3, #24]
 800bdbe:	4619      	mov	r1, r3
 800bdc0:	68f8      	ldr	r0, [r7, #12]
 800bdc2:	f7fe faaa 	bl	800a31a <clmt_clust>
 800bdc6:	6338      	str	r0, [r7, #48]	@ 0x30
 800bdc8:	e007      	b.n	800bdda <f_read+0xe2>
 800bdca:	68fa      	ldr	r2, [r7, #12]
 800bdcc:	68fb      	ldr	r3, [r7, #12]
 800bdce:	69db      	ldr	r3, [r3, #28]
 800bdd0:	4619      	mov	r1, r3
 800bdd2:	4610      	mov	r0, r2
 800bdd4:	f7fd ffb7 	bl	8009d46 <get_fat>
 800bdd8:	6338      	str	r0, [r7, #48]	@ 0x30
 800bdda:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800bddc:	2b01      	cmp	r3, #1
 800bdde:	d804      	bhi.n	800bdea <f_read+0xf2>
 800bde0:	68fb      	ldr	r3, [r7, #12]
 800bde2:	2202      	movs	r2, #2
 800bde4:	755a      	strb	r2, [r3, #21]
 800bde6:	2302      	movs	r3, #2
 800bde8:	e0e1      	b.n	800bfae <f_read+0x2b6>
 800bdea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800bdec:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bdf0:	d104      	bne.n	800bdfc <f_read+0x104>
 800bdf2:	68fb      	ldr	r3, [r7, #12]
 800bdf4:	2201      	movs	r2, #1
 800bdf6:	755a      	strb	r2, [r3, #21]
 800bdf8:	2301      	movs	r3, #1
 800bdfa:	e0d8      	b.n	800bfae <f_read+0x2b6>
 800bdfc:	68fb      	ldr	r3, [r7, #12]
 800bdfe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800be00:	61da      	str	r2, [r3, #28]
 800be02:	697a      	ldr	r2, [r7, #20]
 800be04:	68fb      	ldr	r3, [r7, #12]
 800be06:	69db      	ldr	r3, [r3, #28]
 800be08:	4619      	mov	r1, r3
 800be0a:	4610      	mov	r0, r2
 800be0c:	f7fd ff7c 	bl	8009d08 <clust2sect>
 800be10:	61b8      	str	r0, [r7, #24]
 800be12:	69bb      	ldr	r3, [r7, #24]
 800be14:	2b00      	cmp	r3, #0
 800be16:	d104      	bne.n	800be22 <f_read+0x12a>
 800be18:	68fb      	ldr	r3, [r7, #12]
 800be1a:	2202      	movs	r2, #2
 800be1c:	755a      	strb	r2, [r3, #21]
 800be1e:	2302      	movs	r3, #2
 800be20:	e0c5      	b.n	800bfae <f_read+0x2b6>
 800be22:	69ba      	ldr	r2, [r7, #24]
 800be24:	69fb      	ldr	r3, [r7, #28]
 800be26:	4413      	add	r3, r2
 800be28:	61bb      	str	r3, [r7, #24]
 800be2a:	697b      	ldr	r3, [r7, #20]
 800be2c:	899b      	ldrh	r3, [r3, #12]
 800be2e:	461a      	mov	r2, r3
 800be30:	687b      	ldr	r3, [r7, #4]
 800be32:	fbb3 f3f2 	udiv	r3, r3, r2
 800be36:	62bb      	str	r3, [r7, #40]	@ 0x28
 800be38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800be3a:	2b00      	cmp	r3, #0
 800be3c:	d041      	beq.n	800bec2 <f_read+0x1ca>
 800be3e:	69fa      	ldr	r2, [r7, #28]
 800be40:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800be42:	4413      	add	r3, r2
 800be44:	697a      	ldr	r2, [r7, #20]
 800be46:	8952      	ldrh	r2, [r2, #10]
 800be48:	4293      	cmp	r3, r2
 800be4a:	d905      	bls.n	800be58 <f_read+0x160>
 800be4c:	697b      	ldr	r3, [r7, #20]
 800be4e:	895b      	ldrh	r3, [r3, #10]
 800be50:	461a      	mov	r2, r3
 800be52:	69fb      	ldr	r3, [r7, #28]
 800be54:	1ad3      	subs	r3, r2, r3
 800be56:	62bb      	str	r3, [r7, #40]	@ 0x28
 800be58:	697b      	ldr	r3, [r7, #20]
 800be5a:	7858      	ldrb	r0, [r3, #1]
 800be5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800be5e:	69ba      	ldr	r2, [r7, #24]
 800be60:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800be62:	f7fd fba5 	bl	80095b0 <disk_read>
 800be66:	4603      	mov	r3, r0
 800be68:	2b00      	cmp	r3, #0
 800be6a:	d004      	beq.n	800be76 <f_read+0x17e>
 800be6c:	68fb      	ldr	r3, [r7, #12]
 800be6e:	2201      	movs	r2, #1
 800be70:	755a      	strb	r2, [r3, #21]
 800be72:	2301      	movs	r3, #1
 800be74:	e09b      	b.n	800bfae <f_read+0x2b6>
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	7d1b      	ldrb	r3, [r3, #20]
 800be7a:	b25b      	sxtb	r3, r3
 800be7c:	2b00      	cmp	r3, #0
 800be7e:	da18      	bge.n	800beb2 <f_read+0x1ba>
 800be80:	68fb      	ldr	r3, [r7, #12]
 800be82:	6a1a      	ldr	r2, [r3, #32]
 800be84:	69bb      	ldr	r3, [r7, #24]
 800be86:	1ad3      	subs	r3, r2, r3
 800be88:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800be8a:	429a      	cmp	r2, r3
 800be8c:	d911      	bls.n	800beb2 <f_read+0x1ba>
 800be8e:	68fb      	ldr	r3, [r7, #12]
 800be90:	6a1a      	ldr	r2, [r3, #32]
 800be92:	69bb      	ldr	r3, [r7, #24]
 800be94:	1ad3      	subs	r3, r2, r3
 800be96:	697a      	ldr	r2, [r7, #20]
 800be98:	8992      	ldrh	r2, [r2, #12]
 800be9a:	fb02 f303 	mul.w	r3, r2, r3
 800be9e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800bea0:	18d0      	adds	r0, r2, r3
 800bea2:	68fb      	ldr	r3, [r7, #12]
 800bea4:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bea8:	697b      	ldr	r3, [r7, #20]
 800beaa:	899b      	ldrh	r3, [r3, #12]
 800beac:	461a      	mov	r2, r3
 800beae:	f7fd fc5f 	bl	8009770 <mem_cpy>
 800beb2:	697b      	ldr	r3, [r7, #20]
 800beb4:	899b      	ldrh	r3, [r3, #12]
 800beb6:	461a      	mov	r2, r3
 800beb8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800beba:	fb02 f303 	mul.w	r3, r2, r3
 800bebe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800bec0:	e05c      	b.n	800bf7c <f_read+0x284>
 800bec2:	68fb      	ldr	r3, [r7, #12]
 800bec4:	6a1b      	ldr	r3, [r3, #32]
 800bec6:	69ba      	ldr	r2, [r7, #24]
 800bec8:	429a      	cmp	r2, r3
 800beca:	d02e      	beq.n	800bf2a <f_read+0x232>
 800becc:	68fb      	ldr	r3, [r7, #12]
 800bece:	7d1b      	ldrb	r3, [r3, #20]
 800bed0:	b25b      	sxtb	r3, r3
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	da18      	bge.n	800bf08 <f_read+0x210>
 800bed6:	697b      	ldr	r3, [r7, #20]
 800bed8:	7858      	ldrb	r0, [r3, #1]
 800beda:	68fb      	ldr	r3, [r7, #12]
 800bedc:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bee0:	68fb      	ldr	r3, [r7, #12]
 800bee2:	6a1a      	ldr	r2, [r3, #32]
 800bee4:	2301      	movs	r3, #1
 800bee6:	f7fd fb83 	bl	80095f0 <disk_write>
 800beea:	4603      	mov	r3, r0
 800beec:	2b00      	cmp	r3, #0
 800beee:	d004      	beq.n	800befa <f_read+0x202>
 800bef0:	68fb      	ldr	r3, [r7, #12]
 800bef2:	2201      	movs	r2, #1
 800bef4:	755a      	strb	r2, [r3, #21]
 800bef6:	2301      	movs	r3, #1
 800bef8:	e059      	b.n	800bfae <f_read+0x2b6>
 800befa:	68fb      	ldr	r3, [r7, #12]
 800befc:	7d1b      	ldrb	r3, [r3, #20]
 800befe:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800bf02:	b2da      	uxtb	r2, r3
 800bf04:	68fb      	ldr	r3, [r7, #12]
 800bf06:	751a      	strb	r2, [r3, #20]
 800bf08:	697b      	ldr	r3, [r7, #20]
 800bf0a:	7858      	ldrb	r0, [r3, #1]
 800bf0c:	68fb      	ldr	r3, [r7, #12]
 800bf0e:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bf12:	2301      	movs	r3, #1
 800bf14:	69ba      	ldr	r2, [r7, #24]
 800bf16:	f7fd fb4b 	bl	80095b0 <disk_read>
 800bf1a:	4603      	mov	r3, r0
 800bf1c:	2b00      	cmp	r3, #0
 800bf1e:	d004      	beq.n	800bf2a <f_read+0x232>
 800bf20:	68fb      	ldr	r3, [r7, #12]
 800bf22:	2201      	movs	r2, #1
 800bf24:	755a      	strb	r2, [r3, #21]
 800bf26:	2301      	movs	r3, #1
 800bf28:	e041      	b.n	800bfae <f_read+0x2b6>
 800bf2a:	68fb      	ldr	r3, [r7, #12]
 800bf2c:	69ba      	ldr	r2, [r7, #24]
 800bf2e:	621a      	str	r2, [r3, #32]
 800bf30:	697b      	ldr	r3, [r7, #20]
 800bf32:	899b      	ldrh	r3, [r3, #12]
 800bf34:	4618      	mov	r0, r3
 800bf36:	68fb      	ldr	r3, [r7, #12]
 800bf38:	699b      	ldr	r3, [r3, #24]
 800bf3a:	697a      	ldr	r2, [r7, #20]
 800bf3c:	8992      	ldrh	r2, [r2, #12]
 800bf3e:	fbb3 f1f2 	udiv	r1, r3, r2
 800bf42:	fb01 f202 	mul.w	r2, r1, r2
 800bf46:	1a9b      	subs	r3, r3, r2
 800bf48:	1ac3      	subs	r3, r0, r3
 800bf4a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800bf4c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bf4e:	687b      	ldr	r3, [r7, #4]
 800bf50:	429a      	cmp	r2, r3
 800bf52:	d901      	bls.n	800bf58 <f_read+0x260>
 800bf54:	687b      	ldr	r3, [r7, #4]
 800bf56:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800bf58:	68fb      	ldr	r3, [r7, #12]
 800bf5a:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bf5e:	68fb      	ldr	r3, [r7, #12]
 800bf60:	699b      	ldr	r3, [r3, #24]
 800bf62:	697a      	ldr	r2, [r7, #20]
 800bf64:	8992      	ldrh	r2, [r2, #12]
 800bf66:	fbb3 f0f2 	udiv	r0, r3, r2
 800bf6a:	fb00 f202 	mul.w	r2, r0, r2
 800bf6e:	1a9b      	subs	r3, r3, r2
 800bf70:	440b      	add	r3, r1
 800bf72:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bf74:	4619      	mov	r1, r3
 800bf76:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800bf78:	f7fd fbfa 	bl	8009770 <mem_cpy>
 800bf7c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800bf7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bf80:	4413      	add	r3, r2
 800bf82:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf84:	68fb      	ldr	r3, [r7, #12]
 800bf86:	699a      	ldr	r2, [r3, #24]
 800bf88:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bf8a:	441a      	add	r2, r3
 800bf8c:	68fb      	ldr	r3, [r7, #12]
 800bf8e:	619a      	str	r2, [r3, #24]
 800bf90:	683b      	ldr	r3, [r7, #0]
 800bf92:	681a      	ldr	r2, [r3, #0]
 800bf94:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bf96:	441a      	add	r2, r3
 800bf98:	683b      	ldr	r3, [r7, #0]
 800bf9a:	601a      	str	r2, [r3, #0]
 800bf9c:	687a      	ldr	r2, [r7, #4]
 800bf9e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800bfa0:	1ad3      	subs	r3, r2, r3
 800bfa2:	607b      	str	r3, [r7, #4]
 800bfa4:	687b      	ldr	r3, [r7, #4]
 800bfa6:	2b00      	cmp	r3, #0
 800bfa8:	f47f aee1 	bne.w	800bd6e <f_read+0x76>
 800bfac:	2300      	movs	r3, #0
 800bfae:	4618      	mov	r0, r3
 800bfb0:	3738      	adds	r7, #56	@ 0x38
 800bfb2:	46bd      	mov	sp, r7
 800bfb4:	bd80      	pop	{r7, pc}

0800bfb6 <f_sync>:
 800bfb6:	b580      	push	{r7, lr}
 800bfb8:	b086      	sub	sp, #24
 800bfba:	af00      	add	r7, sp, #0
 800bfbc:	6078      	str	r0, [r7, #4]
 800bfbe:	687b      	ldr	r3, [r7, #4]
 800bfc0:	f107 0208 	add.w	r2, r7, #8
 800bfc4:	4611      	mov	r1, r2
 800bfc6:	4618      	mov	r0, r3
 800bfc8:	f7ff fc52 	bl	800b870 <validate>
 800bfcc:	4603      	mov	r3, r0
 800bfce:	75fb      	strb	r3, [r7, #23]
 800bfd0:	7dfb      	ldrb	r3, [r7, #23]
 800bfd2:	2b00      	cmp	r3, #0
 800bfd4:	d168      	bne.n	800c0a8 <f_sync+0xf2>
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	7d1b      	ldrb	r3, [r3, #20]
 800bfda:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800bfde:	2b00      	cmp	r3, #0
 800bfe0:	d062      	beq.n	800c0a8 <f_sync+0xf2>
 800bfe2:	687b      	ldr	r3, [r7, #4]
 800bfe4:	7d1b      	ldrb	r3, [r3, #20]
 800bfe6:	b25b      	sxtb	r3, r3
 800bfe8:	2b00      	cmp	r3, #0
 800bfea:	da15      	bge.n	800c018 <f_sync+0x62>
 800bfec:	68bb      	ldr	r3, [r7, #8]
 800bfee:	7858      	ldrb	r0, [r3, #1]
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	f103 0130 	add.w	r1, r3, #48	@ 0x30
 800bff6:	687b      	ldr	r3, [r7, #4]
 800bff8:	6a1a      	ldr	r2, [r3, #32]
 800bffa:	2301      	movs	r3, #1
 800bffc:	f7fd faf8 	bl	80095f0 <disk_write>
 800c000:	4603      	mov	r3, r0
 800c002:	2b00      	cmp	r3, #0
 800c004:	d001      	beq.n	800c00a <f_sync+0x54>
 800c006:	2301      	movs	r3, #1
 800c008:	e04f      	b.n	800c0aa <f_sync+0xf4>
 800c00a:	687b      	ldr	r3, [r7, #4]
 800c00c:	7d1b      	ldrb	r3, [r3, #20]
 800c00e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800c012:	b2da      	uxtb	r2, r3
 800c014:	687b      	ldr	r3, [r7, #4]
 800c016:	751a      	strb	r2, [r3, #20]
 800c018:	f7fd fa2a 	bl	8009470 <get_fattime>
 800c01c:	6138      	str	r0, [r7, #16]
 800c01e:	68ba      	ldr	r2, [r7, #8]
 800c020:	687b      	ldr	r3, [r7, #4]
 800c022:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c024:	4619      	mov	r1, r3
 800c026:	4610      	mov	r0, r2
 800c028:	f7fd fdd0 	bl	8009bcc <move_window>
 800c02c:	4603      	mov	r3, r0
 800c02e:	75fb      	strb	r3, [r7, #23]
 800c030:	7dfb      	ldrb	r3, [r7, #23]
 800c032:	2b00      	cmp	r3, #0
 800c034:	d138      	bne.n	800c0a8 <f_sync+0xf2>
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c03a:	60fb      	str	r3, [r7, #12]
 800c03c:	68fb      	ldr	r3, [r7, #12]
 800c03e:	330b      	adds	r3, #11
 800c040:	781a      	ldrb	r2, [r3, #0]
 800c042:	68fb      	ldr	r3, [r7, #12]
 800c044:	330b      	adds	r3, #11
 800c046:	f042 0220 	orr.w	r2, r2, #32
 800c04a:	b2d2      	uxtb	r2, r2
 800c04c:	701a      	strb	r2, [r3, #0]
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	6818      	ldr	r0, [r3, #0]
 800c052:	687b      	ldr	r3, [r7, #4]
 800c054:	689b      	ldr	r3, [r3, #8]
 800c056:	461a      	mov	r2, r3
 800c058:	68f9      	ldr	r1, [r7, #12]
 800c05a:	f7fe fb5b 	bl	800a714 <st_clust>
 800c05e:	68fb      	ldr	r3, [r7, #12]
 800c060:	f103 021c 	add.w	r2, r3, #28
 800c064:	687b      	ldr	r3, [r7, #4]
 800c066:	68db      	ldr	r3, [r3, #12]
 800c068:	4619      	mov	r1, r3
 800c06a:	4610      	mov	r0, r2
 800c06c:	f7fd fb54 	bl	8009718 <st_dword>
 800c070:	68fb      	ldr	r3, [r7, #12]
 800c072:	3316      	adds	r3, #22
 800c074:	6939      	ldr	r1, [r7, #16]
 800c076:	4618      	mov	r0, r3
 800c078:	f7fd fb4e 	bl	8009718 <st_dword>
 800c07c:	68fb      	ldr	r3, [r7, #12]
 800c07e:	3312      	adds	r3, #18
 800c080:	2100      	movs	r1, #0
 800c082:	4618      	mov	r0, r3
 800c084:	f7fd fb2d 	bl	80096e2 <st_word>
 800c088:	68bb      	ldr	r3, [r7, #8]
 800c08a:	2201      	movs	r2, #1
 800c08c:	70da      	strb	r2, [r3, #3]
 800c08e:	68bb      	ldr	r3, [r7, #8]
 800c090:	4618      	mov	r0, r3
 800c092:	f7fd fdc9 	bl	8009c28 <sync_fs>
 800c096:	4603      	mov	r3, r0
 800c098:	75fb      	strb	r3, [r7, #23]
 800c09a:	687b      	ldr	r3, [r7, #4]
 800c09c:	7d1b      	ldrb	r3, [r3, #20]
 800c09e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800c0a2:	b2da      	uxtb	r2, r3
 800c0a4:	687b      	ldr	r3, [r7, #4]
 800c0a6:	751a      	strb	r2, [r3, #20]
 800c0a8:	7dfb      	ldrb	r3, [r7, #23]
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	3718      	adds	r7, #24
 800c0ae:	46bd      	mov	sp, r7
 800c0b0:	bd80      	pop	{r7, pc}

0800c0b2 <f_close>:
 800c0b2:	b580      	push	{r7, lr}
 800c0b4:	b084      	sub	sp, #16
 800c0b6:	af00      	add	r7, sp, #0
 800c0b8:	6078      	str	r0, [r7, #4]
 800c0ba:	6878      	ldr	r0, [r7, #4]
 800c0bc:	f7ff ff7b 	bl	800bfb6 <f_sync>
 800c0c0:	4603      	mov	r3, r0
 800c0c2:	73fb      	strb	r3, [r7, #15]
 800c0c4:	7bfb      	ldrb	r3, [r7, #15]
 800c0c6:	2b00      	cmp	r3, #0
 800c0c8:	d118      	bne.n	800c0fc <f_close+0x4a>
 800c0ca:	687b      	ldr	r3, [r7, #4]
 800c0cc:	f107 0208 	add.w	r2, r7, #8
 800c0d0:	4611      	mov	r1, r2
 800c0d2:	4618      	mov	r0, r3
 800c0d4:	f7ff fbcc 	bl	800b870 <validate>
 800c0d8:	4603      	mov	r3, r0
 800c0da:	73fb      	strb	r3, [r7, #15]
 800c0dc:	7bfb      	ldrb	r3, [r7, #15]
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	d10c      	bne.n	800c0fc <f_close+0x4a>
 800c0e2:	687b      	ldr	r3, [r7, #4]
 800c0e4:	691b      	ldr	r3, [r3, #16]
 800c0e6:	4618      	mov	r0, r3
 800c0e8:	f7fd fccc 	bl	8009a84 <dec_lock>
 800c0ec:	4603      	mov	r3, r0
 800c0ee:	73fb      	strb	r3, [r7, #15]
 800c0f0:	7bfb      	ldrb	r3, [r7, #15]
 800c0f2:	2b00      	cmp	r3, #0
 800c0f4:	d102      	bne.n	800c0fc <f_close+0x4a>
 800c0f6:	687b      	ldr	r3, [r7, #4]
 800c0f8:	2200      	movs	r2, #0
 800c0fa:	601a      	str	r2, [r3, #0]
 800c0fc:	7bfb      	ldrb	r3, [r7, #15]
 800c0fe:	4618      	mov	r0, r3
 800c100:	3710      	adds	r7, #16
 800c102:	46bd      	mov	sp, r7
 800c104:	bd80      	pop	{r7, pc}
	...

0800c108 <FATFS_LinkDriverEx>:
 800c108:	b480      	push	{r7}
 800c10a:	b087      	sub	sp, #28
 800c10c:	af00      	add	r7, sp, #0
 800c10e:	60f8      	str	r0, [r7, #12]
 800c110:	60b9      	str	r1, [r7, #8]
 800c112:	4613      	mov	r3, r2
 800c114:	71fb      	strb	r3, [r7, #7]
 800c116:	2301      	movs	r3, #1
 800c118:	75fb      	strb	r3, [r7, #23]
 800c11a:	2300      	movs	r3, #0
 800c11c:	75bb      	strb	r3, [r7, #22]
 800c11e:	4b1f      	ldr	r3, [pc, #124]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c120:	7a5b      	ldrb	r3, [r3, #9]
 800c122:	b2db      	uxtb	r3, r3
 800c124:	2b00      	cmp	r3, #0
 800c126:	d131      	bne.n	800c18c <FATFS_LinkDriverEx+0x84>
 800c128:	4b1c      	ldr	r3, [pc, #112]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c12a:	7a5b      	ldrb	r3, [r3, #9]
 800c12c:	b2db      	uxtb	r3, r3
 800c12e:	461a      	mov	r2, r3
 800c130:	4b1a      	ldr	r3, [pc, #104]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c132:	2100      	movs	r1, #0
 800c134:	5499      	strb	r1, [r3, r2]
 800c136:	4b19      	ldr	r3, [pc, #100]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c138:	7a5b      	ldrb	r3, [r3, #9]
 800c13a:	b2db      	uxtb	r3, r3
 800c13c:	4a17      	ldr	r2, [pc, #92]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c13e:	009b      	lsls	r3, r3, #2
 800c140:	4413      	add	r3, r2
 800c142:	68fa      	ldr	r2, [r7, #12]
 800c144:	605a      	str	r2, [r3, #4]
 800c146:	4b15      	ldr	r3, [pc, #84]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c148:	7a5b      	ldrb	r3, [r3, #9]
 800c14a:	b2db      	uxtb	r3, r3
 800c14c:	461a      	mov	r2, r3
 800c14e:	4b13      	ldr	r3, [pc, #76]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c150:	4413      	add	r3, r2
 800c152:	79fa      	ldrb	r2, [r7, #7]
 800c154:	721a      	strb	r2, [r3, #8]
 800c156:	4b11      	ldr	r3, [pc, #68]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c158:	7a5b      	ldrb	r3, [r3, #9]
 800c15a:	b2db      	uxtb	r3, r3
 800c15c:	1c5a      	adds	r2, r3, #1
 800c15e:	b2d1      	uxtb	r1, r2
 800c160:	4a0e      	ldr	r2, [pc, #56]	@ (800c19c <FATFS_LinkDriverEx+0x94>)
 800c162:	7251      	strb	r1, [r2, #9]
 800c164:	75bb      	strb	r3, [r7, #22]
 800c166:	7dbb      	ldrb	r3, [r7, #22]
 800c168:	3330      	adds	r3, #48	@ 0x30
 800c16a:	b2da      	uxtb	r2, r3
 800c16c:	68bb      	ldr	r3, [r7, #8]
 800c16e:	701a      	strb	r2, [r3, #0]
 800c170:	68bb      	ldr	r3, [r7, #8]
 800c172:	3301      	adds	r3, #1
 800c174:	223a      	movs	r2, #58	@ 0x3a
 800c176:	701a      	strb	r2, [r3, #0]
 800c178:	68bb      	ldr	r3, [r7, #8]
 800c17a:	3302      	adds	r3, #2
 800c17c:	222f      	movs	r2, #47	@ 0x2f
 800c17e:	701a      	strb	r2, [r3, #0]
 800c180:	68bb      	ldr	r3, [r7, #8]
 800c182:	3303      	adds	r3, #3
 800c184:	2200      	movs	r2, #0
 800c186:	701a      	strb	r2, [r3, #0]
 800c188:	2300      	movs	r3, #0
 800c18a:	75fb      	strb	r3, [r7, #23]
 800c18c:	7dfb      	ldrb	r3, [r7, #23]
 800c18e:	4618      	mov	r0, r3
 800c190:	371c      	adds	r7, #28
 800c192:	46bd      	mov	sp, r7
 800c194:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c198:	4770      	bx	lr
 800c19a:	bf00      	nop
 800c19c:	2001cd28 	.word	0x2001cd28

0800c1a0 <FATFS_LinkDriver>:
 800c1a0:	b580      	push	{r7, lr}
 800c1a2:	b082      	sub	sp, #8
 800c1a4:	af00      	add	r7, sp, #0
 800c1a6:	6078      	str	r0, [r7, #4]
 800c1a8:	6039      	str	r1, [r7, #0]
 800c1aa:	2200      	movs	r2, #0
 800c1ac:	6839      	ldr	r1, [r7, #0]
 800c1ae:	6878      	ldr	r0, [r7, #4]
 800c1b0:	f7ff ffaa 	bl	800c108 <FATFS_LinkDriverEx>
 800c1b4:	4603      	mov	r3, r0
 800c1b6:	4618      	mov	r0, r3
 800c1b8:	3708      	adds	r7, #8
 800c1ba:	46bd      	mov	sp, r7
 800c1bc:	bd80      	pop	{r7, pc}
	...

0800c1c0 <ff_convert>:
 800c1c0:	b480      	push	{r7}
 800c1c2:	b085      	sub	sp, #20
 800c1c4:	af00      	add	r7, sp, #0
 800c1c6:	4603      	mov	r3, r0
 800c1c8:	6039      	str	r1, [r7, #0]
 800c1ca:	80fb      	strh	r3, [r7, #6]
 800c1cc:	88fb      	ldrh	r3, [r7, #6]
 800c1ce:	2b7f      	cmp	r3, #127	@ 0x7f
 800c1d0:	d802      	bhi.n	800c1d8 <ff_convert+0x18>
 800c1d2:	88fb      	ldrh	r3, [r7, #6]
 800c1d4:	81fb      	strh	r3, [r7, #14]
 800c1d6:	e025      	b.n	800c224 <ff_convert+0x64>
 800c1d8:	683b      	ldr	r3, [r7, #0]
 800c1da:	2b00      	cmp	r3, #0
 800c1dc:	d00b      	beq.n	800c1f6 <ff_convert+0x36>
 800c1de:	88fb      	ldrh	r3, [r7, #6]
 800c1e0:	2bff      	cmp	r3, #255	@ 0xff
 800c1e2:	d805      	bhi.n	800c1f0 <ff_convert+0x30>
 800c1e4:	88fb      	ldrh	r3, [r7, #6]
 800c1e6:	3b80      	subs	r3, #128	@ 0x80
 800c1e8:	4a12      	ldr	r2, [pc, #72]	@ (800c234 <ff_convert+0x74>)
 800c1ea:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c1ee:	e000      	b.n	800c1f2 <ff_convert+0x32>
 800c1f0:	2300      	movs	r3, #0
 800c1f2:	81fb      	strh	r3, [r7, #14]
 800c1f4:	e016      	b.n	800c224 <ff_convert+0x64>
 800c1f6:	2300      	movs	r3, #0
 800c1f8:	81fb      	strh	r3, [r7, #14]
 800c1fa:	e009      	b.n	800c210 <ff_convert+0x50>
 800c1fc:	89fb      	ldrh	r3, [r7, #14]
 800c1fe:	4a0d      	ldr	r2, [pc, #52]	@ (800c234 <ff_convert+0x74>)
 800c200:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c204:	88fa      	ldrh	r2, [r7, #6]
 800c206:	429a      	cmp	r2, r3
 800c208:	d006      	beq.n	800c218 <ff_convert+0x58>
 800c20a:	89fb      	ldrh	r3, [r7, #14]
 800c20c:	3301      	adds	r3, #1
 800c20e:	81fb      	strh	r3, [r7, #14]
 800c210:	89fb      	ldrh	r3, [r7, #14]
 800c212:	2b7f      	cmp	r3, #127	@ 0x7f
 800c214:	d9f2      	bls.n	800c1fc <ff_convert+0x3c>
 800c216:	e000      	b.n	800c21a <ff_convert+0x5a>
 800c218:	bf00      	nop
 800c21a:	89fb      	ldrh	r3, [r7, #14]
 800c21c:	3380      	adds	r3, #128	@ 0x80
 800c21e:	b29b      	uxth	r3, r3
 800c220:	b2db      	uxtb	r3, r3
 800c222:	81fb      	strh	r3, [r7, #14]
 800c224:	89fb      	ldrh	r3, [r7, #14]
 800c226:	4618      	mov	r0, r3
 800c228:	3714      	adds	r7, #20
 800c22a:	46bd      	mov	sp, r7
 800c22c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c230:	4770      	bx	lr
 800c232:	bf00      	nop
 800c234:	0800ce48 	.word	0x0800ce48

0800c238 <ff_wtoupper>:
 800c238:	b480      	push	{r7}
 800c23a:	b087      	sub	sp, #28
 800c23c:	af00      	add	r7, sp, #0
 800c23e:	4603      	mov	r3, r0
 800c240:	80fb      	strh	r3, [r7, #6]
 800c242:	88fb      	ldrh	r3, [r7, #6]
 800c244:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800c248:	d201      	bcs.n	800c24e <ff_wtoupper+0x16>
 800c24a:	4b3e      	ldr	r3, [pc, #248]	@ (800c344 <ff_wtoupper+0x10c>)
 800c24c:	e000      	b.n	800c250 <ff_wtoupper+0x18>
 800c24e:	4b3e      	ldr	r3, [pc, #248]	@ (800c348 <ff_wtoupper+0x110>)
 800c250:	617b      	str	r3, [r7, #20]
 800c252:	697b      	ldr	r3, [r7, #20]
 800c254:	1c9a      	adds	r2, r3, #2
 800c256:	617a      	str	r2, [r7, #20]
 800c258:	881b      	ldrh	r3, [r3, #0]
 800c25a:	827b      	strh	r3, [r7, #18]
 800c25c:	8a7b      	ldrh	r3, [r7, #18]
 800c25e:	2b00      	cmp	r3, #0
 800c260:	d068      	beq.n	800c334 <ff_wtoupper+0xfc>
 800c262:	88fa      	ldrh	r2, [r7, #6]
 800c264:	8a7b      	ldrh	r3, [r7, #18]
 800c266:	429a      	cmp	r2, r3
 800c268:	d364      	bcc.n	800c334 <ff_wtoupper+0xfc>
 800c26a:	697b      	ldr	r3, [r7, #20]
 800c26c:	1c9a      	adds	r2, r3, #2
 800c26e:	617a      	str	r2, [r7, #20]
 800c270:	881b      	ldrh	r3, [r3, #0]
 800c272:	823b      	strh	r3, [r7, #16]
 800c274:	8a3b      	ldrh	r3, [r7, #16]
 800c276:	0a1b      	lsrs	r3, r3, #8
 800c278:	81fb      	strh	r3, [r7, #14]
 800c27a:	8a3b      	ldrh	r3, [r7, #16]
 800c27c:	b2db      	uxtb	r3, r3
 800c27e:	823b      	strh	r3, [r7, #16]
 800c280:	88fa      	ldrh	r2, [r7, #6]
 800c282:	8a79      	ldrh	r1, [r7, #18]
 800c284:	8a3b      	ldrh	r3, [r7, #16]
 800c286:	440b      	add	r3, r1
 800c288:	429a      	cmp	r2, r3
 800c28a:	da49      	bge.n	800c320 <ff_wtoupper+0xe8>
 800c28c:	89fb      	ldrh	r3, [r7, #14]
 800c28e:	2b08      	cmp	r3, #8
 800c290:	d84f      	bhi.n	800c332 <ff_wtoupper+0xfa>
 800c292:	a201      	add	r2, pc, #4	@ (adr r2, 800c298 <ff_wtoupper+0x60>)
 800c294:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c298:	0800c2bd 	.word	0x0800c2bd
 800c29c:	0800c2cf 	.word	0x0800c2cf
 800c2a0:	0800c2e5 	.word	0x0800c2e5
 800c2a4:	0800c2ed 	.word	0x0800c2ed
 800c2a8:	0800c2f5 	.word	0x0800c2f5
 800c2ac:	0800c2fd 	.word	0x0800c2fd
 800c2b0:	0800c305 	.word	0x0800c305
 800c2b4:	0800c30d 	.word	0x0800c30d
 800c2b8:	0800c315 	.word	0x0800c315
 800c2bc:	88fa      	ldrh	r2, [r7, #6]
 800c2be:	8a7b      	ldrh	r3, [r7, #18]
 800c2c0:	1ad3      	subs	r3, r2, r3
 800c2c2:	005b      	lsls	r3, r3, #1
 800c2c4:	697a      	ldr	r2, [r7, #20]
 800c2c6:	4413      	add	r3, r2
 800c2c8:	881b      	ldrh	r3, [r3, #0]
 800c2ca:	80fb      	strh	r3, [r7, #6]
 800c2cc:	e027      	b.n	800c31e <ff_wtoupper+0xe6>
 800c2ce:	88fa      	ldrh	r2, [r7, #6]
 800c2d0:	8a7b      	ldrh	r3, [r7, #18]
 800c2d2:	1ad3      	subs	r3, r2, r3
 800c2d4:	b29b      	uxth	r3, r3
 800c2d6:	f003 0301 	and.w	r3, r3, #1
 800c2da:	b29b      	uxth	r3, r3
 800c2dc:	88fa      	ldrh	r2, [r7, #6]
 800c2de:	1ad3      	subs	r3, r2, r3
 800c2e0:	80fb      	strh	r3, [r7, #6]
 800c2e2:	e01c      	b.n	800c31e <ff_wtoupper+0xe6>
 800c2e4:	88fb      	ldrh	r3, [r7, #6]
 800c2e6:	3b10      	subs	r3, #16
 800c2e8:	80fb      	strh	r3, [r7, #6]
 800c2ea:	e018      	b.n	800c31e <ff_wtoupper+0xe6>
 800c2ec:	88fb      	ldrh	r3, [r7, #6]
 800c2ee:	3b20      	subs	r3, #32
 800c2f0:	80fb      	strh	r3, [r7, #6]
 800c2f2:	e014      	b.n	800c31e <ff_wtoupper+0xe6>
 800c2f4:	88fb      	ldrh	r3, [r7, #6]
 800c2f6:	3b30      	subs	r3, #48	@ 0x30
 800c2f8:	80fb      	strh	r3, [r7, #6]
 800c2fa:	e010      	b.n	800c31e <ff_wtoupper+0xe6>
 800c2fc:	88fb      	ldrh	r3, [r7, #6]
 800c2fe:	3b1a      	subs	r3, #26
 800c300:	80fb      	strh	r3, [r7, #6]
 800c302:	e00c      	b.n	800c31e <ff_wtoupper+0xe6>
 800c304:	88fb      	ldrh	r3, [r7, #6]
 800c306:	3308      	adds	r3, #8
 800c308:	80fb      	strh	r3, [r7, #6]
 800c30a:	e008      	b.n	800c31e <ff_wtoupper+0xe6>
 800c30c:	88fb      	ldrh	r3, [r7, #6]
 800c30e:	3b50      	subs	r3, #80	@ 0x50
 800c310:	80fb      	strh	r3, [r7, #6]
 800c312:	e004      	b.n	800c31e <ff_wtoupper+0xe6>
 800c314:	88fb      	ldrh	r3, [r7, #6]
 800c316:	f5a3 53e3 	sub.w	r3, r3, #7264	@ 0x1c60
 800c31a:	80fb      	strh	r3, [r7, #6]
 800c31c:	bf00      	nop
 800c31e:	e008      	b.n	800c332 <ff_wtoupper+0xfa>
 800c320:	89fb      	ldrh	r3, [r7, #14]
 800c322:	2b00      	cmp	r3, #0
 800c324:	d195      	bne.n	800c252 <ff_wtoupper+0x1a>
 800c326:	8a3b      	ldrh	r3, [r7, #16]
 800c328:	005b      	lsls	r3, r3, #1
 800c32a:	697a      	ldr	r2, [r7, #20]
 800c32c:	4413      	add	r3, r2
 800c32e:	617b      	str	r3, [r7, #20]
 800c330:	e78f      	b.n	800c252 <ff_wtoupper+0x1a>
 800c332:	bf00      	nop
 800c334:	88fb      	ldrh	r3, [r7, #6]
 800c336:	4618      	mov	r0, r3
 800c338:	371c      	adds	r7, #28
 800c33a:	46bd      	mov	sp, r7
 800c33c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c340:	4770      	bx	lr
 800c342:	bf00      	nop
 800c344:	0800cf48 	.word	0x0800cf48
 800c348:	0800d13c 	.word	0x0800d13c

0800c34c <siprintf>:
 800c34c:	b40e      	push	{r1, r2, r3}
 800c34e:	b500      	push	{lr}
 800c350:	b09c      	sub	sp, #112	@ 0x70
 800c352:	ab1d      	add	r3, sp, #116	@ 0x74
 800c354:	9002      	str	r0, [sp, #8]
 800c356:	9006      	str	r0, [sp, #24]
 800c358:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800c35c:	4809      	ldr	r0, [pc, #36]	@ (800c384 <siprintf+0x38>)
 800c35e:	9107      	str	r1, [sp, #28]
 800c360:	9104      	str	r1, [sp, #16]
 800c362:	4909      	ldr	r1, [pc, #36]	@ (800c388 <siprintf+0x3c>)
 800c364:	f853 2b04 	ldr.w	r2, [r3], #4
 800c368:	9105      	str	r1, [sp, #20]
 800c36a:	6800      	ldr	r0, [r0, #0]
 800c36c:	9301      	str	r3, [sp, #4]
 800c36e:	a902      	add	r1, sp, #8
 800c370:	f000 f994 	bl	800c69c <_svfiprintf_r>
 800c374:	9b02      	ldr	r3, [sp, #8]
 800c376:	2200      	movs	r2, #0
 800c378:	701a      	strb	r2, [r3, #0]
 800c37a:	b01c      	add	sp, #112	@ 0x70
 800c37c:	f85d eb04 	ldr.w	lr, [sp], #4
 800c380:	b003      	add	sp, #12
 800c382:	4770      	bx	lr
 800c384:	20016a9c 	.word	0x20016a9c
 800c388:	ffff0208 	.word	0xffff0208

0800c38c <memset>:
 800c38c:	4402      	add	r2, r0
 800c38e:	4603      	mov	r3, r0
 800c390:	4293      	cmp	r3, r2
 800c392:	d100      	bne.n	800c396 <memset+0xa>
 800c394:	4770      	bx	lr
 800c396:	f803 1b01 	strb.w	r1, [r3], #1
 800c39a:	e7f9      	b.n	800c390 <memset+0x4>

0800c39c <__errno>:
 800c39c:	4b01      	ldr	r3, [pc, #4]	@ (800c3a4 <__errno+0x8>)
 800c39e:	6818      	ldr	r0, [r3, #0]
 800c3a0:	4770      	bx	lr
 800c3a2:	bf00      	nop
 800c3a4:	20016a9c 	.word	0x20016a9c

0800c3a8 <__libc_init_array>:
 800c3a8:	b570      	push	{r4, r5, r6, lr}
 800c3aa:	4d0d      	ldr	r5, [pc, #52]	@ (800c3e0 <__libc_init_array+0x38>)
 800c3ac:	4c0d      	ldr	r4, [pc, #52]	@ (800c3e4 <__libc_init_array+0x3c>)
 800c3ae:	1b64      	subs	r4, r4, r5
 800c3b0:	10a4      	asrs	r4, r4, #2
 800c3b2:	2600      	movs	r6, #0
 800c3b4:	42a6      	cmp	r6, r4
 800c3b6:	d109      	bne.n	800c3cc <__libc_init_array+0x24>
 800c3b8:	4d0b      	ldr	r5, [pc, #44]	@ (800c3e8 <__libc_init_array+0x40>)
 800c3ba:	4c0c      	ldr	r4, [pc, #48]	@ (800c3ec <__libc_init_array+0x44>)
 800c3bc:	f000 fc66 	bl	800cc8c <_init>
 800c3c0:	1b64      	subs	r4, r4, r5
 800c3c2:	10a4      	asrs	r4, r4, #2
 800c3c4:	2600      	movs	r6, #0
 800c3c6:	42a6      	cmp	r6, r4
 800c3c8:	d105      	bne.n	800c3d6 <__libc_init_array+0x2e>
 800c3ca:	bd70      	pop	{r4, r5, r6, pc}
 800c3cc:	f855 3b04 	ldr.w	r3, [r5], #4
 800c3d0:	4798      	blx	r3
 800c3d2:	3601      	adds	r6, #1
 800c3d4:	e7ee      	b.n	800c3b4 <__libc_init_array+0xc>
 800c3d6:	f855 3b04 	ldr.w	r3, [r5], #4
 800c3da:	4798      	blx	r3
 800c3dc:	3601      	adds	r6, #1
 800c3de:	e7f2      	b.n	800c3c6 <__libc_init_array+0x1e>
 800c3e0:	0800d234 	.word	0x0800d234
 800c3e4:	0800d234 	.word	0x0800d234
 800c3e8:	0800d234 	.word	0x0800d234
 800c3ec:	0800d238 	.word	0x0800d238

0800c3f0 <__retarget_lock_acquire_recursive>:
 800c3f0:	4770      	bx	lr

0800c3f2 <__retarget_lock_release_recursive>:
 800c3f2:	4770      	bx	lr

0800c3f4 <_free_r>:
 800c3f4:	b538      	push	{r3, r4, r5, lr}
 800c3f6:	4605      	mov	r5, r0
 800c3f8:	2900      	cmp	r1, #0
 800c3fa:	d041      	beq.n	800c480 <_free_r+0x8c>
 800c3fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c400:	1f0c      	subs	r4, r1, #4
 800c402:	2b00      	cmp	r3, #0
 800c404:	bfb8      	it	lt
 800c406:	18e4      	addlt	r4, r4, r3
 800c408:	f000 f8e0 	bl	800c5cc <__malloc_lock>
 800c40c:	4a1d      	ldr	r2, [pc, #116]	@ (800c484 <_free_r+0x90>)
 800c40e:	6813      	ldr	r3, [r2, #0]
 800c410:	b933      	cbnz	r3, 800c420 <_free_r+0x2c>
 800c412:	6063      	str	r3, [r4, #4]
 800c414:	6014      	str	r4, [r2, #0]
 800c416:	4628      	mov	r0, r5
 800c418:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c41c:	f000 b8dc 	b.w	800c5d8 <__malloc_unlock>
 800c420:	42a3      	cmp	r3, r4
 800c422:	d908      	bls.n	800c436 <_free_r+0x42>
 800c424:	6820      	ldr	r0, [r4, #0]
 800c426:	1821      	adds	r1, r4, r0
 800c428:	428b      	cmp	r3, r1
 800c42a:	bf01      	itttt	eq
 800c42c:	6819      	ldreq	r1, [r3, #0]
 800c42e:	685b      	ldreq	r3, [r3, #4]
 800c430:	1809      	addeq	r1, r1, r0
 800c432:	6021      	streq	r1, [r4, #0]
 800c434:	e7ed      	b.n	800c412 <_free_r+0x1e>
 800c436:	461a      	mov	r2, r3
 800c438:	685b      	ldr	r3, [r3, #4]
 800c43a:	b10b      	cbz	r3, 800c440 <_free_r+0x4c>
 800c43c:	42a3      	cmp	r3, r4
 800c43e:	d9fa      	bls.n	800c436 <_free_r+0x42>
 800c440:	6811      	ldr	r1, [r2, #0]
 800c442:	1850      	adds	r0, r2, r1
 800c444:	42a0      	cmp	r0, r4
 800c446:	d10b      	bne.n	800c460 <_free_r+0x6c>
 800c448:	6820      	ldr	r0, [r4, #0]
 800c44a:	4401      	add	r1, r0
 800c44c:	1850      	adds	r0, r2, r1
 800c44e:	4283      	cmp	r3, r0
 800c450:	6011      	str	r1, [r2, #0]
 800c452:	d1e0      	bne.n	800c416 <_free_r+0x22>
 800c454:	6818      	ldr	r0, [r3, #0]
 800c456:	685b      	ldr	r3, [r3, #4]
 800c458:	6053      	str	r3, [r2, #4]
 800c45a:	4408      	add	r0, r1
 800c45c:	6010      	str	r0, [r2, #0]
 800c45e:	e7da      	b.n	800c416 <_free_r+0x22>
 800c460:	d902      	bls.n	800c468 <_free_r+0x74>
 800c462:	230c      	movs	r3, #12
 800c464:	602b      	str	r3, [r5, #0]
 800c466:	e7d6      	b.n	800c416 <_free_r+0x22>
 800c468:	6820      	ldr	r0, [r4, #0]
 800c46a:	1821      	adds	r1, r4, r0
 800c46c:	428b      	cmp	r3, r1
 800c46e:	bf04      	itt	eq
 800c470:	6819      	ldreq	r1, [r3, #0]
 800c472:	685b      	ldreq	r3, [r3, #4]
 800c474:	6063      	str	r3, [r4, #4]
 800c476:	bf04      	itt	eq
 800c478:	1809      	addeq	r1, r1, r0
 800c47a:	6021      	streq	r1, [r4, #0]
 800c47c:	6054      	str	r4, [r2, #4]
 800c47e:	e7ca      	b.n	800c416 <_free_r+0x22>
 800c480:	bd38      	pop	{r3, r4, r5, pc}
 800c482:	bf00      	nop
 800c484:	2001ce78 	.word	0x2001ce78

0800c488 <sbrk_aligned>:
 800c488:	b570      	push	{r4, r5, r6, lr}
 800c48a:	4e0f      	ldr	r6, [pc, #60]	@ (800c4c8 <sbrk_aligned+0x40>)
 800c48c:	460c      	mov	r4, r1
 800c48e:	6831      	ldr	r1, [r6, #0]
 800c490:	4605      	mov	r5, r0
 800c492:	b911      	cbnz	r1, 800c49a <sbrk_aligned+0x12>
 800c494:	f000 fba6 	bl	800cbe4 <_sbrk_r>
 800c498:	6030      	str	r0, [r6, #0]
 800c49a:	4621      	mov	r1, r4
 800c49c:	4628      	mov	r0, r5
 800c49e:	f000 fba1 	bl	800cbe4 <_sbrk_r>
 800c4a2:	1c43      	adds	r3, r0, #1
 800c4a4:	d103      	bne.n	800c4ae <sbrk_aligned+0x26>
 800c4a6:	f04f 34ff 	mov.w	r4, #4294967295
 800c4aa:	4620      	mov	r0, r4
 800c4ac:	bd70      	pop	{r4, r5, r6, pc}
 800c4ae:	1cc4      	adds	r4, r0, #3
 800c4b0:	f024 0403 	bic.w	r4, r4, #3
 800c4b4:	42a0      	cmp	r0, r4
 800c4b6:	d0f8      	beq.n	800c4aa <sbrk_aligned+0x22>
 800c4b8:	1a21      	subs	r1, r4, r0
 800c4ba:	4628      	mov	r0, r5
 800c4bc:	f000 fb92 	bl	800cbe4 <_sbrk_r>
 800c4c0:	3001      	adds	r0, #1
 800c4c2:	d1f2      	bne.n	800c4aa <sbrk_aligned+0x22>
 800c4c4:	e7ef      	b.n	800c4a6 <sbrk_aligned+0x1e>
 800c4c6:	bf00      	nop
 800c4c8:	2001ce74 	.word	0x2001ce74

0800c4cc <_malloc_r>:
 800c4cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c4d0:	1ccd      	adds	r5, r1, #3
 800c4d2:	f025 0503 	bic.w	r5, r5, #3
 800c4d6:	3508      	adds	r5, #8
 800c4d8:	2d0c      	cmp	r5, #12
 800c4da:	bf38      	it	cc
 800c4dc:	250c      	movcc	r5, #12
 800c4de:	2d00      	cmp	r5, #0
 800c4e0:	4606      	mov	r6, r0
 800c4e2:	db01      	blt.n	800c4e8 <_malloc_r+0x1c>
 800c4e4:	42a9      	cmp	r1, r5
 800c4e6:	d904      	bls.n	800c4f2 <_malloc_r+0x26>
 800c4e8:	230c      	movs	r3, #12
 800c4ea:	6033      	str	r3, [r6, #0]
 800c4ec:	2000      	movs	r0, #0
 800c4ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c4f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800c5c8 <_malloc_r+0xfc>
 800c4f6:	f000 f869 	bl	800c5cc <__malloc_lock>
 800c4fa:	f8d8 3000 	ldr.w	r3, [r8]
 800c4fe:	461c      	mov	r4, r3
 800c500:	bb44      	cbnz	r4, 800c554 <_malloc_r+0x88>
 800c502:	4629      	mov	r1, r5
 800c504:	4630      	mov	r0, r6
 800c506:	f7ff ffbf 	bl	800c488 <sbrk_aligned>
 800c50a:	1c43      	adds	r3, r0, #1
 800c50c:	4604      	mov	r4, r0
 800c50e:	d158      	bne.n	800c5c2 <_malloc_r+0xf6>
 800c510:	f8d8 4000 	ldr.w	r4, [r8]
 800c514:	4627      	mov	r7, r4
 800c516:	2f00      	cmp	r7, #0
 800c518:	d143      	bne.n	800c5a2 <_malloc_r+0xd6>
 800c51a:	2c00      	cmp	r4, #0
 800c51c:	d04b      	beq.n	800c5b6 <_malloc_r+0xea>
 800c51e:	6823      	ldr	r3, [r4, #0]
 800c520:	4639      	mov	r1, r7
 800c522:	4630      	mov	r0, r6
 800c524:	eb04 0903 	add.w	r9, r4, r3
 800c528:	f000 fb5c 	bl	800cbe4 <_sbrk_r>
 800c52c:	4581      	cmp	r9, r0
 800c52e:	d142      	bne.n	800c5b6 <_malloc_r+0xea>
 800c530:	6821      	ldr	r1, [r4, #0]
 800c532:	1a6d      	subs	r5, r5, r1
 800c534:	4629      	mov	r1, r5
 800c536:	4630      	mov	r0, r6
 800c538:	f7ff ffa6 	bl	800c488 <sbrk_aligned>
 800c53c:	3001      	adds	r0, #1
 800c53e:	d03a      	beq.n	800c5b6 <_malloc_r+0xea>
 800c540:	6823      	ldr	r3, [r4, #0]
 800c542:	442b      	add	r3, r5
 800c544:	6023      	str	r3, [r4, #0]
 800c546:	f8d8 3000 	ldr.w	r3, [r8]
 800c54a:	685a      	ldr	r2, [r3, #4]
 800c54c:	bb62      	cbnz	r2, 800c5a8 <_malloc_r+0xdc>
 800c54e:	f8c8 7000 	str.w	r7, [r8]
 800c552:	e00f      	b.n	800c574 <_malloc_r+0xa8>
 800c554:	6822      	ldr	r2, [r4, #0]
 800c556:	1b52      	subs	r2, r2, r5
 800c558:	d420      	bmi.n	800c59c <_malloc_r+0xd0>
 800c55a:	2a0b      	cmp	r2, #11
 800c55c:	d917      	bls.n	800c58e <_malloc_r+0xc2>
 800c55e:	1961      	adds	r1, r4, r5
 800c560:	42a3      	cmp	r3, r4
 800c562:	6025      	str	r5, [r4, #0]
 800c564:	bf18      	it	ne
 800c566:	6059      	strne	r1, [r3, #4]
 800c568:	6863      	ldr	r3, [r4, #4]
 800c56a:	bf08      	it	eq
 800c56c:	f8c8 1000 	streq.w	r1, [r8]
 800c570:	5162      	str	r2, [r4, r5]
 800c572:	604b      	str	r3, [r1, #4]
 800c574:	4630      	mov	r0, r6
 800c576:	f000 f82f 	bl	800c5d8 <__malloc_unlock>
 800c57a:	f104 000b 	add.w	r0, r4, #11
 800c57e:	1d23      	adds	r3, r4, #4
 800c580:	f020 0007 	bic.w	r0, r0, #7
 800c584:	1ac2      	subs	r2, r0, r3
 800c586:	bf1c      	itt	ne
 800c588:	1a1b      	subne	r3, r3, r0
 800c58a:	50a3      	strne	r3, [r4, r2]
 800c58c:	e7af      	b.n	800c4ee <_malloc_r+0x22>
 800c58e:	6862      	ldr	r2, [r4, #4]
 800c590:	42a3      	cmp	r3, r4
 800c592:	bf0c      	ite	eq
 800c594:	f8c8 2000 	streq.w	r2, [r8]
 800c598:	605a      	strne	r2, [r3, #4]
 800c59a:	e7eb      	b.n	800c574 <_malloc_r+0xa8>
 800c59c:	4623      	mov	r3, r4
 800c59e:	6864      	ldr	r4, [r4, #4]
 800c5a0:	e7ae      	b.n	800c500 <_malloc_r+0x34>
 800c5a2:	463c      	mov	r4, r7
 800c5a4:	687f      	ldr	r7, [r7, #4]
 800c5a6:	e7b6      	b.n	800c516 <_malloc_r+0x4a>
 800c5a8:	461a      	mov	r2, r3
 800c5aa:	685b      	ldr	r3, [r3, #4]
 800c5ac:	42a3      	cmp	r3, r4
 800c5ae:	d1fb      	bne.n	800c5a8 <_malloc_r+0xdc>
 800c5b0:	2300      	movs	r3, #0
 800c5b2:	6053      	str	r3, [r2, #4]
 800c5b4:	e7de      	b.n	800c574 <_malloc_r+0xa8>
 800c5b6:	230c      	movs	r3, #12
 800c5b8:	6033      	str	r3, [r6, #0]
 800c5ba:	4630      	mov	r0, r6
 800c5bc:	f000 f80c 	bl	800c5d8 <__malloc_unlock>
 800c5c0:	e794      	b.n	800c4ec <_malloc_r+0x20>
 800c5c2:	6005      	str	r5, [r0, #0]
 800c5c4:	e7d6      	b.n	800c574 <_malloc_r+0xa8>
 800c5c6:	bf00      	nop
 800c5c8:	2001ce78 	.word	0x2001ce78

0800c5cc <__malloc_lock>:
 800c5cc:	4801      	ldr	r0, [pc, #4]	@ (800c5d4 <__malloc_lock+0x8>)
 800c5ce:	f7ff bf0f 	b.w	800c3f0 <__retarget_lock_acquire_recursive>
 800c5d2:	bf00      	nop
 800c5d4:	2001ce70 	.word	0x2001ce70

0800c5d8 <__malloc_unlock>:
 800c5d8:	4801      	ldr	r0, [pc, #4]	@ (800c5e0 <__malloc_unlock+0x8>)
 800c5da:	f7ff bf0a 	b.w	800c3f2 <__retarget_lock_release_recursive>
 800c5de:	bf00      	nop
 800c5e0:	2001ce70 	.word	0x2001ce70

0800c5e4 <__ssputs_r>:
 800c5e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5e8:	688e      	ldr	r6, [r1, #8]
 800c5ea:	461f      	mov	r7, r3
 800c5ec:	42be      	cmp	r6, r7
 800c5ee:	680b      	ldr	r3, [r1, #0]
 800c5f0:	4682      	mov	sl, r0
 800c5f2:	460c      	mov	r4, r1
 800c5f4:	4690      	mov	r8, r2
 800c5f6:	d82d      	bhi.n	800c654 <__ssputs_r+0x70>
 800c5f8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c5fc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800c600:	d026      	beq.n	800c650 <__ssputs_r+0x6c>
 800c602:	6965      	ldr	r5, [r4, #20]
 800c604:	6909      	ldr	r1, [r1, #16]
 800c606:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c60a:	eba3 0901 	sub.w	r9, r3, r1
 800c60e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c612:	1c7b      	adds	r3, r7, #1
 800c614:	444b      	add	r3, r9
 800c616:	106d      	asrs	r5, r5, #1
 800c618:	429d      	cmp	r5, r3
 800c61a:	bf38      	it	cc
 800c61c:	461d      	movcc	r5, r3
 800c61e:	0553      	lsls	r3, r2, #21
 800c620:	d527      	bpl.n	800c672 <__ssputs_r+0x8e>
 800c622:	4629      	mov	r1, r5
 800c624:	f7ff ff52 	bl	800c4cc <_malloc_r>
 800c628:	4606      	mov	r6, r0
 800c62a:	b360      	cbz	r0, 800c686 <__ssputs_r+0xa2>
 800c62c:	6921      	ldr	r1, [r4, #16]
 800c62e:	464a      	mov	r2, r9
 800c630:	f000 fae8 	bl	800cc04 <memcpy>
 800c634:	89a3      	ldrh	r3, [r4, #12]
 800c636:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800c63a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c63e:	81a3      	strh	r3, [r4, #12]
 800c640:	6126      	str	r6, [r4, #16]
 800c642:	6165      	str	r5, [r4, #20]
 800c644:	444e      	add	r6, r9
 800c646:	eba5 0509 	sub.w	r5, r5, r9
 800c64a:	6026      	str	r6, [r4, #0]
 800c64c:	60a5      	str	r5, [r4, #8]
 800c64e:	463e      	mov	r6, r7
 800c650:	42be      	cmp	r6, r7
 800c652:	d900      	bls.n	800c656 <__ssputs_r+0x72>
 800c654:	463e      	mov	r6, r7
 800c656:	6820      	ldr	r0, [r4, #0]
 800c658:	4632      	mov	r2, r6
 800c65a:	4641      	mov	r1, r8
 800c65c:	f000 faa8 	bl	800cbb0 <memmove>
 800c660:	68a3      	ldr	r3, [r4, #8]
 800c662:	1b9b      	subs	r3, r3, r6
 800c664:	60a3      	str	r3, [r4, #8]
 800c666:	6823      	ldr	r3, [r4, #0]
 800c668:	4433      	add	r3, r6
 800c66a:	6023      	str	r3, [r4, #0]
 800c66c:	2000      	movs	r0, #0
 800c66e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c672:	462a      	mov	r2, r5
 800c674:	f000 fad4 	bl	800cc20 <_realloc_r>
 800c678:	4606      	mov	r6, r0
 800c67a:	2800      	cmp	r0, #0
 800c67c:	d1e0      	bne.n	800c640 <__ssputs_r+0x5c>
 800c67e:	6921      	ldr	r1, [r4, #16]
 800c680:	4650      	mov	r0, sl
 800c682:	f7ff feb7 	bl	800c3f4 <_free_r>
 800c686:	230c      	movs	r3, #12
 800c688:	f8ca 3000 	str.w	r3, [sl]
 800c68c:	89a3      	ldrh	r3, [r4, #12]
 800c68e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c692:	81a3      	strh	r3, [r4, #12]
 800c694:	f04f 30ff 	mov.w	r0, #4294967295
 800c698:	e7e9      	b.n	800c66e <__ssputs_r+0x8a>
	...

0800c69c <_svfiprintf_r>:
 800c69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6a0:	4698      	mov	r8, r3
 800c6a2:	898b      	ldrh	r3, [r1, #12]
 800c6a4:	061b      	lsls	r3, r3, #24
 800c6a6:	b09d      	sub	sp, #116	@ 0x74
 800c6a8:	4607      	mov	r7, r0
 800c6aa:	460d      	mov	r5, r1
 800c6ac:	4614      	mov	r4, r2
 800c6ae:	d510      	bpl.n	800c6d2 <_svfiprintf_r+0x36>
 800c6b0:	690b      	ldr	r3, [r1, #16]
 800c6b2:	b973      	cbnz	r3, 800c6d2 <_svfiprintf_r+0x36>
 800c6b4:	2140      	movs	r1, #64	@ 0x40
 800c6b6:	f7ff ff09 	bl	800c4cc <_malloc_r>
 800c6ba:	6028      	str	r0, [r5, #0]
 800c6bc:	6128      	str	r0, [r5, #16]
 800c6be:	b930      	cbnz	r0, 800c6ce <_svfiprintf_r+0x32>
 800c6c0:	230c      	movs	r3, #12
 800c6c2:	603b      	str	r3, [r7, #0]
 800c6c4:	f04f 30ff 	mov.w	r0, #4294967295
 800c6c8:	b01d      	add	sp, #116	@ 0x74
 800c6ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6ce:	2340      	movs	r3, #64	@ 0x40
 800c6d0:	616b      	str	r3, [r5, #20]
 800c6d2:	2300      	movs	r3, #0
 800c6d4:	9309      	str	r3, [sp, #36]	@ 0x24
 800c6d6:	2320      	movs	r3, #32
 800c6d8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c6dc:	f8cd 800c 	str.w	r8, [sp, #12]
 800c6e0:	2330      	movs	r3, #48	@ 0x30
 800c6e2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800c880 <_svfiprintf_r+0x1e4>
 800c6e6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c6ea:	f04f 0901 	mov.w	r9, #1
 800c6ee:	4623      	mov	r3, r4
 800c6f0:	469a      	mov	sl, r3
 800c6f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c6f6:	b10a      	cbz	r2, 800c6fc <_svfiprintf_r+0x60>
 800c6f8:	2a25      	cmp	r2, #37	@ 0x25
 800c6fa:	d1f9      	bne.n	800c6f0 <_svfiprintf_r+0x54>
 800c6fc:	ebba 0b04 	subs.w	fp, sl, r4
 800c700:	d00b      	beq.n	800c71a <_svfiprintf_r+0x7e>
 800c702:	465b      	mov	r3, fp
 800c704:	4622      	mov	r2, r4
 800c706:	4629      	mov	r1, r5
 800c708:	4638      	mov	r0, r7
 800c70a:	f7ff ff6b 	bl	800c5e4 <__ssputs_r>
 800c70e:	3001      	adds	r0, #1
 800c710:	f000 80a7 	beq.w	800c862 <_svfiprintf_r+0x1c6>
 800c714:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c716:	445a      	add	r2, fp
 800c718:	9209      	str	r2, [sp, #36]	@ 0x24
 800c71a:	f89a 3000 	ldrb.w	r3, [sl]
 800c71e:	2b00      	cmp	r3, #0
 800c720:	f000 809f 	beq.w	800c862 <_svfiprintf_r+0x1c6>
 800c724:	2300      	movs	r3, #0
 800c726:	f04f 32ff 	mov.w	r2, #4294967295
 800c72a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c72e:	f10a 0a01 	add.w	sl, sl, #1
 800c732:	9304      	str	r3, [sp, #16]
 800c734:	9307      	str	r3, [sp, #28]
 800c736:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c73a:	931a      	str	r3, [sp, #104]	@ 0x68
 800c73c:	4654      	mov	r4, sl
 800c73e:	2205      	movs	r2, #5
 800c740:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c744:	484e      	ldr	r0, [pc, #312]	@ (800c880 <_svfiprintf_r+0x1e4>)
 800c746:	f7f3 fd6b 	bl	8000220 <memchr>
 800c74a:	9a04      	ldr	r2, [sp, #16]
 800c74c:	b9d8      	cbnz	r0, 800c786 <_svfiprintf_r+0xea>
 800c74e:	06d0      	lsls	r0, r2, #27
 800c750:	bf44      	itt	mi
 800c752:	2320      	movmi	r3, #32
 800c754:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c758:	0711      	lsls	r1, r2, #28
 800c75a:	bf44      	itt	mi
 800c75c:	232b      	movmi	r3, #43	@ 0x2b
 800c75e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c762:	f89a 3000 	ldrb.w	r3, [sl]
 800c766:	2b2a      	cmp	r3, #42	@ 0x2a
 800c768:	d015      	beq.n	800c796 <_svfiprintf_r+0xfa>
 800c76a:	9a07      	ldr	r2, [sp, #28]
 800c76c:	4654      	mov	r4, sl
 800c76e:	2000      	movs	r0, #0
 800c770:	f04f 0c0a 	mov.w	ip, #10
 800c774:	4621      	mov	r1, r4
 800c776:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c77a:	3b30      	subs	r3, #48	@ 0x30
 800c77c:	2b09      	cmp	r3, #9
 800c77e:	d94b      	bls.n	800c818 <_svfiprintf_r+0x17c>
 800c780:	b1b0      	cbz	r0, 800c7b0 <_svfiprintf_r+0x114>
 800c782:	9207      	str	r2, [sp, #28]
 800c784:	e014      	b.n	800c7b0 <_svfiprintf_r+0x114>
 800c786:	eba0 0308 	sub.w	r3, r0, r8
 800c78a:	fa09 f303 	lsl.w	r3, r9, r3
 800c78e:	4313      	orrs	r3, r2
 800c790:	9304      	str	r3, [sp, #16]
 800c792:	46a2      	mov	sl, r4
 800c794:	e7d2      	b.n	800c73c <_svfiprintf_r+0xa0>
 800c796:	9b03      	ldr	r3, [sp, #12]
 800c798:	1d19      	adds	r1, r3, #4
 800c79a:	681b      	ldr	r3, [r3, #0]
 800c79c:	9103      	str	r1, [sp, #12]
 800c79e:	2b00      	cmp	r3, #0
 800c7a0:	bfbb      	ittet	lt
 800c7a2:	425b      	neglt	r3, r3
 800c7a4:	f042 0202 	orrlt.w	r2, r2, #2
 800c7a8:	9307      	strge	r3, [sp, #28]
 800c7aa:	9307      	strlt	r3, [sp, #28]
 800c7ac:	bfb8      	it	lt
 800c7ae:	9204      	strlt	r2, [sp, #16]
 800c7b0:	7823      	ldrb	r3, [r4, #0]
 800c7b2:	2b2e      	cmp	r3, #46	@ 0x2e
 800c7b4:	d10a      	bne.n	800c7cc <_svfiprintf_r+0x130>
 800c7b6:	7863      	ldrb	r3, [r4, #1]
 800c7b8:	2b2a      	cmp	r3, #42	@ 0x2a
 800c7ba:	d132      	bne.n	800c822 <_svfiprintf_r+0x186>
 800c7bc:	9b03      	ldr	r3, [sp, #12]
 800c7be:	1d1a      	adds	r2, r3, #4
 800c7c0:	681b      	ldr	r3, [r3, #0]
 800c7c2:	9203      	str	r2, [sp, #12]
 800c7c4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c7c8:	3402      	adds	r4, #2
 800c7ca:	9305      	str	r3, [sp, #20]
 800c7cc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800c890 <_svfiprintf_r+0x1f4>
 800c7d0:	7821      	ldrb	r1, [r4, #0]
 800c7d2:	2203      	movs	r2, #3
 800c7d4:	4650      	mov	r0, sl
 800c7d6:	f7f3 fd23 	bl	8000220 <memchr>
 800c7da:	b138      	cbz	r0, 800c7ec <_svfiprintf_r+0x150>
 800c7dc:	9b04      	ldr	r3, [sp, #16]
 800c7de:	eba0 000a 	sub.w	r0, r0, sl
 800c7e2:	2240      	movs	r2, #64	@ 0x40
 800c7e4:	4082      	lsls	r2, r0
 800c7e6:	4313      	orrs	r3, r2
 800c7e8:	3401      	adds	r4, #1
 800c7ea:	9304      	str	r3, [sp, #16]
 800c7ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c7f0:	4824      	ldr	r0, [pc, #144]	@ (800c884 <_svfiprintf_r+0x1e8>)
 800c7f2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c7f6:	2206      	movs	r2, #6
 800c7f8:	f7f3 fd12 	bl	8000220 <memchr>
 800c7fc:	2800      	cmp	r0, #0
 800c7fe:	d036      	beq.n	800c86e <_svfiprintf_r+0x1d2>
 800c800:	4b21      	ldr	r3, [pc, #132]	@ (800c888 <_svfiprintf_r+0x1ec>)
 800c802:	bb1b      	cbnz	r3, 800c84c <_svfiprintf_r+0x1b0>
 800c804:	9b03      	ldr	r3, [sp, #12]
 800c806:	3307      	adds	r3, #7
 800c808:	f023 0307 	bic.w	r3, r3, #7
 800c80c:	3308      	adds	r3, #8
 800c80e:	9303      	str	r3, [sp, #12]
 800c810:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c812:	4433      	add	r3, r6
 800c814:	9309      	str	r3, [sp, #36]	@ 0x24
 800c816:	e76a      	b.n	800c6ee <_svfiprintf_r+0x52>
 800c818:	fb0c 3202 	mla	r2, ip, r2, r3
 800c81c:	460c      	mov	r4, r1
 800c81e:	2001      	movs	r0, #1
 800c820:	e7a8      	b.n	800c774 <_svfiprintf_r+0xd8>
 800c822:	2300      	movs	r3, #0
 800c824:	3401      	adds	r4, #1
 800c826:	9305      	str	r3, [sp, #20]
 800c828:	4619      	mov	r1, r3
 800c82a:	f04f 0c0a 	mov.w	ip, #10
 800c82e:	4620      	mov	r0, r4
 800c830:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c834:	3a30      	subs	r2, #48	@ 0x30
 800c836:	2a09      	cmp	r2, #9
 800c838:	d903      	bls.n	800c842 <_svfiprintf_r+0x1a6>
 800c83a:	2b00      	cmp	r3, #0
 800c83c:	d0c6      	beq.n	800c7cc <_svfiprintf_r+0x130>
 800c83e:	9105      	str	r1, [sp, #20]
 800c840:	e7c4      	b.n	800c7cc <_svfiprintf_r+0x130>
 800c842:	fb0c 2101 	mla	r1, ip, r1, r2
 800c846:	4604      	mov	r4, r0
 800c848:	2301      	movs	r3, #1
 800c84a:	e7f0      	b.n	800c82e <_svfiprintf_r+0x192>
 800c84c:	ab03      	add	r3, sp, #12
 800c84e:	9300      	str	r3, [sp, #0]
 800c850:	462a      	mov	r2, r5
 800c852:	4b0e      	ldr	r3, [pc, #56]	@ (800c88c <_svfiprintf_r+0x1f0>)
 800c854:	a904      	add	r1, sp, #16
 800c856:	4638      	mov	r0, r7
 800c858:	f3af 8000 	nop.w
 800c85c:	1c42      	adds	r2, r0, #1
 800c85e:	4606      	mov	r6, r0
 800c860:	d1d6      	bne.n	800c810 <_svfiprintf_r+0x174>
 800c862:	89ab      	ldrh	r3, [r5, #12]
 800c864:	065b      	lsls	r3, r3, #25
 800c866:	f53f af2d 	bmi.w	800c6c4 <_svfiprintf_r+0x28>
 800c86a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c86c:	e72c      	b.n	800c6c8 <_svfiprintf_r+0x2c>
 800c86e:	ab03      	add	r3, sp, #12
 800c870:	9300      	str	r3, [sp, #0]
 800c872:	462a      	mov	r2, r5
 800c874:	4b05      	ldr	r3, [pc, #20]	@ (800c88c <_svfiprintf_r+0x1f0>)
 800c876:	a904      	add	r1, sp, #16
 800c878:	4638      	mov	r0, r7
 800c87a:	f000 f879 	bl	800c970 <_printf_i>
 800c87e:	e7ed      	b.n	800c85c <_svfiprintf_r+0x1c0>
 800c880:	0800d1f8 	.word	0x0800d1f8
 800c884:	0800d202 	.word	0x0800d202
 800c888:	00000000 	.word	0x00000000
 800c88c:	0800c5e5 	.word	0x0800c5e5
 800c890:	0800d1fe 	.word	0x0800d1fe

0800c894 <_printf_common>:
 800c894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c898:	4616      	mov	r6, r2
 800c89a:	4698      	mov	r8, r3
 800c89c:	688a      	ldr	r2, [r1, #8]
 800c89e:	690b      	ldr	r3, [r1, #16]
 800c8a0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800c8a4:	4293      	cmp	r3, r2
 800c8a6:	bfb8      	it	lt
 800c8a8:	4613      	movlt	r3, r2
 800c8aa:	6033      	str	r3, [r6, #0]
 800c8ac:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800c8b0:	4607      	mov	r7, r0
 800c8b2:	460c      	mov	r4, r1
 800c8b4:	b10a      	cbz	r2, 800c8ba <_printf_common+0x26>
 800c8b6:	3301      	adds	r3, #1
 800c8b8:	6033      	str	r3, [r6, #0]
 800c8ba:	6823      	ldr	r3, [r4, #0]
 800c8bc:	0699      	lsls	r1, r3, #26
 800c8be:	bf42      	ittt	mi
 800c8c0:	6833      	ldrmi	r3, [r6, #0]
 800c8c2:	3302      	addmi	r3, #2
 800c8c4:	6033      	strmi	r3, [r6, #0]
 800c8c6:	6825      	ldr	r5, [r4, #0]
 800c8c8:	f015 0506 	ands.w	r5, r5, #6
 800c8cc:	d106      	bne.n	800c8dc <_printf_common+0x48>
 800c8ce:	f104 0a19 	add.w	sl, r4, #25
 800c8d2:	68e3      	ldr	r3, [r4, #12]
 800c8d4:	6832      	ldr	r2, [r6, #0]
 800c8d6:	1a9b      	subs	r3, r3, r2
 800c8d8:	42ab      	cmp	r3, r5
 800c8da:	dc26      	bgt.n	800c92a <_printf_common+0x96>
 800c8dc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800c8e0:	6822      	ldr	r2, [r4, #0]
 800c8e2:	3b00      	subs	r3, #0
 800c8e4:	bf18      	it	ne
 800c8e6:	2301      	movne	r3, #1
 800c8e8:	0692      	lsls	r2, r2, #26
 800c8ea:	d42b      	bmi.n	800c944 <_printf_common+0xb0>
 800c8ec:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800c8f0:	4641      	mov	r1, r8
 800c8f2:	4638      	mov	r0, r7
 800c8f4:	47c8      	blx	r9
 800c8f6:	3001      	adds	r0, #1
 800c8f8:	d01e      	beq.n	800c938 <_printf_common+0xa4>
 800c8fa:	6823      	ldr	r3, [r4, #0]
 800c8fc:	6922      	ldr	r2, [r4, #16]
 800c8fe:	f003 0306 	and.w	r3, r3, #6
 800c902:	2b04      	cmp	r3, #4
 800c904:	bf02      	ittt	eq
 800c906:	68e5      	ldreq	r5, [r4, #12]
 800c908:	6833      	ldreq	r3, [r6, #0]
 800c90a:	1aed      	subeq	r5, r5, r3
 800c90c:	68a3      	ldr	r3, [r4, #8]
 800c90e:	bf0c      	ite	eq
 800c910:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c914:	2500      	movne	r5, #0
 800c916:	4293      	cmp	r3, r2
 800c918:	bfc4      	itt	gt
 800c91a:	1a9b      	subgt	r3, r3, r2
 800c91c:	18ed      	addgt	r5, r5, r3
 800c91e:	2600      	movs	r6, #0
 800c920:	341a      	adds	r4, #26
 800c922:	42b5      	cmp	r5, r6
 800c924:	d11a      	bne.n	800c95c <_printf_common+0xc8>
 800c926:	2000      	movs	r0, #0
 800c928:	e008      	b.n	800c93c <_printf_common+0xa8>
 800c92a:	2301      	movs	r3, #1
 800c92c:	4652      	mov	r2, sl
 800c92e:	4641      	mov	r1, r8
 800c930:	4638      	mov	r0, r7
 800c932:	47c8      	blx	r9
 800c934:	3001      	adds	r0, #1
 800c936:	d103      	bne.n	800c940 <_printf_common+0xac>
 800c938:	f04f 30ff 	mov.w	r0, #4294967295
 800c93c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c940:	3501      	adds	r5, #1
 800c942:	e7c6      	b.n	800c8d2 <_printf_common+0x3e>
 800c944:	18e1      	adds	r1, r4, r3
 800c946:	1c5a      	adds	r2, r3, #1
 800c948:	2030      	movs	r0, #48	@ 0x30
 800c94a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800c94e:	4422      	add	r2, r4
 800c950:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800c954:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800c958:	3302      	adds	r3, #2
 800c95a:	e7c7      	b.n	800c8ec <_printf_common+0x58>
 800c95c:	2301      	movs	r3, #1
 800c95e:	4622      	mov	r2, r4
 800c960:	4641      	mov	r1, r8
 800c962:	4638      	mov	r0, r7
 800c964:	47c8      	blx	r9
 800c966:	3001      	adds	r0, #1
 800c968:	d0e6      	beq.n	800c938 <_printf_common+0xa4>
 800c96a:	3601      	adds	r6, #1
 800c96c:	e7d9      	b.n	800c922 <_printf_common+0x8e>
	...

0800c970 <_printf_i>:
 800c970:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c974:	7e0f      	ldrb	r7, [r1, #24]
 800c976:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800c978:	2f78      	cmp	r7, #120	@ 0x78
 800c97a:	4691      	mov	r9, r2
 800c97c:	4680      	mov	r8, r0
 800c97e:	460c      	mov	r4, r1
 800c980:	469a      	mov	sl, r3
 800c982:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800c986:	d807      	bhi.n	800c998 <_printf_i+0x28>
 800c988:	2f62      	cmp	r7, #98	@ 0x62
 800c98a:	d80a      	bhi.n	800c9a2 <_printf_i+0x32>
 800c98c:	2f00      	cmp	r7, #0
 800c98e:	f000 80d2 	beq.w	800cb36 <_printf_i+0x1c6>
 800c992:	2f58      	cmp	r7, #88	@ 0x58
 800c994:	f000 80b9 	beq.w	800cb0a <_printf_i+0x19a>
 800c998:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800c99c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800c9a0:	e03a      	b.n	800ca18 <_printf_i+0xa8>
 800c9a2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800c9a6:	2b15      	cmp	r3, #21
 800c9a8:	d8f6      	bhi.n	800c998 <_printf_i+0x28>
 800c9aa:	a101      	add	r1, pc, #4	@ (adr r1, 800c9b0 <_printf_i+0x40>)
 800c9ac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c9b0:	0800ca09 	.word	0x0800ca09
 800c9b4:	0800ca1d 	.word	0x0800ca1d
 800c9b8:	0800c999 	.word	0x0800c999
 800c9bc:	0800c999 	.word	0x0800c999
 800c9c0:	0800c999 	.word	0x0800c999
 800c9c4:	0800c999 	.word	0x0800c999
 800c9c8:	0800ca1d 	.word	0x0800ca1d
 800c9cc:	0800c999 	.word	0x0800c999
 800c9d0:	0800c999 	.word	0x0800c999
 800c9d4:	0800c999 	.word	0x0800c999
 800c9d8:	0800c999 	.word	0x0800c999
 800c9dc:	0800cb1d 	.word	0x0800cb1d
 800c9e0:	0800ca47 	.word	0x0800ca47
 800c9e4:	0800cad7 	.word	0x0800cad7
 800c9e8:	0800c999 	.word	0x0800c999
 800c9ec:	0800c999 	.word	0x0800c999
 800c9f0:	0800cb3f 	.word	0x0800cb3f
 800c9f4:	0800c999 	.word	0x0800c999
 800c9f8:	0800ca47 	.word	0x0800ca47
 800c9fc:	0800c999 	.word	0x0800c999
 800ca00:	0800c999 	.word	0x0800c999
 800ca04:	0800cadf 	.word	0x0800cadf
 800ca08:	6833      	ldr	r3, [r6, #0]
 800ca0a:	1d1a      	adds	r2, r3, #4
 800ca0c:	681b      	ldr	r3, [r3, #0]
 800ca0e:	6032      	str	r2, [r6, #0]
 800ca10:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800ca14:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800ca18:	2301      	movs	r3, #1
 800ca1a:	e09d      	b.n	800cb58 <_printf_i+0x1e8>
 800ca1c:	6833      	ldr	r3, [r6, #0]
 800ca1e:	6820      	ldr	r0, [r4, #0]
 800ca20:	1d19      	adds	r1, r3, #4
 800ca22:	6031      	str	r1, [r6, #0]
 800ca24:	0606      	lsls	r6, r0, #24
 800ca26:	d501      	bpl.n	800ca2c <_printf_i+0xbc>
 800ca28:	681d      	ldr	r5, [r3, #0]
 800ca2a:	e003      	b.n	800ca34 <_printf_i+0xc4>
 800ca2c:	0645      	lsls	r5, r0, #25
 800ca2e:	d5fb      	bpl.n	800ca28 <_printf_i+0xb8>
 800ca30:	f9b3 5000 	ldrsh.w	r5, [r3]
 800ca34:	2d00      	cmp	r5, #0
 800ca36:	da03      	bge.n	800ca40 <_printf_i+0xd0>
 800ca38:	232d      	movs	r3, #45	@ 0x2d
 800ca3a:	426d      	negs	r5, r5
 800ca3c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800ca40:	4859      	ldr	r0, [pc, #356]	@ (800cba8 <_printf_i+0x238>)
 800ca42:	230a      	movs	r3, #10
 800ca44:	e011      	b.n	800ca6a <_printf_i+0xfa>
 800ca46:	6821      	ldr	r1, [r4, #0]
 800ca48:	6833      	ldr	r3, [r6, #0]
 800ca4a:	0608      	lsls	r0, r1, #24
 800ca4c:	f853 5b04 	ldr.w	r5, [r3], #4
 800ca50:	d402      	bmi.n	800ca58 <_printf_i+0xe8>
 800ca52:	0649      	lsls	r1, r1, #25
 800ca54:	bf48      	it	mi
 800ca56:	b2ad      	uxthmi	r5, r5
 800ca58:	2f6f      	cmp	r7, #111	@ 0x6f
 800ca5a:	4853      	ldr	r0, [pc, #332]	@ (800cba8 <_printf_i+0x238>)
 800ca5c:	6033      	str	r3, [r6, #0]
 800ca5e:	bf14      	ite	ne
 800ca60:	230a      	movne	r3, #10
 800ca62:	2308      	moveq	r3, #8
 800ca64:	2100      	movs	r1, #0
 800ca66:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800ca6a:	6866      	ldr	r6, [r4, #4]
 800ca6c:	60a6      	str	r6, [r4, #8]
 800ca6e:	2e00      	cmp	r6, #0
 800ca70:	bfa2      	ittt	ge
 800ca72:	6821      	ldrge	r1, [r4, #0]
 800ca74:	f021 0104 	bicge.w	r1, r1, #4
 800ca78:	6021      	strge	r1, [r4, #0]
 800ca7a:	b90d      	cbnz	r5, 800ca80 <_printf_i+0x110>
 800ca7c:	2e00      	cmp	r6, #0
 800ca7e:	d04b      	beq.n	800cb18 <_printf_i+0x1a8>
 800ca80:	4616      	mov	r6, r2
 800ca82:	fbb5 f1f3 	udiv	r1, r5, r3
 800ca86:	fb03 5711 	mls	r7, r3, r1, r5
 800ca8a:	5dc7      	ldrb	r7, [r0, r7]
 800ca8c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800ca90:	462f      	mov	r7, r5
 800ca92:	42bb      	cmp	r3, r7
 800ca94:	460d      	mov	r5, r1
 800ca96:	d9f4      	bls.n	800ca82 <_printf_i+0x112>
 800ca98:	2b08      	cmp	r3, #8
 800ca9a:	d10b      	bne.n	800cab4 <_printf_i+0x144>
 800ca9c:	6823      	ldr	r3, [r4, #0]
 800ca9e:	07df      	lsls	r7, r3, #31
 800caa0:	d508      	bpl.n	800cab4 <_printf_i+0x144>
 800caa2:	6923      	ldr	r3, [r4, #16]
 800caa4:	6861      	ldr	r1, [r4, #4]
 800caa6:	4299      	cmp	r1, r3
 800caa8:	bfde      	ittt	le
 800caaa:	2330      	movle	r3, #48	@ 0x30
 800caac:	f806 3c01 	strble.w	r3, [r6, #-1]
 800cab0:	f106 36ff 	addle.w	r6, r6, #4294967295
 800cab4:	1b92      	subs	r2, r2, r6
 800cab6:	6122      	str	r2, [r4, #16]
 800cab8:	f8cd a000 	str.w	sl, [sp]
 800cabc:	464b      	mov	r3, r9
 800cabe:	aa03      	add	r2, sp, #12
 800cac0:	4621      	mov	r1, r4
 800cac2:	4640      	mov	r0, r8
 800cac4:	f7ff fee6 	bl	800c894 <_printf_common>
 800cac8:	3001      	adds	r0, #1
 800caca:	d14a      	bne.n	800cb62 <_printf_i+0x1f2>
 800cacc:	f04f 30ff 	mov.w	r0, #4294967295
 800cad0:	b004      	add	sp, #16
 800cad2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cad6:	6823      	ldr	r3, [r4, #0]
 800cad8:	f043 0320 	orr.w	r3, r3, #32
 800cadc:	6023      	str	r3, [r4, #0]
 800cade:	4833      	ldr	r0, [pc, #204]	@ (800cbac <_printf_i+0x23c>)
 800cae0:	2778      	movs	r7, #120	@ 0x78
 800cae2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800cae6:	6823      	ldr	r3, [r4, #0]
 800cae8:	6831      	ldr	r1, [r6, #0]
 800caea:	061f      	lsls	r7, r3, #24
 800caec:	f851 5b04 	ldr.w	r5, [r1], #4
 800caf0:	d402      	bmi.n	800caf8 <_printf_i+0x188>
 800caf2:	065f      	lsls	r7, r3, #25
 800caf4:	bf48      	it	mi
 800caf6:	b2ad      	uxthmi	r5, r5
 800caf8:	6031      	str	r1, [r6, #0]
 800cafa:	07d9      	lsls	r1, r3, #31
 800cafc:	bf44      	itt	mi
 800cafe:	f043 0320 	orrmi.w	r3, r3, #32
 800cb02:	6023      	strmi	r3, [r4, #0]
 800cb04:	b11d      	cbz	r5, 800cb0e <_printf_i+0x19e>
 800cb06:	2310      	movs	r3, #16
 800cb08:	e7ac      	b.n	800ca64 <_printf_i+0xf4>
 800cb0a:	4827      	ldr	r0, [pc, #156]	@ (800cba8 <_printf_i+0x238>)
 800cb0c:	e7e9      	b.n	800cae2 <_printf_i+0x172>
 800cb0e:	6823      	ldr	r3, [r4, #0]
 800cb10:	f023 0320 	bic.w	r3, r3, #32
 800cb14:	6023      	str	r3, [r4, #0]
 800cb16:	e7f6      	b.n	800cb06 <_printf_i+0x196>
 800cb18:	4616      	mov	r6, r2
 800cb1a:	e7bd      	b.n	800ca98 <_printf_i+0x128>
 800cb1c:	6833      	ldr	r3, [r6, #0]
 800cb1e:	6825      	ldr	r5, [r4, #0]
 800cb20:	6961      	ldr	r1, [r4, #20]
 800cb22:	1d18      	adds	r0, r3, #4
 800cb24:	6030      	str	r0, [r6, #0]
 800cb26:	062e      	lsls	r6, r5, #24
 800cb28:	681b      	ldr	r3, [r3, #0]
 800cb2a:	d501      	bpl.n	800cb30 <_printf_i+0x1c0>
 800cb2c:	6019      	str	r1, [r3, #0]
 800cb2e:	e002      	b.n	800cb36 <_printf_i+0x1c6>
 800cb30:	0668      	lsls	r0, r5, #25
 800cb32:	d5fb      	bpl.n	800cb2c <_printf_i+0x1bc>
 800cb34:	8019      	strh	r1, [r3, #0]
 800cb36:	2300      	movs	r3, #0
 800cb38:	6123      	str	r3, [r4, #16]
 800cb3a:	4616      	mov	r6, r2
 800cb3c:	e7bc      	b.n	800cab8 <_printf_i+0x148>
 800cb3e:	6833      	ldr	r3, [r6, #0]
 800cb40:	1d1a      	adds	r2, r3, #4
 800cb42:	6032      	str	r2, [r6, #0]
 800cb44:	681e      	ldr	r6, [r3, #0]
 800cb46:	6862      	ldr	r2, [r4, #4]
 800cb48:	2100      	movs	r1, #0
 800cb4a:	4630      	mov	r0, r6
 800cb4c:	f7f3 fb68 	bl	8000220 <memchr>
 800cb50:	b108      	cbz	r0, 800cb56 <_printf_i+0x1e6>
 800cb52:	1b80      	subs	r0, r0, r6
 800cb54:	6060      	str	r0, [r4, #4]
 800cb56:	6863      	ldr	r3, [r4, #4]
 800cb58:	6123      	str	r3, [r4, #16]
 800cb5a:	2300      	movs	r3, #0
 800cb5c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800cb60:	e7aa      	b.n	800cab8 <_printf_i+0x148>
 800cb62:	6923      	ldr	r3, [r4, #16]
 800cb64:	4632      	mov	r2, r6
 800cb66:	4649      	mov	r1, r9
 800cb68:	4640      	mov	r0, r8
 800cb6a:	47d0      	blx	sl
 800cb6c:	3001      	adds	r0, #1
 800cb6e:	d0ad      	beq.n	800cacc <_printf_i+0x15c>
 800cb70:	6823      	ldr	r3, [r4, #0]
 800cb72:	079b      	lsls	r3, r3, #30
 800cb74:	d413      	bmi.n	800cb9e <_printf_i+0x22e>
 800cb76:	68e0      	ldr	r0, [r4, #12]
 800cb78:	9b03      	ldr	r3, [sp, #12]
 800cb7a:	4298      	cmp	r0, r3
 800cb7c:	bfb8      	it	lt
 800cb7e:	4618      	movlt	r0, r3
 800cb80:	e7a6      	b.n	800cad0 <_printf_i+0x160>
 800cb82:	2301      	movs	r3, #1
 800cb84:	4632      	mov	r2, r6
 800cb86:	4649      	mov	r1, r9
 800cb88:	4640      	mov	r0, r8
 800cb8a:	47d0      	blx	sl
 800cb8c:	3001      	adds	r0, #1
 800cb8e:	d09d      	beq.n	800cacc <_printf_i+0x15c>
 800cb90:	3501      	adds	r5, #1
 800cb92:	68e3      	ldr	r3, [r4, #12]
 800cb94:	9903      	ldr	r1, [sp, #12]
 800cb96:	1a5b      	subs	r3, r3, r1
 800cb98:	42ab      	cmp	r3, r5
 800cb9a:	dcf2      	bgt.n	800cb82 <_printf_i+0x212>
 800cb9c:	e7eb      	b.n	800cb76 <_printf_i+0x206>
 800cb9e:	2500      	movs	r5, #0
 800cba0:	f104 0619 	add.w	r6, r4, #25
 800cba4:	e7f5      	b.n	800cb92 <_printf_i+0x222>
 800cba6:	bf00      	nop
 800cba8:	0800d209 	.word	0x0800d209
 800cbac:	0800d21a 	.word	0x0800d21a

0800cbb0 <memmove>:
 800cbb0:	4288      	cmp	r0, r1
 800cbb2:	b510      	push	{r4, lr}
 800cbb4:	eb01 0402 	add.w	r4, r1, r2
 800cbb8:	d902      	bls.n	800cbc0 <memmove+0x10>
 800cbba:	4284      	cmp	r4, r0
 800cbbc:	4623      	mov	r3, r4
 800cbbe:	d807      	bhi.n	800cbd0 <memmove+0x20>
 800cbc0:	1e43      	subs	r3, r0, #1
 800cbc2:	42a1      	cmp	r1, r4
 800cbc4:	d008      	beq.n	800cbd8 <memmove+0x28>
 800cbc6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800cbca:	f803 2f01 	strb.w	r2, [r3, #1]!
 800cbce:	e7f8      	b.n	800cbc2 <memmove+0x12>
 800cbd0:	4402      	add	r2, r0
 800cbd2:	4601      	mov	r1, r0
 800cbd4:	428a      	cmp	r2, r1
 800cbd6:	d100      	bne.n	800cbda <memmove+0x2a>
 800cbd8:	bd10      	pop	{r4, pc}
 800cbda:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800cbde:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800cbe2:	e7f7      	b.n	800cbd4 <memmove+0x24>

0800cbe4 <_sbrk_r>:
 800cbe4:	b538      	push	{r3, r4, r5, lr}
 800cbe6:	4d06      	ldr	r5, [pc, #24]	@ (800cc00 <_sbrk_r+0x1c>)
 800cbe8:	2300      	movs	r3, #0
 800cbea:	4604      	mov	r4, r0
 800cbec:	4608      	mov	r0, r1
 800cbee:	602b      	str	r3, [r5, #0]
 800cbf0:	f7f9 f8de 	bl	8005db0 <_sbrk>
 800cbf4:	1c43      	adds	r3, r0, #1
 800cbf6:	d102      	bne.n	800cbfe <_sbrk_r+0x1a>
 800cbf8:	682b      	ldr	r3, [r5, #0]
 800cbfa:	b103      	cbz	r3, 800cbfe <_sbrk_r+0x1a>
 800cbfc:	6023      	str	r3, [r4, #0]
 800cbfe:	bd38      	pop	{r3, r4, r5, pc}
 800cc00:	2001ce6c 	.word	0x2001ce6c

0800cc04 <memcpy>:
 800cc04:	440a      	add	r2, r1
 800cc06:	4291      	cmp	r1, r2
 800cc08:	f100 33ff 	add.w	r3, r0, #4294967295
 800cc0c:	d100      	bne.n	800cc10 <memcpy+0xc>
 800cc0e:	4770      	bx	lr
 800cc10:	b510      	push	{r4, lr}
 800cc12:	f811 4b01 	ldrb.w	r4, [r1], #1
 800cc16:	f803 4f01 	strb.w	r4, [r3, #1]!
 800cc1a:	4291      	cmp	r1, r2
 800cc1c:	d1f9      	bne.n	800cc12 <memcpy+0xe>
 800cc1e:	bd10      	pop	{r4, pc}

0800cc20 <_realloc_r>:
 800cc20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc24:	4680      	mov	r8, r0
 800cc26:	4615      	mov	r5, r2
 800cc28:	460c      	mov	r4, r1
 800cc2a:	b921      	cbnz	r1, 800cc36 <_realloc_r+0x16>
 800cc2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cc30:	4611      	mov	r1, r2
 800cc32:	f7ff bc4b 	b.w	800c4cc <_malloc_r>
 800cc36:	b92a      	cbnz	r2, 800cc44 <_realloc_r+0x24>
 800cc38:	f7ff fbdc 	bl	800c3f4 <_free_r>
 800cc3c:	2400      	movs	r4, #0
 800cc3e:	4620      	mov	r0, r4
 800cc40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc44:	f000 f81a 	bl	800cc7c <_malloc_usable_size_r>
 800cc48:	4285      	cmp	r5, r0
 800cc4a:	4606      	mov	r6, r0
 800cc4c:	d802      	bhi.n	800cc54 <_realloc_r+0x34>
 800cc4e:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800cc52:	d8f4      	bhi.n	800cc3e <_realloc_r+0x1e>
 800cc54:	4629      	mov	r1, r5
 800cc56:	4640      	mov	r0, r8
 800cc58:	f7ff fc38 	bl	800c4cc <_malloc_r>
 800cc5c:	4607      	mov	r7, r0
 800cc5e:	2800      	cmp	r0, #0
 800cc60:	d0ec      	beq.n	800cc3c <_realloc_r+0x1c>
 800cc62:	42b5      	cmp	r5, r6
 800cc64:	462a      	mov	r2, r5
 800cc66:	4621      	mov	r1, r4
 800cc68:	bf28      	it	cs
 800cc6a:	4632      	movcs	r2, r6
 800cc6c:	f7ff ffca 	bl	800cc04 <memcpy>
 800cc70:	4621      	mov	r1, r4
 800cc72:	4640      	mov	r0, r8
 800cc74:	f7ff fbbe 	bl	800c3f4 <_free_r>
 800cc78:	463c      	mov	r4, r7
 800cc7a:	e7e0      	b.n	800cc3e <_realloc_r+0x1e>

0800cc7c <_malloc_usable_size_r>:
 800cc7c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cc80:	1f18      	subs	r0, r3, #4
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	bfbc      	itt	lt
 800cc86:	580b      	ldrlt	r3, [r1, r0]
 800cc88:	18c0      	addlt	r0, r0, r3
 800cc8a:	4770      	bx	lr

0800cc8c <_init>:
 800cc8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc8e:	bf00      	nop
 800cc90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cc92:	bc08      	pop	{r3}
 800cc94:	469e      	mov	lr, r3
 800cc96:	4770      	bx	lr

0800cc98 <_fini>:
 800cc98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc9a:	bf00      	nop
 800cc9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cc9e:	bc08      	pop	{r3}
 800cca0:	469e      	mov	lr, r3
 800cca2:	4770      	bx	lr
